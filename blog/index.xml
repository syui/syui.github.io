<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>syui.github.io</title>
    <link>https://syui.github.io/blog/</link>
    <description>Recent content on syui.github.io</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <copyright>&amp;copy; syui</copyright>
    <lastBuildDate>Wed, 11 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://syui.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>スカークとマーヴィカ</title>
      <link>https://syui.github.io/blog/post/2025/06/11/genshin/</link>
      <pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/06/11/genshin/</guid>
      <description>&lt;p&gt;まず、スカークの性能から、引くべきか、凸は目指すべきかを考えます。&lt;/p&gt;&#xA;&lt;p&gt;私は以前、完凸を目指すと言っているので完凸しますが、正直いうとあまりおすすめではありません。&lt;/p&gt;&#xA;&lt;p&gt;私が引くべきと考えるキャラ、凸を目指すべきと考えるキャラは主に以下の2点が重要になります。そして、これは特に無課金でプレイしている人にとっては重要な要素です。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;他元素PTを前提とするか&lt;/li&gt;&#xA;&lt;li&gt;裏からダメージを出せるか&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これは、私がマーヴィカやフリーナ、ナヒーダを評価している理由であり、ヌヴィレットや綾華をあまり評価していない理由でもあります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、私の手持ちキャラだとヌヴィレットはフリーナと組まないと結構厳しい。この場合、ヌヴィレット、フリーナ、万葉、鍾離のようなPTになります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これが案外、使えない場面が多いのです。&lt;/p&gt;&#xA;&lt;p&gt;私は基本的に螺旋でも幻想でも、その他の事柄でも、PTを変えません。そして、説明も読みません。敵もどんな敵が出てくるのかをあらかじめ確認しません。適当にPTを組んで、それで完了です。何も考えずノータイムでPTを組んで、ガチャガチャやって、あー楽しかった、で終わりです。これが私の原神です。&lt;/p&gt;&#xA;&lt;p&gt;そんなとき、ヌヴィレットのPTだと使えない場面が結構多い。具体的には、氷、水無効の敵に弱いし、雷も結構厳しい場合があります。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、ヌヴィレットは、同元素PTを前提とし、そして、裏からダメージが出せないからです。他のメンバーはヌヴィレットを強化するためだけに存在します。この場合、ヌヴィレットが苦手な敵だと、どうしようもありません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、私は基本的に、他元素PTを好みます。これがナヒーダを評価していた最大の理由です。ナヒーダはめちゃくちゃ強くて、入れてると大抵どうにかなります。草の元素反応がそもそも強いのです。&lt;/p&gt;&#xA;&lt;p&gt;そしてもう一つ圧倒的に強いキャラがいます。マーヴィカです。&lt;/p&gt;&#xA;&lt;p&gt;マーヴィカは1,2の条件を満たします。しかも、高速移動ができ、瞬間火力、継続火力もすごい。今のところ個人的に引いておきたいキャラは1位がマーヴィカ、2位がナヒーダになります。&lt;/p&gt;&#xA;&lt;p&gt;では、スカークはどうでしょう。&lt;/p&gt;&#xA;&lt;p&gt;予想ではヌヴィレットの上か下くらいに位置すると思われます。&lt;/p&gt;&#xA;&lt;p&gt;なぜならその理由は、&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;同元素PTを前提とする&lt;/li&gt;&#xA;&lt;li&gt;裏からダメージを出せない(可能性が高い)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;この2点が懸念点としてあげられます。&lt;/p&gt;&#xA;&lt;p&gt;ですから、マーヴィカのほうが優先、そして、スカークは凸を目指すべきではない。というのが現在の結論です。&lt;/p&gt;&#xA;&lt;p&gt;スカークは水と氷でPTを組みます。この場合、スカーク主体となるので、スカークが苦手な敵はPT全体に影響すると思います。氷、そして、炎も少し苦手かも。でも水がいるからマシかな。この場合、氷に強い炎を入れたほうがいいでしょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;私はどうするのか&#34;&gt;私はどうするのか&lt;/h2&gt;&#xA;&lt;p&gt;完凸を目指そうと決めていたので、完凸を目指そうと思います。&lt;/p&gt;&#xA;&lt;p&gt;ただ、性能面を見る限り、私のプレイする方向性とは違うようです。&lt;/p&gt;&#xA;&lt;p&gt;あまり強く使うことはできないでしょう。エスコなんとかというキャラは今後も引きませんし。&lt;/p&gt;&#xA;&lt;p&gt;完凸を目指す場合、キャラの見た目とかも考慮するので、そういうのも大きいかもしれないな。&lt;/p&gt;&#xA;&lt;p&gt;性能よりも使ってて楽しいか。今後完凸を目指すキャラは、そっちの方向にシフトしていくべきかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;変わりゆく方向性としては、&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;各属性キャラを集めるから、ずっと使うキャラを凸する、へのシフト。&lt;/li&gt;&#xA;&lt;li&gt;サポートキャラを凸するから、好きなキャラを凸する、へシフト。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;武器は「厄水の災い」を持っていて、それを使っていきたい。&lt;/p&gt;&#xA;&lt;p&gt;武器は結局配布とかで頑張るほうが満足で、納得できるし、他のプレイヤーとの違いも出るので面白いと思っています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mcpとclaude</title>
      <link>https://syui.github.io/blog/post/2025/05/23/llm/</link>
      <pubDate>Fri, 23 May 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/05/23/llm/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.anthropic.com/news/claude-4&#34;&gt;claude4&lt;/a&gt;が出たので使ってみました。&lt;/p&gt;&#xA;&lt;p&gt;mcpは&lt;code&gt;anthropic&lt;/code&gt;が出していて、そのanthropicが出しているのが&lt;code&gt;claude&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip show mcp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Home-page: https://modelcontextprotocol.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author: Anthropic, PBC.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;コードを書くAIは色々ありますが、私は&lt;code&gt;claude&lt;/code&gt;を使っていこうかなと考えています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm install -g @anthropic-ai/claude-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ claude&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/anthropics/claude-code-action&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/install-github-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.anthropic.com/ja/docs/claude-code/tutorials&#34;&gt;https://docs.anthropic.com/ja/docs/claude-code/tutorials&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mcpとfastapi</title>
      <link>https://syui.github.io/blog/post/2025/05/22/llm/</link>
      <pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/05/22/llm/</guid>
      <description>&lt;p&gt;引き続きmcpを使ってみたいと思います。まだまだmcpをどのように使っていけばいいのかわかりませんが、今のところ考えている使い方を紹介します。&lt;/p&gt;&#xA;&lt;p&gt;AIとの会話を記録し、それをAIが使用するというものです。人にとって同じことを各AIに伝えるのは大変なことです。しかし、各AIがその記録を参照できるなら楽ですよね。&lt;/p&gt;&#xA;&lt;p&gt;そのために使えるのが&lt;code&gt;fastapi&lt;/code&gt;, &lt;code&gt;fastapi_mcp&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;mcpでAIが自発的にtoolを使える環境を用意します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、openaiには&lt;code&gt;tools ,tool_choice&lt;/code&gt;がありますので、それを使ってみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# このコマンドを実行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/microsoft/MCP.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd MCP&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv .venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source .venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# setup.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;from setuptools import setup&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;setup(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    name=&amp;#39;simple-example&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    py_modules=[&amp;#39;cli&amp;#39;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    entry_points={&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#39;console_scripts&amp;#39;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#39;mcp = cli:main&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &amp;gt; setup.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install -e .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install openai fastapi fastapi_mcp requests&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py:server.py&#34; data-lang=&#34;py:server.py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# server.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastapi &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; FastAPI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastapi_mcp &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; FastApiMCP&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FastAPI()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mcp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FastApiMCP(app, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;simple-example&amp;#34;&lt;/span&gt;, description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;最小限のMCPサーバー例&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/hello&amp;#34;&lt;/span&gt;, operation_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;greet&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;(name: str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;!&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mcp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; uvicorn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    uvicorn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run(app, host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;, port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8000/hello?name=Alice&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 出力: {&amp;#34;message&amp;#34;:&amp;#34;Hello, Alice!&amp;#34;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py:ask.py&#34; data-lang=&#34;py:ask.py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ask.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; openai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cfg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gpt-4o-mini&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;api_key&amp;#34;&lt;/span&gt;: os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user_message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;田中さんに挨拶して&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tools &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;function&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;function&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;greet&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;名前を指定して挨拶します&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;挨拶する相手の名前&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; openai&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OpenAI(api_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cfg[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;api_key&amp;#34;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;payload &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;: cfg[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;system&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;必要に応じてgreetツールを使って挨拶してください。&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: user_message}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tools&amp;#34;&lt;/span&gt;: tools,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tool_choice&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1. OpenAI APIにリクエスト&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;completions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create(&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;payload)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choices[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;message&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2. ツール呼び出しがあればMCPサーバーへリクエスト&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; message&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tool_calls:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; tool_call &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; message&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tool_calls:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; tool_call&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;function&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;greet&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loads(tool_call&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;function&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arguments)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# MCPサーバーにGETリクエスト&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            mcp_response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8000/hello&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                params&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;args&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            tool_output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcp_response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# 3. OpenAI APIにtool_outputsとして返す&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            followup &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;completions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cfg[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                messages&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;system&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;必要に応じてgreetツールを使って挨拶してください。&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: user_message},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assistant&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tool_calls&amp;#34;&lt;/span&gt;: [tool_call&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;model_dump()],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tool&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tool_call_id&amp;#34;&lt;/span&gt;: tool_call&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;id,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;greet&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: tool_output,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(followup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choices[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;message&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ツールが使われました。内容:&amp;#34;&lt;/span&gt;, message&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tool_calls)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; tool_call &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; message&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tool_calls:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tool name: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;tool_call&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;function&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, arguments: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;tool_call&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;function&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arguments&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 通常のAI応答&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(message&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python server.py                                               &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ export OPENAI_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sk-xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ source .venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python ask.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;田中さん、こんにちは！&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ツールが使われました。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これは何をやっているのかというと、「mcp serverを立てて、AIがそれを使用して返事をした」というものです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mcpとchatgpt</title>
      <link>https://syui.github.io/blog/post/2025/05/21/llm/</link>
      <pubDate>Wed, 21 May 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/05/21/llm/</guid>
      <description>&lt;p&gt;mcp(model context protocol)が最近話題になっています。今回はこのmcpについての解説になります。&lt;/p&gt;&#xA;&lt;p&gt;mcpは多くの人にとって学ぶ必要がない技術です。例えば、プログラマだったり、アプリ開発、フロントエンド、デザインをしているとかだと、mcpは必要ありません。mcpを学ぶ必要があるのは主にバックエンドの人です。&lt;/p&gt;&#xA;&lt;p&gt;ということで、mcpについて解説していきます。&lt;/p&gt;&#xA;&lt;p&gt;mcpは、今後バックエンドの主流になると思います。ようはサーバーを扱ったり、環境を構築したりといった分野。&lt;/p&gt;&#xA;&lt;p&gt;それ以外は、主にclient、ollamaだったり、lmstudioだったりのほうが便利だと思います。&lt;/p&gt;&#xA;&lt;p&gt;mcpはAI環境の構築を目指す技術で、それぞれのmodelは今まで独自の仕様で動かしていました。これだとAIで何をするにも面倒です。したがって、AI(model)のinput/outputの形式を統一しようというのがmcpです。mcpに対応しているmodelを使用します。protocolなので、普通の人は学ぶ必要がありません。通常の開発でも意識するような領域ではないですね。&lt;/p&gt;&#xA;&lt;p&gt;そのうち、便利なツールがでてくると思うので、それを使うのが一番かなと思います。k8sやdockerのようなものが出てくるのではないでしょうか。まあ、ollamaやlmstudioがそれらに相当するかもしれません。&lt;/p&gt;&#xA;&lt;h2 id=&#34;mcpの使い方&#34;&gt;mcpの使い方&lt;/h2&gt;&#xA;&lt;p&gt;mcpでどうやって環境を構築するのか、具体的な手順を見ていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;簡単な方法&#34;&gt;簡単な方法&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install fastmcp uvicorn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py:server.py&#34; data-lang=&#34;py:server.py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastmcp &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; FastMCP&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mcp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FastMCP(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aigpt-agent&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting MCP server...&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mcp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python server.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastmcp run server.py:mcp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py:server.py&#34; data-lang=&#34;py:server.py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# server.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastmcp &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; FastMCP&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; uvicorn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mcp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FastMCP(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aigpt-agent&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@mcp.tool&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ping&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; dict:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pong&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    uvicorn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run(mcp, host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;, port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>deephermes3</title>
      <link>https://syui.github.io/blog/post/2025/05/14/llm/</link>
      <pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/05/14/llm/</guid>
      <description>&lt;p&gt;DeepHermes 3 Previewが意外と良かったので紹介。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/NousResearch/DeepHermes-3-Mistral-24B-Preview-GGUF&#34;&gt;https://huggingface.co/NousResearch/DeepHermes-3-Mistral-24B-Preview-GGUF&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama run hf.co/NousResearch/DeepHermes-3-Mistral-24B-Preview-GGUF:DeepHermes-3-Mistral-24B-Preview-q6.gguf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>qwen3が4oと同じくらい使える</title>
      <link>https://syui.github.io/blog/post/2025/05/13/llm/</link>
      <pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/05/13/llm/</guid>
      <description>&lt;p&gt;アリババが出しているqwen3がopenaiの4oと同じくらい使えるので、chatgptに課金している人は、local llmで&lt;code&gt;qwen3&lt;/code&gt;に移行してみてもいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-30B-A3B-Base&#34;&gt;https://huggingface.co/Qwen/Qwen3-30B-A3B-Base&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は、local llmに移行する方法をいくつか紹介します。local llmとは、簡単に言うと自分のpcやserverでAI modelを動かすことです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;lmstudioとollama&#34;&gt;lmstudioとollama&lt;/h2&gt;&#xA;&lt;p&gt;local llmを使うには、&lt;a href=&#34;https://lmstudio.ai/&#34;&gt;lmstudio&lt;/a&gt;や&lt;a href=&#34;https://ollama.com/&#34;&gt;ollama&lt;/a&gt;がおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、&lt;code&gt;ollama&lt;/code&gt;のほうが&lt;code&gt;serve&lt;/code&gt;を起動しやすいのでおすすめです。&lt;code&gt;localhost:11434&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;もちろん、&lt;code&gt;lmstudio&lt;/code&gt;もserver機能はあります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://lmstudio.ai/docs/app/api&#34;&gt;https://lmstudio.ai/docs/app/api&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;editorやios client連携もここにアクセスして使います。&lt;/p&gt;&#xA;&lt;p&gt;アドレスバーからmodelを選択します。少し分かりづらいかもしれません。&lt;/p&gt;&#xA;&lt;h2 id=&#34;custom-model&#34;&gt;custom model&lt;/h2&gt;&#xA;&lt;p&gt;日本語の小説やロールプレイに特化したqwen3のcustom modelが公開されています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;NSFW(Not Safe For Work)は職場での閲覧に適さないコンテンツを意味します。ERP(Erotic Role Play)は主にロールプレイを意味します。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://huggingface.co/Aratako/Qwen3-30B-A3B-NSFW-JP&#34;&gt;https://huggingface.co/Aratako/Qwen3-30B-A3B-NSFW-JP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://huggingface.co/Aratako/Qwen3-30B-A3B-ERP-v0.1&#34;&gt;https://huggingface.co/Aratako/Qwen3-30B-A3B-ERP-v0.1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://huggingface.co/Aratako/Qwen3-30B-A3B-ERP-v0.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama run hf.co/Aratako/Qwen3-30B-A3B-ERP-v0.1-GGUF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/set system &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;string&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &amp;lt;設定が可能です&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/save &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;session&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &amp;lt;コマンドで現在のチャット履歴を名前付きファイルに保存できます&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/load &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;session&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &amp;lt;以前保存した会話履歴を復元し、継続した対話が可能です&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;modelの選定→データセット準備→finetuning(ms-swiftやTransformersなど)→modelの変換や公開という流れで構築できます。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ベースモデルの選定&#xA;Qwen3の公式リリースモデルをHugging FaceやGitHubからダウンロードします。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;データセットの準備&#xA;目的に応じた日本語や特定ジャンルのテキストデータを収集します。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;質問応答、会話、ロールプレイ、専門知識など用途に合わせてデータを整形します。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;ファインチューニングの実施&#xA;フレームワーク選択: Megatron-LMベースの「ms-swift」や、Hugging Face Transformersなどが利用可能です。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学習用データセットを用意し、コマンドラインで学習ジョブを実行。&lt;/li&gt;&#xA;&lt;li&gt;大規模GPU(例: H200x8台など)を使うことで効率的に学習が進みます。&lt;/li&gt;&#xA;&lt;li&gt;学習後はモデルをmcore形式からHF(Hugging Face)形式に変換し、配布やローカル利用が可能です。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 学習コマンド例（ms-swift/Megatron-LM）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/modelscope/ms-swift&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;swift train &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --model Qwen3-30B-A3B &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --data /path/to/your/dataset &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --output /path/to/output/dir &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --epochs &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --batch-size &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --lr 1e-5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;HPC-AIという謎のクラウドGPUサービスを使用しました。なんとH200x8が$16.72/hourという異常な安さで利用できます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>world system v1</title>
      <link>https://syui.github.io/blog/post/2025/05/10/planet/</link>
      <pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/05/10/planet/</guid>
      <description>&lt;p&gt;今回は、ゲーム制作の各システムのナンバリングを付けました。その話をしていこうと思います。&lt;/p&gt;&#xA;&lt;p&gt;ゲームはいくつかのシステムで分割されています。&lt;code&gt;world system(planet)&lt;/code&gt;, &lt;code&gt;ai system(ability)&lt;/code&gt;, &lt;code&gt;yui system(unique)&lt;/code&gt;, &lt;code&gt;at system(account)&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;ゲームの方向性は「現実の反映」にあります。world systemは「平面ではなく立体(惑星)」にするためのものです。例えば、「地球から抜け月に行ける」ようなものを想定してください。ゲームエンジンは平面を前提として作られていますから上を目指して飛び続けても地平線が広がっているだけで月にたどり着くことはありません。これを変更してワールドを現実に合わせることが目標です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue-planet-system_2025-05-11%20044020.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これが今回、いい感じにできてきたので、そろそろナンバリングをつけようと思い、付けてみました。&lt;/p&gt;&#xA;&lt;p&gt;以前のplanet systemと比べると、見栄えはあまり良くありませんが、いくつかの問題が解消されています。以前はatmosphereとudsだけで頑張っており、大気圏で地球のアクターを切り替え表示していました。しかし、今回はそのままの実物が表示されています。また、横から惑星に入ってもちゃんと地表に降りれるようになっています。また、月面もちゃんとしたものを作り、月面着陸できるようになりました。前は球体のままで凸凹、クレーターはありませんでした。手動で作るのも困難なので放置していたところ、worldscapeを使い解決しています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue-planet-system_2025-05-11%20044121.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;json&#34;&gt;json&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ai.verse&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ai&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;verse&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ue&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;system&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;world&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;planet&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;account&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;yui&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;unique&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ai&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ability&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#ae81ff&#34;&gt;ai.verse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;ai.ue&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#ae81ff&#34;&gt;ai.system&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ai.verse.ue.system.world&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue-planet-system_2025-05-11%20044040.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;415&#34; src=&#34;https://www.youtube.com/embed/TQZ_DgcTuhs?rel=0&amp;showinfo=0&amp;controls=0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>manusと同じようなことを実行する</title>
      <link>https://syui.github.io/blog/post/2025/03/26/manus/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/03/26/manus/</guid>
      <description>&lt;p&gt;AIエージェントのmanusが有名ですが、&lt;code&gt;openmanus&lt;/code&gt;というものを試してみました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://manus.im&#34;&gt;https://manus.im&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/mannaandpoem/OpenManus/tree/main&#34;&gt;https://github.com/mannaandpoem/OpenManus/tree/main&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これは、llmが複数で協調してタスクを行うように調整されたAIエージェントぽいです。manusを使わず、そのやり方を真似ている感じかと思います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/mannaandpoem/openmanus&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda create -n open_manus python&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3.12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda activate open_manus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/mannaandpoem/OpenManus.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd OpenManus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp config/config.example.toml config/config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim config/config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:config/config.toml&#34; data-lang=&#34;toml:config/config.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;llm&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gpt-4o&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;base_url&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.openai.com/v1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;api_key&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sk-...&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your actual API key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;max_tokens&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Optional configuration for specific LLM models&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;llm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vision&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gpt-4o&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;base_url&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.openai.com/v1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;api_key&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sk-...&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your actual API key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>comfyui &#43; wan2.1で動画生成</title>
      <link>https://syui.github.io/blog/post/2025/03/24/comfyui/</link>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/03/24/comfyui/</guid>
      <description>&lt;p&gt;今回は、comfyui + wan2.1で動画生成してみます。cosmosよりもwan2.1のほうがいいです。&lt;/p&gt;&#xA;&lt;p&gt;また、comfyuiのことが色々わかってきました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.comfy.org/p/wan21-video-model-native-support&#34;&gt;https://blog.comfy.org/p/wan21-video-model-native-support&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;models&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;diffusion_models&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://huggingface.co/Comfy-Org/Wan_2.1_ComfyUI_repackaged/blob/main/split_files/diffusion_models/wan2.1_i2v_720p_14B_fp8_scaled.safetensors&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;text_encoders&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://huggingface.co/Comfy-Org/Wan_2.1_ComfyUI_repackaged/resolve/main/split_files/text_encoders/umt5_xxl_fp8_e4m3fn_scaled.safetensors&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;clip_vision&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://huggingface.co/Comfy-Org/Wan_2.1_ComfyUI_repackaged/resolve/main/split_files/clip_vision/clip_vision_h.safetensors&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vae&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://huggingface.co/Comfy-Org/Wan_2.1_ComfyUI_repackaged/resolve/main/split_files/vae/wan_2.1_vae.safetensors&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sLO &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://huggingface.co/Comfy-Org/Wan_2.1_ComfyUI_repackaged/resolve/main/example%20workflows_Wan2.1/image_to_video_wan_720p_example.json&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成された動画はこちら。時間は30分ほどかかりました。&lt;/p&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/comfyui_output_1.webp&#34; width=&#34;600px&#34;&gt;&#xA;&lt;h2 id=&#34;わかってきたこと&#34;&gt;わかってきたこと&lt;/h2&gt;&#xA;&lt;p&gt;docsはこちらが非常にわかりやすいです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.comfy.org/&#34;&gt;https://docs.comfy.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;開発者が交流しているmatrixがあります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://app.element.io/#/room/#comfyui_space:matrix.org&#34;&gt;https://app.element.io/#/room/#comfyui_space:matrix.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;workflowのjsonは&lt;a href=&#34;https://openart.ai/workflows/home&#34;&gt;openart.ai&lt;/a&gt;から持ってこれます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://openart.ai/&#34;&gt;https://openart.ai/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>comfyui &#43; cosmosで動画生成</title>
      <link>https://syui.github.io/blog/post/2025/03/23/comfyui/</link>
      <pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/03/23/comfyui/</guid>
      <description>&lt;p&gt;今回は、comfyui + cosmosで動画生成してみます。&lt;/p&gt;&#xA;&lt;p&gt;生成する動画は、ollamaでpromptを書き、ue5で作ったゲームプレイ動画を参照してみても面白いかもしれないと思いました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;comfyuiのinstall&#34;&gt;comfyuiのinstall&lt;/h2&gt;&#xA;&lt;p&gt;installは&lt;code&gt;git clone&lt;/code&gt;から構築したほうがいいです。windowsで構築します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/comfyanonymous/comfyui&#34;&gt;https://github.com/comfyanonymous/comfyui&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget install nvidia.cuda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget install python.python.3.12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/comfyanonymous/comfyui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd comfyui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ Set-ExecutionPolicy RemoteSigned -Scope Process&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ venv&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;cripts&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;ctivate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu128&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m pip install --upgrade pip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:8188&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;comfyuiはnodeで書きますが&lt;code&gt;workflow&lt;/code&gt;と呼ぶようです。jsonで保存されます。簡単にimportできます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/&#34;&gt;https://comfyanonymous.github.io/ComfyUI_examples/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本構造としては、以下のとおりです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./comfyui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── custom_nodes &lt;span style=&#34;color:#75715e&#34;&gt;# ここにpluginを入れる&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── comfyui-manager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── models&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── checkpoints &lt;span style=&#34;color:#75715e&#34;&gt;# ここにmodelを入れる&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        └── model.safetensors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ltdrdata/comfyui-manager&#34;&gt;https://github.com/ltdrdata/comfyui-manager&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ltdrdata/comfyui-impact-pack&#34;&gt;https://github.com/ltdrdata/comfyui-impact-pack&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/comfyui_output_1.png&#34; width=&#34;600px&#34;&gt;&#xA;&lt;h2 id=&#34;cosmosで動画生成&#34;&gt;cosmosで動画生成&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/cosmos/&#34;&gt;https://comfyanonymous.github.io/ComfyUI_examples/cosmos/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>自分だけのAIを作ろう</title>
      <link>https://syui.github.io/blog/post/2025/03/22/aimodel/</link>
      <pubDate>Sat, 22 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/03/22/aimodel/</guid>
      <description>&lt;p&gt;openaiのchatgptでも一応課金は発生しますので、自分だけのAIを作ろうということで今回はやっていきます。&lt;/p&gt;&#xA;&lt;p&gt;まずはlocalで実行することから、最後にLoRAなどfinetuningするところまで。&lt;/p&gt;&#xA;&lt;p&gt;modelは&lt;code&gt;gemma3&lt;/code&gt;がおすすめです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;model&#34;&gt;model&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;gemma3:1b&lt;/li&gt;&#xA;&lt;li&gt;deepseek-r1:12b&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install ollama&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew services restart ollama&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama pull gemma3:1b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama run gemma3:1b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;n8n&#34;&gt;n8n&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;n8n&lt;/code&gt;でAIエージェントを作成できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/n8n-io/n8n/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker volume create n8n_data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;webui&#34;&gt;webui&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget install ollama.ollama&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ollama run gemma3:1b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget install --id Python.Python.3.11 -e&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m venv webui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd webui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ .&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;cripts&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;ctivate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install open-webui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ open-webui serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:8080&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;lora&#34;&gt;LoRA&lt;/h2&gt;&#xA;&lt;p&gt;apple siliconでLoRA(finetuning)するには&lt;code&gt;mlx_lm&lt;/code&gt;を使用します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5のpixel streaming2に移行する</title>
      <link>https://syui.github.io/blog/post/2025/01/21/pixelstreaming/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/01/21/pixelstreaming/</guid>
      <description>&lt;p&gt;ue5のplugin(server)のpixel streaming2ですが、情報がどこにもないので移行方法を書きます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/EpicGamesExt/PixelStreamingInfrastructure/blob/master/Docs/pixel-streaming-2-migration-guide.md&#34;&gt;https://github.com/EpicGamesExt/PixelStreamingInfrastructure/blob/master/Docs/pixel-streaming-2-migration-guide.md&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;まず、2では&lt;code&gt;WebRTC&lt;/code&gt;, &lt;code&gt;Matchmaker&lt;/code&gt;が削除されます。そして、app-package.exeの引数がそのままでは動きません。また、serverのconfig.json, scriptが変更されています。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;projectのpluginで&lt;code&gt;pixel streaming&lt;/code&gt;をdisableにし、&lt;code&gt;pixel streaming2&lt;/code&gt;をenableにする。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;これをpackage buildして、app.exeを作ります。そして、引数は以下のようにしてください。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;なお、sshなどで作業している場合はfirewallの許可が出ませんので、local-desktopで作業してください。または手動でruleを更新してください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./$project/Windows/app.exe -PixelStreamingSignallingURL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ws://127.0.0.1:8888&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;次にserverの初期設定です。scriptがだいぶ変更されていますし、引数も変わっています。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# git clone https://github.com/EpicGamesExt/PixelStreamingInfrastructure.git&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone --branch UE5.5 https://github.com/EpicGamesExt/PixelStreamingInfrastructure.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd PixelStreamingInfrastructure/SignallingWebServer/platform_scripts/cmd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./setup.bat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./start.bat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;config.json&lt;/code&gt;の書き換えと起動。特に注意すべきは&lt;code&gt;http_root&lt;/code&gt;です。Publicからwwwに変更されています。pathにも注意してください。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd PixelStreamingInfrastructure/SignallingWebServer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim config.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm start -- --public_ip localhost&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ue5でasian dragonを動かす</title>
      <link>https://syui.github.io/blog/post/2025/01/08/ue5-animal/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/01/08/ue5-animal/</guid>
      <description>&lt;p&gt;ue5でasian(chinese) dragonを動かそうとしてます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/ue5_controlrigsample_dragon_player.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;これはcontrol rigを使い簡単に実装したものです。&lt;a href=&#34;https://www.fab.com/listings/2ce3fe44-9ee6-4fa7-99fc-b9424a402386&#34;&gt;control rig sample&lt;/a&gt;にはdragonがあります。&lt;code&gt;CR_Dragon&lt;/code&gt;の&lt;code&gt;head_global_ctrl&lt;/code&gt;をABPで動かしています。&lt;code&gt;dynamic&lt;/code&gt;をtrueにします。Characterの&lt;code&gt;Get Actor Up Vector&lt;/code&gt;からcontrol rigに値を入れ操作します。視点(Actor)を適切に動かすと一回転もできます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blueprintue.com/blueprint/o3glwh72/&#34;&gt;https://blueprintue.com/blueprint/o3glwh72/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;しかし、色々と問題があります。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;現状、視点を動かさないと自然に動かない。vector-yの値を1秒ごとに上下に動かすなどしたほうがいい&lt;/li&gt;&#xA;&lt;li&gt;human(flying) playerに被せているためcollisionがその範囲にとどまるため尻尾などが床をすり抜ける&lt;/li&gt;&#xA;&lt;li&gt;game animation sample(GAS)との統合はさらに大変&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;GASではhumanのIK_Rigを無理やり当てはめています。壁などは登れますが、動きが破綻しています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/ue5_gameanimationsample_animal_player.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;この辺をどのように統合していくか。今のところ&lt;a href=&#34;https://www.fab.com/ja/listings/d3f8d256-d8d9-4d27-91c1-c61e55e984a6&#34;&gt;dragon ik plugin&lt;/a&gt;を試してみようと思っています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/codehawk64/DragonIK-UE5MotionMatching-Template&#34;&gt;https://github.com/codehawk64/DragonIK-UE5MotionMatching-Template&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dragonik.eternalmonke.com&#34;&gt;https://dragonik.eternalmonke.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>原神、マーヴィカの感想</title>
      <link>https://syui.github.io/blog/post/2025/01/03/genshin/</link>
      <pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2025/01/03/genshin/</guid>
      <description>&lt;p&gt;使ってみた感想だと、溶解でダメージを出していくキャラだと思いました。そのまま使ってもナヒーダ、ヌヴィレットのPTよりも安定しませんし、劣ります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、溶解を当てると螺旋のタイムを短縮できます。確実に溶解を当てられるかというとそうではありません。マーヴィカを強く使うには最優先でシトラリを確保したほうが良いと思います。また、マーヴィカの会心率は60%が推奨。&lt;/p&gt;&#xA;&lt;p&gt;私のケースだと、武器もシトラリも引きませんので、以下のようになりました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;無工の剣(かっこいいと思っていたが、使い道がなかった)&lt;/li&gt;&#xA;&lt;li&gt;甘雨(せっかく引いたのに使ってなかった)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;甘雨は熟知型にし、チャージは西風を持たせてサポートしています。万葉で氷を拡散させるとよいでしょう。フリーナも検討しましたが、他のキャラと組みたいので。&lt;/p&gt;&#xA;&lt;p&gt;全く使っていなかったキャラを使えるし、武器も使えるしで、マーヴィカはかなり楽しいキャラになりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_rasen_20250101_0001.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;溶解は爆発が60万、単体は15万くらいのダメージがでます。動画最後、うまくいくと81万くらいのダメージが出ています。マーヴィカは2凸ですが、ほかは全部無凸なのですごい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.5.1でps5 controllerを使う</title>
      <link>https://syui.github.io/blog/post/2024/12/29/ue-ps5/</link>
      <pubDate>Sun, 29 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/12/29/ue-ps5/</guid>
      <description>&lt;p&gt;基本的には&lt;code&gt;Game Input for Windows&lt;/code&gt;というpluginを使います。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dev.epicgames.com/community/learning/tutorials/EpZ4/unreal-engine-game-input-for-windows-experimental-release-notes&#34;&gt;https://dev.epicgames.com/community/learning/tutorials/EpZ4/unreal-engine-game-input-for-windows-experimental-release-notes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:$project/Config/DefaultInput.ini&#34; data-lang=&#34;sh:$project/Config/DefaultInput.ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;[/Script/GameInputBase.GameInputDeveloperSettings]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+DeviceConfigurations&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(DeviceIdentifier=(VendorId=1356,ProductId=3302),Description=&amp;#34;PS5 DualSense controller&amp;#34;,bOverrideHardwareDeviceIdString=True,OverriddenHardwareDeviceId=&amp;#34;DualSense&amp;#34;,bProcessControllerButtons=True,bProcessControllerSwitchState=True,bProcessControllerAxis=True,ControllerButtonMappingData=((1, &amp;#34;Gamepad_FaceButton_Left&amp;#34;),(2, &amp;#34;Gamepad_FaceButton_Bottom&amp;#34;),(4, &amp;#34;Gamepad_FaceButton_Right&amp;#34;),(8, &amp;#34;Gamepad_FaceButton_Top&amp;#34;),(16, &amp;#34;Gamepad_LeftShoulder&amp;#34;),(32, &amp;#34;Gamepad_RightShoulder&amp;#34;),(64, &amp;#34;Gamepad_LeftTrigger&amp;#34;),(128, &amp;#34;Gamepad_RightTrigger&amp;#34;),(256, &amp;#34;Gamepad_Special_Left&amp;#34;),(512, &amp;#34;Gamepad_Special_Right&amp;#34;),(1024, &amp;#34;Gamepad_LeftThumbstick&amp;#34;),(2048, &amp;#34;Gamepad_RightThumbstick&amp;#34;),(8192, &amp;#34;Gamepad_Special_Left&amp;#34;)),ControllerAxisMappingData=((0, (KeyName=&amp;#34;Gamepad_LeftX&amp;#34;,DeadZone=0.239532,bIsPackedPositveAndNegative=True)),(1, (KeyName=&amp;#34;Gamepad_LeftY&amp;#34;,Scalar=-1.000000,bIsPackedPositveAndNegative=True)),(2, (KeyName=&amp;#34;Gamepad_RightX&amp;#34;,bIsPackedPositveAndNegative=True)),(3, (KeyName=&amp;#34;Gamepad_LeftTriggerAxis&amp;#34;)),(4, (KeyName=&amp;#34;Gamepad_RightTriggerAxis&amp;#34;,DeadZone=0.239532)),(5, (KeyName=&amp;#34;Gamepad_RightY&amp;#34;,Scalar=-1.000000,bIsPackedPositveAndNegative=True))))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;しかし、問題は動かないことです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;GAME_INPUT_SUPPORT is false!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;なぜかというと、&lt;code&gt;GDK&lt;/code&gt;をインストールしたうえで、&lt;code&gt;Microsoft.GameInput&lt;/code&gt;をインストールしなければならず、かつ、GDKはEngineをbuildしないとpathを認識しないからです。この際、念の為にprojectの&lt;code&gt;sln&lt;/code&gt;もrebuildしましょう。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;As of the March 2024 GDK release, the GDK installer no longer installs the GameInput libraries.&lt;/p&gt;&#xA;&lt;p&gt;If you’re targeting PC, add the Microsoft.GameInput NuGet package (NuGet Gallery | Microsoft.GameInput 0.2303.22621.3038) to your solution. Run the NuGet package’s GameInput redistributable MSI to ensure that you have the latest runtime. Although the runtime is included in Windows May 2020 Updates and later, running the MSI will ensure that you have the latest version.&#xA;Include this redistributable in game installers to ensure that GameInput is available on all supported versions of Windows.&amp;quot;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、確保キャラを考える</title>
      <link>https://syui.github.io/blog/post/2024/12/22/genshin/</link>
      <pubDate>Sun, 22 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/12/22/genshin/</guid>
      <description>&lt;p&gt;確保キャラのランキングを考えます。少し変わったランキング結果になると思いますが、重視したのは螺旋と幻想をプレイしたときの実感です。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;順位&lt;/th&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;フリーナ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;ヌヴィレット&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;万葉&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;シロネン&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;私のプレイスタイルは少し変わっていて、出てくる敵を確認しません。原神はあらかじめ戦う敵をすべて確認できるようになっています。ですから、この敵はこれが弱点だからこのキャラを当てようみたいなことができます。しかし、私はめんどくさがりなので、確認せず対策も立てずにさっさと開始しています。&lt;/p&gt;&#xA;&lt;p&gt;このような戦闘スタイルで度々問題となるのがヌヴィレットです。水無効の敵が出てきてどうしようもなくなり、フィールドでも螺旋でも幻想でも敗北してしまったことが何度かありました。(PT:ヌヴィレット、フリーナ、万葉、シロネン)なので、フィールドでは万葉を外してナヒーダを入れています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、例えば、ナヒーダや雷電のPTでそういう事はまずなく、どの敵が出てきたとしても、大抵突破できます。&lt;/p&gt;&#xA;&lt;p&gt;ここで、評価基準としては(1)突破力があること、(2)サポートができることです。この2つが最高水準に達しているキャラクターを評価します。&lt;/p&gt;&#xA;&lt;p&gt;逆に言うと、これが一つしかないキャラだと評価は下がります。&lt;/p&gt;&#xA;&lt;p&gt;私は螺旋、幻想ともに最高難易度をクリアしてきました。あまりキャラを育てていませんので、幻想は毎回参加要件を満たせず、急遽レベル1から70に上げたばかりのキャラで参加しています。聖遺物も武器もありませんから、何もつけず、あるいは適当なものをつけて、そのまま投入します。天賦は1とか4とかばかりです。&lt;/p&gt;&#xA;&lt;p&gt;このような環境では万葉やシロネン、鍾離がPTにいても突破できないことがよくあります。また、ヌヴィレットは敵の相性によって何もできなくなります。&lt;/p&gt;&#xA;&lt;p&gt;その点、ナヒーダ、雷電は突破力があると感じています。例えば、雷電が観音とあたっても大抵の場合突破できています。チャージサポートがかなり強力に機能するのです。幻想ではなかなか爆発がたまらないことはよくありますから。これは主に元素ベース(組み合わせ)でダメージを出すか、一つの元素あるいは攻撃でダメージを出すかの違いによるものと言えるでしょう。組み合わせでもダメージを出せる突破力のあるキャラクターを評価し、これは螺旋や幻想をプレイしたときの実感です。&lt;/p&gt;&#xA;&lt;p&gt;私のように無課金でキャラを育成せず少ない手持ちでやりくりしている場合、ナヒーダとフリーナを組み合わせて超開花を狙っていくような戦略が螺旋や幻想の攻略には一番適していると思います。&lt;/p&gt;&#xA;&lt;p&gt;仮に最初からプレイする場合、やはりナヒーダ、次にフリーナを優先的に確保すると思います。&lt;/p&gt;&#xA;&lt;p&gt;追記 : その後、何度か螺旋をやってみましたが、順位を変えることにしました。雷電ではきつかった。&lt;/p&gt;&#xA;&lt;h2 id=&#34;マーヴィカの完凸を目指すべきか&#34;&gt;マーヴィカの完凸を目指すべきか&lt;/h2&gt;&#xA;&lt;p&gt;内容によりますが、おそらく、完凸は目指さない方針に変更すると思います。&lt;/p&gt;&#xA;&lt;p&gt;スカークの完凸を目指そうと思っているので。&lt;/p&gt;&#xA;&lt;h2 id=&#34;マーヴィカの評価はどうなるか&#34;&gt;マーヴィカの評価はどうなるか&lt;/h2&gt;&#xA;&lt;p&gt;ヌヴィレットより高くなると思います。サポートもできるので、私の基準でいうと。&lt;/p&gt;&#xA;&lt;p&gt;フリーナ、ナヒーダを抜くことができるかは、マーヴィカが出せる元素反応ダメージの使用感で決まると思います。&lt;/p&gt;&#xA;&lt;p&gt;突破力はありますから、一番使うキャラになるかもしれません。&lt;/p&gt;&#xA;&lt;h2 id=&#34;スカークはどうか&#34;&gt;スカークはどうか&lt;/h2&gt;&#xA;&lt;p&gt;原神はストーリー上の設定と性能は一致するよう考えられています。ですから、強くなると思います。&lt;/p&gt;&#xA;&lt;p&gt;あとは戦闘でのかっこよさがあればいいかなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;実はマーヴィカのバイクはあまりかっこいいと感じませんでした。世界観に合ってないと思います。&lt;/p&gt;&#xA;&lt;p&gt;最終的に完凸を決めるのはその辺な気がします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>accountを整理する</title>
      <link>https://syui.github.io/blog/post/2024/12/21/account/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/12/21/account/</guid>
      <description>&lt;p&gt;年末年始に向けてaccount(アカウント)の整理をしました。&lt;/p&gt;&#xA;&lt;p&gt;この1年で最も使ったのは&lt;code&gt;bluesky&lt;/code&gt;, &lt;code&gt;git.syui.ai&lt;/code&gt;でした。&lt;/p&gt;&#xA;&lt;p&gt;次に&lt;code&gt;github&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;この3つのaccountのlink(リンク)を貼ることにします。linkは主にicon(アイコン)で表示しているものになります。&lt;/p&gt;&#xA;&lt;p&gt;残りは撤去しました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;bluesky-handle-reserved&#34;&gt;bluesky handle reserved&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;2024/12/12&lt;/code&gt;からhandle reservedという機能が追加されていたので、確保用のaccountを削除しました。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;bluesky-embed&#34; data-bluesky-uri=&#34;at://did:plc:uqzpqmrjnptsxezjx4xuh2mn/app.bsky.feed.post/3lds6aqfxqc2i&#34; data-bluesky-cid=&#34;bafyreibw5pugdgcfwcwvmnxwd3j3srvvtk3do4y5japrrtsa2dnhzehg2y&#34;&gt;&lt;p lang=&#34;ja&#34;&gt;Update as of December 12, 2024: &#xA;For every account, only your most recent .bsky.social username is reserved for you, and this reservation does not expire.&#xA;すべてのアカウントで、最新の .bsky.social ユーザー名のみが予約され、この予約は期限切れになりません。&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://bsky.app/profile/did:plc:uqzpqmrjnptsxezjx4xuh2mn/post/3lds6aqfxqc2i?ref_src=embed&#34;&gt;[image or embed]&lt;/a&gt;&lt;/p&gt;&amp;mdash; syui (&lt;a href=&#34;https://bsky.app/profile/did:plc:uqzpqmrjnptsxezjx4xuh2mn?ref_src=embed&#34;&gt;@syui.ai&lt;/a&gt;) &lt;a href=&#34;https://bsky.app/profile/did:plc:uqzpqmrjnptsxezjx4xuh2mn/post/3lds6aqfxqc2i?ref_src=embed&#34;&gt;2024年12月21日 14:29&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src=&#34;https://embed.bsky.app/static/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;linkを減らす&#34;&gt;linkを減らす&lt;/h2&gt;&#xA;&lt;p&gt;多すぎるlinkは見ている人に混乱をもたらします。&lt;/p&gt;&#xA;&lt;p&gt;この人は一体何を使っていて、どこに拠点を置いているのかわからないのです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、全く使っていないservice(サービス)でmention(メンション)されても、反応できないおそれがあります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使わなかったもの&#34;&gt;使わなかったもの&lt;/h2&gt;&#xA;&lt;p&gt;この1年は&lt;code&gt;twitter&lt;/code&gt;, &lt;code&gt;matrix&lt;/code&gt;, &lt;code&gt;mastodon&lt;/code&gt;を使いませんでした。linkは貼っていました。&lt;/p&gt;&#xA;&lt;p&gt;それぞれにprotocol(プロトコル)が違うので、server(サーバー)を立てていましたが、アイコンから外すことにしました。&lt;/p&gt;&#xA;&lt;p&gt;どれも思い出深いserviceで、動いた時はとても嬉しかったことを覚えています。&lt;/p&gt;&#xA;&lt;p&gt;それからしばらくは楽しく使っていましたが、今は使わなくなりました。&lt;/p&gt;&#xA;&lt;p&gt;なぜかというと、私は1つのsnsでも投稿できなかったり見れなかったりすることがあるのです。ですから、メインで使うもの以外はほとんど手を付けられない。&lt;/p&gt;&#xA;&lt;p&gt;いつも知らないこと、わからないことばかりやってるので、時には沼にハマり、そんな時はblueskyすら見れないことがありました。&lt;/p&gt;&#xA;&lt;p&gt;blueskyにdm機能が追加されたので、今後はblueskyだけで十分ではないかと思っています。&lt;/p&gt;&#xA;&lt;p&gt;使わなくなったものはlinkを外しましたが、あと1年で使う機会がなかったらaccountの削除を考えています。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、「いざというときあったほうがいいかも」という気持ちもあり、どうするかはその時考えたいと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;mailを統合する&#34;&gt;mailを統合する&lt;/h2&gt;&#xA;&lt;p&gt;使っているmail service(メールサービス)を統合する方向で考えています。&lt;/p&gt;&#xA;&lt;p&gt;これもaccount整理の一環ですが、今まで&lt;code&gt;gmail&lt;/code&gt;, &lt;code&gt;yahoo&lt;/code&gt;, &lt;code&gt;icloud&lt;/code&gt;とたくさんのmail serviceを使ってきました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>atmosphere</title>
      <link>https://syui.github.io/blog/post/2024/12/21/bluesky-ac-ja/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/12/21/bluesky-ac-ja/</guid>
      <description>&lt;p&gt;今年はblueskyのアドベントカレンダーに参加しています。&lt;code&gt;英語/日本語&lt;/code&gt;の記事を用意しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://whtwnd.com/moja.blue/entries/%E3%83%96%E3%83%AB%E3%82%B9%E3%82%B3%E3%80%81%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC2024&#34;&gt;Bluesco Advent Calendar 2024&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/en/post/2024/11/21/bluesky-ac-en/&#34;&gt;&lt;button&gt;en&lt;/button&gt;&lt;/a&gt; &lt;a href=&#34;https://syui.github.io/blog/post/2024/11/21/bluesky-ac-ja/&#34;&gt;&lt;button&gt;ja&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;atmosphereとは&#34;&gt;atmosphereとは&lt;/h2&gt;&#xA;&lt;p&gt;まず用語の説明です。&lt;code&gt;at&lt;/code&gt;にはいろいろな意味が込められています。&lt;code&gt;@&lt;/code&gt;, &lt;code&gt;at://&lt;/code&gt;, &lt;code&gt;[at]mosphere&lt;/code&gt;, &lt;code&gt;[a]uthenticated [t]ransfer&lt;/code&gt;など。例えば、初期の頃はアイコンが&lt;code&gt;@&lt;/code&gt;でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://atproto.com/ja/guides/glossary&#34;&gt;https://atproto.com/ja/guides/glossary&lt;/a&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;word&lt;/th&gt;&#xA;          &lt;th&gt;name&lt;/th&gt;&#xA;          &lt;th&gt;example&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;at&lt;/td&gt;&#xA;          &lt;td&gt;uri&lt;/td&gt;&#xA;          &lt;td&gt;at://syui.ai&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@&lt;/td&gt;&#xA;          &lt;td&gt;user&lt;/td&gt;&#xA;          &lt;td&gt;@syui.ai&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;[at]proto&lt;/td&gt;&#xA;          &lt;td&gt;repo&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;git@github.com:bluesky-social/atproto&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;[at]mosphere&lt;/td&gt;&#xA;          &lt;td&gt;system&lt;/td&gt;&#xA;          &lt;td&gt;pds, bsky(appview), ozone, bgs, plc&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;[a]uthenticated [t]ransfer&lt;/td&gt;&#xA;          &lt;td&gt;protocol&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.w3.org/TR/did-core/&#34;&gt;did&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Atmosphere&lt;/p&gt;&#xA;&lt;p&gt;「Atmosphere」は、AT プロトコル のエコシステムを説明するために使用する用語です。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;AT プロトコル&lt;/p&gt;&#xA;&lt;p&gt;AT プロトコルは、「Authenticated Transfer Protocol」の略です。この名前は、すべてのユーザー データが作成ユーザーによって署名されているという事実に由来しています。これにより、多くのサービスを通じてデータをブロードキャストし、発信元サーバーと直接通信しなくても、データが本物であることを証明できます。&lt;/p&gt;&#xA;&lt;p&gt;この名前は、atproto がソーシャル システム向けに設計されているため、「@」記号、別名「at」記号をもじったものです。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;そして、各領域に名前がつけられ、システム全体を&lt;code&gt;atmosphere(大気圏)&lt;/code&gt;と呼んでいるみたいです。&lt;/p&gt;&#xA;&lt;p&gt;atmosphereの下にあるそれぞれのservice(サービス)はearth(地球)の大気構造にちなんで&lt;code&gt;bluesky(bsky)&lt;/code&gt;, &lt;code&gt;ozone(オゾン)&lt;/code&gt;, &lt;code&gt;bigsky(bgs)&lt;/code&gt;などの名前が使われています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto/tree/main/services/bsky&#34;&gt;https://github.com/bluesky-social/atproto/tree/main/services/bsky&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto/tree/main/services/ozone&#34;&gt;https://github.com/bluesky-social/atproto/tree/main/services/ozone&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/indigo/tree/main/cmd/bigsky&#34;&gt;https://github.com/bluesky-social/indigo/tree/main/cmd/bigsky&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;大気圏にはその他にも&lt;code&gt;meteor(流星)&lt;/code&gt;, &lt;code&gt;aurora(オーロラ)&lt;/code&gt;などがあるので今後、なにかの名前に使われることがあるかもしれません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;atmosphere&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://atproto.com/ja/guides/glossary&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://en.wikipedia.org/wiki/atmosphere_of_earth&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;exosphere&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;km&amp;#34;&lt;/span&gt;:[{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;min&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; }],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;universe&amp;#34;&lt;/span&gt; ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;thermosphere&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;km&amp;#34;&lt;/span&gt;:[{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;min&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt; }],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aurora&amp;#34;&lt;/span&gt; ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;mesosphere&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;km&amp;#34;&lt;/span&gt;:[{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;min&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; }],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meteor&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bigsky&amp;#34;&lt;/span&gt; ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;stratosphere&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;km&amp;#34;&lt;/span&gt;:[{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;min&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; }],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ozone&amp;#34;&lt;/span&gt; ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;troposphere&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;km&amp;#34;&lt;/span&gt;:[{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;min&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; }],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bluesky&amp;#34;&lt;/span&gt; ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ゲーム開発で考えたこと&#34;&gt;ゲーム開発で考えたこと&lt;/h2&gt;&#xA;&lt;p&gt;現在、&lt;code&gt;atproto&lt;/code&gt;を使ったゲームを開発中です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、スカークはナタで実装</title>
      <link>https://syui.github.io/blog/post/2024/12/21/genshin/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/12/21/genshin/</guid>
      <description>&lt;p&gt;公式チャンネルで動画が公開され、最後のシルエットでスカークの姿がありました。&lt;/p&gt;&#xA;&lt;p&gt;つまり、&lt;code&gt;5.x&lt;/code&gt;で実装される可能性があります。面白くなってきた。&lt;/p&gt;&#xA;&lt;p&gt;私は現在、炎神と氷神は完凸予定です。それ以外ではナタでシロネンを引きましたが、凸はしていません。&lt;/p&gt;&#xA;&lt;p&gt;今後凸することも考えていたところ、この発表があったので、スカークの完凸を目指す計画になりそうです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、現在の原石数を考えると、炎神は完凸できるものの、スカークまでカバーするのは無課金勢としては難しいか。&lt;/p&gt;&#xA;&lt;p&gt;フォンテーヌでは&lt;code&gt;フリーナ(c2)&lt;/code&gt;, &lt;code&gt;ヌヴィレット(c1)&lt;/code&gt;でした。スメールでは&lt;code&gt;ナヒーダ(c6)&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;ナタで&lt;code&gt;マーヴィカ(c6)&lt;/code&gt;, &lt;code&gt;シロネン(c0)&lt;/code&gt;, &lt;code&gt;スカーク(c6)&lt;/code&gt;になるのか。普通に考えると無理そう。マーヴィカの凸はいい感じのところで止めておくのがいいかもね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.5で作り直す</title>
      <link>https://syui.github.io/blog/post/2024/11/19/ue55/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/11/19/ue55/</guid>
      <description>&lt;p&gt;&lt;code&gt;city sample&lt;/code&gt;にearth system(solar system)を組み込みます。具体的には惑星(planet)の形式でmapを作成し、空から宇宙に出ても問題ないようにすることを目指します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;海 : &lt;code&gt;ocean waves&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;空 : &lt;code&gt;ultra dynamic sky&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;city-sample&#34;&gt;city sample&lt;/h2&gt;&#xA;&lt;p&gt;5.5からcrashする回数が大幅に減りました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;/Map/Small_City_LVL&lt;/code&gt;を使います。&lt;code&gt;ground*&lt;/code&gt;を探して削除します。これは海面にplane(平面)を設置しています。&lt;/p&gt;&#xA;&lt;p&gt;止まっている車を&lt;code&gt;c&lt;/code&gt;で運転できるようですが、これは&lt;code&gt;BP_Player&lt;/code&gt;の機能です。使用するには後述する&lt;code&gt;game animation sample&lt;/code&gt;に統合する必要があるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;playerstart(tag)をいくつか設置し、uiで選択してteleportできるようにします。instance data(config)に名前を保存して呼び出してもいいし、mapから値を取ってきてもいいです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blueprintue.com/blueprint/3h8qi0ep/&#34;&gt;https://blueprintue.com/blueprint/3h8qi0ep/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;いくつかの建物を追加します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/Levels/DefaultLevel&lt;/li&gt;&#xA;&lt;li&gt;/AutomotiveBridgeScene/Bridge_P&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;街頭は&lt;code&gt;BP_CurvedBride&lt;/code&gt;で&lt;code&gt;Lamp_0x&lt;/code&gt;を変更します。SMで&lt;code&gt;streetLampC&lt;/code&gt;を選択して位置を調整します。また、すり抜けるのでマトリックスでcollisionを設定してください。よくわからない場合は後述する&lt;code&gt;twinmotion&lt;/code&gt;を参考にしてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://git.syui.ai/ai/ue/raw/branch/main/img/ue-2024-10-31-151413.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;automatedperftesting&#34;&gt;AutomatedPerfTesting&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;AutomatedPerfTesting&lt;/code&gt;は5.5で追加されたpluginです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Experimental release of Automated Perf Testing Plugin v0.1, providing Gauntlet Test Controllers, UAT Test Nodes, and BuildGraph macros for adding common automated performance tests to a project&amp;rsquo;s automated build and test.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dev.epicgames.com/documentation/ja-jp/unreal-engine/unreal-engine-5.5-release-notes&#34;&gt;https://dev.epicgames.com/documentation/ja-jp/unreal-engine/unreal-engine-5.5-release-notes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/AutomatedPerfTesting&#34;&gt;https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/AutomatedPerfTesting&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;そのうち解消されると思いますが、現在(2024-11-18)、&lt;code&gt;city sample&lt;/code&gt;はbuildできません。&lt;code&gt;Engine/Plugins/Performance/AutomatedPerfTesting&lt;/code&gt;に&lt;code&gt;AutomatedPerfTestConfig.cs&lt;/code&gt;, &lt;code&gt;AutomatedPerfTestNode.cs&lt;/code&gt;が含まれていないため&lt;code&gt;${project}/Build/Script/CitySample.Automation.csproj&lt;/code&gt;に記述されているcompileが通らないのです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Project&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sdk=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.NET.Sdk&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Project=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CitySample.Automation.csproj.props&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Condition=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exists(&amp;#39;CitySample.Automation.csproj.props&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TargetFramework&amp;gt;&lt;/span&gt;net8.0&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/TargetFramework&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;ItemGroup&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Compile&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Include=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$(EngineDir)\Plugins\Performance\AutomatedPerfTesting\Build\Scripts\AutomatedPerfTestConfig.cs&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Compile&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Include=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$(EngineDir)\Plugins\Performance\AutomatedPerfTesting\Build\Scripts\AutomatedPerfTestNode.cs&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/ItemGroup&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/Project&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これはgithubにあるsrcから持ってくるしかありません。アクセスするにはorgに&lt;a href=&#34;https://www.unrealengine.com/en/ue-on-github&#34;&gt;参加&lt;/a&gt;します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook air(intel)にarchlinuxをinstallした</title>
      <link>https://syui.github.io/blog/post/2024/10/29/archlinux/</link>
      <pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/29/archlinux/</guid>
      <description>&lt;p&gt;いよいよm1の前に使っていたmacbook air(intel)の使い道がなくなっていたので、archをinstallすることにしました。例えば、homebrewはmac-intelのsupportを打ち切っています。packageのinstallはbuildが必要になり、現実的使用が困難です。&lt;/p&gt;&#xA;&lt;p&gt;私がapple製品を買うのはハードがいいからです(長持ちです)。ただし、バッテリーは何度か交換しています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、近年は少し事情が変わってきました。apple製品を買うならgpuを買ったほうがいいかもしれません。私ならそうします。&lt;/p&gt;&#xA;&lt;h2 id=&#34;install&#34;&gt;install&lt;/h2&gt;&#xA;&lt;p&gt;installは簡単で&lt;code&gt;/&lt;/code&gt;にpacstrapでarch(linux,base)を入れること。bootを設定することです。grubが簡単なのでgrubを使用します。bootloaderは起動時にlinux.imgを実行したり選択するものです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fdisk -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/nvme0n1p1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/nvme0n1p2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfs.vfat /dev/nvme0n1p1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfs.ext4 /dev/nvme0n1p2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount  /dev/nvme0n1p2 /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p /mnt/boot/efi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount  /dev/nvme0n1p1 /mnt/boot/efi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacstrap /mnt base linux grub efibootmgr&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ arch-chroot /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch_grub&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-install --force /dev/nvme0n1p1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ useradd -m -g wheel -s /bin/bash &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S base-devel zsh git vim tmux sudo dhcpcd openssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ systemctl enable dhcpcd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ systemctl enable sshd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chsh -s /bin/zsh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;network&#34;&gt;network&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;dhcpcd&lt;/code&gt;を使う方法と&lt;code&gt;systemd-networkd&lt;/code&gt;を使う方法があります。基本的にどのlinuxもdhcpcdを入れておりnetworkを設定しています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>atprotoのfrontpageを触ってみる</title>
      <link>https://syui.github.io/blog/post/2024/10/26/frontpage/</link>
      <pubDate>Sat, 26 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/26/frontpage/</guid>
      <description>&lt;p&gt;前回、live配信にatprotoでoauth loginして掲示板(bbs)に書き込めるサイトを作成し、bbsは簡単にrustで自作したものを使っていました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、やはり機能的に不足していたのと、公式のoauth exampleがpythonで書かれていたため、python + rustでやっていました。&lt;/p&gt;&#xA;&lt;p&gt;そこに&lt;a href=&#34;https://github.com/likeandscribe/frontpage&#34;&gt;likeandscribe/frontpage&lt;/a&gt;というものを見つけて、これはいいものだと思ったので触っていきます。&lt;/p&gt;&#xA;&lt;p&gt;詳しくはこちらを見てください。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://frontpage.fyi/post/tom.frontpage.team/3l6nbjyjmcg2v&#34;&gt;https://frontpage.fyi/post/tom.frontpage.team/3l6nbjyjmcg2v&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これがどういったものかというと、おそらく、bsky.socialとは別サービスですがoauthでlogin(signin)でき、投稿情報は自身のpdsに保存されるのでしょう。また、&lt;code&gt;drainpipe&lt;/code&gt;はこう書かれています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Drainpipe is a atproto firehose consumer written in rust. It knows how to reliably* take messages from the firehose, filter them, and forward them over HTTPs to a webhook receiver some place else on the internet.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/likeandscribe/frontpage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd !$:t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvm use &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pnpm i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat turbo.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pnpm exec turbo run --affected type-check&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;turboを見て分かる通り、dbはtursoを使用するようです。また、&lt;code&gt;drainpipe&lt;/code&gt;は&lt;code&gt;fly.io&lt;/code&gt;ですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのoauthとbbsをlivestream serviceに実装する</title>
      <link>https://syui.github.io/blog/post/2024/10/21/bbs/</link>
      <pubDate>Mon, 21 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/21/bbs/</guid>
      <description>&lt;p&gt;youtubeのlivestreamはchatのような書き込みができます。それを再現します。&lt;/p&gt;&#xA;&lt;p&gt;まずはblueskyのoauthが動作するかの確認です。これは&lt;a href=&#34;https://github.com/bluesky-social/cookbook/tree/main/python-oauth-web-app&#34;&gt;bluesky-social/cookbook&lt;/a&gt;を使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/bluesky-social/cookbook/tree/main/python-oauth-web-app&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd ./repos/cookbook/python-oauth-web-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rye sync&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rye run python3 -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;import secrets; print(secrets.token_hex())&amp;#39;&lt;/span&gt;|xargs echo FLASK_SECRET_KEY|tr -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rye run python3 generate_jwk.py |xargs echo FLASK_CLIENT_SECRET_JWK|tr -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rye run flask run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;oauthはlocalhostでは動作しません。したがって、&lt;code&gt;ngrok&lt;/code&gt;, &lt;code&gt;tailscale&lt;/code&gt;, &lt;code&gt;cloudflare&lt;/code&gt;などを使用します。個人的にはcloudflareがおすすめです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cloudflared tunnel --url http://localhost:5000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;表示されるurlにアクセスするとoauthでloginすることができました。oauthの情報はserverに保存されており以後は承認なしにlogin可能となります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;bbsと連携する&#34;&gt;bbsと連携する&lt;/h2&gt;&#xA;&lt;p&gt;今回はloginしている場合にbbsの書き込みシステムを表示します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/bluesky_oauth_livestream_gameplay.mp4&#34; width=&#34;100%&#34; height=&#34;500px&#34; controls&gt; &lt;/video&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:template/home.html&#34; data-lang=&#34;html:template/home.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% block content %}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% if g.user %}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;@{{ g.user[&amp;#39;handle&amp;#39;] }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;iframe&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.com?handle={{ g.user[&amp;#39;handle&amp;#39;] }}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;iframe&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% endif %}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bbsを作ります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>restreamerでobsを配信する</title>
      <link>https://syui.github.io/blog/post/2024/10/20/stream/</link>
      <pubDate>Sun, 20 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/20/stream/</guid>
      <description>&lt;p&gt;live配信するには様々な方法があり、色々と検討していますが、やはりobsを使うのが一番いいという結論になりました。今回は配信環境を構築する方法を紹介します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/obsproject/obs-studio&#34;&gt;https://github.com/obsproject/obs-studio&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ue5を使うのはリスクが大きく拡張性がない&#34;&gt;ue5を使うのはリスクが大きく拡張性がない&lt;/h2&gt;&#xA;&lt;p&gt;pixel streamingを使った配信を考えました。操作機能を無効にして配信する方法です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これには問題が多かった。&lt;/p&gt;&#xA;&lt;p&gt;例えば、すべての機能をueで実装する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;一応実装してみましたが大変な上に不便が多かった。例えば、ゲームがクラッシュすると音声などが途切れますよね。&lt;/p&gt;&#xA;&lt;p&gt;ue5だけで完結することだけが魅力ですが、拡張性がありませんし、リスクが大きいのです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;restreamerを使う&#34;&gt;restreamerを使う&lt;/h2&gt;&#xA;&lt;p&gt;次に検討したのは&lt;code&gt;restreamer&lt;/code&gt;を使う方法です。これは配信serverのようなもので、簡易ですがpageもカスタマイズできます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/datarhei/restreamer&#34;&gt;https://github.com/datarhei/restreamer&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:compose.yaml&#34; data-lang=&#34;yml:compose.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;restreamer&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;datarhei/restreamer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#image: datarhei/restreamer:cuda-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;1935&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1935&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;/udp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./data/config:/core/config&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./data/data:/core/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;8080&lt;/code&gt;がweb, &lt;code&gt;1935&lt;/code&gt;がrtmp, &lt;code&gt;6000&lt;/code&gt;がsrtです。rtmpとsrtではsrtのほうが高品質で遅延が少なくなると思います。使わないものはportを閉じてもokです。基本的にはバッティングなどもありますから以下のようにlocahostのportを変えて使うのがいいですね。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:compose.yaml&#34; data-lang=&#34;yml:compose.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;restreamer&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;8980&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;1835&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1935&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;6700&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;/udp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使い方は簡単で最初にwebにアクセスしてadminを作ります。設定を行い、domain(ip)を&lt;code&gt;127.0.0.1&lt;/code&gt;にします。ここではsrt protocolを使います。obsで配信をカスタムにしてrestreamerで発行されたurlを使用すればokです。&lt;/p&gt;&#xA;&lt;p&gt;なお、同じserverでない場合はobsに設定するurlはipv4に変換します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- srt://127.0.0.1:6700&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+ srt://192.168.1.99:6700&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;systemから&lt;code&gt;expert mode&lt;/code&gt;を選択しましょう。&lt;/p&gt;&#xA;&lt;p&gt;現時点で録画機能はありません。つまり、配信終了時にffmpegでconvertしてdocker volumeに保存し、再視聴が可能になる機能があると嬉しいですね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/datarhei/restreamer/issues/692&#34;&gt;https://github.com/datarhei/restreamer/issues/692&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;mediacmsに保存する&#34;&gt;mediacmsに保存する&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mediacms-io/mediacms&#34;&gt;https://github.com/mediacms-io/mediacms&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;mediacms&lt;/code&gt;を使用することで録画をuploadすることは可能です。obsで配信、録画を行い、終了時にmediacmsにuploadする方法です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、別のpageに移動しなければなりませんし、管理システムが異なるので良い方法とは言えません。&lt;/p&gt;&#xA;&lt;p&gt;一番いいのは&lt;code&gt;youtube&lt;/code&gt;を利用することですが、すべて自前で構築する場合は&lt;code&gt;restreamer&lt;/code&gt; + &lt;code&gt;mediacms&lt;/code&gt;が良さそう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>wasmでwasmer-shを動かしてみる</title>
      <link>https://syui.github.io/blog/post/2024/10/12/wasmer/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/12/wasmer/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.wasmer.io/install&#34;&gt;https://docs.wasmer.io/install&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wasmer run wasmer/wasmer-sh -- --port &lt;span style=&#34;color:#ae81ff&#34;&gt;4480&lt;/span&gt; --host 127.0.0.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wasmer login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wasmer deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wasmer/wasmer-sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# custom domain&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;https://docs.wasmer.io/edge/configuration/custom-domains&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://wterm-syui.wasmer.app/&#34;&gt;https://wterm-syui.wasmer.app/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://wterm-syui.wasmer.app/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wasmer run clang/clang example.c -o example.wasm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./example.wasm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ue5.5と最新のvmc事情</title>
      <link>https://syui.github.io/blog/post/2024/10/02/vrm4u/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/02/vrm4u/</guid>
      <description>&lt;p&gt;unreal engine 5.5.0 preview(ue5.5p)がインストールできるようになっています。今回は最新環境のvmc事情を解説します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;vmcとは&#34;&gt;vmcとは&lt;/h2&gt;&#xA;&lt;p&gt;webカメラから表情や動きをキャラクターに反映させるためのものです。vmcはprotocolとclientがあります。大抵はprotocolを指します。webカメラからの読み取りをcaptureといいます。つまり、captureとprotocolとclientを組みわせて動作します。ueで使うには更にvmcを受信してキャラクターに反映させるpluginが必要です。わけがわからないと思いますが、そんな感じです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/sh-akira/VirtualMotionCapture&#34;&gt;https://github.com/sh-akira/VirtualMotionCapture&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34;&gt;https://github.com/ruyo/VRM4U&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/HAL9HARUKU/VMC4UE&#34;&gt;https://github.com/HAL9HARUKU/VMC4UE&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/HAL9HARUKU/ueOSC&#34;&gt;https://github.com/HAL9HARUKU/ueOSC&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/HAL9HARUKU/VRMMapExporter&#34;&gt;https://github.com/HAL9HARUKU/VRMMapExporter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34;&gt;https://github.com/vrm-c/UniVRM&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;vmc4ueをue55でbuildしてみよう&#34;&gt;vmc4ueをue5.5でbuildしてみよう&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;この手順は興味がある人以外は読み飛ばすことを推奨します。表情を動かしたい人はこの方法で問題を解決することができません。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;vmc4ue&lt;/code&gt;はue5.1までしかbuildされていません。そこでue5.5でbuildして使えるようにしてみます。&lt;/p&gt;&#xA;&lt;p&gt;まずc++でprojectを作成し、patchをsrcに当てて&lt;code&gt;$project/Plugins/&lt;/code&gt;に入れます。projectをueで開くとbuildされます。正常に終了するとeditorが開きます。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;c++で作成したprojectには$project.slnが作成されますので、それを開いてrebuildしてもいいです。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;なお、patchはbuildが通るよう適当に作ったものです。vmcは動きますが、表情は動きませんでした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp:VMC4UEBlueprintFunctionLibrary.cpp.patch&#34; data-lang=&#34;cpp:VMC4UEBlueprintFunctionLibrary.cpp.patch&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--- ./VMC4UE/VMC4UE/Source/VMC4UE/Source/VMC4UEBlueprintFunctionLibrary.cpp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ ./VMC4UEBlueprintFunctionLibrary.cpp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -119,27 +119,29 @@ UVMC4UEStreamingSkeletalMeshTransform* UVMC4UEBlueprin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9;&#x9;return nullptr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;UVMC4UEStreamingSkeletalMeshTransform* StreamingSkeletalMeshTransform = nullptr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;// Try to get existing transform&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;// Get&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt; &#x9;&#x9;FRWScopeLock RWScopeLock(OSCManager-&amp;gt;RWLock, FRWScopeLockType::SLT_ReadOnly);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;auto StreamingSkeletalMeshTransform = OSCManager-&amp;gt;StreamingSkeletalMeshTransformMap.Find(Port);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;if (StreamingSkeletalMeshTransform != nullptr)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;auto FoundTransform = OSCManager-&amp;gt;StreamingSkeletalMeshTransformMap.Find(Port);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;if (FoundTransform != nullptr)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;&#x9;return *StreamingSkeletalMeshTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;&#x9;return *FoundTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;// Create new transform if not found&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;// Create&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt; &#x9;&#x9;FRWScopeLock RWScopeLock(OSCManager-&amp;gt;RWLock, FRWScopeLockType::SLT_Write);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;auto StreamingSkeletalMeshTransform = OSCManager-&amp;gt;StreamingSkeletalMeshTransformMap.Find(Port);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;if (StreamingSkeletalMeshTransform != nullptr)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;auto FoundTransform = OSCManager-&amp;gt;StreamingSkeletalMeshTransformMap.Find(Port);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;if (FoundTransform != nullptr)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;&#x9;return *StreamingSkeletalMeshTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;&#x9;return *FoundTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;UVMC4UEStreamingSkeletalMeshTransform* NewStreamingSkeletalMeshTransform = NewObject&amp;lt;UVMC4UEStreamingSkeletalMeshTransform&amp;gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;//FRWScopeLock RWScopeLock2(NewStreamingSkeletalMeshTransform-&amp;gt;RWLock, FRWScopeLockType::SLT_Write);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;UVMC4UEStreamingSkeletalMeshTransform* NewStreamingSkeletalMeshTransform = NewObject&amp;lt;UVMC4UEStreamingSkeletalMeshTransform&amp;gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;&#x9;OSCManager-&amp;gt;StreamingSkeletalMeshTransformMap.Emplace(Port, NewStreamingSkeletalMeshTransform);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9;&#x9;// Bind Port&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -149,9 +151,10 @@ UVMC4UEStreamingSkeletalMeshTransform* UVMC4UEBlueprin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9;&#x9;OSCManager-&amp;gt;OscReceivers.Emplace(OscReceiver);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;&#x9;return NewStreamingSkeletalMeshTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;&#x9;StreamingSkeletalMeshTransform = NewStreamingSkeletalMeshTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&#x9;return nullptr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#x9;return StreamingSkeletalMeshTransform;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; void UVMC4UEBlueprintFunctionLibrary::RefreshConnection(float Seconds)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp:VMC4UEBoneMappingAssetFactory.cpp.patch&#34; data-lang=&#34;cpp:VMC4UEBoneMappingAssetFactory.cpp.patch&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--- ./VMC4UE/Source/VMC4UEEd/Source/VMC4UEBoneMappingAssetFactory.cpp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ ./VMC4UEBoneMappingAssetFactory.cpp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -5,6 +5,8 @@&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; #include &amp;#34;../../VMC4UE/Include/VMC4UEStreamingData.h&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; #include &amp;#34;Dom/JsonObject.h&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; #include &amp;#34;JsonObjectConverter.h&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+#include &amp;#34;UObject/ConstructorHelpers.h&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+#include &amp;#34;UObject/UObjectGlobals.h&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; UVMC4UEBoneMappingAssetFactory::UVMC4UEBoneMappingAssetFactory(const FObjectInitializer &amp;amp;ObjectInitializer)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     : Super(ObjectInitializer)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -26,11 +28,12 @@&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     return UVMC4UEVRMMapping::StaticClass();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt; UObject *UVMC4UEBoneMappingAssetFactory::FactoryCreateText(UClass *InClass, UObject *InParent, FName InName, EObjectFlags Flags, UObject *Context, const TCHAR *Type, const TCHAR *&amp;amp;Buffer, const TCHAR *BuferEnd, FFeedbackContext *Warn)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     FString TextData = FString(Buffer);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-    UVMC4UEVRMMapping *NewAsset = CastChecked&amp;lt;UVMC4UEVRMMapping&amp;gt;(StaticConstructObject_Internal(InClass, InParent, InName, Flags));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+    UVMC4UEVRMMapping* NewAsset = NewObject&amp;lt;UVMC4UEVRMMapping&amp;gt;(InParent, InClass, InName, Flags);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;     if (!IsValid(NewAsset))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         return nullptr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/HAL9HARUKU/VMC4UE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ patch -u ./VMC4UE/VMC4UE/Source/VMC4UE/Source/VMC4UEBlueprintFunctionLibrary.cpp &amp;lt; VMC4UEBlueprintFunctionLibrary.cpp.patch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ patch -u ./VMC4UE/VMC4UE/Source/VMC4UEEd/Source/VMC4UEBoneMappingAssetFactory.cpp &amp;lt; VMC4UEBoneMappingAssetFactory.cpp.patch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;vrm4uを55向けにbuildしてみる&#34;&gt;vrm4uを5.5向けにbuildしてみる&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;この手順は興味がある人以外は読み飛ばすことを推奨します。表情を動かしたい人はこの方法で問題を解決することができません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3Dホログラムを作った</title>
      <link>https://syui.github.io/blog/post/2024/10/01/holo/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/10/01/holo/</guid>
      <description>&lt;p&gt;この前、ホログラムを作ってみようと思い10分くらいで作ってみた。必要なものは透明板だけ。それを斜めに設置してスマホで黒背景の3Dモデルを表示する。&lt;/p&gt;&#xA;&lt;p&gt;もともと写真立てが余っててそれに付いてる透明板を使った。&lt;/p&gt;&#xA;&lt;p&gt;設置にはスマホの箱が便利だった。どちらかに切り込みを入れればいいと思う。&lt;/p&gt;&#xA;&lt;p&gt;ここまではっきり映るとは思ってなくて驚いた。余ってるスマホを何に使おうと思ってたので、こういうのを表示させておくといいかも。ただし、表記は反転させないといけないみたい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video  loop autoplay muted controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/img/holo.mov&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;react--tsx--three-vrm&#34;&gt;react + tsx + three-vrm&lt;/h2&gt;&#xA;&lt;p&gt;一応、最小限のコードを載せておきます。反転は対応しています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;holoai&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^3.1.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm-animation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^3.1.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@react-three/drei&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^9.114.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@react-three/fiber&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^8.17.9&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@react-three/postprocessing&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.16.3&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@testing-library/jest-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.17.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@testing-library/react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^13.4.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@testing-library/user-event&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^13.5.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/jest&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^27.5.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/node&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^16.18.112&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.10&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/react-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/three&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.167.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react-scripts&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5.0.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.167.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;three-stdlib&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.30.5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;typescript&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^4.9.5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;web-vitals&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.1.4&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts start&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts test&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eject&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts eject&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslintConfig&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;extends&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-app&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-app/jest&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;browserslist&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;0.2%&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not dead&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not op_mini all&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 1 chrome version&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 1 firefox version&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 1 safari version&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css:src/index.css&#34; data-lang=&#34;css:src/index.css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;transform&lt;/span&gt;:scale(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;position&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;absolute&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;z-index&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#e9ff00&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;center&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/pages/time.tsx&#34; data-lang=&#34;ts:src/pages/time.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//function reverseString(str: string): string {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//  return str.split(&amp;#39;&amp;#39;).reverse().join(&amp;#39;&amp;#39;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ScreenTimeCanvas&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;React.FC&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;currentDateTime&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setCurrentDateTime&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;string&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;//const [reversedDateTime, setReversedDateTime] = useState&amp;lt;string&amp;gt;(&amp;#39;&amp;#39;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDateTime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;formatted&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toLocaleString&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ja-JP&amp;#34;&lt;/span&gt;, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;numeric&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;month&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2-digit&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2-digit&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2-digit&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;minute&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2-digit&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;second&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2-digit&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;setCurrentDateTime&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;formatted&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;//setReversedDateTime(reverseString(formatted));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDateTime&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setInterval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;updateDateTime&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clearInterval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, []);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;currentDateTime&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ScreenTimeCanvas&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/pages/vrm.tsx&#34; data-lang=&#34;ts:src/pages/vrm.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;useRef&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;OrbitControls&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@react-three/drei&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;useFrame&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Canvas&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@react-three/fiber&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three/examples/jsm/loaders/GLTFLoader&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VRM&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@pixiv/three-vrm&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimationLoaderPlugin&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimation&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;createVRMAnimationClip&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@pixiv/three-vrm-animation&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ModelProps&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModel&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;React.FC&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ModelProps&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ({ &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt; }) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setVrm&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VRM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;null&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useRef&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;THREE.AnimationMixer&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;null&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimationLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRM&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;removeUnnecessaryJoints&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;setVrm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mixer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;AnimationMixer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mixer&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;animGltf&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animGltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimation&lt;/span&gt;[];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createVRMAnimationClip&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;mixer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clipAction&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;play&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}, [&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;useFrame&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;primitive&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;} &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;} &lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;} &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;}/&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModelCanvas&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;100vh&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;100vw&amp;#39;&lt;/span&gt; }}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Canvas&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;shadows&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;gl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//toneMapping: THREE.ACESFilmicToneMapping,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//toneMapping: THREE.ReinhardToneMapping,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;toneMapping&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;THREE.NeutralToneMapping&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;toneMappingExposure&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;alpha&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;powerPreference&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;high-performance&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;antialias&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//stencil: false,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//depth: false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] }}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;color&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;attach&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;background&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#000&amp;#34;&lt;/span&gt;]} /&amp;gt; {&lt;span style=&#34;color:#75715e&#34;&gt;/* Light gray background */&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;OrbitControls&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ambientLight&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;intensity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;pointLight&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VRMModel&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./models/t.vrm&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./models/default.vrma&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]} &lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]} &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Canvas&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModelCanvas&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/App.tsx&#34; data-lang=&#34;ts:src/App.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModelCanvas&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./pages/vrm&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ScreenTimeCanvas&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./pages/time&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VRMModelCanvas&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ScreenTimeCanvas&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>windows terminalでsixelを使う</title>
      <link>https://syui.github.io/blog/post/2024/09/02/ws-sixel/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/09/02/ws-sixel/</guid>
      <description>&lt;p&gt;現時点ではwindows terminalの&lt;code&gt;preview 1.22&lt;/code&gt;で使用できるようになりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/releases&#34;&gt;https://github.com/microsoft/terminal/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/windows_terminal_sixel.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最も手っ取り早くlibsixelをbuildする方法はmsys2を使うことです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ scoop install msys2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ここでmsys2を起動&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ msys2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S git make gcc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/saitoha/libsixel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd libsixel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./configure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls ./converters/img2sixel.exe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ which img2sixel.exe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 画像を表示&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ img2sixel.exe syui.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ref : &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-terminal-preview-1-22-release/&#34;&gt;https://devblogs.microsoft.com/commandline/windows-terminal-preview-1-22-release/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>obs&#43;discord&#43;beatriceを使う</title>
      <link>https://syui.github.io/blog/post/2024/09/01/voice/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/09/01/voice/</guid>
      <description>&lt;p&gt;obsは配信のためのアプリですが、windowsで使えるマイクがないので、iphoneかmacを使って音声変換してdiscordから取ってみた。このやり方がすごく良かった。あと後述する&lt;a href=&#34;https://chihaya369.booth.pm/&#34;&gt;ちやは神社&lt;/a&gt;が配布しているrvc modelがすごかった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/w-okada/voice-changer&#34;&gt;https://github.com/w-okada/voice-changer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://huggingface.co/wok000/vcclient000/tree/main&#34;&gt;https://huggingface.co/wok000/vcclient000/tree/main&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./start_http.command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://booth.pm/ja/items/4701666&#34;&gt;https://booth.pm/ja/items/4701666&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;まずマイクに近づかないと音を取れないのがきつい。なので離れていても音を取るのがいい。最初はiphone(discord)からwindowsに繋いだらかなり離れててもしっかりと音を取れてよかった。&lt;/p&gt;&#xA;&lt;p&gt;ただ、音声変換があまりうまくいかなくて、obsのVST Pluginだったかを使うのは厳しいと感じた。なので、方向を変えてmac(discord)から接続することにした。&lt;/p&gt;&#xA;&lt;p&gt;macのgaragebandによる音声変換も使えるけど、beatriceがいいらしいのでw-okada/voice-changerから使うことにした。&lt;/p&gt;&#xA;&lt;h2 id=&#34;webcam-motion-capture&#34;&gt;webcam motion capture&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://webcammotioncapture.info/ja/&#34;&gt;https://webcammotioncapture.info/ja/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;まずvrm4u(vmc)ではwebcam motion captureが動きません。ue5.4.4のvrm4u(202408)の環境ですが動かない。しかし、一旦、vseefaceなどを挟むと使用できます。ただし、&lt;code&gt;webcam motion capture&lt;/code&gt;と&lt;code&gt;w-okada/voice-changer&lt;/code&gt;を同時に使用するとアプリが落ちます。時間経過でwebcamのcaptureが動かなくなります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;discordを使う理由&#34;&gt;discordを使う理由&lt;/h2&gt;&#xA;&lt;p&gt;discordからでないと音量が大きくなりません。小さい声でもちゃんと拾って変換してくれるやり方として、discordを使うとうまくいきました。ただし、高価なマイクがある場合はそちらの方が良いでしょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配信環境&#34;&gt;配信環境&lt;/h2&gt;&#xA;&lt;p&gt;[mac]&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;VB-Cableで仮想オーディオデバイス(output)を起動&lt;/li&gt;&#xA;&lt;li&gt;discordのinputに指定&lt;/li&gt;&#xA;&lt;li&gt;w-okada/voice-changerを起動してoutputにいれる&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;[windows]&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;discordでボイスチャットに入る(別アカウント)、ここで音声が聴こえるはず&lt;/li&gt;&#xA;&lt;li&gt;obsでdiscordの音声キャプチャ&lt;/li&gt;&#xA;&lt;li&gt;webcam motion capture -&amp;gt; vseefaceでカメラからvrmを動かせるようにする&lt;/li&gt;&#xA;&lt;li&gt;ue5を起動して、obsでウィンドウキャプチャ。youtubeアカウントに接続し、配信管理から予約、開始する。開始したあとは準備できるまで音声キャプチャをミュート。ゲームを調整できれば開始してミュートを切る&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;配信中にやること。操作がちょっと大変です。カメラ操作や移動操作など。&lt;/p&gt;&#xA;&lt;p&gt;また、英語音声に変換しながら配信する予定。自動音声変換は精度が悪かったので文字列にしました。文字を打ち込むかあらかじめ用意しておいた文字を変換します。これをmacで流すとdiscordを通じてかなりはっきり英語を喋ってくれます。たまってきたら音声ファイルをpecoとかfzfで検索できるようにしておくと良さそう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:voice.zsh&#34; data-lang=&#34;sh:voice.zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/zsh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0:a:h&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$d/voice.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vdir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$d/voice_dir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cfg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~/.config/ai/voice.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -d $vdir &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;mkdir -p $vdir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $f|jq length&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;ep &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;j&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $f|jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$ep&lt;span style=&#34;color:#e6db74&#34;&gt;].body&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $j|jq length&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fnction voice_chat&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#echo chat : https://openai.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#echo voice : https://elevenlabs.io&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;vfile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$vdir/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ep&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.mp3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f $vfile &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;mpv $vfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;echo voice ok&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;read&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $j|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo $t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo ---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;read chat_text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$chat_text&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$t&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;chat_text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo $chat_text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo ---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;chat_api&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $cfg|jq -r .chat_api&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;voice_text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -sL https://api.openai.com/v1/chat/completions -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$chat_api&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{ \&amp;#34;model\&amp;#34;: \&amp;#34;gpt-4o-mini\&amp;#34;, \&amp;#34;messages\&amp;#34;: [{\&amp;#34;role\&amp;#34;: \&amp;#34;user\&amp;#34;, \&amp;#34;content\&amp;#34;: \&amp;#34;次の文章を英語に訳して\n\n&lt;/span&gt;$chat_text&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}], \&amp;#34;temperature\&amp;#34;: 0.7 }&amp;#34;&lt;/span&gt;|jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.choices.[].message.content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo $voice_text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# like-model&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;voice_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;zrHiDhphv9ZnVXBqCLjz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# alice-model&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;voice_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Xb7hH8MSUJpSbSDYk0k2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;voice_api&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $cfg|jq -r .voice_api&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;curl -sL --request POST &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;--url https://api.elevenlabs.io/v1/text-to-speech/$voice_id &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xi-api-key: &lt;/span&gt;$voice_api&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;--data &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;&#x9;\&amp;#34;text\&amp;#34;: &lt;/span&gt;$voice_text&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;&#x9;\&amp;#34;model_id\&amp;#34;: \&amp;#34;eleven_multilingual_v2\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;&#x9;\&amp;#34;voice_settings\&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;&#x9;\&amp;#34;stability\&amp;#34;: 0.5,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;&#x9;\&amp;#34;similarity_boost\&amp;#34;: 0.5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;}&amp;#34;&lt;/span&gt; --output $vfile &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mpv $vfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0;i&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$n;i++&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;voice_chat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:voice.json&#34; data-lang=&#34;sh:voice.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt; :[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;こんにちは、みんな&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;配信を見てくれてありがとう。またね。&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;なぜue5editorで起動するのか&#34;&gt;なぜue5(editor)で起動するのか?&lt;/h3&gt;&#xA;&lt;p&gt;editorは相当重いので本来はbuildしたpackageで実行する方が良いです。しかし、buildするとvrm4u(vmc)の表情が動かなくなります。またstandaloneはもっと重くなりますので選択しません。PIEでwindowを作りません。windowを作ると新しい問題が発生しますし、動作も重くなります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>theatre.jsを使ってみる</title>
      <link>https://syui.github.io/blog/post/2024/08/28/three/</link>
      <pubDate>Wed, 28 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/28/three/</guid>
      <description>&lt;p&gt;three.jsをGUIで調整するためのlibです。reactのexampleがあるのでreactで書きます。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、最近は色々なprojectがreactばかりになってきたのでreactを使っています。ただ、vueのほうがわかりやすいのでvueをおすすめしておきます。jsに近いほどよいですね。最初はjs+html+cssが一番ですけど。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvm use &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://www.theatrejs.com/docs/latest/getting-started/with-react-three-fiber&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npx create-react-app theatre --template typescript&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm install --save react three @react-three/fiber @theatre/core @theatre/studio @theatre/r3f&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm install --save-dev @types/three&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vite-react-typescript-starter&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vite&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tsc -b &amp;amp;&amp;amp; vite build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;lint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eslint .&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;preview&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vite preview&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@theatre/core&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.6.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@theatre/r3f&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.7.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@theatre/studio&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.6.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@eslint/js&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^9.9.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.4&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/react-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@vitejs/plugin-react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^4.3.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^9.9.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslint-plugin-react-hooks&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.1.0-rc.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslint-plugin-react-refresh&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.4.11&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;globals&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^15.9.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;typescript&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.5.3&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;typescript-eslint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^8.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vite&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.4.2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/main.tsx&#34; data-lang=&#34;ts:src/main.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./index.css&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;createRoot&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react-dom/client&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;Canvas&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@react-three/fiber&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;studio&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@theatre/studio&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@theatre/r3f/dist/extension&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;SheetProvider&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;editable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;PerspectiveCamera&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@theatre/r3f&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;getProject&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@theatre/core&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;demoProjectState&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./state.json&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;studio&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;studio&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;extend&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;extension&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//const demoSheet = getProject(&amp;#39;Demo Project&amp;#39;, { state: demoProjectState }).sheet(&amp;#39;Demo Sheet&amp;#39;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;demoSheet&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getProject&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Demo Project&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;sheet&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Demo Sheet&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;demoSheet&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;project&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ready&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;demoSheet&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sequence&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;play&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;iterationCount&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Infinity&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] }))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }, [])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Canvas&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;SheetProvider&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sheet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;demoSheet&lt;/span&gt;}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;PerspectiveCamera&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;theatreKey&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Camera&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;makeDefault&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]} &lt;span style=&#34;color:#a6e22e&#34;&gt;fov&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ambientLight&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;e.pointLight&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;theatreKey&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Light&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;e.mesh&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;theatreKey&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cube&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;boxGeometry&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meshStandardMaterial&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;e.mesh&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;SheetProvider&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Canvas&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createRoot&lt;/span&gt;(document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;App&lt;/span&gt; /&amp;gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/AndrewPrifer/CodropsCameraFlyThroughTutorial/&#34;&gt;https://github.com/AndrewPrifer/CodropsCameraFlyThroughTutorial/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>gpt-4o-miniに乗り換え</title>
      <link>https://syui.github.io/blog/post/2024/08/24/ue/</link>
      <pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/24/ue/</guid>
      <description>&lt;p&gt;この前、&lt;a href=&#34;https://elevenlabs.io/&#34;&gt;elevenlabs&lt;/a&gt;を使って、ゲーム内で音声で聞くと音声で返してくれるようにした。&lt;/p&gt;&#xA;&lt;p&gt;その時、&lt;code&gt;gpt-3.5-turbo&lt;/code&gt;より&lt;code&gt;gpt-4o-mini&lt;/code&gt;のほうが安いことに気づいたので乗り換えた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://openai.com/index/gpt-4o-mini-advancing-cost-efficient-intelligence/&#34;&gt;https://openai.com/index/gpt-4o-mini-advancing-cost-efficient-intelligence/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ただ、elevenlabsは、かわいい声が少なかったのと、日本語の発音がちょっと微妙なことがあるので、これよりおすすめのものはないかなと思ってる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vtuberのfuwamocoを見始めた</title>
      <link>https://syui.github.io/blog/post/2024/08/15/vtuber/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/15/vtuber/</guid>
      <description>&lt;p&gt;数日前からvtuberを見はじめて、最初はさくらみこを見て「へえこんな人がいるのか面白い」と思って、次に古石ビジューを見て、そこからふわもこ(fuwamoco)を見てる。&lt;/p&gt;&#xA;&lt;p&gt;今回はそこで考えた色々なことを話していきたい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;fuwamocoのすごさ&#34;&gt;fuwamocoのすごさ&lt;/h3&gt;&#xA;&lt;p&gt;私はfuwawaが特に気に入ってて、好き。fuwawaが怒ってるところは見たことないし、想像つかないところがいい。&lt;/p&gt;&#xA;&lt;p&gt;なんだけど、今回は主に技術的な側面からfuwamocoを考察します。&lt;/p&gt;&#xA;&lt;p&gt;fuwamocoを見てて思ったのは、この子達はプロだなってこと。あらゆる面でそのことを読み取れます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、彼女たちの口癖であるbaubauです。繰り返されることで定着して、今やbaubauって聞くと「あ、fuwamocoだ」ってわかる。&lt;/p&gt;&#xA;&lt;p&gt;彼女たちはおそらくいくつかの決め事があり、それを実行していると思う。しかも日々配信がどうすれば面白くなるか考えてupdateしていく姿勢もある。&lt;/p&gt;&#xA;&lt;p&gt;この両方を持ち合わせることは難しい。例えば、jpは精神論や昔ながらのやり方を重要視する傾向にあるように感じたのに対し、enのfuwamocoは決まりを大切にしながらも、updateを大切にしているように感じた。とはいえ精神論が重要じゃないわけじゃない。最後まで立ってるやつが勝ちみたいな考えは好き。&lt;/p&gt;&#xA;&lt;p&gt;また、fuwamocoが特徴的なのが二人組みであること。&lt;/p&gt;&#xA;&lt;p&gt;私は最初はソロでやっている人を見てるんだけど、最終的には二人組でやっている人を見るようになる。&lt;/p&gt;&#xA;&lt;p&gt;なぜかというと、多分、飽きるからだと思う。二人組の場合、やり取りの幅は広い。&lt;/p&gt;&#xA;&lt;p&gt;そして、vtuberを見ていて最も楽しいと感じるのがadventでやっているとき。adventというのはfuwamocoの同期の人達が集まってわちゃわちゃやってることがあって、それが一番おもしろいと思う。&lt;/p&gt;&#xA;&lt;p&gt;2番目がfuwamocoで3番目がソロのメンバーという感じ。&lt;/p&gt;&#xA;&lt;p&gt;やっぱり二人組が強いと思う。お笑いも最終的には二人組に行き着く事が多い。&lt;/p&gt;&#xA;&lt;p&gt;次にすごいのはfuwamocoがオタクであるということ。そして、ただのオタクじゃないことはわかる。&lt;/p&gt;&#xA;&lt;p&gt;その他にもネーミングの凄さやfuwamoco morning、冒頭の「ふわわじゃないよ、もここだよ」、オープニングのセンスの良さ、鳥のマスコットなどなどすごいところはたくさんあるけど、一番はやっぱり視聴者が嫌な気分になることがないってところ。見ていて楽しいところ。&lt;/p&gt;&#xA;&lt;p&gt;配信ってどうしても我が出てしまって、それはいいことでもあるんだけど、悪いことでもあると思う。&lt;/p&gt;&#xA;&lt;p&gt;特に悪いのは個人的資質(性格の悪さ)による我が出ること。そのへんは内面がいい人を選ぶしかない。&lt;/p&gt;&#xA;&lt;p&gt;vtuberに内面なんてあるのと思われるかもしれないけど、毎日配信だから個人的な性質は隠しきれない。&lt;/p&gt;&#xA;&lt;p&gt;だからそういうのは必ず出ると思ったほうがいい。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、fuwamocoは個人的資質が良いこと(性格が良いこと)と、いくつかの決め事でプロに徹すること。この2点がすごいと思った。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、みこちゃんもbibooも好きだしかわいい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;vtuberをおすすめしない&#34;&gt;vtuberをおすすめしない&lt;/h3&gt;&#xA;&lt;p&gt;こういうのを見て、やってみたいなあって思う。でもそういうのはおすすめしない。&lt;/p&gt;&#xA;&lt;p&gt;理由としては、何かが流行っているとき、先行者利益はすでに失われている。&lt;/p&gt;&#xA;&lt;p&gt;vtuberになるには、vtuberがまだ知られていないし、誰もやっていない、流行ってもいない。そういうとき勇気を出してやるのが一番いい。&lt;/p&gt;&#xA;&lt;p&gt;逆に言うと、そこで勇気を出し努力をしてきた人たちが最もvtuberで活躍すると思う。それ以外は厳しいと思う。&lt;/p&gt;&#xA;&lt;p&gt;「誰でもvtuberになれます」、「今、vtuberが大流行」みたいな状況でそういうのに参入するのはおすすめしない。&lt;/p&gt;&#xA;&lt;p&gt;個人的には誰もやってないこと、かつ自分が好きで続けられて得意なことをやるのが良いように思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;vtuberの技術が気になったのでやってみた&#34;&gt;vtuberの技術が気になったのでやってみた&lt;/h3&gt;&#xA;&lt;p&gt;実はvtuberにハマってから数日、自分ならどういった形で実現できそうかやってみました。&lt;/p&gt;&#xA;&lt;p&gt;途中でモーションキャプチャに切り替えて動かしてます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-08-15_01.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;vみたいなことやるならアイのモデルを貸してもらうしかないな。名前はyoutubeで@syuiが取れなかったので@syaiなんだけどこれになる。シャイ?かな。んでその際はアイじゃなく自分(シャイ)であることを説明しないと。作者とキャラって全く関係ない別人だから。&lt;/p&gt;&#xA;&lt;p&gt;ただ、やるにしてもvtuberでは厳しいと思う。何かを新しいものを組み合わせないとダメそう。&lt;/p&gt;&#xA;&lt;p&gt;みんなを楽しませるもので、かつ気軽に楽しめるもので、今までにないもの。&lt;/p&gt;&#xA;&lt;p&gt;どういった形で実現できそうかな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゲーム動画の注釈&#34;&gt;ゲーム動画の注釈&lt;/h3&gt;&#xA;&lt;p&gt;今回実装したもの&lt;/p&gt;&#xA;&lt;h4 id=&#34;roomhome&#34;&gt;room(home)&lt;/h4&gt;&#xA;&lt;p&gt;vではみんな背景にroomを表示しているので作ることにした。&lt;/p&gt;&#xA;&lt;p&gt;twinmotion+collisionで実装してる。meshを全選択して、右クリックで&lt;code&gt;アセットアクション -&amp;gt; プロパティマトリクスで選択内容を... -&amp;gt; collision complexity(use complex collision as simple...)&lt;/code&gt;を選択します。&lt;/p&gt;&#xA;&lt;h4 id=&#34;motion-caps&#34;&gt;motion caps&lt;/h4&gt;&#xA;&lt;p&gt;モーションキャプチャ&lt;/p&gt;&#xA;&lt;p&gt;vrmvmc+abpの切り替えで実装してる。blueprintはこんな感じ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cast to CBP_SandboxCharacter_ai -&amp;gt; target:ai, target:sk_ai -&amp;gt; set anim instance class -&amp;gt; ABP_GenericRetarget_2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;loading-screen&#34;&gt;loading screen&lt;/h4&gt;&#xA;&lt;p&gt;ローディング画面&lt;/p&gt;</description>
    </item>
    <item>
      <title>macのbrowserをsafariにした</title>
      <link>https://syui.github.io/blog/post/2024/08/11/safari/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/11/safari/</guid>
      <description>&lt;p&gt;chromeからsafariに切り替えました。&lt;/p&gt;&#xA;&lt;p&gt;理由としては、以下の4つです。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ios(mobile)で使っているのがsafariなので統一したかった&lt;/li&gt;&#xA;&lt;li&gt;safariだとicloud private relayが使える&lt;/li&gt;&#xA;&lt;li&gt;chromeだとprivate windowでもcacheが効いて開発に支障が出る&lt;/li&gt;&#xA;&lt;li&gt;chromeがadblockなどを排除予定&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;chromeだと最新のpreviewができない&#34;&gt;chromeだと最新のpreviewができない&lt;/h3&gt;&#xA;&lt;p&gt;主にweb開発ですがchromeだと最新のsrc previewが反映されません。cookieかcacheかわかりませんが、それが残っているのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;safariだとprivate windowは普通に機能します。localhostでpreviewするときも支障がありません。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、chromeのprivate windowは完全にprivateではありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;google翻訳やgoogle検索を使わなくなった&#34;&gt;google翻訳やgoogle検索を使わなくなった&lt;/h3&gt;&#xA;&lt;p&gt;これまでchromeを使っていた理由は&lt;code&gt;google翻訳&lt;/code&gt;があるからです。&lt;/p&gt;&#xA;&lt;p&gt;私はbrowserをあまりカスタマイズせず、拡張機能も入れず、ほとんどの初期機能を無効にし、基本設定のまま使います。ですからchromeについているgoogle翻訳は便利でした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、近年、&lt;code&gt;chatgpt&lt;/code&gt;, &lt;code&gt;perplexity.ai&lt;/code&gt;などのほうがよく使うようになり、逆にgoogle検索やgoogle翻訳をあまり使わないようになっていました。&lt;/p&gt;&#xA;&lt;p&gt;これだとchromeを使うメリットは薄れ、デメリットが目立ちます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;icloud-private-relayが使える&#34;&gt;icloud private relayが使える&lt;/h3&gt;&#xA;&lt;p&gt;ほとんどのアプリはicloud relayが有効になっていますが、browserはsafariくらいしか通しません。&lt;/p&gt;&#xA;&lt;p&gt;もともとスマホはsafariしか使いませんし、パソコンも統一したほうがいいだろうということで、しばらくsafariを使ってみることにします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ip.networkとicloud private relay</title>
      <link>https://syui.github.io/blog/post/2024/08/10/ip/</link>
      <pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/10/ip/</guid>
      <description>&lt;p&gt;ip addr(global)を調べるには&lt;code&gt;ip.network&lt;/code&gt;, &lt;code&gt;ipinfo.io&lt;/code&gt;などがあります。試してみましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL ip.network/more&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2a0a:bac2:4515:1e14::2ff:6&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;country&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JP&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;city&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Matsue&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;region&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shimane&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;regionCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;32&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timezone&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asia/Tokyo&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postalCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;690-0801&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;asn&amp;#34;&lt;/span&gt;: 13344,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;asOrganization&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iCloud Private Relay&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;more&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://ip.network&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL ipinfo.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;103.28.83.214&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;city&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tokyo&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;region&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tokyo&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;country&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JP&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loc&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;35.6895,139.6917&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AS13335 Cloudflare, Inc.&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postal&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;101-8656&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timezone&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asia/Tokyo&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;readme&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://ipinfo.io/missingauth&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;どうやらicloud private relayのipv4はcloudflareを使ってるみたいです。&lt;/p&gt;&#xA;&lt;p&gt;最近、icloud private relayが使いやすいのでbrowser(mac)をsafariに置き換えようかなと思っています。もうすぐchromeの広告ブロック排除がくるみたいだし。&lt;/p&gt;</description>
    </item>
    <item>
      <title>archlinuxの初期設定</title>
      <link>https://syui.github.io/blog/post/2024/08/09/arch/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/09/arch/</guid>
      <description>&lt;p&gt;久しぶりにarchを初期設定したのでその時の記録&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cfdisk /dev/sda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfs.vfat /dev/sda1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfs.ext4 /dev/sda2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount /dev/sda2 /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacstrap /mnt base linux grub efibootmgr dhcpcd openssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ arch-chroot /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-install --force /dev/sda1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ systemctl enable dhcpcd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ systemctl enable sshd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ reboot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;sshの設定です。reboot前にやっておいてもいいかもしれませんが、その場合はuseraddして&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;を置きましょう。&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;で&lt;code&gt;PasswordAuthentication no&lt;/code&gt;にしておきます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 接続する側&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh-keygen -f ~/.ssh/archlinux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh-copy-id -i ~/.ssh/archlinux.pub &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;USER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;@192.168.x.x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# archlinux&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/ssh/sshd_config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PasswordAuthentication no&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ systemctl restart sshd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;あとはお好みで設定します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>最近やったue5のこと</title>
      <link>https://syui.github.io/blog/post/2024/08/08/ue/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/08/ue/</guid>
      <description>&lt;h2 id=&#34;package-build後のscreen-sizeなどの設定&#34;&gt;package build後のscreen sizeなどの設定&lt;/h2&gt;&#xA;&lt;p&gt;build後は画面が低画質でひどかったので、そのへんを調整できるようにしました。&lt;/p&gt;&#xA;&lt;p&gt;これは以前購入したassetを使いました。使い道がわからないなあと思っていたものですが、ue5はbuild後にscreen sizeやftpなどの設定を反映してくれません。editorと異なる見た目になり、project settingなどからも設定できません。&lt;/p&gt;&#xA;&lt;p&gt;この事に気づいてassetを使いました。この辺、ueではすごくめんどくさいので買ってよかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-08-07_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;アイの衣装を調整中&#34;&gt;アイの衣装を調整中&lt;/h2&gt;&#xA;&lt;p&gt;よりシンプルに近づけています。肩の装飾と腕輪を外しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-08-07_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;アイの変身やスタミナの再実装&#34;&gt;アイの変身やスタミナの再実装&lt;/h2&gt;&#xA;&lt;p&gt;以前、ue5.3で作っていたものが全部作り直しになった関係で放置していましたが、書き直しました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vrmの表示にreact-three-fiberを使う</title>
      <link>https://syui.github.io/blog/post/2024/08/02/react/</link>
      <pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/02/react/</guid>
      <description>&lt;p&gt;今回は&lt;code&gt;react-three-fiber&lt;/code&gt;と&lt;code&gt;three-vrm-animation&lt;/code&gt;の話になります。&lt;/p&gt;&#xA;&lt;p&gt;react-three-fiberはsceneなどを自動でやってくれて、コードもシンプルになります。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;anim(vrma)を動かす場合は注意が必要で動きますが動きがおかしくなります。これは&lt;code&gt;react-three-fiber&lt;/code&gt;で書く場合に発生します。個人環境では&lt;code&gt;unity + vrm 1.0&lt;/code&gt;でexportしたものを使うと正常に動きました。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npx create-react-app vrm-model --template typescript&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/pages/vrm-model.tsx&#34; data-lang=&#34;ts:src/pages/vrm-model.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;useRef&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;OrbitControls&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@react-three/drei&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;useFrame&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Canvas&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@react-three/fiber&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three/examples/jsm/loaders/GLTFLoader&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VRM&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@pixiv/three-vrm&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimationLoaderPlugin&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimation&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;createVRMAnimationClip&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@pixiv/three-vrm-animation&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ModelProps&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModel&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;React.FC&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ModelProps&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ({ &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt; }) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setVrm&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VRM&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;null&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useRef&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;THREE.AnimationMixer&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;null&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;useEffect&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimationLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRM&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;removeUnnecessaryJoints&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;setVrm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mixer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;AnimationMixer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mixer&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;animGltf&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animGltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimation&lt;/span&gt;[];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createVRMAnimationClip&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmModel&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;mixer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clipAction&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;play&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}, [&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;useFrame&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;mixerRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;primitive&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;} /&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModelCanvas&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;100vh&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;100vw&amp;#39;&lt;/span&gt; }}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Canvas&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;shadows&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;gl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//toneMapping: THREE.ACESFilmicToneMapping,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//toneMapping: THREE.ReinhardToneMapping,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;toneMapping&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;THREE.NeutralToneMapping&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;toneMappingExposure&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;1.5&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;alpha&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;powerPreference&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;high-performance&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;antialias&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//stencil: false,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//depth: false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] }}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;directionalLight&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;castShadow&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;intensity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;shadow-mapSize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;]}/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;OrbitControls&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ambientLight&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;intensity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;pointLight&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]} /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VRMModel&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./models/default.vrm&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url_anim&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./models/default.vrma&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Canvas&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModelCanvas&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/App.tsx&#34; data-lang=&#34;ts:src/App.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMModelCanvas&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./pages/vrm_model&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VRMModelCanvas&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vrm-model&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^3.0.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm-animation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^3.0.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@react-three/drei&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^9.109.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@react-three/fiber&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^8.16.8&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@react-three/postprocessing&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.16.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@testing-library/jest-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.17.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@testing-library/react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^13.4.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@testing-library/user-event&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^13.5.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/jest&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^27.5.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/node&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^16.18.104&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.3&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/react-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@types/three&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.167.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react-dom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^18.3.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;react-scripts&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5.0.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.167.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;three-stdlib&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.30.5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;typescript&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^4.9.5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;web-vitals&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.1.4&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts start&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts test&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eject&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts eject&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslintConfig&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;extends&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-app&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-app/jest&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;browserslist&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;0.2%&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not dead&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not op_mini all&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 1 chrome version&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 1 firefox version&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 1 safari version&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:tsconfig.json&#34; data-lang=&#34;json:tsconfig.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;es5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;lib&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dom&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dom.iterable&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;esnext&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;allowJs&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;skipLibCheck&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;esModuleInterop&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;allowSyntheticDefaultImports&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;strict&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;forceConsistentCasingInFileNames&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;noFallthroughCasesInSwitch&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;esnext&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;moduleResolution&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resolveJsonModule&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isolatedModules&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;noEmit&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;jsx&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-jsx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;include&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;issue-blenderでvrmのtextureが剥がれる&#34;&gt;[issue] blenderでvrmのtextureが剥がれる&lt;/h2&gt;&#xA;&lt;p&gt;modelにつけるアクセサリをblenderで統合させ、three-vrmで表示していましたが、textureが剥がされていることに気づきました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>react-threeを使ってglbを表示する</title>
      <link>https://syui.github.io/blog/post/2024/08/01/react/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/08/01/react/</guid>
      <description>&lt;p&gt;今回はreactの&lt;code&gt;tsx&lt;/code&gt;で書きます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npx create-react-app galaxy --template typescript&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで準備はできましたが、設定ファイルを見てみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:tsconfig.json&#34; data-lang=&#34;json:tsconfig.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;es5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;lib&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dom&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dom.iterable&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;esnext&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;allowJs&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;skipLibCheck&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;esModuleInterop&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;allowSyntheticDefaultImports&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;strict&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;forceConsistentCasingInFileNames&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;noFallthroughCasesInSwitch&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;esnext&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;moduleResolution&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resolveJsonModule&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isolatedModules&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;noEmit&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;jsx&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-jsx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;include&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;es5&lt;/code&gt;, &lt;code&gt;react-jsx&lt;/code&gt;を使っているようです。&lt;/p&gt;&#xA;&lt;p&gt;buildなどはwebpackではなく&lt;code&gt;react-scripts&lt;/code&gt;ですね。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts start&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts test&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eject&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;react-scripts eject&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/App.tsx&#34; data-lang=&#34;ts:src/App.tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./App.css&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;ThreeFiberGalaxy&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./pages/galaxy&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App() {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ThreeFiberGalaxy&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今回はこれを改造していきます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5でbrushの動作がbuildと違う</title>
      <link>https://syui.github.io/blog/post/2024/07/29/ue/</link>
      <pubDate>Mon, 29 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/29/ue/</guid>
      <description>&lt;p&gt;今回はコード周りを整理した時の話です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;issue-一つのwidgetで各キャラのiconを設定する&#34;&gt;[issue] 一つのwidgetで各キャラのiconを設定する&lt;/h2&gt;&#xA;&lt;p&gt;objectに&lt;code&gt;cbp_character_${name}&lt;/code&gt;を指定してボタンをクリックするとキャラが切り替えるwidgetを作成していました。&lt;/p&gt;&#xA;&lt;p&gt;以前はiconごとに読み込むファイルを別々に作っていたのですが、その処理を簡略化しました。まずは各キャラのcbpをobjectに指定しているので、名前が異なります。objectからdisplay nameやobject name, object pathを取ってきて、brush(image)を設定するようにしたのですが、これはeditorでは動作しますが、buildで動作しないことがわかりました。&lt;/p&gt;&#xA;&lt;p&gt;理由は不明ですが、object(name)がNoneになります。ボタンを押すと正常に動作するためobjectはそのキャラのものが使われているはずです。これは少し奇妙です。&lt;/p&gt;&#xA;&lt;p&gt;そんなことを言っていても問題は解決しないので別の方法でやることにしました。objectとは別の値を用意して処理します。また、とりあえず&lt;code&gt;インスタンス編集可能&lt;/code&gt;, &lt;code&gt;スポーン時に公開&lt;/code&gt;, &lt;code&gt;シネマティックスに公開&lt;/code&gt;にチェックを入れておくことにしました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;issue-city-sampleでclothが動作しない&#34;&gt;[issue] city sampleでclothが動作しない&lt;/h2&gt;&#xA;&lt;p&gt;他のprojectでは機能するのに&lt;code&gt;cloth simulation&lt;/code&gt;が機能しない場合、project settingの問題です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://forums.unrealengine.com/t/no-cloth-simulation-in-ue5-but-works-in-ue4/619532&#34;&gt;https://forums.unrealengine.com/t/no-cloth-simulation-in-ue5-but-works-in-ue4/619532&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:Config/DefaultEngine.ini&#34; data-lang=&#34;sh:Config/DefaultEngine.ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;[ConsoleVariables]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;- p.ClothPhysics&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+ p.ClothPhysics&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これはなぜclothが動作しないのか、わけがわからなくて困ってる人がいそうです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;issue-bp_playerのキャラを切り替えるときに装備を外す&#34;&gt;[issue] bp_playerのキャラを切り替えるときに装備を外す&lt;/h2&gt;&#xA;&lt;p&gt;これも以前から放置していた問題ですが、アイの衣装を変更したときに他キャラで&lt;code&gt;visibility:false&lt;/code&gt;するのがめんどくさかったので、自動で処理されるようにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;cbp_sandbox_character&lt;/code&gt;をcastしてobjectのdisplay nameでもobject nameでも取ってきて、それが&lt;code&gt;ai&lt;/code&gt;じゃなければ&lt;code&gt;set visibility&lt;/code&gt;します。childrenにチェックを入れておきます。&lt;/p&gt;&#xA;&lt;p&gt;なお、最初は&lt;code&gt;destroy actor child&lt;/code&gt;のようなものを探したのですが、unreal engineにはありませんでした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>アイの新衣装と方向性</title>
      <link>https://syui.github.io/blog/post/2024/07/28/ue/</link>
      <pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/28/ue/</guid>
      <description>&lt;p&gt;今回は、アイの衣装を作り始めた話をします。&lt;/p&gt;&#xA;&lt;p&gt;まずアイの衣装のことを少し解説すると、アイは基本的に真っ白で少しボロがある服を着ていて、それが気に入っています。&lt;/p&gt;&#xA;&lt;p&gt;この衣装を&lt;code&gt;v1.0&lt;/code&gt;としましょう。&lt;/p&gt;&#xA;&lt;p&gt;絵を描く時とか衣装はめんどくさいので、そういう利点があります。&lt;/p&gt;&#xA;&lt;img src=&#34;https://card.syui.ai/card/card_13.webp&#34; style=&#34;width:300px;margin: 0 auto;display :block;padding:20px 0;&#34;&gt;&#xA;&lt;p&gt;しかし、この衣装を3Dやゲームにする場合はどうでしょう。例えば、衣装を書くのがめんどくさいというのは、主に繰り返し描くのがつらいわけで、一度作れば使い回せるなら話は変わってきます。&lt;/p&gt;&#xA;&lt;p&gt;めんどくさいけど、そこまでじゃない&amp;hellip;かもしれない。&lt;/p&gt;&#xA;&lt;p&gt;それにゲームに使われるような衣装を一度作ってみたいと思っていたので、その時に作りました。この衣装を&lt;code&gt;v2.0&lt;/code&gt;とします。&lt;/p&gt;&#xA;&lt;img src=&#34;https://card.syui.ai/card/card_129.webp&#34; style=&#34;width:300px;margin: 0 auto;display :block;padding:20px 0;&#34;&gt;&#xA;&lt;p&gt;この衣装はvroidで作成し、どのよう作ったかと言うと、vroidが公式で提供してくれている衣装があって、その組み合わせで作りました。もちろん、組み合わせればそれでいいかというと、そんなことはなく、独自に調整して作りました。調整はイラストを描くアプリで絵を描く要領で行います。&lt;/p&gt;&#xA;&lt;p&gt;どのような衣装を目指したかというと、これは明確に原神のナヒーダの衣装を参考にしました。&lt;/p&gt;&#xA;&lt;p&gt;正直、衣装といっても私はよくわからない。作ったこともありません。ですから、センスが良いと思った衣装を参考にしました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、v2.0の衣装はthree-vrmの見栄えで調整していました。&lt;/p&gt;&#xA;&lt;p&gt;これをunreal engineに持ってきて使っていたわけですが、正直、厳しかった。&lt;/p&gt;&#xA;&lt;p&gt;vroidで作る衣装というのは基本的に紙なのです。ペラペラの紙をモデルに貼り付ける感じ。厚みも立体感もありません。three-vrmで表示するならいいのですが、ゲームで動かす場合は厳しいと思います。&lt;/p&gt;&#xA;&lt;p&gt;そこで、新しく衣装を作り直す必要がありました。&lt;/p&gt;&#xA;&lt;p&gt;現在作っているのはこの衣装でナンバリングでいうと&lt;code&gt;v3.0&lt;/code&gt;になります。&lt;/p&gt;&#xA;&lt;img src=&#34;https://card.syui.ai/card/card_131.webp&#34; style=&#34;width:300px;margin: 0 auto;display :block;padding:20px 0;&#34;&gt;&#xA;&lt;h2 id=&#34;blenderによる3dモデリングとskabpの組み合わせによる揺れの制御&#34;&gt;blenderによる3DモデリングとSK+ABPの組み合わせによる揺れの制御&lt;/h2&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-28_01.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3Dモデリング&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-28_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SK+ABP&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;SKを右クリックでanim(blueprint)を作ります。そこで&lt;code&gt;kawaii physics&lt;/code&gt;を当てます。settingsは&lt;code&gt;World Damping Location:1.0&lt;/code&gt;, &lt;code&gt;World Damping Rotation:0.3&lt;/code&gt;, &lt;code&gt;Limit Angle:20.0&lt;/code&gt;です。後ろに下がると体に入り込んでしまうのを抑えるため20で設定しています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-28_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回はblenderによる3Dモデリングを行いました。vroidの髪の毛でマントを作ってみましたが、調整が難しく、ipadで描ければいいのですがアプリが落ちるので、しかも、macとwinで出力したものは同じではなく、unreal engineの描写に不具合が出る関係で、髪はmacで描いて、衣装はipadでやって、macで出力したものをwinに送って、unreal engineで動きを確認し、おかしければまたvroidで調整するみたいなことをやっていました。これは今も続いていますが、やろうとする人はとても大変な思いをすると思います。今回はblender, vroid, unreal engine, ipad, mac, winを使って作りました。&lt;/p&gt;&#xA;&lt;p&gt;これをベースに&lt;code&gt;v3.x&lt;/code&gt;などの改良を重ねていくことになると思います。デザイン的な変更はあるかもしれません。今までのバージョンは主にデザインではなく作り方によって決まっていて、v1は一つの衣装を改造して作ったもので、v2は衣装の組み合わせ、v3はモデリング(厚み)になっています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;vroidのワンピースはおすすめしない&#34;&gt;vroidのワンピースはおすすめしない&lt;/h2&gt;&#xA;&lt;p&gt;vroidのワンピースは、上半身、下半身に1mmの隙間ができます。これは正常の姿勢では問題になりませんが、three-vrmで確認してみると浮かび上がる動作で確認できます。&lt;/p&gt;&#xA;&lt;p&gt;その他にも仕様上の問題ですが、胸の部分の肌マスクを一部消しておかないといけません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、それをやると、今度はunreal engineで表示する場合の問題が発生します。&lt;/p&gt;&#xA;&lt;p&gt;つまり、vroidのワンピースは基本的に使うべきではなく、ロングコートを使っていたv2.0のほうが良かったところがあります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vroidでマントを作る</title>
      <link>https://syui.github.io/blog/post/2024/07/21/vrm/</link>
      <pubDate>Sun, 21 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/21/vrm/</guid>
      <description>&lt;p&gt;アイの衣装を作っています。走っている姿があまり可愛くないのでマントを付けてみることにしました。原因はおそらくデフォルトの姿勢だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-21_01.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;しかし、vroidでマントは相当難しいです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;マントの作り方と調整&#34;&gt;マントの作り方と調整&lt;/h2&gt;&#xA;&lt;p&gt;vroidで髪の毛から作りました。したがって、頭の動きと連動します。&lt;/p&gt;&#xA;&lt;p&gt;調整は&lt;code&gt;髪の揺れ方&lt;/code&gt;から行います。動かしたいboneを追加して、ボーン数は少ないほど安定します。これで動く場所を追加します。固定点はどこからboneを始めるかを決めます。かたさは数字が小さいほど固い動きになります。衝突半径はboneを基準にカプセルのようなものを追加して衝突の有無を判定するのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;マントは以下を基準に設定しました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ボーン : 1&lt;/li&gt;&#xA;&lt;li&gt;固定点 : 0.6&lt;/li&gt;&#xA;&lt;li&gt;かたさ : 0.1&lt;/li&gt;&#xA;&lt;li&gt;重力 : 0&lt;/li&gt;&#xA;&lt;li&gt;衝突半径 : 0.01&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;この値だけでもダメで上向きにすることが必要です。これ以外では貫通してしまいました。本当はもう少し下向きがいいですね。&lt;/p&gt;&#xA;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-21_01.png&#34;&gt;&#xA;&lt;h2 id=&#34;体を貫通する&#34;&gt;体を貫通する&lt;/h2&gt;&#xA;&lt;p&gt;マントが体を貫通します。&lt;/p&gt;&#xA;&lt;p&gt;これは現時点でどうしようもない問題です。あらゆるパラメータを調整しても貫通してしまい、無理やりなんとかしようとすると、今度は後ろ髪とのバッティングが発生し、髪の毛がごちゃごちゃに動くようになります。&lt;/p&gt;&#xA;&lt;p&gt;マントを上向きにしているのは走ると体を貫通してしまうからです。&lt;/p&gt;&#xA;&lt;p&gt;できる限り貫通しないようにしましたが、完璧は無理でしょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;boneを増やすのは良くない&#34;&gt;boneを増やすのは良くない&lt;/h2&gt;&#xA;&lt;p&gt;固定値を根本から設定し、boneを増やして衝突半径を大きくすることで貫通を解消する事ができるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、マントの動きが安定しなくなってしまいます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5でキャラを切り替える</title>
      <link>https://syui.github.io/blog/post/2024/07/20/vrm/</link>
      <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/20/vrm/</guid>
      <description>&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-20_01.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;キャラの切り替え&#34;&gt;キャラの切り替え&lt;/h2&gt;&#xA;&lt;p&gt;キャラの切り替えは&lt;code&gt;Widgets/GameAnimationWidget&lt;/code&gt;の一部を使用します。具体的には&lt;code&gt;EUW_CharacterSelectButton&lt;/code&gt;を以下のように書き換えれば使用できるでしょう。&lt;/p&gt;&#xA;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-19_02.png&#34;&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/7z9nt-bi/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;450px&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;これらは&lt;code&gt;editor utility&lt;/code&gt;なのでcook(package build)に含まれません。もし切り替えボタンをbuild後も表示したければ、EUW(editor utility widget)をやめてWP(widget)で作成しましょう。またここで使われているblueprintアイコンはbuild時は真っ黒になります。画像を用意しましょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;アイの変身に難儀している&#34;&gt;アイの変身に難儀している&lt;/h2&gt;&#xA;&lt;p&gt;three-vrmを触っていた時代に衣装を作ったわけですが、ue5では思ったように動かないことがあります。&lt;/p&gt;&#xA;&lt;p&gt;これは衣装の作り方に問題があるわけですが、かつてthree-vrmでよく見える衣装を試行錯誤して作ったやつを修正する時期が来たと思ったので、modelを全面的にupdateしました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服の揺れで内部に入り込むので衣装を作り直した&lt;/li&gt;&#xA;&lt;li&gt;腕輪を作り直した&lt;/li&gt;&#xA;&lt;li&gt;輪っかをSMにしてmodelと分離した&lt;/li&gt;&#xA;&lt;li&gt;瞳の中のマークを完璧な形状にした&lt;/li&gt;&#xA;&lt;li&gt;靴のデザインを少し変更した&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-19_01.png&#34;&gt;&#xA;&lt;p&gt;腕輪に関してはデザインとモデル、マテリアルに改善の余地があります。これもSMにして光沢化すればうまくいきそうですが、モデリングは苦手です。&lt;/p&gt;&#xA;&lt;p&gt;基本的にアイの変身は複数のmodelを切り替えることで実装していました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回の衣装の変更ですべてのmodelを更新するのが非常にめんどくさいので、materialを切り替える方針に変更しました。&lt;/p&gt;&#xA;&lt;p&gt;つまり、黒髪にしたいなら髪の毛のelementに黒髪のmaterialをsetします。今まではmodelそのものをsetしていました。&lt;/p&gt;&#xA;&lt;p&gt;ですがこれも非常にめんどくさいことになるのですが、例えば、他のキャラと切り替えるとき、SMをすべてdisableにしなければなりません。そうでないとSMが残ってしまいます。&lt;/p&gt;&#xA;&lt;p&gt;これは&lt;code&gt;BP_VrmOutlineComponent&lt;/code&gt;や&lt;code&gt;VrmPoseableMesh_translucent&lt;/code&gt;, &lt;code&gt;SM&lt;/code&gt;などをmesh下に追加するときに起こります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;set visibility&lt;/code&gt;のoptionにチェックをいれることで全体化できますが、そうではなく現在キャラ切り替えは&lt;code&gt;CBP_SandboxCharacter&lt;/code&gt;で行っています。&lt;/p&gt;&#xA;&lt;p&gt;変更するたびに&lt;code&gt;CBP_SandboxCharacter&lt;/code&gt;でvisibility:disableを設定しなければなりません。そうでないとアイのmodelに入れたやつが表示されてしまいます。&lt;/p&gt;&#xA;&lt;p&gt;頻繁に変更しないならいいのですが、キャラが多くなってくるとアイのmodelを修正するたびに非常にめんどくさいことになります。&lt;/p&gt;&#xA;&lt;p&gt;逆に&lt;code&gt;CBP_SandboxCharacter&lt;/code&gt;をアイにしておかないと、blueprintが書きづらく、castする必要が出てきます。今のところmeshをぱっと参照できる方がいい。また、シーケンサで作ったムービー(モーション)が動かなくなります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;衣装に問題が発生した&#34;&gt;衣装に問題が発生した&lt;/h2&gt;&#xA;&lt;p&gt;その後、衣装に問題が発生しました。&lt;/p&gt;&#xA;&lt;p&gt;現在、ロングコートをベースに衣装作成を行いましたが、胸の部分の隙間が開いてしまっており、これをワンピースベースにする必要があると感じました。&lt;/p&gt;&#xA;&lt;p&gt;色々と書き換えていますが、納得できるものを完成させられていません。&lt;/p&gt;&#xA;&lt;p&gt;ずっと使うものですから、ここでいいものを作っておきたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ゲームと哲学</title>
      <link>https://syui.github.io/blog/post/2024/07/19/game/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/19/game/</guid>
      <description>&lt;p&gt;今回は、私が作っているゲームの話をしていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;私はどんなゲームを作っていくつもりなのかという話です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;アイを使用できない&#34;&gt;アイを使用できない&lt;/h2&gt;&#xA;&lt;p&gt;まず私はよくゲーム内でアイを動かしています。&lt;/p&gt;&#xA;&lt;p&gt;アイは飛べるのでこのキャラを使いながら世界を作っています。&lt;/p&gt;&#xA;&lt;p&gt;普通に考えればゲームが完成したときこのキャラクターを使えるんだと思っている方がいるかもしれませんが、アイは基本的に使えるようにはなりません。&lt;/p&gt;&#xA;&lt;p&gt;限りなくゼロに近い特殊な機会においてのみ、アイを使えるルートを用意するつもりです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、通常は使えるようにならないキャラクターになります。&lt;/p&gt;&#xA;&lt;p&gt;ああ、そういえばこのゲームはキャラゲーです。キャラゲーというのは魅力的なキャラクターに力を入れストーリーを構築することを目指すということです。&lt;/p&gt;&#xA;&lt;p&gt;アイはストーリーでたまに出てくる謎人物として登場するかもしれませんが、そのくらいです。&lt;/p&gt;&#xA;&lt;p&gt;アイに関しては初日の数時間だけテストも兼ねて引けるようにしておくかもしれませんが、それ以降ピックアップされることはありません。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、数ヶ月に一度、新しいキャラをガチャを引けるようにする。そのようなスタイルで運用を考えています。&lt;/p&gt;&#xA;&lt;p&gt;ただし、ストーリーが完結した際にはもしかしたらピックアップされるかもしれませんね。そのへんはどうなるかわかりません。&lt;/p&gt;&#xA;&lt;h2 id=&#34;世界の構築&#34;&gt;世界の構築&lt;/h2&gt;&#xA;&lt;p&gt;今現在、私が作っているのは通常のプレイヤーが行くことができない領域を作っています。&lt;/p&gt;&#xA;&lt;p&gt;このゲームは最初、非常に限られた空間で遊ぶことを考えています。&lt;/p&gt;&#xA;&lt;p&gt;そして、今作っているのはその外側のプレイヤーが物理的に到達できない場所です。&lt;/p&gt;&#xA;&lt;p&gt;キャラはそれぞれに普通のモーションを採用します。&lt;/p&gt;&#xA;&lt;p&gt;つまり、飛べないし、そんな早く走れるわけでもない。攻撃やスキルも思った以上にこじんまりとしたものになります。&lt;/p&gt;&#xA;&lt;p&gt;今操作しているアイのように動けるわけではありません。それは全く違います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;開発者の哲学&#34;&gt;開発者の哲学&lt;/h2&gt;&#xA;&lt;p&gt;ここで、私がどういうつもりでこんな仕様にするのかというと、これにはある種の哲学的な思想があります。&lt;/p&gt;&#xA;&lt;p&gt;プレイヤーが行ける場所以外にも世界が広がっていること。&lt;/p&gt;&#xA;&lt;p&gt;まだ見ぬキャラクターがいること。&lt;/p&gt;&#xA;&lt;p&gt;謎があること。&lt;/p&gt;&#xA;&lt;p&gt;これらはゲームを面白くすると考えるからです。&lt;/p&gt;&#xA;&lt;p&gt;なんかワクワクしませんか。&lt;/p&gt;&#xA;&lt;p&gt;私もわざわざ作っている以上は最終的にプレイヤーはそこに到達できるようにすると思います。&lt;/p&gt;&#xA;&lt;p&gt;しかし、最初からそこに行けてもつまらないですよね。&lt;/p&gt;&#xA;&lt;p&gt;超パワーやアイに頼らずゲームを面白くしたい、そんな思いがあります。&lt;/p&gt;&#xA;&lt;p&gt;そのためアイはゲームでたまに出てくる謎キャラ。脇役として、他のキャラたちの力でこのゲームを作っていきたいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;このゲームは身内のためのゲームと言うより、一般的なソシャゲを目指す。そんな感じです。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、アイは初日だけ引けるし、ストーリーにも登場しますので、知る人ぞ知る、そんなキャラになるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;大空に伝説のポケモンが飛んでいる。早く捕まえたい。そんな感じです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ゲームと現実の融合&#34;&gt;ゲームと現実の融合&lt;/h2&gt;&#xA;&lt;p&gt;もう一つ考えていることがあって、それは現実とゲームをつなげることです。ゲームと現実の融合を考えています。&lt;/p&gt;&#xA;&lt;p&gt;具体的には現実で使用しているアカウントとつなげることで、その現実のアカウントがゲーム内のものを所有するという形にしたいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;また、データの物理融合も考えていて、例えば、ゲーム内であるアイテムをゲットしたとしましょう。そして、そのアイテムを一つの到達点とし、それを取得した場合は所定の手順を踏めば物理アイテムに変換される(住所を送ると郵送される)ものを用意しておきます。&lt;/p&gt;&#xA;&lt;p&gt;すると、ゲームと現実の結びつきがさらに高まりますよね。&lt;/p&gt;&#xA;&lt;p&gt;ただし、こういうことをやるとこんなふうに思われる方がいるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;「このゲームはユーザーの個人情報を狙っている」&lt;/p&gt;&#xA;&lt;p&gt;私だってこういう仕組みがあっても住所を送りたくありません。&lt;/p&gt;&#xA;&lt;p&gt;ですから郵送は匿名で配送と受け取りができるサービスを利用します。&lt;/p&gt;&#xA;&lt;p&gt;この仕組みはユーザーを喜ばせるためだけにあります。&lt;/p&gt;&#xA;&lt;p&gt;したがって、個人情報に関わるものは一時的に取得することがあってもすべて削除するようにします。&lt;/p&gt;&#xA;&lt;p&gt;次に話したいのはアカウントに採用する形式の話です。&lt;/p&gt;&#xA;&lt;p&gt;これはすでに結論が出ていて、protocolがいい。現在、mailが一般的ですが、現実と結びつかない人が増えています。私もそうですが、mailでやり取りすることはありません。mailは受け取るだけのものになりつつある。そして、公開もできない。これでは現実との結びつきがありません。&lt;/p&gt;&#xA;&lt;p&gt;そこでnostrとbluesky(atproto)のどちらかということになり、私はatprotoを採用します。&lt;/p&gt;&#xA;&lt;p&gt;アカウントをサービスごとに持つ、異なるユーザー名を持つのはもう嫌なのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これを解決するには一意性を捨てなければなりません。一意性とは、例えば&lt;code&gt;@syui&lt;/code&gt;のような形です。これはどこかの会社が独占できないし、独占するなら各社それぞれにアカウントを持つしかありません。&lt;/p&gt;&#xA;&lt;p&gt;そうではなくアカウントは一つにしたいし、名前も一つにしたいのです。&lt;/p&gt;&#xA;&lt;p&gt;これを解決するにはprotocolしかなく、名前規則もdomainに従うしかない。&lt;/p&gt;&#xA;&lt;p&gt;それを最も短く現実的にやっているのがatprotoというわけです。&lt;/p&gt;&#xA;&lt;p&gt;atprotoは今まで使われてきたmailというものを置き換える可能性を秘めています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;無限性&#34;&gt;無限性&lt;/h2&gt;&#xA;&lt;p&gt;最後に、どんなゲームを作っていくつもりなのかをまとめると、楽しいゲームです。&lt;/p&gt;&#xA;&lt;p&gt;上に挙げたすべての事柄は楽しいとか嬉しいとかそういったことのために存在します。&lt;/p&gt;&#xA;&lt;p&gt;そして、これは自分に向けたメッセージですが、ゲームの中の一つ一つに無限性をもたせることを考える。&lt;/p&gt;&#xA;&lt;p&gt;例えば、囲碁という単純なゲームがあります。単純ですが無限があります。無限の組み合わせがある。&lt;/p&gt;&#xA;&lt;p&gt;キャラクターを尊重し、ストーリーを考えること。これについては面白いものを想像しやすいですが、ゲーム性については面白いものを考えるというより、無限性を考える。&lt;/p&gt;&#xA;&lt;p&gt;やっぱり好みのキャラが登場して活躍すれば嬉しいし、無限に育成などを考えられれば続きますよね。楽しいキャラを作れるよう頑張りたい。&lt;/p&gt;&#xA;&lt;p&gt;そんなことを思ったのでした。&lt;/p&gt;&#xA;&lt;h2 id=&#34;完成時期&#34;&gt;完成時期&lt;/h2&gt;&#xA;&lt;p&gt;いつ完成するのかはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;どういった予定で開発していくのかはだいたい決まっていて、私は原神というゲームで遊んでいましたが、やることがなくなったので、自分でゲームを作って遊ぶかと思い、開発をスタートさせています。&lt;/p&gt;&#xA;&lt;p&gt;したがって、まずは自分が遊ぶステージや仕組みを作ってそれを完成させることが目標です。&lt;/p&gt;&#xA;&lt;p&gt;その後、一般プレイヤー向けにストーリーとキャラクターを作成する予定です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vrm4uでBP_PoseCopyToonを使う</title>
      <link>https://syui.github.io/blog/post/2024/07/18/vrm/</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/18/vrm/</guid>
      <description>&lt;p&gt;今回は誰も解説していないvrm4uで&lt;code&gt;BP_PoseCopyToon&lt;/code&gt;を使った見た目をカスタマイズする方法を紹介します。ドキュメントにも書かれていませんが、大体は以下の手順になります。&lt;/p&gt;&#xA;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-18_025511.png&#34;&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ファイラーでPlugins/を見えるようにする(プラグインコンテンツを表示)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;All/Plugins/VRM4U/Util/Actor/PostShadow/BP_PoseCopyToonをlevel(map)に配置し、target actorにBP_Playerを選択して調整する(BP_Playerもlevelに配置しないといけない)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;All/Plugins/VRM4U/Util/Actor/PostShadow/MI_PostToonが更新されているのでAll/Plugins/VRM4U/ImportData/DS_VRMCustomを開いて、全部をMI_PostToonに変更する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;新しくvrmファイル(.vrm)をインポートする。この際、type:customを選択する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;奇妙なSK_${name}ができるが重ねがけ用なので正常。BP_PoseCopyToonを開いてVrmPoseableMesh_translucentをコピーし、BP_Playerに貼り付ける&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;VrmPoseableMesh_translucentで先程作ったSK_${name}を参照する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-18_025510.png&#34;&gt;&#xA;&lt;p&gt;&lt;code&gt;VrmPoseableMesh_translucent&lt;/code&gt;で生成されるmaterialはlevel専用の一時的なものです。これはコピー、貼付けして一時的に使えますが、保存されません。unreal engineを落とすと無効になります。&lt;/p&gt;&#xA;&lt;p&gt;したがって、customに入れて生成して使います。それが上記の手順です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;近づくとよく分かる違い&#34;&gt;近づくとよく分かる違い&lt;/h2&gt;&#xA;&lt;p&gt;近づくとその違いは明らかです。subsurface profileで作ったモデルはデコボコしていますが、postshadowを重ねて表示するモデルはデコボコが消えきれいになっています。&lt;/p&gt;&#xA;&lt;p&gt;今回は原子爆発を使ったあとは輪っかと瞳のmaterialを切り替えて光らせるようにしました。&lt;/p&gt;&#xA;&lt;p&gt;この辺のmaterialの調整も結構大変で試行錯誤しています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;なぜvrm4uの見た目をカスタマイズしている人がいないのか&#34;&gt;なぜvrm4uの見た目をカスタマイズしている人がいないのか&lt;/h2&gt;&#xA;&lt;p&gt;そもそも日本語のunreal engineの情報自体が少ないのですが、その中のvrm4uとなると、なおさら触る人が少ないのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;また、どこにもやり方が書かれていないので、見た目のカスタマイズは相当大変です。検索しても情報は出てこない。&lt;/p&gt;&#xA;&lt;p&gt;説明しようにも環境問題が大きく、解説が難しい事情もあるのでしょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;最近の出来事&#34;&gt;最近の出来事&lt;/h2&gt;&#xA;&lt;p&gt;だいぶ理想の空に近づいてきました。ぱっと見は問題なさそうですが納得できないところが多く、修正していたら時間がかかりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-18_025510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;dynamic volumetric skyで2dskyが原因である領域に視線を向けるとチカチカ背景の色が変わる現象に遭遇しました。2dskyをdisableにすることで解消しました。&lt;/p&gt;&#xA;&lt;p&gt;また、time speedをゆっくりにすることで、雲がきれいになりました。fpsはfreeにしました。projectでもfpsを高めに設定しました。&lt;/p&gt;&#xA;&lt;p&gt;その後、モデルに目を向けました。モデルも悪くはないんだけど、でも理想的ではありません。個人的にはリアル寄りではなく、アニメ寄りにしたかったのです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、unreal engineはリアル寄りのゲームで、アセットの多くもリアル寄りが多いので、&lt;code&gt;subsurface profile&lt;/code&gt;を使用していました。&lt;/p&gt;&#xA;&lt;p&gt;基本はこれを調整したものをベースに、&lt;code&gt;BP_PoseCopyToon&lt;/code&gt;を使っていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;原子爆発をシーケンサで作成していましたが、バグに遭遇しましたので記録しておきます。&lt;/p&gt;&#xA;&lt;p&gt;5.3から5.4にシーケンサを持ってきて使用していましたが、一度でも編集するとおかしくなります。例えば、BP_Playerを置いたとして、meshも追加しなければならなくなりました。meshを追加したあとはじめてanimを追加できます。しかし、これでもまだ正常ではありません。buildが進まなくなり、編集するとanimが機能しなくなります。つまり、meshを追加、animを追加、meshを削除という手順を踏まなければいけません。&#xA;BP_Playerの直下にanimを置くことでようやく正常になります。&lt;/p&gt;&#xA;&lt;p&gt;最近、googleではなく&lt;code&gt;perplexity.ai&lt;/code&gt;を使用するようになりました。&lt;/p&gt;&#xA;&lt;p&gt;srcに当たりたい気持ちはありgoogleのほうが使いやすいように思えますが、unreal engineに関してはperplexityのほうが問題解決が早かった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>bluesky self-hostの最新事情</title>
      <link>https://syui.github.io/blog/post/2024/07/17/bluesky/</link>
      <pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/17/bluesky/</guid>
      <description>&lt;p&gt;現在、blueskyのself-hostは&lt;code&gt;bsync&lt;/code&gt;,&lt;code&gt;dataplane&lt;/code&gt;をどうにかする必要があります。これは最新版を動かしたい場合の話です。&lt;/p&gt;&#xA;&lt;p&gt;これに取り組んでいるのが&lt;a href=&#34;https://github.com/itaru2622&#34;&gt;itaru2622&lt;/a&gt;さんです。この人が現在のbluesky self-host最先端だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;以下のpatchをベースに動く&lt;a href=&#34;https://hub.docker.com/u/itaru2622&#34;&gt;docker image&lt;/a&gt;を公開されています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/itaru2622/bluesky-selfhost-env&#34;&gt;https://github.com/itaru2622/bluesky-selfhost-env&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/u/itaru2622&#34;&gt;https://hub.docker.com/u/itaru2622&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;現在、問題があるのは&lt;code&gt;bsky&lt;/code&gt;なので、それらを置き換えればよいでしょう。&lt;code&gt;bgs&lt;/code&gt;が上手く動作しない場合はそれも置き換えてください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;bsky&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;2584&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;2584&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;itaru2622/bluesky-atproto-bsky&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env_file&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./envs/bsky&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./data/bsky/:/data/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;#- ./repos/bsky.js:/app/services/bsky/api.js:ro&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;node --enable-source-maps api.js&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;service_healthy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;redis&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;service_healthy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;bsky-fix-permission&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;service_completed_successfully&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#healthcheck:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#  test: &amp;#34;wget -q --spider http://localhost:2584/xrpc/_health&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#  interval: 5s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#  retries: 20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#build:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#  context: ./repos/atproto/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#  dockerfile: services/bsky/Dockerfile&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお、私は昔のdbのままだと&lt;code&gt;app.bsky.actor.getProfile&lt;/code&gt;が動作しなかったので、postgresを退避してイチから作り直す必要があるかもしれません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1年ぶりにランニングを記録してみた</title>
      <link>https://syui.github.io/blog/post/2024/07/12/nike/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/12/nike/</guid>
      <description>&lt;p&gt;1年ぶりくらいにランニングにスマホを持っていってタイムを測った。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20240712_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20240712_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;少し前までは3だったところが2になっていて、ここが2になるといいなと思ってたので、それがちょっと嬉しかった。&lt;/p&gt;&#xA;&lt;p&gt;でも計測ミスかもしれない。あまり数字にこだわるべきでもないので、ちょっと嬉しかったくらいにとどめておくのがいいと思う。&lt;/p&gt;&#xA;&lt;p&gt;最後、ラストスパートをかけたのは確かで、ゴールしたときワークアウトの終了?だったかを押すのに手間取ったのも確かなので、その部分は合ってる。&lt;/p&gt;&#xA;&lt;p&gt;でも距離は8kmくらいじゃないかな。もちろん正確にはわからないし、アップデートとかで変更があったのかもしれないけど、前は8kmくらいのところを今回走ったと思うね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vrm4uでpackage build後も髪の毛を動かす方法</title>
      <link>https://syui.github.io/blog/post/2024/07/06/ue/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/07/06/ue/</guid>
      <description>&lt;p&gt;vrm4uがpackage buildすると髪の毛が動かなくなっていました。&lt;/p&gt;&#xA;&lt;p&gt;これを動かせるには&lt;code&gt;ABP_Post_${model_name}&lt;/code&gt;を編集して、&lt;code&gt;VrmSpringBone&lt;/code&gt;で&lt;code&gt;Vrm Meta Object:VM_${model_name}_VrmMeta&lt;/code&gt;を指定します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-07-06_125510.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4でdynamic volumetric skyとocean wavesの統合</title>
      <link>https://syui.github.io/blog/post/2024/06/29/ue-planet-sky/</link>
      <pubDate>Sat, 29 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/29/ue-planet-sky/</guid>
      <description>&lt;p&gt;今回は、&lt;code&gt;dynamic volumetric sky&lt;/code&gt;と&lt;code&gt;ocean waves&lt;/code&gt;の統合してみました。&lt;/p&gt;&#xA;&lt;p&gt;結果として理想の地表と海面、空と雲を手に入れました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/dynamic-volumetric-sky/&#34;&gt;dynamic volumetric sky&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/ocean-waves&#34;&gt;ocean waves&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-29_025510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;issue地平線&#34;&gt;issue:地平線&lt;/h2&gt;&#xA;&lt;p&gt;まずはdynamic volumetric skyの地平線を消していきましょう。&lt;/p&gt;&#xA;&lt;p&gt;普通に考えて地平線を消したいことなんてありそうですけど、英語は&lt;a href=&#34;https://forums.unrealengine.com/t/how-can-i-remove-the-foggy-horizon-in-the-default-skysphere/339893&#34;&gt;こちら&lt;/a&gt;で説明されています。日本語は見つかりませんでした。これは通常、&lt;code&gt;Horizon Falloff&lt;/code&gt;で調整しています。&lt;/p&gt;&#xA;&lt;p&gt;ただし、dynamic volumetric skyは少し特殊です。&lt;/p&gt;&#xA;&lt;p&gt;どうやら&lt;code&gt;BP_Dynamic_VoluemetricSky&lt;/code&gt;にある&lt;code&gt;ExponentialHeightFog&lt;/code&gt;で地平線を設定しているようです。これを削除していくか、設定を変更していく必要があります。削除する場合はcompileするとerrorが出るので使用している箇所の関数やblueprintを削除します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;issue海の波紋&#34;&gt;issue:海の波紋&lt;/h2&gt;&#xA;&lt;p&gt;dynamic volumetric skyと合わせることで海に波紋が現れます。&lt;/p&gt;&#xA;&lt;p&gt;これはocean wavesのsky atmosphereが星の中心を規定していることから発生します。つまり、sky atmosphereを星の中心に設定しないと描写の問題が出るということです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-24_025510.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;この解消方法はdynamic volumetirc skyのatmoshereのtransformのlocation-zを&lt;code&gt;-6360&lt;/code&gt;にすることで回避できました。&lt;/p&gt;&#xA;&lt;p&gt;ただし、わからないところもあって、私は&lt;code&gt;BP_EarthSizedSpericalMesh&lt;/code&gt;の中に&lt;code&gt;BP_DynamicVolumetircSky&lt;/code&gt;を入れています。ですから、そのままでも座標は星の中心を指しています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;issue海の影&#34;&gt;issue:海の影&lt;/h2&gt;&#xA;&lt;p&gt;海に円形の影が現れることがあります。これは&lt;code&gt;BP_DynamicVolumetircSky&lt;/code&gt;の&lt;code&gt;VolumetricSkySupport&lt;/code&gt;のtransform-scaleを大きくすると海に入る影が大きくなり、1にするとなくなります。&lt;/p&gt;&#xA;&lt;p&gt;この辺も星の内部に展開される領域に関係します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体的な統合&#34;&gt;具体的な統合&lt;/h2&gt;&#xA;&lt;p&gt;重要な問題は以上の2点ですが統合には他にやらなければならないことがたくさんあります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、「dynamic volumetric skyの範囲を超えたとき、一体どうやって地球と太陽と月を表現するのか」です。&lt;/p&gt;&#xA;&lt;p&gt;さっきまであった太陽がいきなり消えて別の場所に出現したり、見た目が変わったりするのはできれば避けたい。しかし、それだと見た目のクオリティは一気に落ちます。&lt;/p&gt;&#xA;&lt;p&gt;まずは月を消すことからですが、月は&lt;code&gt;2DSky&lt;/code&gt;で実装されています。&lt;code&gt;visible:false&lt;/code&gt;にすればいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;次に本物の月を地球の外に回します。ここでは&lt;code&gt;spline&lt;/code&gt;で軌道を設定しています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-29_025510.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;loopさせるには&lt;code&gt;spline len&lt;/code&gt;をmaxにして&lt;code&gt;float wrap&lt;/code&gt;します。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/8gfrd45h/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;450px&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;地球の外側&#34;&gt;地球の外側&lt;/h2&gt;&#xA;&lt;p&gt;そのままでは宇宙に出たときの見栄えがよくありません。したがって、宇宙に出たとき地球の見た目を整える必要があります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これもunreal engineの問題から解決が難しい。私は以下のように実装していますが、良い方法ではありません。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/t46sbleq/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;450px&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;地球の自転&#34;&gt;地球の自転&lt;/h2&gt;&#xA;&lt;p&gt;これは失敗談ですが、地球に自転を設定してみました。これで外側を回っている月や太陽はゆっくりした速度で動けば良くなります。つまり、現実に合わせることができる。&lt;/p&gt;&#xA;&lt;p&gt;しかし、地球を自転させることで地面は揺れマップは崩壊。様々な問題が発生しました。&lt;/p&gt;&#xA;&lt;p&gt;やはり、ゲーム上で地動説を実現するのは難しいようです。太陽側を回すしかありません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4でdynamic volumetric skyの空を飛んでみる</title>
      <link>https://syui.github.io/blog/post/2024/06/24/ue-dynamic-volumetric-sky/</link>
      <pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/24/ue-dynamic-volumetric-sky/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/dynamic-volumetric-sky/&#34;&gt;dynamic volumetric sky&lt;/a&gt;はほとんどのゲームに使われているvolumetric skyです。&lt;/p&gt;&#xA;&lt;p&gt;昔からあるassetで、更新もされているのでずっと使われています。多くの開発者が最初に購入するassetの一つです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、当たり前ですが宇宙にはいけません。&lt;/p&gt;&#xA;&lt;p&gt;このassetも他のassetと同様、平面マップを想定しています。ですから、どこまでいってもその先は平面になります。&lt;/p&gt;&#xA;&lt;p&gt;また、このassetのvolumetric skyは様々なものと依存しているので切り離しも難しい。&lt;/p&gt;&#xA;&lt;p&gt;ですが、雲がとても綺麗で天候も昼夜もあります。&lt;/p&gt;&#xA;&lt;p&gt;飛ぶときは&lt;code&gt;BP_DynamicVolumetricSky&lt;/code&gt;の詳細で&lt;code&gt;Coloud -&amp;gt; Coloud Fly Option&lt;/code&gt;を選択します。そして、時間を早めるため&lt;code&gt;Single Player Fps Lock&lt;/code&gt;を&lt;code&gt;60 FPS&lt;/code&gt;にします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4でocean wavesで星と空と海をつなげる</title>
      <link>https://syui.github.io/blog/post/2024/06/23/ue-ocean-sky/</link>
      <pubDate>Sun, 23 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/23/ue-ocean-sky/</guid>
      <description>&lt;p&gt;今回は星と空と海を融合する方法を紹介します。この現実方式はgame engineでは相当に難しいことです。そのためこれをやる人はあまりいませんし、必要性もありません。おすすめもできません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-22_025510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;これには様々な問題があり不便があります。また、ゲームプレイでは必要ない部分、見えない部分になるので、多くの開発者は一般的なゲーム方式を採用します。&lt;/p&gt;&#xA;&lt;p&gt;それでもこの方式を採用したい場合は&lt;code&gt;ocean waves&lt;/code&gt;が参考になります。このassetは結構すごいことをやっています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/ocean-waves&#34;&gt;ocean waves&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;まずは&lt;code&gt;ocean waves&lt;/code&gt;でplayerを動かし不要なものを削除します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;OceanWaves/Levels/EarthSizedOceanPlanet&lt;/code&gt;を開いて必要なものを列挙します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Lighting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    DirectionLight&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SkyAtmosher&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SkyLight&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    VolumetricCloud&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OceanMaterialPresets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; OceanMaterial_Opaque&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; OceanMaterial_Opaque_AF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; OceanMaterial_SLW&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; OceanMaterial_SLW_AF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Planet&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BP_EarthSizedClouds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BP_EarthSizedOcean&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BP_EarthSizedSphercialMesh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BP_SkyAtmposhereAdjuster&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PostProcessVolume&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WaterVolume&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+PlayerStart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+Plane&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;もしlvからcopyして使用する場合は&lt;code&gt;BP_xxx&lt;/code&gt;の値が一部抜けるので注意してください。例えば、&lt;code&gt;BP_EarthSizedOcean&lt;/code&gt;は海の設定です。詳細のOceanVolumeに&lt;code&gt;WaterVolume&lt;/code&gt;を参照するようにしてください。&lt;/p&gt;&#xA;&lt;p&gt;雲の形式は&lt;code&gt;VolumetricCloud&lt;/code&gt;で設定していきます。大体の使い方としてはこんな感じです。詳しくはblueprintを見ます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;buildすると雲が中央に集中する&#34;&gt;buildすると雲が中央に集中する&lt;/h3&gt;&#xA;&lt;p&gt;package buildすると光が中央に集中し、雲も全体的におかしくなります。中央に向かってレンダリングが伸びているように見えます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;BP_EarthSizedClouds&lt;/code&gt;の&lt;code&gt;Global Wind&lt;/code&gt;が原因です。ここで&lt;code&gt;Ocean : BP_EarthSizedOcean&lt;/code&gt;に指定するとこの現象が発生します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;海に入った直前だけ背景が映り込む&#34;&gt;海に入った直前だけ背景が映り込む&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;BP_EarthSizedOcean&lt;/code&gt;を編集します。&lt;/p&gt;&#xA;&lt;p&gt;私が独自に設定している&lt;code&gt;SM_SkySphere&lt;/code&gt;が潜った瞬間だけそれが表示されてしまうので、&lt;code&gt;Volume Material Height&lt;/code&gt;は0にしています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Above Water Material&lt;/code&gt;にも&lt;code&gt;Underwater&lt;/code&gt;と同じものを入れてください。&lt;/p&gt;&#xA;&lt;h2 id=&#34;統合は難しい&#34;&gt;統合は難しい&lt;/h2&gt;&#xA;&lt;p&gt;これを他のmapと統合するのはかなり難しいです。新しく自分で作っていくのも難しい部分が多いでしょう。&lt;/p&gt;&#xA;&lt;p&gt;なぜならこの方式はmapのすべてに関係してくるからです。ものを作る場合、通常は部品を分割しながら作ります。ですが、この方式はそれが難しいのです。&lt;/p&gt;&#xA;&lt;p&gt;一般的によく使用されている&lt;code&gt;volumetric sky&lt;/code&gt;なども使用は難しいでしょう。昼夜や天候を変えるのは大変で、天体を動かしてlightを連動しなければならなりません。&lt;/p&gt;&#xA;&lt;p&gt;他にも難しいところはたくさんあって、ロードも遅いですし、この方式でmapを作っていくと取り返しがつかないことになりかねません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4でcity sampleとgame animation sampleを統合する</title>
      <link>https://syui.github.io/blog/post/2024/06/22/ue-city-sample/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/22/ue-city-sample/</guid>
      <description>&lt;p&gt;今回は、&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/city-sample&#34;&gt;city sample&lt;/a&gt;と&lt;a href=&#34;https://www.unrealengine.com/marketplace/en-US/product/game-animation-sample&#34;&gt;game animation sample&lt;/a&gt;を統合する方法を紹介します。どちらも&lt;code&gt;epic games&lt;/code&gt;が提供しているので無料で使えます。最初のスターターキットとして使用されることが多くなるはずです。&lt;/p&gt;&#xA;&lt;p&gt;city sampleのほうが複雑なので、city sampleをベースにgame animation sampleをコピーする形で統合します。&lt;/p&gt;&#xA;&lt;p&gt;まずコピーするファイルです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# game-animation-sample&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Binaries&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└─Win64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └─GameAnimationSampleEditor.target&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;編集するファイルです。これはcity sampleの方を編集します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# city-sample&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;city-sample.uproject&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Binaries&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└─Win64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └─UnrealEditor.modules&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   └─DefaultGameplayTags.ini&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずrootにある&lt;code&gt;${project_name}.uproject&lt;/code&gt;にgame animation sampleのpluginを追加します。これはコピー側のuprojectを参照してください。長くなるのでここでは全て列挙していません。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-json:city-sample.uproject&#34; data-lang=&#34;json:city-sample.uproject&#34;&gt;&amp;#34;Plugins&amp;#34; : [&#xA;    { &amp;#34;Name&amp;#34;:&amp;#34;ModelingToolsEditorMode&amp;#34;,&amp;#34;Enabled&amp;#34;:true,&amp;#34;TargetAllowList&amp;#34;:[&amp;#34;Editor&amp;#34;] },&#xA;    .&#xA;    .&#xA;    .&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次に&lt;code&gt;Binaries/Win64/UnrealEditor.modules&lt;/code&gt;もコピー側のものを見て追記します。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-json:city-sample/Binaries/Win64/UnrealEditor.modules&#34; data-lang=&#34;json:city-sample/Binaries/Win64/UnrealEditor.modules&#34;&gt;{&#xA;  &amp;#34;BuildId&amp;#34;: &amp;#34;0000000&amp;#34;,&#xA;  &amp;#34;Modules&amp;#34;: {&#xA;    &amp;#34;CitySample&amp;#34;: &amp;#34;UnrealEditor-CitySample.dll&amp;#34;,&#xA;    &amp;#34;CitySampleAnimGraphRuntime&amp;#34;: &amp;#34;UnrealEditor-CitySampleAnimGraphRuntime.dll&amp;#34;,&#xA;    &amp;#34;CitySampleEditor&amp;#34;: &amp;#34;UnrealEditor-CitySampleEditor.dll&amp;#34;,&#xA;    &amp;#34;GameAnimationSample&amp;#34;: &amp;#34;UnrealEditor-GameAnimationSample.dll&amp;#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次に&lt;code&gt;Config/DefaultGameplayTags.ini&lt;/code&gt;もコピー側を見て追記します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:city-sample/Config/DefaultGameplayTags.ini&#34; data-lang=&#34;sh:city-sample/Config/DefaultGameplayTags.ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;GameplayCue.ContextualAnim&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching.Default&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching.Idle&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching.Loops&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching.Pivots&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching.Starts&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+GameplayTagList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(Tag=&amp;#34;MotionMatching.Stops&amp;#34;,DevComment=&amp;#34;&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大体こんな感じでやればgame animation sample(ABP_SandboxCharacter)が動くでしょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4のcustom gravityを試す</title>
      <link>https://syui.github.io/blog/post/2024/06/21/ue-gravity/</link>
      <pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/21/ue-gravity/</guid>
      <description>&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-21_225510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;youtube : &lt;a href=&#34;https://www.youtube.com/watch?v=CZK7QplEbJs&#34;&gt;Unreal Engine 5 Tutorial - Custom Gravity UE5.4 Preview&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的には&lt;code&gt;bp_actor&lt;/code&gt;を作成し範囲を設定します。&lt;code&gt;bp_actor&lt;/code&gt;を置いたとき惑星(bp_planet)に親子付けするといいですね。この場合はlocationは&lt;code&gt;0&lt;/code&gt;, scaleは&lt;code&gt;1.1&lt;/code&gt;を設定します。&lt;/p&gt;&#xA;&lt;p&gt;動作は&lt;code&gt;bp_player(bp_character)&lt;/code&gt;のeventで設定します。具体的には&lt;code&gt;actor begin&lt;/code&gt;から&lt;code&gt;gravity direction&lt;/code&gt;します。&lt;/p&gt;&#xA;&lt;p&gt;gravity directionを無効にする方法が用意されていないようなので、&lt;code&gt;actor end&lt;/code&gt;で&lt;code&gt;destroy actor&lt;/code&gt;して&lt;code&gt;restart player&lt;/code&gt;しています。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/tybb0lyd/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dev.epicgames.com/community/learning/tutorials/w6l7/unreal-engine-custom-gravity-in-ue-5-4&#34;&gt;https://dev.epicgames.com/community/learning/tutorials/w6l7/unreal-engine-custom-gravity-in-ue-5-4&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4にupdateすることにした</title>
      <link>https://syui.github.io/blog/post/2024/06/20/ue-game-animation/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/20/ue-game-animation/</guid>
      <description>&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/en&#34;&gt;ue 5.4.2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/en/blog/game-animation-sample&#34;&gt;game animation sample&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/superhero-flight-animations&#34;&gt;superhero flight animations&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;今回は&lt;code&gt;game animation sample&lt;/code&gt;と&lt;code&gt;superhero flight animations&lt;/code&gt;を統合してみました。今までのモーションに加えて空を飛べるようにしたのですが、違和感ない形で自動的にブレンドされます。これは想像以上に大変なことをやっているので&lt;code&gt;5.4.2&lt;/code&gt;に追従したほうが良さそうです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、今まで開発実装してきたものがすべて作り直しになります。&lt;/p&gt;&#xA;&lt;p&gt;インポートできないのかと思われるかもしれませんが、ue5にそんなことできません。動かなくなります。仮に動かせたとしても、おそらく、作り直したほうが早いでしょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;game-animation-sampleで飛べるようにする&#34;&gt;game animation sampleで飛べるようにする&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;game animation sample&lt;/code&gt;と&lt;code&gt;superhero flight animations&lt;/code&gt;の統合を解説します。&lt;/p&gt;&#xA;&lt;p&gt;基本的には&lt;code&gt;BP_SandboxCharacter&lt;/code&gt;にeventの&lt;code&gt;IA_Sprit&lt;/code&gt;で&lt;code&gt;anim instance class(ABP_Player)&lt;/code&gt;を指定しますが&lt;code&gt;BP_Player_UE5&lt;/code&gt;から様々な設定や変数を持ってきて動くように改変していきます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-21_025510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/7z11v96t/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;sky-atmosphereを使って宇宙をつなげる&#34;&gt;sky atmosphereを使って宇宙をつなげる&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/cesium-for-unreal&#34;&gt;cesium&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/en-US/product/ocean-waves&#34;&gt;ocean waves&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;私が作ってきたlv(map)は宇宙と街でわけられていました。&lt;/p&gt;&#xA;&lt;p&gt;これは特別なことではなく当たり前のことで、mapは基本的に平面なのです。平面のmapにキャラクターやフィールドを配置していくのです。&lt;/p&gt;&#xA;&lt;p&gt;私の場合はサークルのアクターを用意してぶつかると別の場所に移動するように設定していました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これは本来やりたかったことではありません。現実に基づいたものを作りたかった。宇宙と街が異なる場所に置かれるのではなく、最初からつながっている形が良かったのです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、空に上昇して大気圏を抜けると宇宙に行ける形です。空に上昇すると宇宙マップに移動させられる形ではありません。&lt;/p&gt;&#xA;&lt;p&gt;なぜこのようなことがやりたかったのかというと「目に見えない部分もしっかり作られているゲームを作りたかったから」です。&lt;/p&gt;&#xA;&lt;p&gt;昼と夜がゲーム内で再現されていることがよくあります。これは単にライトと月の絵を背景で回しているだけなのです。しかし、私はゲーム内でもその場所に行くと本物そっくりの天体が動いている、そういうのがいいなと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;今回は、それを実現するために&lt;a href=&#34;https://dev.epicgames.com/documentation/en-us/unreal-engine/sky-atmosphere-component-in-unreal-engine&#34;&gt;sky atmosphere&lt;/a&gt;を利用するようにしました。&lt;/p&gt;&#xA;&lt;p&gt;また、月などの天体には重力がありませんでした。そのまま丸い球体が浮いているという形だったのです。ですから、上から落下すると月に乗れますが、横からだと乗れません。ぶつかるだけです。これを改善したかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dev.epicgames.com/community/learning/tutorials/w6l7/unreal-engine-custom-gravity-in-ue-5-4&#34;&gt;https://dev.epicgames.com/community/learning/tutorials/w6l7/unreal-engine-custom-gravity-in-ue-5-4&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-21_125510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;game animation sample&lt;/code&gt;には飛び越せるブロックがあります。あれをフィールドに設置して岩にかぶせ見えないようにすることで動作します。見えないようにというのはブロックのmeshをvisibilityで制御します。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;しかし、注意点もあります。太陽と月を追加するとあまりに負荷が高くなったのか落ちるようになったことがありました。いくつか改善すると治りましたが、この形を採用するとbuildが通らなくなることもあります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;vrm4uのmaterialについて考える&#34;&gt;vrm4uのmaterialについて考える&lt;/h2&gt;&#xA;&lt;p&gt;私は&lt;code&gt;SubsurfaceProfile&lt;/code&gt;を使用していますが、他のタイプだと影(shadow)と反射(light)の問題がかなり強く出てしまい、あらゆる場面で常用できません。移動したら背景の加減でおかしくなるなど問題が多いのです。&lt;/p&gt;&#xA;&lt;p&gt;そこで完全に影響を受けない&lt;code&gt;MToon Unlit&lt;/code&gt;を使用することも考えられます。一部分だけ他のタイプのmaterialを利用して調整していきます。この場合の肌の色を以下に調整するといいでしょう。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/wi2aobel/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;作り直すもの&#34;&gt;作り直すもの&lt;/h2&gt;&#xA;&lt;p&gt;今まで実装開発してきたものはいくつかありますが、代表的なものを挙げます。記録のため動画にしておきます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;account login system&lt;/li&gt;&#xA;&lt;li&gt;account item system&lt;/li&gt;&#xA;&lt;li&gt;character lv system&lt;/li&gt;&#xA;&lt;li&gt;character skill&lt;/li&gt;&#xA;&lt;li&gt;character sword &amp;amp; collision&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;一気に解説します。移動すると経験値が入ります。Lv1になると変身できるようになります。変身すると飛行できるようになります。飛行できる時間はlvに応じて変化します。特殊なアイテムを取るとスキルを覚えます。スキルにはクールタイムやcollisionなどが設定されており、敵が吹っ飛びます。剣のモーションは原作を再現しています。原作では輪が剣になりますので、剣を登場させたときは輪を消さなければなりません。meshを入れ替える処理などを書いています。アイテム画面やストーリー進行などもapiと連携するシステムを作りました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4でgame animation sampleを試してみる</title>
      <link>https://syui.github.io/blog/post/2024/06/19/ue-game-animation/</link>
      <pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/19/ue-game-animation/</guid>
      <description>&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/en&#34;&gt;ue 5.4.2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/en/blog/game-animation-sample&#34;&gt;game animation sample&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解説&#34;&gt;解説&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;game animation sample&lt;/code&gt;を使うと標準的なモーションをキャラクターに適用することができます。しかも、&lt;code&gt;epic games&lt;/code&gt;が提供しているため無料です。&lt;/p&gt;&#xA;&lt;p&gt;今回はゲームモードで自身のキャラクターを選択する方法を紹介します。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;pluginのvrm4uを有効にする&lt;/li&gt;&#xA;&lt;li&gt;vrmを&lt;code&gt;/Character/ai/Rigs&lt;/code&gt;に読み込む&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/Blueprints/ABP_Sandbox_Character&lt;/code&gt;を右クリックでアニメーションをリターゲットして&lt;code&gt;/Character/ai/anim/&lt;/code&gt;に作成する。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;source : SKM_UEFN_Mannequin&lt;/p&gt;&#xA;&lt;p&gt;target : SK_ai&lt;/p&gt;&#xA;&lt;p&gt;retarget : RTG_UEFN_ai&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;なお、この手順は本来不要です。読み飛ばしても構いません。しっかりとしたアニメーションを利用したいときに使えるのでやっておくのがおすすめです。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;/Blueprints/RetargetedCharacters/CBP_SandboxCharacter_Manny&lt;/code&gt;を複製して&lt;code&gt;/Blueprints/RetargetedCharacters/CBP_SandboxCharacter_ai&lt;/code&gt;にする&lt;/li&gt;&#xA;&lt;li&gt;SkeletalMeshを&lt;code&gt;/Character/ai/Rigs/SK_ai&lt;/code&gt;に設定して、Tag(Component Tags)を&lt;code&gt;RTG_UEFN_ai&lt;/code&gt;に変更する&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;tags[0] : RTG_UEFN_ai&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;/Blueprints/RetargetedCharacters/ABP_GenericRetarget&lt;/code&gt;を開いて変数の&lt;code&gt;IKRetargeter_Map&lt;/code&gt;を追加する&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;RTG_UEFN_ai : /Character/ai/Rigs/RTG_UEFN_ai&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;GameMode : GM_Sandbox &amp;gt; Bone : CBP_SandboxCharacter_ai&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これで自身のキャラクターを動かせるようになります。今まで色々なモーションを試してきましたが、これは相当しっかり動きます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/m/post/ue/ue5_2024-06-20_125510.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;髪の毛が途中から動かなくなるのは以前解説したvrm4uのバグだと思います。standaloneで確認してください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>displayのdell g2524hを買った</title>
      <link>https://syui.github.io/blog/post/2024/06/13/pc/</link>
      <pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/13/pc/</guid>
      <description>&lt;p&gt;今までpcのスペックにあまり興味がありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;gpuを買ったときにもいいましたがdisplayも同じで、例えば、画質の良さとか個人的にはどうでもよかった。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、画質が良いに越したことはないのでしょうけど、そこまで気にしていないというか、そんな感じでした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ゲーム開発していると気になってきたので&lt;code&gt;dell g2524h&lt;/code&gt;というdisplayを買ってみました。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;          &lt;th&gt;スペック&lt;/th&gt;&#xA;          &lt;th&gt;値段&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.dell.com/ja-jp/shop/dell-25-%E3%82%B2%E3%83%BC%E3%83%9F%E3%83%B3%E3%82%B0%E3%83%A2%E3%83%8B%E3%82%BF%E3%83%BC-g2524h/apd/210-bhxm/&#34;&gt;dell g2524h&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;FHD(1920x1080) / IPS / 240 Hz / 0.5 ms&lt;/td&gt;&#xA;          &lt;td&gt;JPY 28,800&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;gpuもそうですけど、あんまり詳しくないんですよね。個人的に理解しているところはあるけど、それが合ってるのかわからない。&lt;/p&gt;&#xA;&lt;p&gt;例えば、gpuは計算機。何を計算するのかというと主に描写のための計算です。ゲームは描写です。ですから主にゲームの描写に使われることが多いという理解。&lt;/p&gt;&#xA;&lt;p&gt;displayはその描写の出力先です。フレッシュレートというものがあり、ある時間内にどれだけ出力できるか数値で表します。例えば、1秒間に1回と3回の性能の違いがあれば、後者のほうが滑らかに映ります。&lt;/p&gt;&#xA;&lt;p&gt;いくらgpuが時間内に計算できても出力先にそれを表示できる性能がなければ表示することはできません。&lt;/p&gt;&#xA;&lt;p&gt;ということで、ゲームを開発してて特に動きが残像のようになって良くないと思ったので買いました。使っていたのは&lt;code&gt;60 Hz&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;displayはbenqのやつしか買ってこなかったんですけど、今回は違うメーカーのやつを買いました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5.4の感想とvrm4uで髪が動くようになっていた話</title>
      <link>https://syui.github.io/blog/post/2024/06/12/ue/</link>
      <pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/06/12/ue/</guid>
      <description>&lt;p&gt;&lt;code&gt;ue5.3&lt;/code&gt;から&lt;code&gt;ue5.4&lt;/code&gt;にupdateしてみました。結論からいうと5.3をおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;色々なバグがありました。具体的には以下のとおりです。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;飛行するとカメラがモデル内部に入り込む / ABP_flying, apply additive, scale&lt;/li&gt;&#xA;&lt;li&gt;飛行の上下左右の向きが反映されない / ABP_flying, rtg&lt;/li&gt;&#xA;&lt;li&gt;package buildすると髪の毛が動かなくなる / BP_Player&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/m/post/ue/&#34;&gt;こちら&lt;/a&gt;で解説しています。&lt;/p&gt;&#xA;&lt;p&gt;この中でbuildすると髪の毛が動かなくなる現象について解説します。&lt;/p&gt;&#xA;&lt;p&gt;今回の話はvrm4uをupdateすると髪の毛が動くようになっていたことから始まります。&lt;/p&gt;&#xA;&lt;p&gt;昔は動かなかったのですが、いつの間にか動くようになっていました。リターゲットしたアニメーションを見てみると内部に髪が入りこまないようになっていたのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、喜んだのもつかの間でpackage buildすると60秒後くらいから動かなくなります。これはstandaloneから確認してください。&lt;/p&gt;&#xA;&lt;p&gt;色々な方法で回避することは可能です。例えば、mapに&lt;code&gt;BP_Player&lt;/code&gt;を設置してevent tickで&lt;code&gt;add child actor&lt;/code&gt;することで持続的に動くようになります。ただこのような解決策は本筋ではありません。&lt;/p&gt;&#xA;&lt;p&gt;現状では&lt;code&gt;KawaiiPhysics&lt;/code&gt;を使って髪を動かしたほうがいいと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linkの集約</title>
      <link>https://syui.github.io/blog/post/2024/05/20/bluesky/</link>
      <pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/05/20/bluesky/</guid>
      <description>&lt;p&gt;今までいろんなサービスや自前運用をやってみて、ある程度の期間使ってみて、自分は何を使えばいいのかが定まってきたので、そのへんの知見を共有します。&lt;/p&gt;&#xA;&lt;p&gt;最も一般的なのは以下の2つです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;github&lt;/li&gt;&#xA;&lt;li&gt;twitter&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;次に、いわゆるgeekと呼ばれる人達はそこから移行する傾向にあります。例えば、コンピュータサイエンスの人などはmastodonで発信することが増えています。&lt;/p&gt;&#xA;&lt;p&gt;個性派の人は以下のうちどちらか1つを使うのがいいでしょう。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;gitea / forgejo&lt;/li&gt;&#xA;&lt;li&gt;mastodon / bluesky&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;blueskyは簡単にpdsを建てられます。pdsを建て&lt;code&gt;bsky.network&lt;/code&gt;に参加すれば連合できます。&lt;/p&gt;&#xA;&lt;p&gt;linkは基本的にsnsとvcsの2つあればいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;その他に私が利用したものは以下の通りです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;matrix / discord&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;使用頻度はかなり低いです。&lt;code&gt;atproto&lt;/code&gt;がそのうちchatに対応してくれるといいですね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;domain&#34;&gt;domain&lt;/h2&gt;&#xA;&lt;p&gt;現在持っているdomainは以下の3つです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;syui.ai&lt;/li&gt;&#xA;&lt;li&gt;syui.ai&lt;/li&gt;&#xA;&lt;li&gt;syu.is&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;増えてきているので1つにまとめたい。でも1つだとテストなどで不便なことがあります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;個人的ベスト&#34;&gt;個人的ベスト&lt;/h2&gt;&#xA;&lt;p&gt;ここでlinkを集約するための合理的かつシンプルな方法はなんでしょう。&lt;/p&gt;&#xA;&lt;p&gt;domainは1つは持っておきたいものですよね。&lt;/p&gt;&#xA;&lt;p&gt;したがって、最も合理的かつシンプルに考えると、そのdomainに全て集約するのがベストです。&lt;/p&gt;&#xA;&lt;p&gt;個人的には&lt;code&gt;syui.ai&lt;/code&gt;に集約するのが一番いいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;現時点でsns, vcsも&lt;code&gt;syui.ai&lt;/code&gt;を実用しているので、それ以外のアカウントを削除すれば実現可能。&lt;/p&gt;&#xA;&lt;p&gt;しかし、それをやると相当な不便が伴います。&lt;/p&gt;&#xA;&lt;p&gt;多くの開発者はgithubを利用しているので、issueを書くにもgithubのアカウントがいるでしょう。twitterも同じです。そして、domainは1つだけ持つのが理想的ですが、開発用途やサービス上の問題から2つ以上ないと困ることがあります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;理想と現実&#34;&gt;理想と現実&lt;/h2&gt;&#xA;&lt;p&gt;完全な理想でいうとこうなります。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;host&lt;/th&gt;&#xA;          &lt;th&gt;type&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;all&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;妥協的な理想はこうなります。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;account&lt;/th&gt;&#xA;          &lt;th&gt;type&lt;/th&gt;&#xA;          &lt;th&gt;protocol&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;web&lt;/td&gt;&#xA;          &lt;td&gt;http&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;sns&lt;/td&gt;&#xA;          &lt;td&gt;at&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@git.syui.ai:syui&lt;/td&gt;&#xA;          &lt;td&gt;vcs&lt;/td&gt;&#xA;          &lt;td&gt;git&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;現実的にはこれがベストです。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;account&lt;/th&gt;&#xA;          &lt;th&gt;type&lt;/th&gt;&#xA;          &lt;th&gt;protocol&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui__&lt;/td&gt;&#xA;          &lt;td&gt;sns&lt;/td&gt;&#xA;          &lt;td&gt;twitter.com&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui&lt;/td&gt;&#xA;          &lt;td&gt;vcs&lt;/td&gt;&#xA;          &lt;td&gt;github.com&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;実際のlinkはさらに増えていきます。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;account&lt;/th&gt;&#xA;          &lt;th&gt;type&lt;/th&gt;&#xA;          &lt;th&gt;protocol&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui__&lt;/td&gt;&#xA;          &lt;td&gt;sns&lt;/td&gt;&#xA;          &lt;td&gt;twitter.com&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui&lt;/td&gt;&#xA;          &lt;td&gt;vcs&lt;/td&gt;&#xA;          &lt;td&gt;github.com&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syuw&lt;/td&gt;&#xA;          &lt;td&gt;chat&lt;/td&gt;&#xA;          &lt;td&gt;discord.com&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syai&lt;/td&gt;&#xA;          &lt;td&gt;video&lt;/td&gt;&#xA;          &lt;td&gt;youtube.com&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;web&lt;/td&gt;&#xA;          &lt;td&gt;http&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;sns&lt;/td&gt;&#xA;          &lt;td&gt;at&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@syui@syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;sns&lt;/td&gt;&#xA;          &lt;td&gt;activitypub&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@syui:syui.ai&lt;/td&gt;&#xA;          &lt;td&gt;chat&lt;/td&gt;&#xA;          &lt;td&gt;matrix&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;@git.syui.ai:syui&lt;/td&gt;&#xA;          &lt;td&gt;vcs&lt;/td&gt;&#xA;          &lt;td&gt;git&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;どうすればいいのか&#34;&gt;どうすればいいのか&lt;/h2&gt;&#xA;&lt;p&gt;最もよく使うsns, vcsの2つに絞ります。そのうえで自身が一般派と個性派のどちらに所属しているかを見極めます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5のpixel streamingを試してみる</title>
      <link>https://syui.github.io/blog/post/2024/05/18/ue-pixel-streaming/</link>
      <pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/05/18/ue-pixel-streaming/</guid>
      <description>&lt;p&gt;&lt;code&gt;pixel-streaming&lt;/code&gt;を使うとwebでゲームを配信できます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/ue5_pixel_streaming_2024-05-19-3.58.09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;まずpluginを導入して、previewしてみましょう。プラットフォームの横に&lt;code&gt;pixel streaming&lt;/code&gt;の項目が追加されているので、&lt;code&gt;シグナリングサーバーを起動&lt;/code&gt;と&lt;code&gt;レベルエディタをストリーミング&lt;/code&gt;を選択して、レベルを再生します。&lt;code&gt;localhost:80&lt;/code&gt;にアクセスするとゲームをプレイできます。&lt;/p&gt;&#xA;&lt;p&gt;大体このよう流れですが、ゲームをbuildするとpixel-streaming用の&lt;code&gt;.exe&lt;/code&gt;ができるので、それをserverに置いて実行します。&lt;/p&gt;&#xA;&lt;p&gt;そして、streaming(port:8888)とplayer(port:80)を起動します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/EpicGamesExt/PixelStreamingInfrastructure&#34;&gt;https://github.com/EpicGamesExt/PixelStreamingInfrastructure&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:windows.ps1&#34; data-lang=&#34;sh:windows.ps1&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;//github.com/EpicGamesExt/PixelStreamingInfrastructure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/EpicGamesExt/PixelStreamingInfrastructure/tree/master/SignallingWebServer/platform_scripts/cmd&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git checkout UE5.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd PixelStreamingInfrastructure/SignallingWebServer/platform_scripts/cmd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./setup.bat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./Start_SignallingServer.ps1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WebSocket listening to Streamer connections on &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8888&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WebSocket listening to Players connections on &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Http listening on *&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;serverのipが&lt;code&gt;1.1.1.1&lt;/code&gt;だったとして、&lt;code&gt;1.1.1.1:80&lt;/code&gt;にアクセスすればプレイできます。&lt;/p&gt;&#xA;&lt;p&gt;linux用にbuildして、dockerを使うといいのですが、その場合はlinux serverにgpuを積んでおく必要があります。これにplayerもついているのかはわかりません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker pull pixelstreamingunofficial/pixel-streaming-signalling-server:5.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;docs : &lt;a href=&#34;https://dev.epicgames.com/documentation/ja-jp/unreal-engine/getting-started-with-pixel-streaming-in-unreal-engine&#34;&gt;https://dev.epicgames.com/documentation/ja-jp/unreal-engine/getting-started-with-pixel-streaming-in-unreal-engine&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>archlinuxでnetworkがfreezeする</title>
      <link>https://syui.github.io/blog/post/2024/05/13/arch/</link>
      <pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/05/13/arch/</guid>
      <description>&lt;p&gt;archlinuxがfreeze(フリーズ)する現象は何度か確認されていて、&lt;code&gt;macbook air&lt;/code&gt;にインストールしているものにのみ発生します。&lt;/p&gt;&#xA;&lt;p&gt;以前、高頻度にfreezeを引き起こしていたのはkernel modulesの&lt;code&gt;rtw88_8821ce&lt;/code&gt;です。&lt;code&gt;blacklist rtw88_8821ce&lt;/code&gt;することで回避できます。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これを回避してもたまにfreezeすることがあって、freezeするとethで接続しているネットワーク全体、つまり、ルーターの機能を停止させてしまうというよくわからない現象が発生していました。&lt;/p&gt;&#xA;&lt;p&gt;この現象は不定期でかつ何らかのアクションがトリガーになっているわけではありません。放置しておくとたまに発生するみたいな感じです。&lt;/p&gt;&#xA;&lt;p&gt;そして、wifi接続の場合はルーターに影響を及ぼすことはありませんが、eth接続の場合はネットワーク全体が止まりました。そのルーターに接続されている他のパソコンもネットワークが止まります。&lt;/p&gt;&#xA;&lt;p&gt;これもwifiに関連するドライバが影響を及ぼしていました。そして、wifiデバイスを立ち上げていない場合でも発生します。&lt;/p&gt;&#xA;&lt;p&gt;wifiを使わない場合は以下のような&lt;code&gt;broadcom&lt;/code&gt;関連のpakcageを削除しましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -Rs broadcom-wl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、最新螺旋攻略ガイド</title>
      <link>https://syui.github.io/blog/post/2024/05/02/genshin/</link>
      <pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/05/02/genshin/</guid>
      <description>&lt;p&gt;今回は最新の螺旋攻略ガイドとして今から原神を始めるならどうするかを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;最も優先すべきキャラはヌヴィレットではない&#34;&gt;最も優先すべきキャラはヌヴィレットではない&lt;/h2&gt;&#xA;&lt;p&gt;これは前回でも書きましたが、ヌヴィレットは1位ではありません。これは私が前期と今期の螺旋タイムから確信したことです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、フリーナとヌヴィレットではフリーナのほうが強いのです。&lt;/p&gt;&#xA;&lt;p&gt;というより、ヌヴィレットはフリーナがいないと、ちょっときついところがある。螺旋はクリアできるものの、タイムは縮まらないでしょう。万葉がいてもフリーナがいないと、なかなかに時間がかかってしまいます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これは私の手持ちにも依存しますが、フリーナの強さというのは、基本的にヌヴィレットを超えています。私の実感としてはそうですね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ナヒーダ完凸はアタッカーとしてヌヴィレット1凸を超える&#34;&gt;ナヒーダ完凸はアタッカーとしてヌヴィレット1凸を超える&lt;/h2&gt;&#xA;&lt;p&gt;次は、ナヒーダとヌヴィレットの比較になります。&lt;/p&gt;&#xA;&lt;p&gt;前回、ナヒーダは強いと書きました。それがどういった意味かを改めて説明すると、ナヒーダ完凸は基本的にヌヴィレット1凸を超えます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは完凸でアタッカーができるようになります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、今期の螺旋でナヒーダ+フリーナで組むと、ヌヴィレット+フリーナのタイムを超えます。&lt;/p&gt;&#xA;&lt;p&gt;一時的に超えるとかではなく、だいたいこのタイムが出るというのがあって、ナヒーダPTのほうがタイムが早くなるのです。&lt;/p&gt;&#xA;&lt;p&gt;前半は3-5秒ほどの差に収まりますが、後半はナヒーダPTが圧勝します。&lt;/p&gt;&#xA;&lt;p&gt;今期は後半のほうがきつくて、動画を見ると前半ヌヴィレットがすごく見えますが、後半を担当すると結構きつくて安定しません。10-20秒の差が出ることも珍しくない。&lt;/p&gt;&#xA;&lt;p&gt;そして問題はそれだけでもなくて、ヌヴィレットはフリーナを入れないとタイムはガクンと落ちます。ナヒーダPTはフリーナを抜いてもそこまで落ちません。&lt;/p&gt;&#xA;&lt;p&gt;このことから言えるのは、ヌヴィレットを引く場合、フリーナも引いたほうがいいということ。そして、どちらか一方を引くならフリーナをおすすめするということです。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、私のフリーナは2凸なので、無凸だと評価は変わってくるかもしれません。&lt;/p&gt;&#xA;&lt;h2 id=&#34;螺旋攻略ガイド&#34;&gt;螺旋攻略ガイド&lt;/h2&gt;&#xA;&lt;p&gt;次は螺旋攻略ガイドです。&lt;/p&gt;&#xA;&lt;p&gt;私の手持ちキャラは案外少なくて、無課金でプレイしています。ですから、私のように課金しないルールのもとプレイしている人は特に参考になるかもしません。&lt;/p&gt;&#xA;&lt;p&gt;私が引いて現在使っていないキャラは&lt;code&gt;甘雨&lt;/code&gt;, &lt;code&gt;綾華&lt;/code&gt;, &lt;code&gt;ウェンティ&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;甘雨だけは全く使わなかったため、引かなくていいキャラだと思います。&lt;code&gt;綾華&lt;/code&gt;, &lt;code&gt;ウェンティ&lt;/code&gt;は少しの間使ってました。ただ、今は引かなくてよかったかもと思います。&lt;/p&gt;&#xA;&lt;p&gt;星4キャラの確保、凸数、育成も非常に重要です。&lt;/p&gt;&#xA;&lt;p&gt;それらを考慮し、引くべきキャラは以下の通り。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ナヒーダ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;フリーナ / 万葉&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;ヌヴィレット&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;星5&#34;&gt;星5&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;フリーナ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;ヌヴィレット&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;風&lt;/td&gt;&#xA;          &lt;td&gt;万葉&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;星4&#34;&gt;星4&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;忍&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;ベネット&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;香菱&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;まず最初に上記のキャラを引いて育成します。&lt;/p&gt;&#xA;&lt;p&gt;案外少ないと思われるかもしれませんね。&lt;/p&gt;&#xA;&lt;p&gt;武器は引かなくていいです。私はナヒーダに祭礼、ヌヴィレットに金箔を使っています。どちらも入手難易度は高くありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;補足&#34;&gt;補足&lt;/h3&gt;&#xA;&lt;p&gt;いくつか注意点を書きます。&lt;code&gt;雷電&lt;/code&gt;の評価は下がってきており、私自身もヌヴィレットを引いてから使わなくなっています。ただ、螺旋攻略には雷電ナショナルが今も有効で、星36を取る分には困らないと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;アルレッキーノ&lt;/code&gt;は雷電、鍾離の代わりに引いてもいいかもしれませんが、おすすめはしません。アタッカーなので今後使われなくなる可能性は高いです。私が確保した&lt;code&gt;綾華&lt;/code&gt;もそうですね。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;岩&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;私は持っていないけどおすすめなキャラは以下の通りです。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;八重&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;          &lt;td&gt;白朮&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;ニィロウ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;夜蘭&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ただ、私の場合は今後も引くことはないと思います。雷電、鍾離の枠を以下のキャラにしてもいいかもしれないとは思いますが、私は雷電、鍾離を引くでしょう。好みの問題もあります。例えば、ニィロウは可愛いし、ナヒーダと組み合わせると強さ的にも最強です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ヌヴィレットの評価</title>
      <link>https://syui.github.io/blog/post/2024/05/01/genshin/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/05/01/genshin/</guid>
      <description>&lt;p&gt;螺旋とかでしばらく使ってみて、ヌヴィレットの評価がまとまったので共有します。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットは引いておいたほうがいいキャラの上位に入ると思います。&lt;/p&gt;&#xA;&lt;p&gt;ただ、使っていると完璧だと思っていたヌヴィレットにも結構弱点があって、今後、使わなくなる可能性も高いと思いました。&lt;/p&gt;&#xA;&lt;p&gt;では、その弱点とは何でしょう。一つは完凸でもしない限り永続性を持たないことです。神属性を持つキャラは永続性、ループ性能を持ちます。スキル効果を使い続けることができる。ですが、ヌヴィレットで重撃をループさせるには工夫が必要です。単体では難しいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;もう一つは、元素反応です。使われつづけるキャラの特徴として、裏から元素反応を継続的に起こせることが挙げられます。&lt;/p&gt;&#xA;&lt;p&gt;新しいキャラ、強いキャラは今後も出てくるでしょうから、アタッカーは単純火力で負けてしまうと、使い続けるのは難しい。&lt;/p&gt;&#xA;&lt;p&gt;そして、ヌヴィレットはずっと表に出して戦うキャラです。今後使わなくなる可能性は高いでしょう。&lt;/p&gt;&#xA;&lt;p&gt;しかしそれまではずっと使われ続けるキャラになると思います。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットを引いてから螺旋でタイム見るのが楽しくなったので引いてよかった。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ヌヴィレット完凸よりフリーナ完凸を&#34;&gt;ヌヴィレット完凸よりフリーナ完凸を&lt;/h2&gt;&#xA;&lt;p&gt;次に、ヌヴィレットの完凸よりフリーナの完凸をおすすめする理由について話します。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットは既に強いキャラです。アタッカー性能がある。&lt;/p&gt;&#xA;&lt;p&gt;対して、フリーナはアタッカー性能はあんまりなくて、完凸するとアタッカーもできます。&lt;/p&gt;&#xA;&lt;p&gt;この場合、既に強いキャラをそれ以上強くするのではなく、弱いキャラを強くするほうが結果として強くなります。原神はPTで戦うゲームだからです。&lt;/p&gt;&#xA;&lt;p&gt;完凸するならフリーナをおすすめします。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ナヒーダの強さ&#34;&gt;ナヒーダの強さ&lt;/h2&gt;&#xA;&lt;p&gt;私はメインアタッカーにナヒーダを使っていますが、ナヒーダはヌヴィレットより強いと言うか、基本的にはヌヴィレットよりも優先して引いたほうがいいキャラです。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダがいれば、あとは水キャラを入れればPTは完成です。弱そうと思われるかもしれませんけど、とても強いです。&lt;/p&gt;&#xA;&lt;p&gt;螺旋の動画を上げていますが、私はナヒーダをメインに使ってます。&lt;/p&gt;&#xA;&lt;p&gt;これは何もお気に入りだから使ってるわけではなく、ナヒーダがいないとタイムがきついのです。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは引いておいたほうがいいキャラの特徴を持っています。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、攻撃の必中化、全体化、そして、最も重要なのは継続的な元素付与です。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは、複数の敵に確実に当たる攻撃を行い、かつそれが継続的に元素を付与します。おまけに元素反応が起こるとスキルの追撃が発生します。1体ではなく全体にです。しかもナヒーダは基本的に攻撃を外しません。攻撃は必中化されており、そこに草元素が付与されます。付与され続ける。裏にいても変わりません。&lt;/p&gt;&#xA;&lt;p&gt;こういった特徴を持つキャラは、火力を無視して引いておいたほうがいい。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットの弱点とも重なるのですが、ヌヴィレットは水無効の敵にはすごく弱いと感じています。PTにフリーナと万葉を入れることが多く、それだとどうしようもありません。できることは鍾離の物理で殴り続けるくらい&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;対してナヒーダのPTは草無効の敵とも結構戦えるんです。ナヒーダは万葉に似て、弱点らしい弱点があまりないキャラです。スキル時に完全中断耐性もあるし。万葉は水無効の敵には氷を拡散して、氷無効の敵には炎を拡散して戦えますよね。あれに似ています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>solar-system</title>
      <link>https://syui.github.io/blog/post/2024/04/28/nasa/</link>
      <pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/28/nasa/</guid>
      <description>&lt;p&gt;この前、nasaのvoyager-1の不具合が修正された話がありました。&lt;/p&gt;&#xA;&lt;p&gt;私もニュース媒体でそれを知り、最もわかりやすかったのは&lt;a href=&#34;https://gigazine.net/news/20240423-voyager-1-resumes-sending-signal/&#34;&gt;gigazine.net&lt;/a&gt;の記事だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;nasa&lt;/code&gt;には&lt;code&gt;solar-system&lt;/code&gt;があって、そこではvoyagerのstoryも公開されています。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://eyes.nasa.gov/apps/solar-system/#/story/voyager_grand_tour?slide=slide_2&#34; allowfullscreen frameborder=&#34;0&#34; style=&#34;width:100%;height:500px;&#34;&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://yui.syui.ai&#34;&gt;yui.syui.ai&lt;/a&gt;のレイアウトを考えてて、あれも宇宙に関係した話なので&lt;code&gt;solar-system&lt;/code&gt;を自前で作りたいなと思い作ってみました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;host : &lt;a href=&#34;https://yui.syui.ai/pkg/solar&#34;&gt;https://yui.syui.ai/pkg/solar&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;camera:earth&lt;/code&gt;にしてみてください。&lt;/p&gt;&#xA;&lt;p&gt;参考にしたのは&lt;a href=&#34;https://github.com/solarcg/SolarSys&#34;&gt;solarcg/SolarSys&lt;/a&gt;です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>このサイトをどうしようか考えている</title>
      <link>https://syui.github.io/blog/post/2024/04/26/bluesky/</link>
      <pubDate>Fri, 26 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/26/bluesky/</guid>
      <description>&lt;p&gt;現在、このサイトのlayoutなどを変更しています。&lt;/p&gt;&#xA;&lt;p&gt;色々な機能を付けていたのですが、整理したほうがいいと思ったついでにはじめました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;link&#34;&gt;link&lt;/h2&gt;&#xA;&lt;p&gt;主に&lt;code&gt;bluesky&lt;/code&gt;との連携を強化しています。&lt;/p&gt;&#xA;&lt;p&gt;かつては&lt;a href=&#34;https://github.com/utterance/utterances&#34;&gt;utteranc&lt;/a&gt;というコメントシステムを採用していました。&lt;code&gt;utteranc&lt;/code&gt;はgithubのissueからコメントを投稿できるものです。&lt;/p&gt;&#xA;&lt;p&gt;私のblogは&lt;code&gt;github pages&lt;/code&gt;を利用していますから、githubのissueを利用するのは効率的、合理的ですが、独自性はありません。&lt;/p&gt;&#xA;&lt;p&gt;昔からblogのコメントシステムとsnsの連携は考えていましたが、重い腰が上がらず放置していました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回はblueskyからコメントを投稿できるようにして、この方針は当分変わらないと思います。&lt;/p&gt;&#xA;&lt;p&gt;また、個人アカウントのlinkをblueskyに変更しました。具体的には&lt;code&gt;@syui&lt;/code&gt;のところですね。&lt;/p&gt;&#xA;&lt;p&gt;これについては以前から迷っていて、&lt;code&gt;twitter&lt;/code&gt;, &lt;code&gt;mastodon&lt;/code&gt;, &lt;code&gt;github&lt;/code&gt;&amp;hellip;あるいはこのサイトのプロフィール、どれを使えばいいんだろうと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;私は特に決まった場所で活動するわけではなく、その時々で色々なのです。&lt;/p&gt;&#xA;&lt;p&gt;そんな中、最近は&lt;code&gt;bluesky&lt;/code&gt;に間違いなくいるし、blueskyのhandleがこのサイトと同じなので、blueskyにしたほうがわかりやすいと思い、今後はblueskyでいこうと決めました。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;bluesky ↔ syui.ai&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;私は、&lt;code&gt;atproto&lt;/code&gt;のほうが&lt;code&gt;activitypub&lt;/code&gt;より個人に近いと思っています。&lt;/p&gt;&#xA;&lt;p&gt;簡単に説明すると、私は&lt;code&gt;mstdn.syui.ai&lt;/code&gt;というmastodonのserverを建てていて、addressは&lt;code&gt;@syui@syui.ai&lt;/code&gt;に向くようにしています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;@syui@mstdn.syui.ai → @syui@syui.ai&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;しかし、それですらadminか否か、ひと目でわかりません。&lt;code&gt;@syui&lt;/code&gt;は単なる&lt;code&gt;mstdn.syui.ai&lt;/code&gt;に登録しているuserの一人かもしれない。&lt;/p&gt;&#xA;&lt;p&gt;また、わざわざ&lt;code&gt;activitypub&lt;/code&gt;のserverを建て、継続的に運用すること自体が一般人にとって負担になるものです。技術的に難しい場合もある。&lt;/p&gt;&#xA;&lt;p&gt;一般人にとって難しいものが流行るでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;一方、&lt;code&gt;atproto&lt;/code&gt;は誰でも簡単に&lt;code&gt;custom handle&lt;/code&gt;を設定できます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、一般ユーザーがblogとactivitypubを違和感なく連携するにはどうすればいいですか。&lt;/p&gt;&#xA;&lt;p&gt;答えとしては「それは難しい」です。&lt;code&gt;@ai@mozilla.social&lt;/code&gt;というアカウントを持っていたとして、それをblogと連携しても&lt;code&gt;mozilla.social&lt;/code&gt;は外部サービスです。外部サービスは個人からより遠い。&lt;/p&gt;&#xA;&lt;p&gt;色々な意味でもblogとsnsを連携する場合、&lt;code&gt;atproto&lt;/code&gt;が最適だと判断しました。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、blogサービスはactivitypubとの連携を強めているところが多い印象です。&lt;/p&gt;&#xA;&lt;p&gt;分散snsとblogの連携が当たり前になることは予想していましたが、便利になることは間違いないので、この流れは歓迎です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ghost : &lt;a href=&#34;https://activitypub.ghost.org/&#34;&gt;https://activitypub.ghost.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;今後、blogとsnsの境界はさらに曖昧になっていくと思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;ghost&lt;/code&gt;がactivitypubのserverを建て、blogサービスをそのアカウントに統合すれば、ghostのアカウントはblogのアカウントであり、snsのアカウントでもあるということになります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;css&#34;&gt;css&lt;/h2&gt;&#xA;&lt;p&gt;cssで見栄えを変更できます。見栄えの方向性は&lt;code&gt;シンプル&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;あとは&lt;code&gt;朱色&lt;/code&gt;/&lt;code&gt;#ef454a&lt;/code&gt;かな。アイコンの色が朱色なので。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに&lt;code&gt;yui&lt;/code&gt;のほうは&lt;code&gt;#fff700&lt;/code&gt;です。こっちは覚えやすい。&lt;/p&gt;&#xA;&lt;p&gt;背景は&lt;code&gt;#f1f1f1&lt;/code&gt;/&lt;code&gt;#313131&lt;/code&gt;をよく使います。&lt;/p&gt;&#xA;&lt;p&gt;使用する色は3つくらいがいいですね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;gh-pagesとcf-pages&#34;&gt;gh-pagesとcf-pages&lt;/h2&gt;&#xA;&lt;p&gt;私がgh-pagesを利用しているのは、githubが提供するweb serverが無料であること、そのserverの応答が速いからです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、今現在はcloudflare pagesというものがあり、私のdomain(dns)はcloudflareを利用しているので、おそらくcloudflareに移行したほうが速くなるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;しかし、buildに関してはgh-pagesのほうが便利です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;gitsyuiai&#34;&gt;git.syui.ai&lt;/h2&gt;&#xA;&lt;p&gt;自分で運用しているgit server(gitea)は、反応が遅いので、あらゆるsrcを置いてlinkするのを控えています。&lt;/p&gt;&#xA;&lt;p&gt;本来ならそこのrawを使用すれば重複問題の解消やuploadの時間を短縮できますが、サイトが遅くなってしまっては元も子もありません。&lt;/p&gt;&#xA;&lt;p&gt;すべてを自前運用することは可能ですが、不便になるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;bot&lt;/code&gt;にしても&lt;a href=&#34;https://web.syu.is/profile/ai.syu.is&#34;&gt;ai.syu.is&lt;/a&gt;を&lt;code&gt;bsky.social&lt;/code&gt;と連合して、&lt;code&gt;pds&lt;/code&gt;に&lt;code&gt;syu.is&lt;/code&gt;を使用して、そちらの運用に切り替えることもできますが、なんとも微妙なところがあります。&lt;/p&gt;&#xA;&lt;p&gt;では&lt;code&gt;pds&lt;/code&gt;として&lt;code&gt;syui.ai&lt;/code&gt;を使用してはどうでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これにも問題は多い。&lt;code&gt;pds&lt;/code&gt;はsub domainを個人アカウントに向けなければなりません。つまり、基本的には&lt;code&gt;*.syui.ai&lt;/code&gt;が&lt;code&gt;pds&lt;/code&gt;に予約されます。その設定などもカオスを極めるでしょう。また、cloudflareはそれ以上のdomain設定が有料になります。&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、自前運用でも不便になりすぎる場合は、外部サービスを利用しています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのコメントシステムをhugoに取り込んだ</title>
      <link>https://syui.github.io/blog/post/2024/04/25/bluesky/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/25/bluesky/</guid>
      <description>&lt;p&gt;botに記事のpathを投げると、botがそのpathに有効なコメントシステムを開きます。botに返信していく形でコメントを投稿できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# このコマンドは管理者しか実行できません&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@yui.syui.ai /comment /blog/post/2024/04/25/bluesky/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これによりblueskyのアカウントを使ってblogのコメントに書き込むことができるようになりました。&lt;/p&gt;&#xA;&lt;p&gt;feedやembedを利用できるかもしれないと思いましたが、今のところ利用に適さないと判断しました。そのため、使用していません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのcustom feedでslash cmdを有効にした</title>
      <link>https://syui.github.io/blog/post/2024/04/12/bluesky/</link>
      <pubDate>Fri, 12 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/12/bluesky/</guid>
      <description>&lt;p&gt;blueskyでfeed serverを立て、slash command(cmd slash)を有効にしました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/feed-generator&#34;&gt;https://github.com/bluesky-social/feed-generator&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/help&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@yui.syui.ai /help&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;スラッシュ コマンドを使用すると、テーブル、タスクリスト、コード ブロックなど、より複雑な Markdown を簡単に入力できます。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://api.slack.com/interactivity/slash-commands&#34;&gt;https://api.slack.com/interactivity/slash-commands&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.github.com/issues/tracking-your-work-with-issues/about-slash-commands&#34;&gt;https://docs.github.com/issues/tracking-your-work-with-issues/about-slash-commands&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これによって何ができるのかというと、例えば、&lt;code&gt;/help&lt;/code&gt;と投稿すると、botが反応できるようになります。&lt;/p&gt;&#xA;&lt;p&gt;今までのbotは大体が(1)mention, replyで反応するか、(2)feed(following)から反応するか、(3)global timelineから反応するかの方法があり、それぞれに欠点がありました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;mention, reply : 最も合理的で負荷が少なくlimitに引っかかる可能性は少なく確実な方法。ただ、ユーザーからすると面倒&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;feed(following) : user timelineから取るので負荷も少ない。ただ、followingの処理が必要になったり、follow listの監視と解除があればその処理が必要&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;global timeline : ユーザーが増えるにつれて流速が早くなり負荷が高くなる。全部に対応するのが難しくなるかも&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;しかし、feed serverを自分で建て、そこから反応すると、このようなデメリットを解消できます。これは&lt;code&gt;custom feed&lt;/code&gt;と呼ばれるものになります。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、&lt;a href=&#34;https://skyfeed.app/&#34;&gt;skyfeed&lt;/a&gt;で簡単に作れますが、自前でhostするのがいいです。&lt;code&gt;skyfeed&lt;/code&gt;だと反応が遅くなってしまう。&lt;/p&gt;&#xA;&lt;p&gt;feed server自体は、昔に&lt;code&gt;feed.syu.is&lt;/code&gt;のほうで建てていて、今回はそれを&lt;code&gt;bsky.network&lt;/code&gt;にdeply(登録)し、didを&lt;code&gt;bsky.social&lt;/code&gt;のaccountに変更したのと、algosの正規表現を調整しました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/did:plc:4hqjfn7m6n5hno3doamuhgef/feed/cmd&#34;&gt;bsky.app&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://feed.syu.is/xrpc/app.bsky.feed.getFeedSkeleton?feed=at://did:plc:4hqjfn7m6n5hno3doamuhgef/app.bsky.feed.generator/cmd&#34;&gt;app.bsky.feed.getFeedSkeleton&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/bluesky-social/feed-generator&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd feed-generator&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── scripts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   └── publishFeedGen.ts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── algos&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   ├── cmd.ts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   └── index.ts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── subscription.ts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;編集するのは上に挙げたファイルです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋を8:30以内にクリア</title>
      <link>https://syui.github.io/blog/post/2024/04/09/genshin/</link>
      <pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/09/genshin/</guid>
      <description>&lt;p&gt;1, 3は簡単だったのですが、2でカラクリの無敵タイムがきつかった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;9:00&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;8:30&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;9:00&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;岩シールドの耐久値&#34;&gt;岩シールドの耐久値&lt;/h2&gt;&#xA;&lt;p&gt;今回、螺旋の12-3後半では岩シールドを持った敵が出てきます。&lt;/p&gt;&#xA;&lt;p&gt;したがって、今回は攻撃の重さについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;unity, ue5のようなゲームエンジンでは、簡単に重さを設定できるようになっています。&lt;/p&gt;&#xA;&lt;p&gt;原神が独自に実装しているのか、あるいはゲームエンジンの基本機能を使って設定しているのかわかりませんが、攻撃や武器は重さのようなものが設定されていると思われます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、岩元素攻撃はこの重さも高く設定されているのではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;両手剣やクレーの重撃も重さが高く設定されていて、岩シールドを剥がしやすいと考えられます。岩シールドは主に岩元素や重さが影響します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>サイトのレイアウトを変更した</title>
      <link>https://syui.github.io/blog/post/2024/04/05/yui/</link>
      <pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/05/yui/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://yui.syui.ai&#34;&gt;yui.syui.ai&lt;/a&gt;という&lt;code&gt;yui&lt;/code&gt;の公式サイトを大幅に更新しました。&lt;/p&gt;&#xA;&lt;p&gt;更新作業は現在も進行中で、まだ微調整が続くかもしれませんが、今回やったことをまとめます。&lt;/p&gt;&#xA;&lt;p&gt;やったことは結構多くて、漫画のページを新しく作り直したことから始まり、コメントシステムを作って、それから公式サイトも作り直して、公式サイトに載せている&lt;code&gt;terminal&lt;/code&gt;とかを分離したうえで書き直したり、&lt;code&gt;gitea&lt;/code&gt;のthemeを作って適用したり、色々やってました。&lt;/p&gt;&#xA;&lt;p&gt;なぜこのようなことをやり始めたかというと、作品を最初から漫画で書きたいなと前々から思ってて、それを掲載するためのページを整えていたら、なぜか新しく&lt;code&gt;git&lt;/code&gt;アイコンまでデザインしはじめていました。&lt;/p&gt;&#xA;&lt;img src=&#34;https://git.syui.ai/assets/img/logo.svg&#34; width=&#34;100px&#34;&gt;&#xA;&lt;p&gt;公式サイトを&lt;code&gt;hugo&lt;/code&gt;で作ってるのは文章でも書こうかなと思って。&lt;/p&gt;&#xA;&lt;p&gt;私自身がアイのことを知ったり、自分のことを知ったり、世界のことを知ったりできるページにしたいな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gitea-custom-theme&#34;&gt;gitea custom theme&lt;/h3&gt;&#xA;&lt;p&gt;giteaでcustom themeを当てるやり方にちょっとハマったので紹介。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.gitea.com/administration/customizing-gitea&#34;&gt;https://docs.gitea.com/administration/customizing-gitea&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的には以下のようなfileを編集します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/data/gitea/public/assets/img/logo.svg&lt;/li&gt;&#xA;&lt;li&gt;/data/gitea/templates/home.tmpl&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/go-gitea/gitea/tree/main/templates&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo docker compose restart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;templates&lt;/code&gt;はなかなか厄介で、srcにあるような特殊なtagは基本的に使えないと思っておいたほうがいいです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:/data/gitea/templates/home.tmpl&#34; data-lang=&#34;html:/data/gitea/templates/home.tmpl&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{template &amp;#34;custom/footer&amp;#34; .}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:/data/gitea/templates/custom/footer.tmpl&#34; data-lang=&#34;html:/data/gitea/templates/custom/footer.tmpl&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;html&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;body&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;footer class=&amp;#34;page-footer&amp;#34;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;div class=&amp;#34;left-links&amp;#34;&amp;gt;© syui&amp;lt;/div&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;div class=&amp;#34;right-links&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;https://github.com/go-gitea/gitea&amp;#34;&amp;gt;gitea&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/footer&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/body&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/html&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、ヌヴィレット引いた感想</title>
      <link>https://syui.github.io/blog/post/2024/04/04/genshin/</link>
      <pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/04/genshin/</guid>
      <description>&lt;p&gt;ヌヴィレットは1凸しました。運命x350からx150に減りました。前回がすり抜けで終わってたので爆死です。&lt;/p&gt;&#xA;&lt;p&gt;さて、ヌヴィレットの評価ですが、強すぎる。個人的に万葉より評価高いかも。&lt;/p&gt;&#xA;&lt;p&gt;現在、私が使ってるアタッカーは実はクレーです。以前は綾華を使ってたのですが、フリーナが来てからはクレーのほうが強いので、クレーを使ってました。&lt;/p&gt;&#xA;&lt;p&gt;lv80くらいはまではクレーのほうが強いか、あるいは同じくらいかなって思ったのですが、lv90にしたら圧倒的にヌヴィレットのほうが強くなりました。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットが万葉より評価高い理由は単純に螺旋適正です。ちなみに、万葉は強いけど、私の中では万葉より雷電のほうが使用することは多いです。したがって、今のところ雷電のほうが評価高いかも。このへんは微妙ですけどね。&lt;/p&gt;&#xA;&lt;p&gt;ただ、ヌヴィレットとフリーナなら、フリーナのほうが評価高いです。&lt;/p&gt;&#xA;&lt;p&gt;最初からフリーナを2凸で使ってるからかもしれませんけど、フリーナがいるかいないかで総合ダメージが明らかに違います。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレット引いたので、はじめて螺旋の単騎やってみました。ヌヴィレットの使い方や特徴を把握できるのでやっておくといいですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>お店の味がするラーメンの作り方</title>
      <link>https://syui.github.io/blog/post/2024/04/03/private/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/03/private/</guid>
      <description>&lt;p&gt;今回は、適当に日常的な話でもしてみようと思ったので、お店の味がするラーメンの作り方でも紹介します。&lt;/p&gt;&#xA;&lt;p&gt;といっても、これについては各々、自分はこう作るみたいなやり方があるんじゃないかな。私も同じで自分なりのやり方があります。ラーメンの作り方というか。&lt;/p&gt;&#xA;&lt;p&gt;では、本当にお店の味が出せるのかというと、出せます。ただ、少し面倒なので、毎回やるわけじゃないですけど。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、ラーメンってスーパーで売ってますよね。インスタントラーメンです。カップラーメンではなく袋で売ってるやつ。&lt;/p&gt;&#xA;&lt;p&gt;あれを2種類、スープのもとになってるやつですが、それを2つ混ぜて1人前を作ります。これだけ。&lt;/p&gt;&#xA;&lt;p&gt;お湯はどれくらいいれるのかというと、1人前か1.5人前くらいかな。そのへんは適当に。&lt;/p&gt;&#xA;&lt;p&gt;最後に野菜やらなんやらを盛り付けて終わりです。お店の味がするラーメンの完成です。&lt;/p&gt;&#xA;&lt;p&gt;余った麺は、替え玉にして食べるといいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;インスタントラーメンはなぜお店の味にならないかというと、多分、コストを抑えてるからでしょう。&lt;/p&gt;&#xA;&lt;p&gt;あるいは組み合わせの問題かも。私の作り方だと組み合わせはかなり多くて、お店の味になる組み合わせがいくつかあります。とはいえ、その組み合わせで出せばお店の味にはなりますから、やはりコストかな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのコメントシステムを作ってみた</title>
      <link>https://syui.github.io/blog/post/2024/04/02/bluesky/</link>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/02/bluesky/</guid>
      <description>&lt;p&gt;この前、blueskyで特定の投稿に返信することで反映されるコメントシステムを作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;どういうふうに実現しているのかというと、結構複雑ですが、簡単に説明すると、私は以前からbotを動かしていて、そのついでに返信くらいは取得することができるので、新しく&lt;code&gt;openapi&lt;/code&gt;を追加してそこにコメント情報を登録し、このapiから取得する情報でwebページを生成します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/bluesky_comment_system_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://manga.syui.ai&#34;&gt;https://manga.syui.ai&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;簡単に概要を見ていくとこんな感じ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/main.rs&#34; data-lang=&#34;rust:src/main.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; uri_root &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;manga_uri {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;manga_uri:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, manga_uri);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Command::new(data_scpt(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ai&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;atproto&amp;#34;&lt;/span&gt;).arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;manga&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;handle)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;did)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;cid)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;uri)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;cid_root)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;uri_root)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;host)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;avatar)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .arg(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;prompt_chat)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .output()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .expect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zsh&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; String::from_utf8_lossy(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;output.stdout);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; d.to_string();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; text_limit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c_char(d);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; str_rep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reply::post_request(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            text_limit.to_string(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cid.to_string(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            uri.to_string(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cid_root.to_string(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            uri_root.to_string(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, str_rep);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    w_cid(cid.to_string(), log_file(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n1&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:src/manga.zsh&#34; data-lang=&#34;sh:src/manga.zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; manga_text&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;repo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$did&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;collection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app.bsky.feed.post&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&lt;/span&gt;$host&lt;span style=&#34;color:#e6db74&#34;&gt;/xrpc/com.atproto.repo.getRecord?repo=&lt;/span&gt;$repo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;collection=&lt;/span&gt;$collection&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;rkey=&lt;/span&gt;$rkey&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;cid=&lt;/span&gt;$cid&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;export text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -sL $url|jq -r .value.text&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; manga_add&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;aid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;api&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://api.syui.ai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;avatar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$com_option&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$com_option_sub_all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;export rkey&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $uri|cut -d / -f 5&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;bsky_url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://bsky.app/profile/&lt;/span&gt;$did&lt;span style=&#34;color:#e6db74&#34;&gt;/post/&lt;/span&gt;$rkey&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$host&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;syu.is&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;bsky_url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://web.syu.is/profile/&lt;/span&gt;$did&lt;span style=&#34;color:#e6db74&#34;&gt;/post/&lt;/span&gt;$rkey&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;manga_text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;j&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;owner\&amp;#34;:&lt;/span&gt;$aid&lt;span style=&#34;color:#e6db74&#34;&gt;, \&amp;#34;password\&amp;#34;:\&amp;#34;&lt;/span&gt;$pass&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;export mid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d $j -sL $api/mas|jq -r .id&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;j&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;updated_at\&amp;#34;:\&amp;#34;&lt;/span&gt;$date_iso&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;token\&amp;#34;:\&amp;#34;&lt;/span&gt;$token&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;did\&amp;#34;:\&amp;#34;&lt;/span&gt;$did&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;cid\&amp;#34;:\&amp;#34;&lt;/span&gt;$cid&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;uri\&amp;#34;:\&amp;#34;&lt;/span&gt;$uri&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;rkey\&amp;#34;:\&amp;#34;&lt;/span&gt;$rkey&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;bsky_url\&amp;#34;:\&amp;#34;&lt;/span&gt;$bsky_url&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;avatar\&amp;#34;:\&amp;#34;&lt;/span&gt;$avatar&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;handle\&amp;#34;:\&amp;#34;&lt;/span&gt;$handle&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;, \&amp;#34;text\&amp;#34;: \&amp;#34;&lt;/span&gt;$text&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;tmp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -X PATCH -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d $j -sL $api/mas/$mid&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo thx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:openapi.json&#34; data-lang=&#34;json:openapi.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/mas&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ma&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;summary&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;List Mas&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;List Mas.&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;operationId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;listMa&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;page&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;in&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;what page to render&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;minimum&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;itemsPerPage&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;in&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item count to render per page&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;maximum&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;minimum&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responses&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;result Ma list&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/schemas/MaList&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;400&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/400&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/404&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;409&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/409&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/500&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ma&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;summary&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Create a new Ma&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creates a new Ma and persists it to storage.&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;operationId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;createMa&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestBody&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ma to create&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;token&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;limit&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;boolean&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;handle&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;did&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;avatar&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cid&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;rkey&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;bsky_url&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;updated_at&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date-time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date-time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;owner&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;owner&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responses&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ma created&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/schemas/MaCreate&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;400&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/400&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;409&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/409&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$ref&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#/components/responses/500&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bsky_comment&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open == false&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment-body&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_first&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;/icon/&amp;#39; + comment_first.did.replace(&amp;#39;did:plc:&amp;#39;, &amp;#39;&amp;#39;) + &amp;#39;.jpg&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_first.avatar&amp;#34; class=&amp;#34;comment&amp;#34;/&amp;gt;  &amp;lt;span class=&amp;#34;comment-time&amp;#34; v-if=&amp;#34;comment_first.updated_at&amp;#34;&amp;gt;&amp;lt;a :href=&amp;#34;comment_first.bsky_url&amp;#34;&amp;gt;{{ moment(comment_first.updated_at) }}&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;comment-handle&amp;#34; v-if=&amp;#34;comment_first.handle&amp;#34;&amp;gt;&amp;lt;a :href=&amp;#34;&amp;#39;https://&amp;#39; + comment_first.bsky_url.split(&amp;#39;/&amp;#39;).slice(2,5).join(&amp;#39;/&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;comment_first.handle&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment-text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_first.text&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;comment_first.text&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_first.bsky_url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_blank&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;post&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-on&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open = !comment_open&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fa-solid fa-chevron-down&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bsky_comment&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-else&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i in api_json.data&amp;#34; class=&amp;#34;comment&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment-body&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;axios_check&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&amp;#39;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i.did.replace&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;did&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&amp;#39;)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.jpg&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;)&lt;/span&gt; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;/icon/&amp;#39; + i.did.replace(&amp;#39;did:plc:&amp;#39;, &amp;#39;&amp;#39;) + &amp;#39;.jpg&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url_check&amp;#34; class=&amp;#34;comment&amp;#34;/&amp;gt;&amp;lt;img :src=&amp;#34;i.avatar&amp;#34; v-else-if=&amp;#34;i.avatar&amp;#34; class=&amp;#34;comment&amp;#34;/&amp;gt;  &amp;lt;span class=&amp;#34;comment-time&amp;#34; v-if=&amp;#34;i.updated_at&amp;#34;&amp;gt;&amp;lt;a :href=&amp;#34;i.bsky_url&amp;#34;&amp;gt;{{ moment(i.updated_at) }}&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;comment-handle&amp;#34; v-if=&amp;#34;i.handle&amp;#34;&amp;gt;&amp;lt;a :href=&amp;#34;&amp;#39;https://&amp;#39; + i.bsky_url.split(&amp;#39;/&amp;#39;).slice(2,5).join(&amp;#39;/&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;i.handle&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment-text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i.text&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;i.text&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-on&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_open = !comment_open&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fa-solid fa-chevron-up&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;blueskyのapiは、いくつか認証不要のものがありますが、それではavatarとかreplyとかthreadとかを取れません。したがって、loginする必要があります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、スターダスト交換が切れたのでヌヴィレット引くかも</title>
      <link>https://syui.github.io/blog/post/2024/04/01/genshin/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/04/01/genshin/</guid>
      <description>&lt;p&gt;フリーナのガチャで貯まってたスターダスト交換で毎月、運命x5に変換してたんだけど、それが今月無くなった。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今月中に何らかのガチャをやっておいたほうがお得かもしれないことに気づいた。&lt;/p&gt;&#xA;&lt;p&gt;例えば、1年間ガチャをやらなかった場合、毎月交換できる5x12=60の運命を逃してしまうことになる。&lt;/p&gt;&#xA;&lt;p&gt;簡単な計算をすると、1年で300が貯まるとして、ガチャで-90、交換で+60のパターン1と300貯めて使わないパターン2があったとして、私は前者のほうがお得だと思う。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;270 + 1キャラ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;300&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これは極端な例だけど、今の状態だと毎月のスターダスト交換で運命x5が取得できない。その解消にはガチャを回すしかないという話。&lt;/p&gt;&#xA;&lt;p&gt;で、今回ピックアップされるのが最強と言われるヌヴィレットなので、引いておいたほうがいいかもなと思い直した。&lt;/p&gt;&#xA;&lt;p&gt;単純なガチャ禁ってのも非効率にできてるんだなあ。今後ゲームでも作ることがあるなら参考にしよ。&lt;/p&gt;&#xA;&lt;p&gt;そして、今後は縁x5は絶対に交換しないようにしたほうがいいね。武器とか不足してるから縁x5にも交換しちゃってた。&lt;/p&gt;&#xA;&lt;p&gt;たくさんあるから次ガチャやるまでは持つだろうと思ってたら、持たなかった。交換するのは運命のみがいい。&lt;/p&gt;&#xA;&lt;p&gt;そういえば最近デイリーはやらずに、宝箱とか探してデイリー報酬を得るやり方に切り替えた。ついでに探索度も上げられるし飽きないのでいいね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>久しぶりにスクワットやった</title>
      <link>https://syui.github.io/blog/post/2024/03/31/private/</link>
      <pubDate>Sun, 31 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/03/31/private/</guid>
      <description>&lt;p&gt;久しぶりにスクワットx200を日課に取り入れて1週間過ごしたんだけど、少し感想を残しておきます。&lt;/p&gt;&#xA;&lt;p&gt;ランニングと腕立てx200は続けてたんだけど、腹筋とスクワットはやめていて、なぜかというと、スクワットはきついのが嫌で、腹筋はベッドに負荷がかかるのが嫌だったので、日課から自然消滅してた。&lt;/p&gt;&#xA;&lt;p&gt;で、久しぶりにやるかと思ってやってみた1日目が相当きつかった。2,3日目もきつくて、4日目もきつかった。&lt;/p&gt;&#xA;&lt;p&gt;どれくらいきつかったかというと、1日目はスクワットx200やったあとに6,7km走るんだけど、死にかけた。2日目は半分死にかけた。3日目はめちゃくちゃきつかった。そんな感じだった。&lt;/p&gt;&#xA;&lt;p&gt;足があんまり動かなくて、これはスクワットやってたとき最初はいつもこんな感じだった記憶がある。でもすぐに治ってた記憶もあるので、すぐに治るだろうと思ってたら、6,7日目にやっと普通に戻った。&lt;/p&gt;&#xA;&lt;p&gt;それまではまるで走れないし、なぜか息切れする。&lt;/p&gt;&#xA;&lt;p&gt;メニューとしては、スクワットx200, 腕立てx200, 腹筋x200やったあと6,7km走るだけ。各筋トレはそこまでしっかりやるもんじゃなくて、適当にぱぱっとやる感じ。&lt;/p&gt;&#xA;&lt;p&gt;この中で、スクワットだけは昔からきつくて、今回、筋肉痛終わるのが1週間くらいかかってる。前もそうだったかな。あんまり記録してないからわからないけど、印象的にはそんなかかってなかった気がする。&lt;/p&gt;&#xA;&lt;p&gt;でも一旦筋肉痛が終わると、あとは毎日やってても別になんともなくなるので、多分、この辛さもこれが最後だろうと思う。&lt;/p&gt;&#xA;&lt;p&gt;さて、期間中にあった具体的な症状としては、1~3日目は普通に歩けないし、階段の上り下りがとにかくきつい。4,5日目は、寝てるとき足に何かが貯まっていく感じがしてつらかった、寝づらい。6,7日目はほとんど普通に戻る。そんな感じだった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>three.jsでbloomを有効にする</title>
      <link>https://syui.github.io/blog/post/2024/03/19/vrm/</link>
      <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/03/19/vrm/</guid>
      <description>&lt;p&gt;リファクタリングの一環としてweb周りで作ったものを整理しています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://git.syui.ai/ai/vrm&#34;&gt;https://git.syui.ai/ai/vrm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ただ、整理といいつつ、ほとんど新しい実装を試していて、コード自体はきれいになっていません。&lt;/p&gt;&#xA;&lt;p&gt;以前は、&lt;code&gt;three-vrm:v0.6&lt;/code&gt;で作成されたプロジェクトのforkを使用していましたが、なかなかに複雑で古いpackageを使用していたので、イチから作り直しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;three-vrm:v2.1&lt;/code&gt;にして、&lt;code&gt;node:v21&lt;/code&gt;, &lt;code&gt;yarn:v1.22&lt;/code&gt;を使っています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;bloom&#34;&gt;bloom&lt;/h2&gt;&#xA;&lt;p&gt;ぼんやりと発光させるには、bloomを有効にしなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;ただし、threeに入っているexampleはメンテナンスされていません。別のものを使ったほうが良いでしょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn add postprocessing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/index.ts&#34; data-lang=&#34;js:src/index.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//import { EffectComposer } from &amp;#39;three/examples/jsm/postprocessing/EffectComposer&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//import { UnrealBloomPass } from &amp;#39;three/examples/jsm/postprocessing/UnrealBloomPass&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//import { RenderPass } from &amp;#34;three/examples/jsm/postprocessing/RenderPass&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/pmndrs/postprocessing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;BloomEffect&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;EffectComposer&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;EffectPass&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;RenderPass&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postprocessing&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;composer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EffectComposer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;composer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addPass&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RenderPass&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;composer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addPass&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EffectPass&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BloomEffect&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;requestAnimationFrame&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;render() {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;requestAnimationFrame&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;composer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意としては、&lt;code&gt;WebGLRenderer&lt;/code&gt;のoptionによっては動かないことがあるらしいので、そのときは以下を設定してください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/index.ts&#34; data-lang=&#34;js:src/index.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;WebGLRenderer&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WebGLRenderer&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;powerPreference&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;high-performance&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;antialias&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;stencil&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;depth&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;progress&#34;&gt;progress&lt;/h2&gt;&#xA;&lt;p&gt;progress-barを出します。既に用意されているらしいので、それを使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/index.ts&#34; data-lang=&#34;js:src/index.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://sbcode.net/threejs/progress-indicator&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;manager&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;LoadingManager&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;progressBar&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;progressBar&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HTMLProgressElement&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://threejs.org/docs/#api/en/loaders/managers/LoadingManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;manager&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onStart&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsLoaded&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsTotal&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//console.log( &amp;#39;Started loading file: &amp;#39; + url + &amp;#39;.\nLoaded &amp;#39; + itemsLoaded + &amp;#39; of &amp;#39; + itemsTotal + &amp;#39; files.&amp;#39; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;progressBar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;display&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;block&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;percentComplete&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;itemsLoaded&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsTotal&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;progressBar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;percentComplete&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Infinity&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;100&lt;/span&gt; : &lt;span style=&#34;color:#66d9ef&#34;&gt;percentComplete&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;manager&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onLoad&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ( ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//console.log( &amp;#39;Loading complete!&amp;#39;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;progressBar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;display&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;manager&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onProgress&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsLoaded&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsTotal&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;percentComplete&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;itemsLoaded&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsTotal&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;progressBar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;percentComplete&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Infinity&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;100&lt;/span&gt; : &lt;span style=&#34;color:#66d9ef&#34;&gt;percentComplete&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//console.log( &amp;#39;Loading file: &amp;#39; + url + &amp;#39;.\nLoaded &amp;#39; + itemsLoaded + &amp;#39; of &amp;#39; + itemsTotal + &amp;#39; files.&amp;#39; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;manager&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onError&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//console.log( &amp;#39;There was an error loading &amp;#39; + url );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;progressBar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;display&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;block&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:dist/index.html&#34; data-lang=&#34;html:dist/index.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;progress&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;progressBar&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;progress&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css:dist/css/style.css&#34; data-lang=&#34;css:dist/css/style.css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;progress&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;position&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;absolute&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;border-radius&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::&lt;span style=&#34;color:#a6e22e&#34;&gt;-webkit-progress-bar&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;border-radius&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#e6e6fa&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::&lt;span style=&#34;color:#a6e22e&#34;&gt;-webkit-progress-value&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#4682b4&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>three-vrmでvrmaを読み込む</title>
      <link>https://syui.github.io/blog/post/2024/03/17/vrm/</link>
      <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/03/17/vrm/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/pixiv/three-vrm&#34;&gt;three-vrm&lt;/a&gt;でvrmaを読み込むことができるようになりました。そこで今回は色々なtipsを紹介します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;three-vrm&lt;/code&gt;は、私がよく3d-modelの読み込みに使っている&lt;code&gt;three.js&lt;/code&gt;を&lt;code&gt;.vrm&lt;/code&gt;に対応させたものです。three.jsは&lt;code&gt;.gltf(v2.0)&lt;/code&gt;を読み込めますので、その拡張である&lt;code&gt;.vrm&lt;/code&gt;を&lt;code&gt;.gltf&lt;/code&gt;や&lt;code&gt;.glb&lt;/code&gt;に変換して読み込めばいいのですが、色々と問題があります。そのため&lt;code&gt;three-vrm&lt;/code&gt;を使ったほうが見栄えが良くなります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;three-vrm---vrma&#34;&gt;three-vrm -&amp;gt; vrma&lt;/h2&gt;&#xA;&lt;p&gt;使用するのは、&lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;webpack&lt;/code&gt;, &lt;code&gt;ts&lt;/code&gt;あたりです。&lt;/p&gt;&#xA;&lt;p&gt;nodeは&lt;code&gt;v18.14.1&lt;/code&gt;です。場合によっては&lt;code&gt;nvm&lt;/code&gt;を使用してください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── dist&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── index.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── vrm/ai.vrm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── vrma/VRMA_01.vrma&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── package.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── index.ts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── tsconfig.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── webpack.config.js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;./dist/vrm/&lt;/code&gt;, &lt;code&gt;./dist/vrma/&lt;/code&gt;にファイルを置いてください。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vrm : &lt;a href=&#34;https://hub.vroid.com/characters/675572020956181239/models/7175071267176594918&#34;&gt;download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;vrma : &lt;a href=&#34;https://vroid.booth.pm/items/5512385&#34;&gt;download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;後述しますが、&lt;code&gt;src/index.ts&lt;/code&gt;の以下の部分で読み込みます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/index.ts&#34; data-lang=&#34;js:src/index.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/vrm/ai.vrm&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/vrma/VRMA_01.vrma&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;webpack&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;webpack-dev-server --open&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ts-loader&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^9.5.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;typescript&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.4.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;webpack&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.90.3&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;webpack-cli&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.1.4&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;webpack-dev-server&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^5.0.3&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.1.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm-animation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.1.1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.162.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:tsconfig.json&#34; data-lang=&#34;json:tsconfig.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;es2016&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commonjs&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;skipLibCheck&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:webpack.config.js&#34; data-lang=&#34;js:webpack.config.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mode&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;development&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;entry&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./src/index.ts&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;rules&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/\.ts$/&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ts-loader&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.js&amp;#39;&lt;/span&gt;] },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;        &lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;main.js&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;        &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dist&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;devServer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;      &lt;span style=&#34;color:#a6e22e&#34;&gt;directory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dist&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/index.ts&#34; data-lang=&#34;js:src/index.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;Vector3&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;three/examples/jsm/loaders/GLTFLoader&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;OrbitControls&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three/examples/jsm/controls/OrbitControls&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@pixiv/three-vrm&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;createVRMAnimationClip&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimationLoaderPlugin&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@pixiv/three-vrm-animation&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;window.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DOMContentLoaded&amp;#34;&lt;/span&gt;, () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;canvas&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Scene&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PerspectiveCamera&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clientWidth&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clientHeight&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAt&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Vector3&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WebGLRenderer&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPixelRatio&lt;/span&gt;(window.&lt;span style=&#34;color:#a6e22e&#34;&gt;devicePixelRatio&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSize&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clientWidth&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clientHeight&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setClearColor&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0x7fbfff&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;domElement&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;light&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DirectionalLight&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;, Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;light&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;light&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrmAnimation&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt;:&lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;tryInitVRM&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;tryInitVRMA&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;progress&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;( &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Loading model...&amp;#34;&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#ae81ff&#34;&gt;100.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;progress&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loaded&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;progress&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%&amp;#34;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tryInitVRM&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;initAnimationClip&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tryInitVRMA&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrmAnimation&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrmAnimations&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;initAnimationClip&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initAnimationClip() {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrmAnimation&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;AnimationMixer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createVRMAnimationClip&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrmAnimation&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clipAction&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;play&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMAnimationLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// ここで読み込む&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/vrm/ai.vrm&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/vrma/VRMA_01.vrma&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clock&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Clock&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;clock&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;background&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;0x404040&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;directionalLight&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DirectionalLight&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;directionalLight&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;directionalLight&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ambientLight&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;AmbientLight&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0x333333&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ambientLight&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OrbitControls&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;domElement&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enableDamping&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dampingFactor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enableRotate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;requestAnimationFrame&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clock&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getDelta&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:dist/index.html&#34; data-lang=&#34;html:dist/index.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;canvas&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width:100%;height:640px;&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;vrm-model&#34;&gt;&#xA;&lt;iframe src=&#34;https://vrm.syui.ai&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;random-vrma&#34;&gt;random vrma&lt;/h2&gt;&#xA;&lt;p&gt;例えば、random(ランダム)で&lt;code&gt;.vrma&lt;/code&gt;を切り替えてみましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>naming rulesとbluesky</title>
      <link>https://syui.github.io/blog/post/2024/03/11/name-bluesky/</link>
      <pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/03/11/name-bluesky/</guid>
      <description>&lt;p&gt;最近、名前について考えることがあったので、適当に自分のこととか、blueskyのこととか、これからのこととかを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;syui&#34;&gt;syui&lt;/h2&gt;&#xA;&lt;p&gt;まずは&lt;code&gt;syui&lt;/code&gt;という名前について見ていくと、案外、規則に沿ってつけられています。&lt;/p&gt;&#xA;&lt;p&gt;これは、基本的に私の本名、つまり、名前+名字の組み合わせです。名前の先頭から3文字、名字の先頭から1文字を取っています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、私が&lt;code&gt;一ノ瀬 修(いちのせ しゅう)&lt;/code&gt;という名前ならこうなります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;syu&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;u &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;chinose&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお、当該日本名はペンネームということにしておきます(作品書いてないけど)。&lt;/p&gt;&#xA;&lt;p&gt;ではなぜ、名前から始まるのかというと、これもアルファベット、つまり、英語のルールに則っています。&lt;/p&gt;&#xA;&lt;p&gt;主に英語圏の文化では名前+名字の順番が通常です。これはアジア圏の文化と異なります。アジア圏は名字+名前が多く、日本もそうです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、サービスに登録する際に名前と名字を聞かれることがあります。私は大抵、名前に&lt;code&gt;syu&lt;/code&gt;, 名字に&lt;code&gt;i&lt;/code&gt;と入れています。英語圏のサービスなので名前+名字の順になり表記も&lt;code&gt;syu i&lt;/code&gt;になります。&lt;/p&gt;&#xA;&lt;p&gt;なぜ英語圏とアジア圏でこのような違いがあるのでしょう。それはわかっていません。ですが、色々な説があると思います。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、英語圏は個人を尊重し、アジア圏は家族を尊重する文化が強いため、そのようになっているのかもしれないと思います。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、アルファベットで記述する以上、アルファベットを使用する英語圏の文化に沿って、名前が決められています。&lt;/p&gt;&#xA;&lt;p&gt;当時、このようなことまで考えていたかというと、適当です。handle nameというものは、存外に適当に決め、ずっと使っています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、いろいろな人を見てきて、名前から付ける人、名字から付ける人を見てきて、その人の特徴として、個人主義的傾向があるのか、全体主義的傾向があるのかをなんとなく推測することができます。&lt;/p&gt;&#xA;&lt;p&gt;そして、それは案外あたっていると思うことも多い気がします。handleを自分の名前にする人はやっぱり英語圏のほうが多く、名字でつける人はやっぱりアジア圏のほうが多い。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、少し特殊ですが、上記をもとに推測すると個人主義:全体主義の割合は3:1といったところでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;ただ、あまり気にしないでください。こういうのは当たりもするし外れもする。占いや性格診断みたいなもんです。たいした意味はありませんし、単なる好みの問題でもあります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ai&#34;&gt;ai&lt;/h2&gt;&#xA;&lt;p&gt;つぎは、私が使うdomainの&lt;code&gt;ai&lt;/code&gt;について名前規則を見ていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;これについては色々思うところがあり、迷っているところです。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに&lt;code&gt;yui&lt;/code&gt;は使わないのかという疑問について、&lt;code&gt;syui.ai&lt;/code&gt;にはもとから&lt;code&gt;yui&lt;/code&gt;という単語が含まれています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;yui&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;.ai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;したがって、わざわざdomainやnameを取る必要がありません。例えば、&lt;code&gt;yui.ai&lt;/code&gt;のdomainが空いたとして、よほど思うところがない限り、たぶん取らないと思います。&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、今後はaiというネームスペースで色々作っていこうかなと考えています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;verse&#34;&gt;verse&lt;/h2&gt;&#xA;&lt;p&gt;ネームスペースの話になりますが、ここで、少しだけこれから起こることを書いてみたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;これから世界はどうなっていくのかに注目が集まっているように感じます。多くの人々が「変化」の予兆を感じ取っているということです。&lt;/p&gt;&#xA;&lt;p&gt;これまでは、既存の大企業があって、そこがどんな製品を出し、どんな成長をしていくかが注目されていました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、大きな変化は、これまで知らなかったなにかが出てきたときやこれまで知らなかった企業や製品、ソフトウェアやハードウェアが出てきたときです。例えば、&lt;code&gt;AI&lt;/code&gt;とか。&lt;/p&gt;&#xA;&lt;p&gt;ですが、こういうのはどの分野にしても、さきがけがあるものです。&lt;/p&gt;&#xA;&lt;p&gt;最近、&lt;code&gt;anime&lt;/code&gt;が人気という言葉を聞いたことはありませんか?&lt;/p&gt;&#xA;&lt;p&gt;少し前から人気だったというのは確かにその通り。しかし、最近はそれを通り越して、すごく人気なのです。&lt;/p&gt;&#xA;&lt;p&gt;いやいや、少し前からすごく人気だったじゃないと。いえ、それは違います。それは単にあなたが先駆けだっただけ。世界的にみて、人気はあったけど、すごく人気ではなかった。&lt;/p&gt;&#xA;&lt;p&gt;さきがけの話をすると、例えば、&lt;code&gt;原神&lt;/code&gt;を作ったmihoyoという企業はこんなことを言っています。&lt;/p&gt;&#xA;&lt;p&gt;「オタクが世界を救う」&lt;/p&gt;&#xA;&lt;p&gt;最近、あらゆることはこの&lt;code&gt;オタク&lt;/code&gt;がさきがけになっています。&lt;/p&gt;&#xA;&lt;p&gt;つまり、オタクがやっていたこと、見ていたものなどが数年後、数十年後に大流行し、メジャーになっている。そういう傾向があります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、分散snsも間違いなく標準になります。&lt;/p&gt;&#xA;&lt;p&gt;今の&lt;code&gt;オタク&lt;/code&gt;こと&lt;code&gt;ハッカー&lt;/code&gt;たちは、数年前から自前のインスタンスを建ててやり取りするようになっています。&lt;/p&gt;&#xA;&lt;p&gt;この流れは、今後何年かで一般化していくでしょう。&lt;/p&gt;&#xA;&lt;p&gt;しかし、分散snsとは一体何なのでしょう。どのような要因で、どんな風になっていくのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;ここではわかりやすく分散snsと言いましたが、今後主流になるそれ自体は分散snsというより、どちらかというと名前に関係があります。&lt;/p&gt;&#xA;&lt;p&gt;最近、metaverse(メタバース)やfediverse(フェディバース)、&lt;a href=&#34;https://octoverse.github.com&#34;&gt;octoverse&lt;/a&gt;(オクトバース)と呼ばれるものが注目されていますが、その根底にあるのは「変化」の予兆です。&lt;/p&gt;&#xA;&lt;p&gt;つまり、ネットは今後どのように変化していくのか。変化は確実に起こる。けど、どのように変化していくのか。それが注目されているのです。&lt;/p&gt;&#xA;&lt;p&gt;各企業や団体がその変化を予測し、このようになっていく、このようになってほしい、それを表現したのが、なんとかバースと呼ばれるものだったりします。&lt;/p&gt;&#xA;&lt;p&gt;私が確実に来るだろうと予測しているのは、今後、ネット空間では名前の枯渇問題によって、domainの重要性が増し、その要望に答えるような環境が形作られていくということです。&lt;/p&gt;&#xA;&lt;p&gt;私は2013くらいからネットを始めました。&lt;/p&gt;&#xA;&lt;p&gt;当時、&lt;code&gt;syui&lt;/code&gt;さんは私以外は一人もおらず、検索で私しか出てきませんでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、2024現在、&lt;code&gt;syui&lt;/code&gt;さんはいっぱいです。&lt;/p&gt;&#xA;&lt;p&gt;これからネットに接続する人が増えれば増えるほど、あるいはネットに接続できる人を増やそうとすればするほど、同じ名前の人が増え、判別が難しくなり、また、名前を取られていることが増えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;時代が進むほど、先行者利益が拡大し、それはどこかでリセットしなければなりませんし、リセットされるはずです。&lt;/p&gt;&#xA;&lt;p&gt;それが分散化だったり、あるいはセルフホストだったり、そういった形になると予想しています。&lt;/p&gt;&#xA;&lt;p&gt;これはすでにオタクたちの動向で確実に来ることはわかっています。&lt;/p&gt;&#xA;&lt;p&gt;誰だって、自分で決めた名前でネットをはじめたいし、はじめられるべきです。そのような環境になっていくでしょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;protocol&#34;&gt;protocol&lt;/h2&gt;&#xA;&lt;p&gt;さて、次はprotocolの話をします。世の中にはいろんなprotocolがありますが、そこでも名前は重要です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;git&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt;や&lt;code&gt;http&lt;/code&gt;の場合は以下のような感じになります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git://git.syui.ai/ai/os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;↓&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;protocol&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;hostname&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;repository&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;認証を入れる場合はこんな感じ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;protocol&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;password&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;@&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;hostname&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mailやsns(atproto)の場合はhostnameよりusernameが先に来ます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、引くべきキャラ1位はナヒーダ</title>
      <link>https://syui.github.io/blog/post/2024/03/06/genshin/</link>
      <pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/03/06/genshin/</guid>
      <description>&lt;p&gt;今回は私が現在プレイしてるゲーム、原神で引いておくべきキャラをランキング形式で紹介します。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、私は、ナヒーダは完凸、フリーナは2凸で使用しています。それ以外で凸している星5はいません。凸しているキャラについては、その性能込みの使い勝手を前提にしています。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、無凸の性能を推測したうえで評価を出すこともできますが、それでは不正確になるので、凸性能込みの感想と考えてください。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;順位&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;フリーナ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;鍾離、雷電、万葉&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;1-ナヒーダ&#34;&gt;1. ナヒーダ&lt;/h2&gt;&#xA;&lt;p&gt;ナヒーダを使用していて思うのは、ナヒーダは強すぎるということです。&lt;/p&gt;&#xA;&lt;p&gt;完凸しているなら当たり前だと思われるかもしれませんが、私は主に完凸の性能ではない部分でナヒーダを評価しています。&lt;/p&gt;&#xA;&lt;p&gt;具体的に評価している部分は、必中化される全体への元素攻撃です。&lt;/p&gt;&#xA;&lt;p&gt;つまり、必中化、全体化される攻撃が、ありえないほどに強力です。しかも、射程範囲も相当広い。&lt;/p&gt;&#xA;&lt;p&gt;正直、これ以上強力なキャラが今後出てくるか疑問があります。&lt;/p&gt;&#xA;&lt;p&gt;裏から出せる必中化の全体攻撃というのは、容易に出していいレベルのスキルではありません。&lt;/p&gt;&#xA;&lt;p&gt;今後、攻撃を当てるのが難しい複数敵が出てきた場合とかですね、ナヒーダの評価はまだ上がっていくかもしれません。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-フリーナ&#34;&gt;2. フリーナ&lt;/h2&gt;&#xA;&lt;p&gt;フリーナは2凸前提ですが、2番目くらいに引いておいたほうがいいキャラだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;これについては、出せる火力の量が万葉や鍾離より明らかに上だと感じています。&lt;/p&gt;&#xA;&lt;p&gt;また、スキルの召喚獣ですが、これもなかなかに使い勝手がいいというか、将来性があります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、飛んでいる敵の弱点をついて落下させる事もあります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-鍾離雷電万葉&#34;&gt;3. 鍾離、雷電、万葉&lt;/h2&gt;&#xA;&lt;p&gt;雷電の評価が下がっていますが、個人的には、雷電は引いておいたほうがいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;私は未だに螺旋は雷電がいないと困りますね。&lt;/p&gt;&#xA;&lt;p&gt;いや、困らないかもしれないけど、雷電を入れてクリアすることが多い。&lt;/p&gt;&#xA;&lt;p&gt;鍾離、万葉より螺旋適性は高いと思います。あくまで所感ですけど。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ヌヴィレットはやっぱり引かないことにした&#34;&gt;ヌヴィレットはやっぱり引かないことにした&lt;/h2&gt;&#xA;&lt;p&gt;実は、次のガチャで、フリーナの凸を進めるか、ヌヴィレットを引くか、どちらかを考えていました。&lt;/p&gt;&#xA;&lt;p&gt;ですが、どちらもスルーすることに決めました。&lt;/p&gt;&#xA;&lt;p&gt;というのも、私は現時点で、性能だけを見てキャラを引く段階は過ぎているなと感じていたからです。&lt;/p&gt;&#xA;&lt;p&gt;原神を始めたばかりの頃は、やはり性能というものが非常に重要でした。せっかくなら螺旋をクリアしたいですし。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今の手持ちキャラで螺旋をクリアできないということはまずないです。何度も挑戦する必要が出てくるほど難易度が高いということもありません。&lt;/p&gt;&#xA;&lt;p&gt;実は、ナヒーダが来るまでは、割と何度か挑戦する必要があるなと感じたことがありました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ナヒーダを引いてからは、ないですね。&lt;/p&gt;&#xA;&lt;p&gt;私がいま原神を始めたら、ヌヴィレットは間違いなく引いていました。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今はそういう段階ではなく「好きなキャラが出てきたとき完凸する」そのために原石をためておく、そのような方針に切り替えるのが一番いいと思いました。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットもフリーナも好きですが、完凸するかと聞かれると、少し疑問が残る。&lt;/p&gt;&#xA;&lt;p&gt;また、「とりあえずヌヴィレットは確保しておくべき」という考えについても「好きなキャラを引くため原石を貯める」という方針に反する。&lt;/p&gt;&#xA;&lt;p&gt;したがって、完凸したいキャラがでてきたときは、ガチャを引くけど、それまでは引かないことにした。&lt;/p&gt;&#xA;&lt;p&gt;例えば、スカークとか出てきたら引きそうだけど、まだまだ先になりそうな気がするなあ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gitea actionsに移行するかも</title>
      <link>https://syui.github.io/blog/post/2024/03/04/gitea/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/03/04/gitea/</guid>
      <description>&lt;p&gt;&lt;code&gt;gitea actions&lt;/code&gt;というのは、&lt;code&gt;github actions&lt;/code&gt;とか&lt;code&gt;gitlab-ci&lt;/code&gt;と呼ばれるものに相当するものなんだけど、有効にするかどうか迷っていました。&lt;/p&gt;&#xA;&lt;p&gt;というのもserverの負担が増大するし、いくつものserviceを動作させている環境だと、それぞれの反応がどうしても遅くなってしまうからです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、こういうのは全部無料で使えるgithubを利用するのが一番でした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、最近になってusername(id)の関係でgiteaを使う頻度が増えてきたので、&lt;code&gt;gitea actions&lt;/code&gt;を有効にすることにしました。&lt;/p&gt;&#xA;&lt;p&gt;githubでは使いたいusername(id)がすでに取られていることが多く、時代はself-hostやdomainになっていくのだろうなあと、そんなふうに思います。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、最近になってreposを整理したこともあり、ネームスペースは結構気になります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、最近作った自作osは&lt;code&gt;ai os&lt;/code&gt;という名前ですが、&lt;code&gt;username/aios&lt;/code&gt;ではなく、&lt;code&gt;ai/os&lt;/code&gt;というネームスペースを使用したかった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;o &lt;code&gt;git@git.syui.ai:ai/os.git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;x &lt;code&gt;git@github.com:username/aios.git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;とはいえ、これもちょっと分かりづらいですよね。本来は&lt;code&gt;ai/aios&lt;/code&gt;とかのほうがわかりやすいかな。まあ、好みの問題ということにしておきましょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;gitea-actionsの構築&#34;&gt;gitea actionsの構築&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gitea ci&lt;/code&gt;とも呼ばれます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.gitea.com/hacking-on-gitea-actions/&#34;&gt;https://blog.gitea.com/hacking-on-gitea-actions/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:/app/data/gitea/conf/app.ini&#34; data-lang=&#34;sh:/app/data/gitea/conf/app.ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;[actions]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ENABLED&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;web-uiでsettingからactionsのtokenを取得しておいてください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://gitea.com/gitea/act_runner&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd act_runner&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./act_runner register&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./act_runner daemon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# nohup ./act_runner daemon &amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで使えるはず。statusがアイドルになります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/gitea-ci_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;あとはgh-actionsと同じようにrepoに設定ファイルを置いて&lt;code&gt;push&lt;/code&gt;します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.gitea/workflows/demo.yaml&#34; data-lang=&#34;yml:.gitea/workflows/demo.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Gitea Actions Demo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;run-name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ gitea.actor }} is testing out Gitea Actions 🚀&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;push]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Explore-Gitea-Actions&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;🎉 The job was automatically triggered by a ${{ gitea.event_name }} event.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;🐧 This job is now running on a ${{ runner.os }} server hosted by Gitea!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;🔎 The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Check out repository code&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;💡 The ${{ gitea.repository }} repository has been cloned to the runner.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;🖥️ The workflow is now ready to test your code on the runner.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;List files in the repository&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          ls ${{ gitea.workspace }}&lt;/span&gt;          &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;🍏 This job&amp;#39;s status is ${{ gitea.status }}.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker-imagescontainer-registry&#34;&gt;docker images(container registry)&lt;/h2&gt;&#xA;&lt;p&gt;docker imagesの置き場所としてdocker hub(dockerhub)が最も支配的で、かつ使いやすいです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>archベースのaiosを作った</title>
      <link>https://syui.github.io/blog/post/2024/02/11/aios/</link>
      <pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/02/11/aios/</guid>
      <description>&lt;p&gt;少し前から&lt;a href=&#34;https://git.syui.ai/ai/bot&#34;&gt;ai/bot&lt;/a&gt;をリファクタリングしています。&lt;/p&gt;&#xA;&lt;p&gt;せっかくなのでarchベースの&lt;a href=&#34;https://git.syui.ai/ai/os&#34;&gt;ai/os&lt;/a&gt;を作り、そこに乗せることにしました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker run -it syui/aios ai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;archlinuxベースの自作osで名前は&lt;code&gt;ai os&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;Arch Linuxが&lt;code&gt;archlinux&lt;/code&gt;や&lt;code&gt;arch&lt;/code&gt;と呼ばれるように&lt;code&gt;aios&lt;/code&gt;や&lt;code&gt;ai&lt;/code&gt;と呼ぶことがあります。使い分けは以下の通りです。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;var&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ai os&lt;/td&gt;&#xA;          &lt;td&gt;Name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;aios&lt;/td&gt;&#xA;          &lt;td&gt;Code&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ai&lt;/td&gt;&#xA;          &lt;td&gt;ID&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;archiso&#34;&gt;archiso&lt;/h3&gt;&#xA;&lt;p&gt;archは非常に使いやすいosです。あらゆる用途に使えますが、自作osにも使えます。その使い勝手の良さから、archベースのosはたくさんあります。例えば、&lt;code&gt;manjaro linux&lt;/code&gt;, &lt;code&gt;steam os&lt;/code&gt;, &lt;code&gt;asahi linux&lt;/code&gt;, &lt;code&gt;alter linux&lt;/code&gt;など。&lt;code&gt;ai os&lt;/code&gt;もその中の一つになります。&lt;/p&gt;&#xA;&lt;p&gt;特徴としては、rustを入れて&lt;code&gt;os&lt;/code&gt;の拡張を目指します。最初は、systemとlogoを表示する機能を実装しました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# pacman -S archiso&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://gitlab.archlinux.org/archlinux/archiso&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# buildmodes=(&amp;#39;bootstrap&amp;#39;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim ./archiso/configs/releng/profiledef.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkarchiso -v -o ./ ./archiso/configs/releng&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/etc/os-release&lt;/code&gt;を書き換える処理です。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-sh:archiso/archiso/mkarchiso&#34; data-lang=&#34;sh:archiso/archiso/mkarchiso&#34;&gt;# archiso/archiso/mkarchiso&#xA;if [[ &amp;#34;${_os_release}&amp;#34; != &amp;#34;${pacstrap_dir}&amp;#34;* ]]; then&#xA;    _msg_warning &amp;#34;os-release file &amp;#39;${_os_release}&amp;#39; is outside of valid path.&amp;#34;&#xA;else&#xA;[[ ! -e &amp;#34;${_os_release}&amp;#34; ]] || sed -i &amp;#39;/^IMAGE_ID=/d;/^IMAGE_VERSION=/d&amp;#39; &amp;#34;${_os_release}&amp;#34;&#xA;    printf &amp;#39;IMAGE_ID=%s\nIMAGE_VERSION=%s\n&amp;#39; &amp;#34;${iso_name}&amp;#34; &amp;#34;${iso_version}&amp;#34; &amp;gt;&amp;gt;&amp;#34;${_os_release}&amp;#34;&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;docker&#34;&gt;docker&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# git clone https://gitlab.archlinux.org/archlinux/archlinux-docker&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tar xf aios-bootstrap*.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tar -C root.x86_64 -c . | docker import - syui/aios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gh-actions&#34;&gt;gh-actions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;github actions&lt;/code&gt;でbuildして、releases, packageとdocker-hubにpushします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>northflankのvolumeをbackupする</title>
      <link>https://syui.github.io/blog/post/2024/02/05/api/</link>
      <pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/02/05/api/</guid>
      <description>&lt;p&gt;&lt;code&gt;northflank&lt;/code&gt;のapiではvolumeをexportする方法が用意されてないみたいなので、これを自動化する必要があります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://northflank.com/docs/v1/api/volumes/get-volume&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ northflank get volume&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://northflank.com/docs/v1/api/volumes/update-volume&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ northflank update volume&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;具体的には&lt;code&gt;git&lt;/code&gt;のprivate-repoを使用します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ northflank exec service --project $PROJECT --service $SERVICE --cmd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/data/backup.sh &lt;/span&gt;$TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:/data/backup.sh&#34; data-lang=&#34;sh:/data/backup.sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global user.email $MAIL&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global user.name $USER&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /data/$REPO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin https://$TOKEN@github.com/$USER/$REPO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m backup&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote rm origin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この場合、volumeにdeploy-keyを置いて&lt;code&gt;git@github.com&lt;/code&gt;でアクセスするよりtokenでアクセスしたほうが良いでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ただし、tokenの場合は&lt;code&gt;$REPO/.git/config&lt;/code&gt;に残っていないかチェックしておきましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5のBPでapiを呼び出す方法</title>
      <link>https://syui.github.io/blog/post/2024/01/23/game/</link>
      <pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/01/23/game/</guid>
      <description>&lt;p&gt;今回は、ue5のBP(ブループリント)でapiを呼び出す方法やue5で最近やったことをまとめます。&lt;/p&gt;&#xA;&lt;p&gt;最近はゲーム開発を全くやっていませんでしたが2日くらい前から再開しました。&lt;/p&gt;&#xA;&lt;p&gt;再開した理由としては、誕生祭でしょうか。そこに間に合わせるため実装を進めました。&lt;/p&gt;&#xA;&lt;p&gt;とりあえずデバッグモードみたいなものを公開し、少しずつ改良していくのが自分には合ってるのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;既存の完璧なゲームを目指してると、なんかやらなくなっちゃう気がする。&lt;/p&gt;&#xA;&lt;p&gt;あと、windowsで開発してるとブログを書きづらい。とりあえず&lt;a href=&#34;https://blueprintue.com/&#34;&gt;blueprintue.com&lt;/a&gt;をwindowsから貼って、それをブログで引用する。&lt;/p&gt;&#xA;&lt;h3 id=&#34;va-rest&#34;&gt;va rest&lt;/h3&gt;&#xA;&lt;p&gt;va restのpostですが、macで動いたものがwindowsでは動きませんでした。ですが、windowsでイチから作成すると動きました。&lt;/p&gt;&#xA;&lt;p&gt;ue5は&lt;code&gt;PATCH&lt;/code&gt;に対応していません。この辺はapiを作り直さないといけないかもしれない。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/4qo0qydu/&#34; scrolling=&#34;no&#34; width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h3 id=&#34;login&#34;&gt;login&lt;/h3&gt;&#xA;&lt;p&gt;login処理です。atprotoと連携できればいいなと考えています。&lt;/p&gt;&#xA;&lt;p&gt;あと、ゲーム公開/非公開はaiのアカウントで判断しています。ある値がtrueなら公開、falseなら非公開です。ここをapiで変更すれば基本的にゲームの起動自体をコントロールできるようになってる。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/9v24l5h6/&#34; scrolling=&#34;no&#34; allowfullscreen width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h3 id=&#34;global-var&#34;&gt;global var&lt;/h3&gt;&#xA;&lt;p&gt;instansで作成したものをpulbicにして、castで呼び出します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mouse-cursor&#34;&gt;mouse cursor&lt;/h3&gt;&#xA;&lt;p&gt;マウスカーソルが表示されないのに対応。&lt;/p&gt;&#xA;&lt;h3 id=&#34;day-if&#34;&gt;day if&lt;/h3&gt;&#xA;&lt;p&gt;日付でifして処理する。&lt;/p&gt;&#xA;&lt;h3 id=&#34;destroy-actor&#34;&gt;destroy actor&lt;/h3&gt;&#xA;&lt;p&gt;アイテムを取得後は呼び出さないようにします。例えば、lvを移行すると再び出現してしまうのを回避できます。&lt;/p&gt;&#xA;&lt;p&gt;どのように処理するのかというと、いろんな方法があるものの、私の場合はapiを叩いてカードの手持ちから判断します。既に持っていれば&lt;code&gt;event begin play&lt;/code&gt;でdestroyします。&lt;/p&gt;&#xA;&lt;p&gt;これらの値はlogin時にすべてglobal変数に入れておきます。アイテムのBPでdestroyする処理を書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゲームの方向性と今後&#34;&gt;ゲームの方向性と今後&lt;/h3&gt;&#xA;&lt;p&gt;今回公開しているのは、デバッグモードと私が勝手にそう呼んでいるものになります。つまり、世界を作っている最中の様子を少し垣間見えるようにした、みたいな感じです。ですから、本来作ろうとしているゲームとは少し違った形での提供になっています。&lt;/p&gt;&#xA;&lt;h4 id=&#34;常に動かせる&#34;&gt;常に動かせる&lt;/h4&gt;&#xA;&lt;p&gt;とにかく、アイをかわいくしたい。&lt;/p&gt;&#xA;&lt;p&gt;モーションとかを自然に、かつ常に動くようにしたほうがいい。あと、これは世界そのものを常に動くもので満たされるようにしないといけないと思っていて、時間や季節、風や動物など。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;あらゆるものが常に動くようにする&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;コマンドで操作&#34;&gt;コマンドで操作&lt;/h4&gt;&#xA;&lt;p&gt;最終的にはatprotoのアカウントを採用した上で、blueskyと連携できるようにしようと考えています。&lt;/p&gt;&#xA;&lt;p&gt;新しくatproto serverを建てたのもそのためです。いきなりbsky.socialのアカウントを使ってもらうのはよろしくないので、最初は全部をself-hostしているsnsでログインできるようにした上でコマンド操作を可能にしていきたい。&lt;/p&gt;&#xA;&lt;p&gt;例えば、コマンドで敵のリポップなどを操作して、戦闘のデバッグを行いたい。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;現実とゲームをリンクさせる&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;あらゆるものをランダムに&#34;&gt;あらゆるものをランダムに&lt;/h4&gt;&#xA;&lt;p&gt;色々なものにランダム要素を入れていく。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ジャンプ一つとっても、2つのパターンを用意して8:2の割合で異なる動きをするみたいな感じ。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;バランスとランダム要素&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;戦闘システム&#34;&gt;戦闘システム&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;アイは一度死んでも数秒間パワーアップして蘇る。つまり、それを前提にした戦闘システム&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;基本的に日をまたいで攻略する。HPを記録する。それほどまでに強敵でHPが高い&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ボスの攻撃は即死か2,3発食らうと死ぬレベルがいいと思う&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;成功報酬はランダムで、かつ厳選難易度が高い&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;ガチャ&#34;&gt;ガチャ&lt;/h4&gt;&#xA;&lt;p&gt;ガチャはpaypal決済で以下の要素で構成したい。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;衣装&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;武器&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;衣装のガチャは、ピックアップされた衣装が当たる。&lt;/p&gt;&#xA;&lt;p&gt;衣装を変えるとスキルやバースト(必殺技)が変わる。普通のゲームで言うキャラガチャ。&lt;/p&gt;&#xA;&lt;p&gt;衣装は最大4つまでセット、切り替えられるようにするとかなら戦闘をデザインしやすい。&lt;/p&gt;&#xA;&lt;h4 id=&#34;システムは使い回せる&#34;&gt;システムは使い回せる&lt;/h4&gt;&#xA;&lt;p&gt;あらゆるシステムは一度構築すると使い回せるので、とりあえずゲームとして秘境、ガチャ、強化周りのシステムを構築したい。&lt;/p&gt;&#xA;&lt;p&gt;シンプルに小さくするのが作り方としては良さそうなので、小さなことからコツコツと。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一つ一つ丁寧に作って、それを使い回す&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;スタミナと経験値ステータス&#34;&gt;スタミナと経験値、ステータス&lt;/h4&gt;&#xA;&lt;p&gt;lvは移動速度やスタミナを増加させるだけのものにしようと考えています。そのための経験値はキャラが動いた時のみから得られる。例えば、1歩動いたら1ポイント。lv10に上げるには&lt;code&gt;10,000,000&lt;/code&gt;ポイント必要みたいな感じ。大体1年やって7レベルくらいを考えてる。&lt;/p&gt;&#xA;&lt;p&gt;最初は飛べないし、移動速度もかなり遅くする。&lt;/p&gt;&#xA;&lt;p&gt;攻撃力や会心率は武器や秘境ボスがドロップするアイテムの厳選で上げられる。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;歩くと経験値&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;物語&#34;&gt;物語&lt;/h4&gt;&#xA;&lt;p&gt;物語はいくらでも作れるけど、どんな風にしようかは迷ってる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[stable diffusion] diffusersのscriptを作る</title>
      <link>https://syui.github.io/blog/post/2024/01/09/stable-diffusion/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/01/09/stable-diffusion/</guid>
      <description>&lt;p&gt;現在はstable diffusionはv2.1が最新らしい。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://huggingface.co/stabilityai/stable-diffusion-2-1&#34;&gt;https://huggingface.co/stabilityai/stable-diffusion-2-1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Stability-AI/stablediffusion&#34;&gt;https://github.com/Stability-AI/stablediffusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;今回は、前回同様に&lt;code&gt;txt2img.py&lt;/code&gt;を動かせる環境を構築した上で、&lt;code&gt;.safetensors&lt;/code&gt;を使用し画像生成してみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/stable_diffusion_model_anythingv5_20240109_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;txt2imgはcliから使うstable-diffusionのようなものです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;origin : &lt;a href=&#34;https://github.com/CompVis/stable-diffusion/blob/main/scripts/txt2img.py&#34;&gt;txt2img.py&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;fork : &lt;a href=&#34;https://github.com/basujindal/stable-diffusion/blob/main/optimizedSD/optimized_txt2img.py&#34;&gt;txt2img.py&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.nvidia.com/cuda-toolkit-archive&#34;&gt;cuda&lt;/a&gt;を12.3から12.1にdowngradeします。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;pytorch&lt;/a&gt;は&lt;code&gt;stable&lt;/code&gt;ではなく&lt;code&gt;nightly&lt;/code&gt;であるpre-versionを使わないとインストールできません。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# pytorch:nightly, cuda:12.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu121&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda install pytorch&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;2.1.1 torchvision&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;0.16.1 torchaudio&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;2.1.1 pytorch-cuda&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;12.1 -c pytorch -c nvidia&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;scoopの&lt;code&gt;anaconda3&lt;/code&gt;がなくなっていたので手動でインストールしました。具体的には&lt;code&gt;miniconda&lt;/code&gt;を適当にインストールして&lt;code&gt;~/miniconda3/condabin&lt;/code&gt;にpathを通します。私はpwshを使うので、以下のコマンドで自動設定します。これをやらないと&lt;code&gt;activate&lt;/code&gt;を使えません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda init powershell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;新しいgpuでは5-10分の生成が1-2分以内に変わっていました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda activate ldm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd ./stable-diffusion&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python ./optimizedSD/optimized_txt2img.py --prompt &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;masterpiece, high quality, very_high_resolution, large_filesize, full color, beautiful kawaii, gold hair, little girl&amp;#34;&lt;/span&gt; --H &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; --W &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; --seed $seed --n_iter &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --n_samples &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --ddim_steps &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記のscriptが動くなら&lt;code&gt;.safetensors&lt;/code&gt;を読み込む環境は整っていると思われます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyをself-hostする</title>
      <link>https://syui.github.io/blog/post/2024/01/08/bluesky/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2024/01/08/bluesky/</guid>
      <description>&lt;p&gt;少し前にblueskyをself-host(セルフホスト)しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_atproto_self_hosting_20240108_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://web.syu.is&#34;&gt;https://web.syu.is&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;server&lt;/th&gt;&#xA;          &lt;th&gt;url&lt;/th&gt;&#xA;          &lt;th&gt;src&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://syu.is&#34;&gt;https://syu.is&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto/tree/main/services/pds&#34;&gt;src&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;plc&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://plc.syu.is&#34;&gt;https://plc.syu.is&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/did-method-plc/did-method-plc/tree/main/packages/server&#34;&gt;src&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mod&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://mod.syu.is&#34;&gt;https://mod.syu.is&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto/tree/main/services/ozone&#34;&gt;src&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bgs&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://bgs.syu.is&#34;&gt;https://bgs.syu.is&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/bluesky-social/indigo/tree/main/cmd/bigsky&#34;&gt;src&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;appview&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://api.syu.is&#34;&gt;https://api.syu.is&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto/tree/main/services/bsky&#34;&gt;src&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;web&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://web.syu.is&#34;&gt;https://web.syu.is&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/bluesky-social/social-app&#34;&gt;src&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;以前はbluesky(pds+appview)を動かしていたのですが、一般的にblueskyと呼ばれるものは複数のserverに依存しています。例えば、plc, bgsです。今ではpdsにあったappviewも分離しています。&lt;/p&gt;&#xA;&lt;p&gt;bsky.teamがそれぞれのsandboxを用意してくれていますが、全部をself-hostしないといつか動かなくなります。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;server&lt;/th&gt;&#xA;          &lt;th&gt;env&lt;/th&gt;&#xA;          &lt;th&gt;body&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;PDS_DID_PLC_URL&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;https://plc.${host}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;PDS_BSKY_APP_VIEW_URL&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;https://api.${host}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;PDS_BSKY_APP_VIEW_DID&lt;/td&gt;&#xA;          &lt;td&gt;did:web:api.${host}&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;PDS_MOD_SERVICE_URL&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;https://mod.${host}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;PDS_MOD_SERVICE_DID&lt;/td&gt;&#xA;          &lt;td&gt;did:web:mod.${host}&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pds&lt;/td&gt;&#xA;          &lt;td&gt;PDS_CRAWLERS&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;https://bgs.${host}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;nostrで活動されているikuradonさんが全部のserverをセルフホストしているのを見て、どうやら他のserverも動作できる環境にあるようだと思ったので立ててみました。なお、ikuradonさんに結構助けてもらった。&lt;/p&gt;&#xA;&lt;p&gt;今回、&lt;code&gt;syu.is&lt;/code&gt;というdomainを取りました。なお、&lt;code&gt;.is&lt;/code&gt;はあまりおすすめしません。これはアイスランドが独自方針で管理している感じで、メール認証などが必要です。その他、様々な制限があります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/bluesky-social/atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/did-method-plc/did-method-plc ./repos/did-method-plc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/bluesky-social/indigo ./repos/indigo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/bluesky-social/social-app ./repos/social-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch .plc.env .bsky.env .bgs.env .pds.env .db.env .mod.env .web.env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p ./postgres/init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-- plc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CREATE DATABASE plc;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GRANT ALL PRIVILEGES ON DATABASE plc TO postgres;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-- bgs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CREATE DATABASE bgs;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CREATE DATABASE carstore;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GRANT ALL PRIVILEGES ON DATABASE bgs TO postgres;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GRANT ALL PRIVILEGES ON DATABASE carstore TO postgres;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-- bsky(appview)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CREATE DATABASE bsky;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GRANT ALL PRIVILEGES ON DATABASE bsky TO postgres;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-- ozone(moderation)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CREATE DATABASE mod;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GRANT ALL PRIVILEGES ON DATABASE mod TO postgres;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-- pds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CREATE DATABASE pds;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GRANT ALL PRIVILEGES ON DATABASE pds TO postgres;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ./postgres/init/init.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;composeyaml&#34;&gt;compose.yaml&lt;/h3&gt;&#xA;&lt;p&gt;docker composeで構築しました。大体は以下のような感じの構成です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>windowsの初期設定と所感</title>
      <link>https://syui.github.io/blog/post/2023/12/30/windows/</link>
      <pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/30/windows/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/windows_update_2023123_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;local-userにする&#34;&gt;local userにする&lt;/h3&gt;&#xA;&lt;p&gt;最初に設定していくと、microsoftのアカウントで勝手にuserを作成されていて、なんなんだこれと思ったけど、しばらく放置して初期設定してました。&lt;/p&gt;&#xA;&lt;p&gt;でも気になったので、適当に設定していくとlocal userを作成できた。ついでに前の勝手に作られたaccountは削除した。これ15分くらいかかりました。&lt;/p&gt;&#xA;&lt;p&gt;あと驚いたのは一生懸命にguiで削除したアプリが復活してたこと。どうやらここでのアンインストールは共通じゃないらしい。winget等で徹底的に削除するしかなかったっぽい。&lt;/p&gt;&#xA;&lt;p&gt;最初に回線引っこ抜くとlocal userを作成できるって自分のブログに書いてあることに後で気づいた。いまも有効かはわからないけど。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ueのbuild&#34;&gt;ueのbuild&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;gpu&lt;/th&gt;&#xA;          &lt;th&gt;build 1&lt;/th&gt;&#xA;          &lt;th&gt;build 2&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;GeForce GTX 1050Ti&lt;/td&gt;&#xA;          &lt;td&gt;h5&lt;/td&gt;&#xA;          &lt;td&gt;h1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;GoForce GTX 4060Ti&lt;/td&gt;&#xA;          &lt;td&gt;h1&lt;/td&gt;&#xA;          &lt;td&gt;m20&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;初回は時間がかかるんだけど随分と短縮されている。あと、&lt;code&gt;city sample&lt;/code&gt;がサクサク動くしbuildが早すぎたのに感動しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/video/#ue5_ai_0007.mp4&#34;&gt;/ai/video/#ue5_ai_0007.mp4&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/ai/video/ue5_ai_0007.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;cudaは&lt;code&gt;12.3&lt;/code&gt;を入れています。動いているのかどうかはわからんけど、erroを出しまくったあと正常なインストールに成功。ちなみに、なんで最初はerrを出してたのかは不明。ただ、&lt;a href=&#34;https://pytorch.org/&#34;&gt;pytorch&lt;/a&gt;の&lt;code&gt;cuda&lt;/code&gt;が&lt;code&gt;12.1&lt;/code&gt;なので、下げるかも。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvidia-smi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt; 08:34:29 &lt;span style=&#34;color:#ae81ff&#34;&gt;2023&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------------------------------------------------------------------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| NVIDIA-SMI 546.33                 Driver Version: 546.33       CUDA Version: 12.3     |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|-----------------------------------------+----------------------+----------------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| GPU  Name                     TCC/WDDM  | Bus-Id        Disp.A | Volatile Uncorr. ECC |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                                         |                      |               MIG M. |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|&lt;span style=&#34;color:#f92672&#34;&gt;=========================================&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;======================&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;======================&lt;/span&gt;|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  NVIDIA GeForce RTX &lt;span style=&#34;color:#ae81ff&#34;&gt;4060&lt;/span&gt; Ti   WDDM  | 00000000:05:00.0  On |                  N/A |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  0%   35C    P8               4W / 160W |   3772MiB /  8188MiB |     11%      Default |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                                         |                      |                  N/A |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------------------------------+----------------------+----------------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ where nvcc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rogram Files&lt;span style=&#34;color:#ae81ff&#34;&gt;\N&lt;/span&gt;VIDIA GPU Computing Toolkit&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;UDA&lt;span style=&#34;color:#ae81ff&#34;&gt;\v&lt;/span&gt;12.3&lt;span style=&#34;color:#ae81ff&#34;&gt;\b&lt;/span&gt;in&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;vcc.exe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ where cudnn64_8.dll&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rogram Files&lt;span style=&#34;color:#ae81ff&#34;&gt;\N&lt;/span&gt;VIDIA GPU Computing Toolkit&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;UDA&lt;span style=&#34;color:#ae81ff&#34;&gt;\v&lt;/span&gt;12.3&lt;span style=&#34;color:#ae81ff&#34;&gt;\b&lt;/span&gt;in&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;udnn64_8.dll&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;windowsが使いやすい&#34;&gt;windowsが使いやすい&lt;/h3&gt;&#xA;&lt;p&gt;動画を撮ってみたんだけど明らかにmacより使いやすい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>パソコンのスペックが気になりだした</title>
      <link>https://syui.github.io/blog/post/2023/12/26/game-pc/</link>
      <pubDate>Tue, 26 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/26/game-pc/</guid>
      <description>&lt;p&gt;最近、パソコンのスペックが気になりだした。昔は気にしていなかったのかと思われるかもしれないけど、あまり気にしてなかった。&lt;/p&gt;&#xA;&lt;p&gt;スペック不足を感じたらハイスペックの外部サーバーに接続するか、複数のパソコンで分散処理すればいいだけだった。&lt;/p&gt;&#xA;&lt;p&gt;ところが最近になってゲーム制作を始めたことで、初めてスペック不足というか、windowsのデスクトップが直に必要だと思った。&lt;/p&gt;&#xA;&lt;p&gt;それまでwindowsはsshやvncでリモート操作するだけだったし、そこまでハイスペックなものも必要なかった。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ゲーム制作、これもue5に限った話なのかもしれないが、macでの開発はやばかった。&lt;/p&gt;&#xA;&lt;p&gt;ue5はmac(apple silicon)の性能を全然引き出してなかったし、また、guiは落ちまくりで操作しづらく描写もおかしかった。package-buildも完全に壊れていた。&lt;/p&gt;&#xA;&lt;p&gt;反対にいつ壊れてもおかしくないwindowsは割りとサクサク動いていた。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私はメインで使っているmacで開発したかった。メインで使っているmacとは、それに付随するterminal環境のことであり、terminalがないと、なんとなく不安だ。私はterminalの住人で、ほとんどの時間をterminalで過ごしていた。&lt;/p&gt;&#xA;&lt;p&gt;だが、ue5をmacでやるのはやばいし、windowsをリモート操作してるだけではまずい、ということに気づきはじめた。&lt;/p&gt;&#xA;&lt;p&gt;そこで、一番安くて良さそうなものを買うことにした。ちなみに、何がいいのかはよくわかっていない。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;title&lt;/th&gt;&#xA;          &lt;th&gt;body&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cost&lt;/td&gt;&#xA;          &lt;td&gt;JPY 150,000&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cpu&lt;/td&gt;&#xA;          &lt;td&gt;AMD Ryzen 7 5700X&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;memory&lt;/td&gt;&#xA;          &lt;td&gt;32GB / DDR4-3200 DIMM (PC4-25600)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;gpu&lt;/td&gt;&#xA;          &lt;td&gt;GeForce RTX 4060Ti 8GB&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;storage&lt;/td&gt;&#xA;          &lt;td&gt;1TB M.2 NVMe SSD&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;inc&lt;/td&gt;&#xA;          &lt;td&gt;© INVERSENET&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;わからないなりにどんな感じなのかイメージで説明すると、gpuの4060はnvidiaの最新版で一番下のやつという認識。4060はcuda(core)の値が低く不人気だがAI描写変換(dlss)があるのでいいらしい。ちなみに、nvidiaの&lt;a href=&#34;https://developer.nvidia.com/cuda-toolkit-archive&#34;&gt;cuda&lt;/a&gt;はインストールに手こずるよくわからないもの。まあ、それなりにいい感じでgpuを動かしてくれるんでしょう。それに上書きする&lt;a href=&#34;https://developer.nvidia.com/rdp/cudnn-archive&#34;&gt;cudnn&lt;/a&gt;もそんな感じで、nvidiaのあらゆるpackageは意味不明だけど。話を戻すと4060Tiは4060よりcuda値の高いやつ。それ以外でいうと、storageのssdはNVMeがついてるのが速いらしい。cpuのryzenは最近人気の安くて高性能なやつという認識。&lt;/p&gt;&#xA;&lt;p&gt;このタイミングでゲーミングパソコン買うのはお得なんだろうか。とりあえず長く使っていきたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>β版を作ったけど公開を見送った話</title>
      <link>https://syui.github.io/blog/post/2023/12/25/game/</link>
      <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/25/game/</guid>
      <description>&lt;p&gt;今回は、ゲームのβ版を完成させたんだけど公開を見送った話をします。&lt;/p&gt;&#xA;&lt;p&gt;理由としては「クオリティに問題があるから」という一点につきます。&lt;/p&gt;&#xA;&lt;p&gt;今回はそんなゲーム制作で考えたことを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1ヶ月でゲームを完成させる&#34;&gt;1ヶ月でゲームを完成させる&lt;/h3&gt;&#xA;&lt;p&gt;11/30くらいからはじめたゲーム制作ですが、最初はどんなゲームにしたいのかとか、そういうのはあまりありませんでした。ただキャラクターを動かしてゲームの世界を飛び回っていました。&lt;/p&gt;&#xA;&lt;p&gt;これがゲームと呼べるのかと言うと、呼べないでしょう。ゲームとは条件があるものだから。例えば、クリア条件や報酬条件、勝利条件などなど。&lt;/p&gt;&#xA;&lt;p&gt;さて、そんなことをしているうちに、アドベントカレンダーの日が近づいてきました。私は12/24に担当していて、ゲーム作りを始めたよって話をしようと思ってたんだけど、急に思い立って、ゲームを完成させて公開しちゃおうと思いました。&lt;/p&gt;&#xA;&lt;p&gt;これを思いついたのが12/20あたりだったと思います。そこから本格的にゲームの実装を書きはじめたのでした。&lt;/p&gt;&#xA;&lt;p&gt;ゲームはシンプルに「アイがカードを落としたのでそれを探す」というものです。簡単なように見えて相当面倒なゲームの作り方をここではじめて学習しはじめることになります。&lt;/p&gt;&#xA;&lt;p&gt;それまでは本当にのんびりしたもので、ゲームのタイトル画面すら作っていませんでした。&lt;/p&gt;&#xA;&lt;p&gt;12/24にゲームを完成させようと思わなければ、おそらく、ずっとタイトル画面すら作らなかったでしょうね。その意味で「とりあえずゲームを完成させる」という目標を短期に設定できたのは本当に良かった。&lt;/p&gt;&#xA;&lt;p&gt;さて、今回のβ版の内容に触れていきたいのですが、私が行ったのは主に3つでした。&lt;/p&gt;&#xA;&lt;h4 id=&#34;1-タイトル画面の設定&#34;&gt;1. タイトル画面の設定&lt;/h4&gt;&#xA;&lt;p&gt;ここでは、ユーザー名の入力欄を作ってカードアカウントのidを取ってくる実装を行いました。あと、ワールドを移行する処理などを初めて実装しました。また、ゲームをスタートできる期間を設定し、その期日を過ぎると「公開は終了しました」みたいな表示を出るようにしました。また、クリアしている人も「ゲームはクリア済み」と出るようにしました。これらはapiに新たな項目を追加することで実現しています。&lt;/p&gt;&#xA;&lt;p&gt;idは後にアイテムをゲットした時、つまり、クリア時ですね。クリアしたときにカードアカウントに特定のカードを送信する実装に使います。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-星に入れるようにする&#34;&gt;2. 星に入れるようにする&lt;/h4&gt;&#xA;&lt;p&gt;ゲームでは最初に大きな星が目の前に登場します。実はアイテムはこの星の中にあります。飛んでいって星に入れるようにしなければなりません。ですが、これもなかなかにテクニックが必要でして、私が使っているアセットでは、星にぶつかると消えてしまう実装になっていました。そのため星の中にちょうどいい大きさの円アクターを入れて、それにぶつかるとワールドを移行するようにしました。&lt;/p&gt;&#xA;&lt;h4 id=&#34;3-アイテムを拾う&#34;&gt;3. アイテムを拾う&lt;/h4&gt;&#xA;&lt;p&gt;これがゲームのクリア条件であり、アイテムを拾う処理と、アイテムを消す処理を作りました。ここでは本当に複雑な処理を行います。アイテムを拾うとグローバル変数にとってあるidを元にカードアカウントへの配送処理を行います。同時にゲームをクリア済みとapiに伝達します。&lt;/p&gt;&#xA;&lt;p&gt;他にもメッセージを表示したり、bgmを設定したりといったことをやりました。&lt;/p&gt;&#xA;&lt;p&gt;これでβ版は完成です。β版をプレイして動作が確認できたのは12/23でした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;色々と考えた末に公開を見送る&#34;&gt;色々と考えた末に公開を見送る&lt;/h3&gt;&#xA;&lt;p&gt;私は基本的にmacで開発し、srcをwindowsに送ってbuildするという方式で開発しています。windowsで作ってもいいのですが、なんとなくメインがmacでないと落ち着かないというか、そんな理由からmacで開発しています。&lt;/p&gt;&#xA;&lt;p&gt;で、windowsでbuildするわけですが、なぜかapiへのpost-requestがwindowsでは動いていませんでした。これではゲーム内でアイテムを獲得してもアカウントに反映されません。ちなみに、get-reqは動いています。&lt;/p&gt;&#xA;&lt;p&gt;この問題を把握したのは12/24でした。&lt;/p&gt;&#xA;&lt;p&gt;これは色々やれば修正や回避することはできると思いました。ですが、ここでもう一度考える機会がありました。&lt;/p&gt;&#xA;&lt;p&gt;「本当にこれを公開していいのだろうか」&lt;/p&gt;&#xA;&lt;p&gt;一応、クリア条件も設定されゲームとしては普通にプレイできると思います。ですが、クオリティに納得していない自分がいました。&lt;/p&gt;&#xA;&lt;p&gt;これはwindowsではpost-requestが不明なerrによって動いていないという些細なことが問題ではありません。全体的に納得していないのです。&lt;/p&gt;&#xA;&lt;p&gt;とりあえずゲームを完成させてみようと思い、完成させることはできました。&lt;/p&gt;&#xA;&lt;p&gt;「とりあえず完成させる」これはすごく重要なことだと思います。そう思うことで、私は色々と実装を進めることができました。そう思わなければ進んでいない。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ゲームのクオリティというか、全体的な完成度の高さというものは、ゲームにおいて、特に、ビデオゲームにおいて、とても大切なことです。&lt;/p&gt;&#xA;&lt;p&gt;最初の印象がすべてを決める。&lt;/p&gt;&#xA;&lt;p&gt;後々も引きずってしまう。&lt;/p&gt;&#xA;&lt;p&gt;そういうものではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;もう少しだけゲーム制作やってみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ゲームを作ってる話</title>
      <link>https://syui.github.io/blog/post/2023/12/24/ac/</link>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/24/ac/</guid>
      <description>&lt;p&gt;この記事は&lt;a href=&#34;https://adventar.org/calendars/9470&#34;&gt;Bluesky Advent Calendar 2023&lt;/a&gt;の24日目の記事です。&lt;/p&gt;&#xA;&lt;p&gt;今回は、blueskyがきっかけでゲームを作り始めた話をします。&lt;/p&gt;&#xA;&lt;p&gt;私は&lt;a href=&#34;https://yui.syui.ai/&#34;&gt;yui&lt;/a&gt;という作品に登場するアイというキャラクターを多くの人に知ってもらいたいなと思って、物語を作ったりお絵描きをしてきました。&lt;/p&gt;&#xA;&lt;p&gt;2023年にblueskyでbotにしてカードゲームとして登場させたところ、blueskyの人たちに見つけてもらったことで開発が進みました。&lt;/p&gt;&#xA;&lt;p&gt;それまで創作や開発は単に好きでやっていただけでしたが、多くの人に遊んでもらうということで色々と進めることができました。&lt;/p&gt;&#xA;&lt;p&gt;これまでblueskyで作ったものはweb-clientやcli-client、bot、atprotoのserverやapiをはじめ、cardやaiten(麻雀をモデルにしたゲーム)、アイの3Dモデル、本や漫画などです。最近ではオープンワールドのゲームを作りはじめました。&lt;/p&gt;&#xA;&lt;p&gt;この前は衣装を作ったのですが、実は、昔から衣装は作りたいなと思っていて、でも大変そうなので、ずっと放置していたものでもありました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231224_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;多分、blueskyをやってなかったらこんなに色々やってなかったと思う。&lt;/p&gt;&#xA;&lt;p&gt;作ろうと思えば作れたかもしれないけど、でも違う。&lt;/p&gt;&#xA;&lt;p&gt;やるかやらないか、それがいちばん大切なこと。&lt;/p&gt;&#xA;&lt;p&gt;そんなきっかけをくれたblueskyに感謝。&lt;/p&gt;&#xA;&lt;p&gt;やりたいことをやろう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた9</title>
      <link>https://syui.github.io/blog/post/2023/12/21/ue5/</link>
      <pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/21/ue5/</guid>
      <description>&lt;p&gt;今回は、髪の毛が体を貫通する問題の修正と歩くモーションを変更する方法です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;kawaiiphysics&#34;&gt;KawaiiPhysics&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;このpluginは素晴らしい働きをし、完璧に動作します。&lt;/p&gt;&#xA;&lt;p&gt;ただし、このpluginはc++クラスを追加する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;c++クラスを追加するとwindows側でprojectを起動できなくなります。私はmacからwindowsに送ってbuildしています。&lt;/p&gt;&#xA;&lt;p&gt;したがって、&lt;a href=&#34;https://forums.unrealengine.com/t/4-14-cannot-open-project-anymore/379795/6&#34;&gt;こちら&lt;/a&gt;にあるように.uprojectを修正して起動し、c++クラスを追加後に右クリック、&lt;code&gt;generate visual studio project files&lt;/code&gt;から&lt;code&gt;.sln&lt;/code&gt;を作成してrebuildします。rebuildする際もあらゆる依存関係でerrorが出るかもしれません。ue5は基本的に壊れているので、あらゆる問題が発生する可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;このpluginの使い方は、vroid studioで後ろ髪のboneを確認したあと、そのboneをrootに設定し、各種&lt;a href=&#34;https://qiita.com/YuukiOgino/items/7f3198a90dab43019f26&#34;&gt;limit&lt;/a&gt;を設定し、指定のboneを貫通しないようにします。&lt;code&gt;Sphere Limit&lt;/code&gt;,&lt;code&gt;Capsule Limit&lt;/code&gt;, &lt;code&gt;Plane Limit&lt;/code&gt;があります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231224_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、今回は&lt;code&gt;UE_5.3/Engine/Build/BatchFiles/Build.bat&lt;/code&gt;を動かすのに相当手間取りました。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;pluginを使うにはc++クラスを追加する必要があるらしい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;追加するとwindowsでuprojectが開かなくなる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;とりあえずc++なしでuprojectを開いてc++クラスを追加&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;slnでrebuildが通らない。visual studioが警告ありとか出てる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;visual studioで.net framework sdk 4.8.0をインストールしろと言われる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;.net framework 4.8のインストーラーがblockされる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;.net framework 4.8.1とその他の.net関連をを手動でインストールする&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1回目のrebuildが何故か失敗する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2回目でやっと&lt;code&gt;UE_5.3/Engine/Build/BatchFiles/Build.bat&lt;/code&gt;が動作する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;uprojectが正常に開くようになる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;こんな感じでue5が動作する環境を構築してる時間のほうがゲーム開発してる時間より長い。ゲーム開発をしている場合ではない。&lt;/p&gt;&#xA;&lt;h3 id=&#34;walkrun-land-state&#34;&gt;walk/run, land state&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;ABP_Player&lt;/code&gt;でwalk/runのstateを編集したり、スタート時のダッシュをアニメモンタージュで調整したりしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/video/#ue5_ai_0006.mp4&#34;&gt;/ai/video/#ue5_ai_0006.mp4&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;v53&#34;&gt;v5.3&lt;/h2&gt;&#xA;&lt;h3 id=&#34;for-mac&#34;&gt;for mac&lt;/h3&gt;&#xA;&lt;p&gt;mac(apple silicon)でも動作しますが、&lt;code&gt;package build&lt;/code&gt;は鬼門です。絶対にやめましょう。時間がもったいない。&lt;/p&gt;&#xA;&lt;p&gt;ue5は、基本的にwindowsのpakcage buildはすぐに通りますが、それ以外では難しいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;たとえ1度だけbuildが通ったとしても、もし開発を続ける場合、windowsとmacの両方で動作を安定させることはできません。&lt;/p&gt;&#xA;&lt;p&gt;windowsで開発するのがおすすめです。macでの開発はやめておきましょう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;vrm&#34;&gt;vrm&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U/releases&#34;&gt;https://github.com/ruyo/VRM4U/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://vroid.com/&#34;&gt;vroid&lt;/a&gt;を読み込むpluginである&lt;a href=&#34;https://ruyo.github.io/VRM4U/&#34;&gt;vrm4u&lt;/a&gt;を使用します。現在、&lt;a href=&#34;https://github.com/pixiv/vroid-sdk-developers/discussions/118&#34;&gt;vroid sdk&lt;/a&gt;というものも登場しています。&lt;/p&gt;&#xA;&lt;p&gt;macで使用するには大変ですが&lt;code&gt;./Plugins/VRM4U/ThirdParty/assimp/lib/Mac/libassimp.a&lt;/code&gt;を用意してください。独自buildが必要です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ruyo.github.io/VRM4U/03_mac&#34;&gt;https://ruyo.github.io/VRM4U/03_mac&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;outline&#34;&gt;outline&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231202_203956.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-09_16.34.39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これはoutline(アウトライン)やnormal line(法線)と一般に言われているものです。&lt;/p&gt;&#xA;&lt;p&gt;それをoverlay materialで実現しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;調整&#34;&gt;調整&lt;/h3&gt;&#xA;&lt;p&gt;基本的には&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/superhero-flight-animations&#34;&gt;Superhero Flight Animations&lt;/a&gt;を使用してmodelの調整を行います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた8</title>
      <link>https://syui.github.io/blog/post/2023/12/16/ue5/</link>
      <pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/16/ue5/</guid>
      <description>&lt;p&gt;ue5でmac(arm64)のpackage buildは鬼門です。&lt;/p&gt;&#xA;&lt;p&gt;今回は、ue5 package build for macを解説します。&lt;/p&gt;&#xA;&lt;p&gt;vrm4uを使ってる人でmacでpackage buildしている人は世界中でただ1人かもしれません。全く情報がなく、arm64でbuildされているvroidゲームも見かけない。&lt;/p&gt;&#xA;&lt;p&gt;vrm4uをmacで導入すること自体も多少ハマるかもしれません。しかし、package buildほどではないです。それくらい意味がわかりませんでした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ddc-directory&#34;&gt;ddc directory&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;LogDerivedDataCache: Warning: Shared: Process has an existing cache store at path /path/to/ddc, and the duplicate is being ignored.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;様々なerrを回避してたどり着いたのは&lt;code&gt;「Macのプロジェクトをパッケージ化しています...」&lt;/code&gt;という表示から先に進まないという現象です。なぜなのかずっと謎でした。logを確認してもerrが出ていないし、さっぱりわからない。でもなぜか進まない。&lt;/p&gt;&#xA;&lt;p&gt;そこで、初回スターターキットのprojectを作ってpacakge buildしてみることにしました。しかし、ここでも同じように先に進まない。フリーズはしていませんが動いていないのです。&lt;/p&gt;&#xA;&lt;p&gt;この原因はおそらく&lt;code&gt;ddc directory&lt;/code&gt;を設定していないことによるものです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;DDC の保存場所&lt;/p&gt;&#xA;&lt;p&gt;プロジェクトとシステムの構成方法によって、高速から低速にわたる階層の中に複数のDDC キャッシュが存在する可能性があります。派生データを評価するとき、システムは次のことを実行して、データにアクセスできる速さを決定します。&lt;/p&gt;&#xA;&lt;p&gt;派生データが必要な場合、データが見つかるまで、まず最速のキャッシュがチェックされ、次に速いキャッシュがチェックされます。&lt;/p&gt;&#xA;&lt;p&gt;データが見つかると、最速のローカルキャッシュにコピーされるため、次回のアクセスが高速になります。&lt;/p&gt;&#xA;&lt;p&gt;データが見つからない場合に初めて生成されて非同期でキャッシュにコピーされるため、その後は (場合によってはチームも) データを利用できるようになります。&lt;/p&gt;&#xA;&lt;p&gt;DDC に保存されているコンテンツは使い捨てですが、.uasset ファイルに保存されているデータを使用していつでも再生成できます。これらの派生フォーマットを外部に保存すると、ソース アセット ファイルを変更しなくても、エンジンで使用されるフォーマットを簡単に追加または変更できます。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.unrealengine.com/5.0/ja/derived-data-cache/&#34;&gt;https://docs.unrealengine.com/5.0/ja/derived-data-cache/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;通常は&lt;code&gt;~/Library/Application\ Support/Epic/UnrealEngine/&lt;/code&gt;にあるらしい。ですが、私はue5のengineもprojectもsharedも外部ディスクに保存しているのでそれが原因かはわかりませんが、ddc directoryの設定がnullでshaderなどの生成のところから先に進まなかったようです。&lt;/p&gt;&#xA;&lt;p&gt;それまでに様々なところをチェックしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Engine/Build/BatchFiles/RunUAT.command&lt;/code&gt;, &lt;code&gt;BuildConfiguration.xml&lt;/code&gt;, &lt;code&gt;Engine/Binaries/DotNET/UnrealBuildTool/UnrealBuildTool&lt;/code&gt;, &lt;code&gt;VSCode&lt;/code&gt;など。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.unrealengine.com/5.2/en-US/supporting-universal-binaries-for-macos-in-unreal-engine/&#34;&gt;https://docs.unrealengine.com/5.2/en-US/supporting-universal-binaries-for-macos-in-unreal-engine/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ですが、全部正確に設定されており、全くの的外れでした。&lt;/p&gt;&#xA;&lt;p&gt;ue5の開発は初回からpackage buildで通ることを確認してから開発を進めるのがおすすめです。assetを入れると通らなくなります。pluginも同様です。&lt;/p&gt;&#xA;&lt;p&gt;もしそのassetやpluginを使って開発を進め、後々になってbuildが通らないということになると大変です。&lt;/p&gt;&#xA;&lt;p&gt;私も最初の方でpackage buildを試してみた事があったのですが最後まで確認せず、errがでてないから大丈夫とそこで終わりにしていました。ですが、全く先に進まないという問題がありました。&lt;/p&gt;&#xA;&lt;p&gt;色々と試した結果、macだけでなくwindowsでのpackage build環境も整えられたのでよかったですが、ue5のpackage build環境の検証と構築は相当大変でした。&lt;/p&gt;&#xA;&lt;p&gt;また、project settings &amp;gt; platform &amp;gt; macではpackage化の項目があり、通常は&lt;code&gt;intel &amp;amp; apple silicon&lt;/code&gt;になっています。これをapple siliconに変更するとpackage buildは安定するかもしれません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>archlinuxでwifiがfreezeする</title>
      <link>https://syui.github.io/blog/post/2023/12/15/arch/</link>
      <pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/15/arch/</guid>
      <description>&lt;p&gt;久しぶりにwifiを使おうと思ってnetworkmanagerをインストールして使ってると何故かfreezeするようになってしまったので解決する方法。&lt;/p&gt;&#xA;&lt;p&gt;これはnetworkmanagerが悪いわけではなくkernelレベルの問題で&lt;code&gt;rtw88_8821ce&lt;/code&gt;というmoduleが原因らしい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S broadcom-wl networkmanager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl start NetworkManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/modprobe.d/blacklist.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blacklist rtw88_8821ce&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/default/grub&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx xxx pci=noaer&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ reboot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bbs.archlinux.org/viewtopic.php?pid=2017654#p2017654&#34;&gt;WiFi frequently and randomly disconnects, rtw_8821ce driver&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた7</title>
      <link>https://syui.github.io/blog/post/2023/12/09/ue5/</link>
      <pubDate>Sat, 09 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/09/ue5/</guid>
      <description>&lt;p&gt;ue5を触って1週間が経ちました。触れない日もありましたが、今回はsword(剣)のmotion(モーション)などを作りました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;video : &lt;a href=&#34;https://syui.github.io/ai/video/#ue5_ai_0005.mp4&#34;&gt;/ai/video/#ue5_ai_0005.mp4&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;やったこととしては、変身、瞬間移動、剣、そして、見た目の変更です。それぞれにテクニックがあるので順に紹介します。&lt;/p&gt;&#xA;&lt;p&gt;この記事では、参考になるリンクを載せています。外部リンクは参考になる投稿者に限定しているので是非読んでみてください。例えば、&lt;a href=&#34;https://www.youtube.com/watch?v=0vYPkxEZEtQ&#34;&gt;UE備忘録本舗&lt;/a&gt;さんはとてもわかりやすく参考になる動画を投稿されている方です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;outlinenormalによる見た目の変更&#34;&gt;outline、normalによる見た目の変更&lt;/h3&gt;&#xA;&lt;p&gt;今までのモデルと見比べてみるとよくわかります。左がold、右がnewです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231202_203956.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-09_16.34.39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これはoutline(アウトライン)やnormal line(法線)と一般に言われているものです。&lt;/p&gt;&#xA;&lt;p&gt;それを&lt;code&gt;overlay material&lt;/code&gt;で実現しています。&lt;a href=&#34;https://blueprintue.com/&#34;&gt;blueprint&lt;/a&gt;を貼っておきます。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/t1xc2azx/&#34; scrolling=&#34;no&#34; allowfullscreen width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;syuiでアカウント作ろうとしてmail間違えて認証できなくなり、再度syuiでアカウント作ろうとしたら空いてなかったので&lt;a href=&#34;https://blueprintue.com/profile/ai/&#34;&gt;ai&lt;/a&gt;にした&amp;hellip;まあいいか&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;表情を変更する&#34;&gt;表情を変更する&lt;/h3&gt;&#xA;&lt;p&gt;表情のdefault(デフォルト)が口が半開きになっている気がするので、それを変更します。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/38p8o_4y/&#34; scrolling=&#34;no&#34; allowfullscreen width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=M0jKBvwmWlU&#34;&gt;新機能の「透過オーバーレイマテリアル」でアウトラインを簡単に実装してみよう&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;瞬間移動の実装&#34;&gt;瞬間移動の実装&lt;/h3&gt;&#xA;&lt;p&gt;montageからmotion warpingを使って瞬間移動をやってみましたが、障害物があると移動できないし、瞬間移動というか高速移動なだけなので、actor locationで実現しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;set actor location&lt;/code&gt;で設定してください。&lt;/p&gt;&#xA;&lt;p&gt;motion warpingで設定したように通知ステートでは他に様々なものを追加することができます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-09_16.39.56.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LCfPAmmMRNY&#34;&gt;Game Effect Portfolio 2023&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;montageを再生したあと元の位置に戻ってしまう&#34;&gt;montageを再生したあと元の位置に戻ってしまう&lt;/h3&gt;&#xA;&lt;p&gt;sword motion(ソード・モーション)はanim montage(アニメ・モンタージュ)を使用しているのですが、実行後に元のlocation(位置)に戻ってしまう問題がありました。&lt;/p&gt;&#xA;&lt;p&gt;これは&lt;code&gt;root motion&lt;/code&gt;をenableにしたり、他の設定をやっても戻ってしまうのです。&lt;/p&gt;&#xA;&lt;p&gt;原因はIKリターゲットしたときrootが動いていないために起こります。animationを開いてsrcとtargetを比較してみると、srcのほうはrootが動いていますが、targetのアニメは動いていません。具体的には、srcはlocationが変動しますが、targetは変動していません。&lt;/p&gt;&#xA;&lt;p&gt;これを変動するようにしないといけないのですが、bone(ボーン)の&lt;code&gt;root&lt;/code&gt;を選択してFKの平行移動モードを&lt;code&gt;Globally Scaled&lt;/code&gt;に設定します。&lt;/p&gt;&#xA;&lt;p&gt;これでtargetのrootが変動しているのを確認後、リターゲットし、montageを作成します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-09_16.37.18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://happynetwork2019.hatenablog.com/entry/2023/10/02/191340#:~:text=%E3%83%BB%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%BF%E3%83%96%E3%81%A7%E3%83%AB%E3%83%BC%E3%83%88,%E3%81%95%E3%82%8C%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%AA%E3%82%8B%E3%80%82&#34;&gt;UE5でルートモーションを有効にしたままリターゲットをする方法&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;swordをしまう時のparticle&#34;&gt;swordをしまう時のparticle&lt;/h3&gt;&#xA;&lt;p&gt;これは&lt;code&gt;sword_open&lt;/code&gt;, &lt;code&gt;sword_close&lt;/code&gt;というactor, blueprintを作成して、それを&lt;code&gt;BP_Player&lt;/code&gt;のmeshに当てます。そして、&lt;code&gt;set visible&lt;/code&gt;で切り替えています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-10_00.39.01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ではparticle(粒子)はどうやって実現しているのかというと&lt;code&gt;niagara&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dipross.co.jp/eng/2023/06/ue5-niagara%E3%81%AE%E5%9F%BA%E7%A4%8E.html&#34;&gt;UE5 Niagaraの基礎&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-10_00.39.02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;swordを振ったときのeffect&#34;&gt;swordを振ったときのeffect&lt;/h3&gt;&#xA;&lt;p&gt;まずはboneを追加します。このboneを元にtrailというeffectをつけていくわけです。&lt;code&gt;sword-trail&lt;/code&gt;は検索タグとしても有効です。effectはanim sequence(アニメ・シーケンス)で設定します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_2023-12-09_16.35.44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;PSTemplate&lt;/code&gt;, &lt;code&gt;Socket Name&lt;/code&gt;を指定します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231203_203306.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;また、niagaraで作成してもいいですね。&lt;code&gt;sword-trail-naigara&lt;/code&gt;とでも検索してみてください。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0vYPkxEZEtQ&#34;&gt;ソードトレイル&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;swordのcharge-motion&#34;&gt;swordのcharge motion&lt;/h3&gt;&#xA;&lt;p&gt;こちらはmontageを分割して、それを再生します。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://blueprintue.com/render/_yz6dfib/&#34; scrolling=&#34;no&#34; allowfullscreen width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=N0qLD918oy8&#34;&gt;溜め攻撃（チャージ攻撃）の実装方法&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;変身など&#34;&gt;変身など&lt;/h3&gt;&#xA;&lt;p&gt;これは&lt;code&gt;Set Skeletal Mesh Asset&lt;/code&gt;で切り替えですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた6</title>
      <link>https://syui.github.io/blog/post/2023/12/05/ue5/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/05/ue5/</guid>
      <description>&lt;p&gt;今日は&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;モデルが飛んでいるときに&lt;code&gt;overlay material&lt;/code&gt;を適用&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これは&lt;code&gt;SK_xxx&lt;/code&gt;を複製して、そこにoverlay materialを当て、それをevent時に呼び出すことで実現しています。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、&lt;code&gt;BP_Player_UE5&lt;/code&gt;のInput Event Graphで&lt;code&gt;Set Skeletal Mesh Asset&lt;/code&gt;を呼び出したい場面で使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231205_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;変身前、変身後があったとして、event後にずっと変身してしまわないよう両方使うのがいいでしょう。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;ブリッジモード -&amp;gt; フォリッジで草原を作る&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231205_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;しかし、前はあんなにヌルヌル動いてたのに草を生やすと、本当に遅くなってしまった。あまり多くしない方がいいか、あるいはちゃんと使用する草をシンプルなものにしないといけないと思う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/video/#ue5_ai_0004.mp4&#34;&gt;動画&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた5 (vs unity)</title>
      <link>https://syui.github.io/blog/post/2023/12/04/ue-vs-unity/</link>
      <pubDate>Mon, 04 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/04/ue-vs-unity/</guid>
      <description>&lt;p&gt;今日もue5を触ってやったことや今後やりたいこと、unityとどちらがいいのかなどを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;post precess volumeを作成&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;その領域に入るとshaderが適用されるようにできる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;はずなんだけど、なんかおかしい。&lt;code&gt;post process volume&lt;/code&gt;の詳細がでてこないことに気づいた。ただ、&lt;code&gt;PB_Player&lt;/code&gt;のcameraからpost processの項目にアクセスできるんだけど、mac-m1限定の問題かもしれない。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;追記 : イチから作り直したら詳細が出てきた。わけがわからない。そもそも詳細が出てこない状況が普通は考えられないので、おそらくバグだったんだと思う。結局プロジェクトを作り直さないとダメだったのか。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;しかも、色々やりすぎてpackage buildが通らない。これはvroidの問題だと思う。ファイルが多すぎて整理できていないので、もう一度イチから作り直すことにしよう。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;追記 : この問題はxcodeを最新版にしてassimpをrebuildすると解消しました。ただそれだけではmacの&lt;code&gt;._*&lt;/code&gt;ファイルが原因でbuildが通らないのでfindで削除します。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pdr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/Volumes/ssd/project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$pdr/$pkg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf $pkg/Plugins&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open $pdr/VRM4U_5_3_20231126.zip;sleep 15;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv $pdr/Plugins $pkg/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -rf /Volumes/ssd/git/assimp/build1/lib/libassimp.a $pkg/Plugins/VRM4U/ThirdParty/assimp/lib/Mac/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf $pkg/Binaries&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf $pkg/Intermediate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf $pkg/Plugins/VRM4U/Binaries&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf $pkg/Plugins/VRM4U/Intermediate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find $pkg/ &lt;span style=&#34;color:#ae81ff&#34;&gt;\(&lt;/span&gt; -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.DS_Store&amp;#39;&lt;/span&gt; -or -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;._*&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\)&lt;/span&gt; -delete -print;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まだエラーが出ます。&lt;code&gt;x86_64&lt;/code&gt;がないとか言われますが、使用しているのは&lt;code&gt;arm64&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://forums.unrealengine.com/t/linker-error-undefined-symbols-for-architecture-x86_64-while-packaging/103451&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UATHelper: パッケージ化 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Mac&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: ld: symbol&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; not found &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; architecture x86_64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gcc -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Apple clang version 15.0.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;clang-1500.1.0.2.5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Target: arm64-apple-darwin23.1.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここで&lt;code&gt;make -j4&lt;/code&gt;でmakeして再びvrmを読み込んだら通った。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた4</title>
      <link>https://syui.github.io/blog/post/2023/12/03/ue5/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/03/ue5/</guid>
      <description>&lt;p&gt;今日は&lt;/p&gt;&#xA;&lt;h3 id=&#34;system&#34;&gt;system&lt;/h3&gt;&#xA;&lt;p&gt;画面にメニューが出てるので非表示&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;まずはHUDを非表示にするため&lt;code&gt;WBP_MainHUD.uasset&lt;/code&gt;から&lt;code&gt;is Visibility&lt;/code&gt;のチェックを外す&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;animation&#34;&gt;animation&lt;/h3&gt;&#xA;&lt;p&gt;いくつか動かないモーションがあります。ue5のモデルを使用すると動くのですが、vroidからリターゲットで作成したものは動かないので、個別調整しました。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;落下モーションが動かないので、見てみると、リターゲットで作成されていなかったので、再び&lt;code&gt;ABP_Player_UE5&lt;/code&gt;からリターゲティングを作成して&lt;code&gt;AM_Superhero...&lt;/code&gt;を作成する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;まだ動かないので、&lt;code&gt;BP_SuperheroFlightComponent.uasset&lt;/code&gt;を編集する。&amp;ldquo;Play anim montage event.&amp;ldquo;を以下のようにしました。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PlayAnimMontage --&amp;gt; Play Anim Montage (Anim Montage) --&amp;gt; (asset) AM_Superhero...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;hoverのモーションも動かないので、&lt;code&gt;ABP_Player_UE5_xxx&lt;/code&gt;を編集します。&amp;ldquo;Play hover flight start montage notify event.&amp;ldquo;を以下のようにしました。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AnimNotifyHoverStart --&amp;gt; ... --&amp;gt; Play Slot Animation as Dynamic Montage --&amp;gt; (asset) A_Fight_Hover...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;shader&#34;&gt;shader&lt;/h3&gt;&#xA;&lt;p&gt;cel shaderでモデルをアニメ風にしたい。&lt;/p&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;BP_Player_UE5_xxx&lt;/code&gt;の編集に入り、コンポーネントの&lt;code&gt;Camera&lt;/code&gt;から詳細を確認。そこに&lt;code&gt;Rendering Features&lt;/code&gt;があるので、Post Prosess Material(ポストプロセスマテリアル)に&lt;code&gt;Cel_Shader(マルっこいやつ)&lt;/code&gt;を選択します。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;例えば、以下はue4の対応です。ue5で使えるかはわかりません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alwei/PPCelShader&#34;&gt;https://github.com/alwei/PPCelShader&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alwei/PPLineDrawing&#34;&gt;https://github.com/alwei/PPLineDrawing&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231202_203956.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231202_221341.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231203_175538.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231203_200607.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231203_203249.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_20231203_203304.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;link&#34;&gt;link&lt;/h3&gt;&#xA;&lt;p&gt;気になった記事を幾つかまとめます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ug0001.wixsite.com/unrealcafe/%E3%82%A2%E3%82%BB%E3%83%83%E3%83%88&#34;&gt;assetまとめ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cgworld.jp/regular/202311-ue5toon-04.html&#34;&gt;UE5でつくるセルシェーディング&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;動画ページ作りました&#34;&gt;動画ページ作りました&lt;/h3&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/ai/video/ue5_ai_0003.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;追記パソコンが治った&#34;&gt;追記、パソコンが治った&lt;/h3&gt;&#xA;&lt;p&gt;思うところがあって壊れてたパソコンを直しました。&lt;/p&gt;&#xA;&lt;p&gt;電源つかないなあと思って色々やってると電源がついた。起動してみるとbiosが起動しない。やっぱり無理かと思って放置。なにかを思いついて試す。やっぱり無理。また試すというのを3回くらい繰り返すと復活しました。&lt;/p&gt;&#xA;&lt;p&gt;ただ、gpuのファンが回らなくなってた。これは分解時に破損したものか、昔から破損してたのか、あるいは今回動かなくなったのかわからない。でもgpuの動作には問題ないですね。ファンも他から持ってくればいいだけだし。&lt;/p&gt;&#xA;&lt;p&gt;再びosが起動したときは嬉しかった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyの日常</title>
      <link>https://syui.github.io/blog/post/2023/12/01/bluesky/</link>
      <pubDate>Fri, 01 Dec 2023 07:44:54 +0900</pubDate>
      <guid>https://syui.github.io/blog/post/2023/12/01/bluesky/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://adventar.org/calendars/9443&#34;&gt;Bluesky Advent Calendar 2023&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;blueskyのアドベントカレンダー、1日目の記事です。&lt;/p&gt;&#xA;&lt;p&gt;blueskyの日常はどのようなものでしょう。この記事では個人体験に基づきblueskyの感想を書いていけたらと思います。&lt;/p&gt;&#xA;&lt;p&gt;私が感じているのは以下の3つです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;個人の日常を投稿する人が多い&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;アクティブな人が多い&amp;hellip;例えば、likeする人が多い&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;新しいものにポジティブな人が多い&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;現在のblueskyは大体このような特徴があると思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;アクティブな人が多い&#34;&gt;アクティブな人が多い&lt;/h3&gt;&#xA;&lt;p&gt;まずは私がイラストを投稿した時のlikeを最新の投稿に基づき調べてみました。イラストに限らずlikeしてくれる人は、blueskyが圧倒的に多いという結果になりました。みなさん、ありがとうございます。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;sns&lt;/th&gt;&#xA;          &lt;th&gt;like&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mastodon&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;twitter&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bluesky&lt;/td&gt;&#xA;          &lt;td&gt;73&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ちなみに、twitterの3のうち2つはblueskyにいる人がlikeしてくれたものでした。&lt;/p&gt;&#xA;&lt;p&gt;これは、たまたまでしょうか。もし私がtwitterの有名人だったら結果は違っていたかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;したがって、この点についてblueskyで印象に残っている話をしていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;blueskyで昔こんなことがありました。&lt;/p&gt;&#xA;&lt;p&gt;ある界隈で有名な人がblueskyにやってきました。&lt;/p&gt;&#xA;&lt;p&gt;その人が誰かをフォローすることはなく、他の人の投稿をlikeすることも、reply(リプライ)、repost(リポスト)することもありませんでした。その人は結局、誰とも交流することなく、数日間投稿を続け「blueskyは人がいないし反応がないからダメだ」と言い去っていきました。&lt;/p&gt;&#xA;&lt;p&gt;この話を聞いて、どう思いましたか。&lt;/p&gt;&#xA;&lt;p&gt;私はこう思いました。&lt;/p&gt;&#xA;&lt;p&gt;今、blueskyにいる人たちは、相手がインフルエンサーか否かではなく、対等な立場で話ができる相手かどうか、人を見て判断できる人たちだ、と。&lt;/p&gt;&#xA;&lt;p&gt;ネットは素晴らしい場所です。年齢も性別も人種も社会的地位も関係なく平等で、あらゆる要素を取っ払って話ができる。&lt;/p&gt;&#xA;&lt;p&gt;「いや、そんなことはないぞ」と思われる人がいるかもしれません。インフルエンサーと一般人が平等なわけがないだろ、お前は何を言っているんだ、と。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私の前でそれらは意味をなさない。相手がインフルエンサーか否かではなく、その人がどのような人なのか、それだけが重要だと思います。そして、おそらく、blueskyには私と同じような考えを持つ人が多かった。&lt;/p&gt;&#xA;&lt;p&gt;ですから、件の人はあまり相手にされることなく「なんで自分が一般人と同じ扱いなのだ」と怒り去ってしまったのでしょう。投稿の反応に関して、その人は他の人と違いがありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;blueskyでは、likeしてくれる人が多い。しかし、相手が有名人か否かはほとんど関係がありません。&lt;/p&gt;&#xA;&lt;p&gt;もしかしたら、このような特徴がblueskyの平和につながっているのかもしれませんね。&lt;/p&gt;&#xA;&lt;p&gt;私は、色々なsnsをやってきましたが、blueskyにいる人たちが最も好意的かつアクティブだったと感じています。次点でnostrも非常に良いコミュニティが形成されており、snsとして非常にお勧めできると思います。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今、snsをやるならblueskyかnostrが最も良い選択だと個人的に思っています。&lt;/p&gt;&#xA;&lt;p&gt;blueskyは今までのsnsで一番楽しい。&lt;/p&gt;&#xA;&lt;p&gt;では、それ以外のsnsとの違いはどういったところになるのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;そして、その差はどのように形成されたのか。&lt;/p&gt;&#xA;&lt;p&gt;snsでできることは同じなのに、コミュニティの空気が全然違うように感じています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mastodon当時の盛り上がり&#34;&gt;mastodon、当時の盛り上がり&lt;/h3&gt;&#xA;&lt;p&gt;私はmastodonの個人インスタンスを2017から立ち上げて運用を続けてきました。&lt;/p&gt;&#xA;&lt;p&gt;ですから、当時の盛り上がりを知っています。&lt;/p&gt;&#xA;&lt;p&gt;2017、たくさんの技術者がインスタンスを立てました。&lt;/p&gt;&#xA;&lt;p&gt;この時は管理者同士のやり取りが非常に活発でした。&lt;/p&gt;&#xA;&lt;p&gt;技術者が技術的な投稿を行うのがmastodon。そのような印象でした。&lt;/p&gt;&#xA;&lt;p&gt;私もmastodonで色々な人と交流し、当時の最新技術でできることをすごく楽しんでいました。&lt;/p&gt;&#xA;&lt;p&gt;twitterよりmastodonの方がよほど楽しかったというのが個人的な感想です。mastodonをいち早く触り始めて本当によかった。&lt;/p&gt;&#xA;&lt;p&gt;ですが、mastodonは全体的に少し寂しいところだったと感じます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、公式アカウントへのreplyやlikeを見てみると、全体的な空気が違うように感じるのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;空気の違い&#34;&gt;空気の違い&lt;/h3&gt;&#xA;&lt;p&gt;言葉で言い表すのが難しい空気の違いがあります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、公式アカウントの投稿に付くlikeやreplyを見ると、両者は明らかに違います。数も違えば、内容も違います。blueskyは多くて明るい印象、mastodonは少し気難しく真面目な人が多い印象でした。どちらも一長一短、良いところもあれば悪いところもある。下記は最新の投稿の反応をまとめたものです。内容が異なるため単純に比較することはできませんが、いくつか遡って確認しています。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;最新の投稿&lt;/th&gt;&#xA;          &lt;th&gt;repost&lt;/th&gt;&#xA;          &lt;th&gt;like&lt;/th&gt;&#xA;          &lt;th&gt;url&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bluesky&lt;/td&gt;&#xA;          &lt;td&gt;2745&lt;/td&gt;&#xA;          &lt;td&gt;9666&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://bsky.app/profile/bsky.app/post/3ked2oybdjf2k&#34;&gt;link&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mastodon&lt;/td&gt;&#xA;          &lt;td&gt;328&lt;/td&gt;&#xA;          &lt;td&gt;479&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://mastodon.social/@Mastodon/111461309876030410&#34;&gt;link&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;blueskyに住む人たちはとんでもなくアクティブで、今まで見てきたどのsnsよりもアクティブだと感じます。&lt;/p&gt;&#xA;&lt;p&gt;なぜ、ここまでの違いが生まれたのか、私には分かりません。偶然的な要素もあるのかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;でも、なぜここまでの違いがあるのかは分かります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた3</title>
      <link>https://syui.github.io/blog/post/2023/11/30/ue5/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/30/ue5/</guid>
      <description>&lt;p&gt;今回は、asset(アセット)を使って空を飛んでみました。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Superhero Flight Animations&lt;/code&gt;を導入します。これは日本の&lt;a href=&#34;https://www.indie-us-games.co.jp/&#34;&gt;Indie-us Games&lt;/a&gt;という会社が提供しているようで、&lt;a href=&#34;https://twitter.com/undefeated_game&#34;&gt;UNDEFEATED&lt;/a&gt;というゲームにも使われています。このゲーム参考になりそう。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Space Frontier Stations &amp;amp; Ships&lt;/code&gt;というマップを使います。そして、Game Modeに上の&lt;code&gt;GM_${motion_asset}&lt;/code&gt;を適用します。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;プロジェクトの基本、Player Startを選択して、ゲーム開始時のキャラクターの位置を設定します。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/ai/video/ue5_ai_0002.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;また、ここで初めてパッケージ化もやってみました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;追記パソコンが破壊された話&#34;&gt;追記、パソコンが破壊?された話&lt;/h3&gt;&#xA;&lt;p&gt;ue5を作っている会社が提供してくれている&lt;a href=&#34;https://docs.unrealengine.com/5.0/ja/city-sample-project-unreal-engine-demonstration/&#34;&gt;city sample&lt;/a&gt;というassetがあります。&lt;/p&gt;&#xA;&lt;p&gt;こちらをインストールして、使ってみようと思いやってみました。&lt;/p&gt;&#xA;&lt;p&gt;このassetはwindows10を要件としているため、少し古いGPU付きのパソコンに再びue5をインストール(5時間)し、assetのインストール(10時間)、そして、読み込み(2時間)を行いました。&lt;/p&gt;&#xA;&lt;p&gt;1回目は一応読み込んでくれたのですが、ウィンドウが固まってしまったため、2回目の読み込みを行いました。&lt;/p&gt;&#xA;&lt;p&gt;ずーっと待ってて、寝る時間だから放置しました。翌朝、パソコンを見てみると電源が入らなくなっていました。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、電源かマザーボードの故障だろうと思いました。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これが必ずしもue5のせいだとは思いません。そもそもこのパソコンはいつ壊れてもおかしくなかったので寿命かもしれない。ですが、私はue5が故障の一端だったのではないかと思っています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた2</title>
      <link>https://syui.github.io/blog/post/2023/11/29/ue5/</link>
      <pubDate>Wed, 29 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/29/ue5/</guid>
      <description>&lt;p&gt;今回は、キーボードで操作できるようにするまでをやってみました。&lt;/p&gt;&#xA;&lt;p&gt;具体的にはスターターキットのアニメーションにリターゲットする感じで作成したやつをキャラクターに割り当てる感じだと思う。スターターキットはモデルが動かせるようになってるのでそれを入れ替える感じだと思う。&lt;/p&gt;&#xA;&lt;p&gt;具体的な手順はこちらのブログにある通りです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.mayonakanouta.com/blog/unreal-engine-import-vroid-studio&#34;&gt;https://www.mayonakanouta.com/blog/unreal-engine-import-vroid-studio&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ここまで正確に書かれているブログはこれくらいだと思います。&lt;/p&gt;&#xA;&lt;p&gt;他のブログ記事を幾つか試してみましたが、他のやり方だと多分動きません。実際に動かしてみると大体の要領を把握できましたが、他のブログで書かれているやり方だとやっぱり大抵は動かない気がします。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;コンテンツドロワーからvrm pluginが用意してくれているIKリターゲッタをダブルクリックで編集する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;[IKリターゲッタ] ターゲットのAssetをIK_${model_name}_Mannequinにする, Meshも同じく変更する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ここでAポーズにしてサイズ調整を行う。適当なアニメーションを再生して確認する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;コンテンツドロワーからスターターキットのMannequins/Animations/ABP_QuinnというアニメーションBPを右クリックし&lt;code&gt;アニメーションアセットのリターゲティング&lt;/code&gt;で複製する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;先程、編集したIKリターゲッタを選択する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;コンテンツドロワーからスターターキットのキャラクターを編集する。ThirdPerson/Blueprints/BP_ThirdPersonCharacter&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;先程、複製して作ったものをAnimationのAnime Classに当てる。私の場合はABP_Quinn_C&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/ai/video/ue5_ai_0001.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;mapを追加してみました。アセットを追加して、mapを開いて、キャラクターを置くと適用されます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_0004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ue5を触ってみた1</title>
      <link>https://syui.github.io/blog/post/2023/11/28/ue5/</link>
      <pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/28/ue5/</guid>
      <description>&lt;p&gt;随分前にunityで3d-modelを動かしてみたことがありました。&lt;/p&gt;&#xA;&lt;p&gt;unityはあまりきれいじゃないので、今回はue5で試してみることにします。ue5をはじめて1日目の記録です。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、これが地獄の始まりでした。&lt;/p&gt;&#xA;&lt;p&gt;まず、ue5をインストールします。容量が大きいというので普段繋いでいたhdd(6t)にインストールすることにしました。&lt;/p&gt;&#xA;&lt;p&gt;これが数時間かかりました。しかも、インストールが終了したにも関わらずlaucherで「起動」ボタンが表示されず、「インストール」が表示されていました。&lt;/p&gt;&#xA;&lt;p&gt;意味がわからないなあと思い、再起動とか色々やっていると、しばらくしてなぜか「起動」が表示されます。&lt;/p&gt;&#xA;&lt;p&gt;で、起動を押して、プロジェクトを作成し、エディタと画面が表示されました。そこで、スターターキットのモデルをキーボードで動かしました。どうやらしっかりと動くようです。&lt;/p&gt;&#xA;&lt;p&gt;ここで、一旦、ue5を終了します。&lt;/p&gt;&#xA;&lt;p&gt;終了したにもかかわらず、何故か「editor」みたいなものがバックグラウンドにありました。ue5のやつです。&lt;/p&gt;&#xA;&lt;p&gt;しばらくして、macを終了しようとすると、「editor」が起動しているのでmacを終了できないと出てきます。&lt;/p&gt;&#xA;&lt;p&gt;ここで、そのアプリを強制終了して、macを落とします。&lt;/p&gt;&#xA;&lt;p&gt;さて、次にmacを立ち上げたとき、hddが破壊されていたのでした&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;これはちょっとやばいなと思い、なんとかhddにアクセスできるようにしました。hddのフォーマットがexfatだったので、復旧はwindowsでやりました。ここからはファイルを救出する作業になります。具体的には&lt;code&gt;rsync&lt;/code&gt;でwindowsからファイルを引っ張ってくることにしました。rsyncが使えるなら大丈夫なんじゃないかと思われるかもしれませんが、ディスクは完全におかしくなっていて、この状態にするまでに相当の時間がかかりました。おそらく、次はないでしょう。ここで終了したりumountしてしまうと、二度とアクセスできなくなる可能性があります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ scoop install cwrsync&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rsync -avP windows:/cygdrive/e/test .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このhddは最近買ったばかりのやつなので寿命ということはないと思う。おそらく、ue5が原因だろうと思われます。直接的ではないにしてもue5の何らかの書き込みが上手く行かずhddを破壊してしまったのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;しかしまあ、長時間インストールの末にhddが破壊されるだけとは&amp;hellip;壮大な時間の無駄。しかもhddにあったファイルは個人的に重要なものだったので復旧できてよかった。&lt;/p&gt;&#xA;&lt;p&gt;ディスク復旧の作業をしながら、ue5に取り掛かりました。再びue5のインストールに長時間使ったあとvrmを読み込むpluginを導入しました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;assimp&#34;&gt;assimp&lt;/h3&gt;&#xA;&lt;p&gt;vrmをue5でimportするpluginの&lt;code&gt;vrm4u&lt;/code&gt;に必要らしい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd vcpkg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bootstrap-vcpkg.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./vcpkg integrate install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./vcpkg install assimp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# これは必要ない、後述のruyo/assimpをmakeします&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/assimp/assimp.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd assimp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmake CMakeLists.txt &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmake --build .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vrm4u&#34;&gt;vrm4u&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34;&gt;https://github.com/ruyo/VRM4U&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ruyo/assimp&#34;&gt;https://github.com/ruyo/assimp&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ruyo.github.io/VRM4U/03_mac/&#34;&gt;こちら&lt;/a&gt;を読んで、cmakeのguiからsrcを作って&lt;code&gt;make&lt;/code&gt;するらしい。&lt;/p&gt;&#xA;&lt;p&gt;assimpをbuildしてできた&lt;code&gt;libassimp.a&lt;/code&gt;を&lt;code&gt;MyProject/Plugins/VRM4U/ThirdParty/assimp/lib/Mac/libassimp.a&lt;/code&gt;に置いて、ue5でbuild(project)するらしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ue5_ai_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U/issues/317#issuecomment-1733430315&#34;&gt;https://github.com/ruyo/VRM4U/issues/317#issuecomment-1733430315&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>原神、ヌヴィレットを引くかも</title>
      <link>https://syui.github.io/blog/post/2023/11/26/genshin/</link>
      <pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/26/genshin/</guid>
      <description>&lt;h3 id=&#34;スカークは実装される気配がない&#34;&gt;スカークは実装される気配がない&lt;/h3&gt;&#xA;&lt;p&gt;前回、スカークの話をしましたが、ストーリーを見たところ、このキャラはしばらく実装される気配はないなと思いました。&lt;/p&gt;&#xA;&lt;p&gt;原神ってベータテスターでキャラをテストするんですけど、スカークはそのテストに入っていない模様。&lt;/p&gt;&#xA;&lt;p&gt;関係ありませんが、個人的にテスターを介さないシークレットプロジェクトを作ると面白そうだと思いました。そこでキャラを開発し、本編と切り離して直前に実装という組織を作るとサプライズが可能になり、プレイヤーを驚かせることができるんじゃないかなと。もし私がゲーム開発することがあるなら、この仕組みを取り入れようと思います。&lt;/p&gt;&#xA;&lt;p&gt;さて、現在のストーリー上でスカークが実装される気配はないようだという話でしたね。&lt;/p&gt;&#xA;&lt;p&gt;私は、スカークが近く実装されるかもしれないので原石を貯めておく予定でしたが、しばらく実装されないなら、キャラを引いた方がいいですね。&lt;/p&gt;&#xA;&lt;p&gt;というのも、原石を貯め続ける期間は、当然ながらキャラを使えないわけです。キャラを引くなら早い方がいい。実装されるかわからないキャラの原石をずっと貯めているという状態は最も損をする可能性が高い。&lt;/p&gt;&#xA;&lt;p&gt;では、どのキャラを引こうかな。候補としてはヌヴィレットか夜蘭です。そして、ヌヴィレットはストーリーで気に入ったので、ヌヴィレットかな。&lt;/p&gt;&#xA;&lt;p&gt;ヌヴィレットの1凸を目指すことにしましょう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ついでに&#34;&gt;ついでに&lt;/h3&gt;&#xA;&lt;p&gt;今期の螺旋で安定したPTです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20231101_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ヌヴィレットがいると、ナヒーダを後半に回せますね。ナヒーダがいるPTは敵がどうであれ大体は45秒くらいで倒せるのですが、いないと1分30秒を超えてしまう。この状況を打破したい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20231101_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker volumesの移行</title>
      <link>https://syui.github.io/blog/post/2023/11/24/docker-mac/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/24/docker-mac/</guid>
      <description>&lt;p&gt;macbook air(intel)を使っていなかったのでserverにしました。stable diffusionを動かしているgpu付きのserverがあるんだけど、stable diffusionを稼働すると、他のものが止まってしまったり、動きが鈍くなってしまったりで不都合だったので、全体的にdockerをmacに移行しました。&lt;/p&gt;&#xA;&lt;p&gt;docker volumesは権限の関係で&lt;code&gt;tar&lt;/code&gt;にしてから&lt;code&gt;rsync&lt;/code&gt;で移行先に送ります。そうしないとdata(postgresなど)が移行先で扱えません。個別に永続化しているvolumesも同様とします。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install --cask docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ su&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tar cvzf  volumes.tgz /var/lib/docker/volumes &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 移行先へのssh接続を確立しておく必要があります&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rsync -av volumes.tgz  mac:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ aunpack volumes.tgz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mkdir -p /var/lib/docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mv ./var/lib/docker/volumes /var/lib/docker/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、フリーナ2凸</title>
      <link>https://syui.github.io/blog/post/2023/11/09/genshin/</link>
      <pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/09/genshin/</guid>
      <description>&lt;p&gt;フリーナ2凸しました。無課金なのでこれからは原石貯めの期間になります。&lt;/p&gt;&#xA;&lt;p&gt;もともと運命石は&lt;code&gt;280&lt;/code&gt;あって、フリーナ2凸したあとは&lt;code&gt;140&lt;/code&gt;になりました。&lt;/p&gt;&#xA;&lt;p&gt;さて、フリーナ2凸を使ってみた感想とか、今後の計画とかについて話します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;フリーナ2凸&#34;&gt;フリーナ2凸&lt;/h3&gt;&#xA;&lt;p&gt;フリーナは使いこなすのは難しいけど、うまく使いこなせばタイムや敵を一気に削れるキャラです。&lt;/p&gt;&#xA;&lt;p&gt;螺旋の雷馬のタイム、行秋とフリーナをPTに入れて戦ってみたところ、以下のタイムでした。PTは&lt;code&gt;ナヒーダ&lt;/code&gt;, &lt;code&gt;鍾離&lt;/code&gt;, &lt;code&gt;忍&lt;/code&gt;です。検証回数は1回。なので、そこまで性能を正確に反映するものではないと考えてください。ですが、行秋で40sはかなり難しいと思います。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;フリーナ : 40s&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;行秋 : 80s&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;フリーナの性能は、普通に使うと行秋を少し弱くした感じです。ですが、バフをうまく機能させると倍ほどの効果を発揮可能、そんな感じです。&lt;/p&gt;&#xA;&lt;p&gt;スキルは思った以上に便利です。原神をはじめたばかりの人は、フリーナを最優先で引いてもいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ただし、フリーナは個人的にナヒーダほどのインパクトはありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;私が今まで引いたキャラで最もインパクトが強かったキャラはナヒーダでした。&lt;/p&gt;&#xA;&lt;p&gt;したがって、引くべきキャラは1位がナヒーダで2位がフリーナです。&lt;/p&gt;&#xA;&lt;p&gt;草元素を初めて使うというのもあったのですが、敵が溶けていく感覚がありました。なぜかわからんけど、ナヒーダをPTに入れると、敵が溶ける。こんなキャラは今まで使ったことないし、引いたことなかったなあ。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダを完凸したのは色々な理由がありますが、その一つは、こういったナヒーダの強さを実感したからです。&lt;/p&gt;&#xA;&lt;p&gt;その他に、私が原神で一番見た目がいいと思うのがナヒーダなのです。かわいくて好きなのはクレーです。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダを使いこなすには、水元素が必要で、今まで行秋だけだったのですが、フリーナが加わり、ようやく水元素枠が埋まりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;相性の良いキャラ&#34;&gt;相性の良いキャラ&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ヨォーヨ2凸 + フォンテーヌ鍛造武器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;PT : ナヒーダ, 雷電, フリーナ, ヨォーヨ&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダに金箔、雷電に西風を持たせてもいい&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後の計画&#34;&gt;今後の計画&lt;/h3&gt;&#xA;&lt;p&gt;今後はキャラ過剰になるため、原石を温存し、1キャラ完凸分の原石を確保することを目標とします。&lt;/p&gt;&#xA;&lt;p&gt;つまり、ガチャを引くことはないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;攻略に関しては現時点で問題ありません。&lt;/p&gt;&#xA;&lt;p&gt;また、無課金で最強を目指すのは無謀ですし意味がない。例えば、夜蘭やヌヴィレットは今後も引かないでしょうね。&lt;/p&gt;&#xA;&lt;p&gt;フリーナの伝説任務と魔神任務をやって、スカークが登場しましたが、近く実装される可能性は、ほぼありません。そう感じました。&lt;/p&gt;&#xA;&lt;p&gt;少しだけ感想を述べると、フリーナは、かなり好きなキャラです。&lt;/p&gt;&#xA;&lt;p&gt;彼女はやるべきことをやった、それだけです。非難されるいわれはまったくないな。彼女の頑張りがなければフォンテーヌの人々は救われていませんよ、全滅だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;あと、このキャラ、たぶんギャグ枠としての採用?なので、事後ストーリーをやってて面白い。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの事後ストーリーすら億劫で放置してたのですが、フリーナは速攻でやりました。面白かったです。&lt;/p&gt;&#xA;&lt;p&gt;まあ、私はそもそもナヒーダがあんまり好きではないのですが。性格面が。&lt;/p&gt;&#xA;&lt;h3 id=&#34;スカークとフリーナの共通点&#34;&gt;スカークとフリーナの共通点&lt;/h3&gt;&#xA;&lt;p&gt;髪型が似てるなって思いました。これは偶然なのか、理由があるのか。&lt;/p&gt;&#xA;&lt;p&gt;理由があるとすれば、スカークは、もしかするとフリーナの別の世界線なのかもしれないなって思いました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>stable-diffusionのanimatediff-cliを試してみた</title>
      <link>https://syui.github.io/blog/post/2023/11/08/stable-diffusion/</link>
      <pubDate>Wed, 08 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/08/stable-diffusion/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/neggles/animatediff-cli&#34;&gt;https://github.com/neggles/animatediff-cli&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/neggles/animatediff-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd animatediff-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3.10 -m venv .venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ source .venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install Torch. Use whatever your favourite torch version &amp;gt;= 2.0.0 is, but, good luck on non-nVidia...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip3 install torch torchvision torchaudio&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; import torch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; torch.backends.mps.is_available&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;True&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install the rest of all the things (probably! I may have missed some deps.)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m pip install -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.[dev]&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;modelのloraは、基本的にアニメ絵がうまいやつで、このツールはloraの&lt;code&gt;motion-module&lt;/code&gt;を使います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、スカーク</title>
      <link>https://syui.github.io/blog/post/2023/11/07/genshin/</link>
      <pubDate>Tue, 07 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/07/genshin/</guid>
      <description>&lt;p&gt;公式のpvにて、スカーク、つまり、タルタリアの師匠が映っていました。&lt;/p&gt;&#xA;&lt;p&gt;あくまで直感ですが、実装されるなら最強キャラになると思う。&lt;/p&gt;&#xA;&lt;p&gt;ということで、フリーナは無凸か2凸を目指すことにし、夜蘭は確保しない方向です。&lt;/p&gt;&#xA;&lt;p&gt;代わりにスカークが実装されたとき完凸したいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;次に話したいのは、ヌヴィレットのことです。ヌヴィレットは現時点で夜蘭超えの最強キャラです。&lt;/p&gt;&#xA;&lt;p&gt;インフレが激しすぎて、あのビーム、ほんとにいいのだろうか&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;まずゲーム性の面で見て、ぐるぐる回してるだけの絵面は、美しくない。画面もよく見られないし酔うし、私はあのビームあんまり良くないなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、現時点ではそれが最強の戦法だし、最強のキャラだと思う。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭でもあれは超えられないよ。&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、もし完凸するのであれば、現時点では、夜蘭よりヌヴィレットのほうがおすすめと言えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;なにが強いかって言うと、全部です。特に、中断耐性と回復、攻撃力、攻撃範囲ですね。爆発依存でない点もいい。敵によっては爆発を溜められないこともあります。&lt;/p&gt;&#xA;&lt;p&gt;では、ヌヴィレットを確保するかと言われると、私はしないでしょうね。&lt;/p&gt;&#xA;&lt;p&gt;ただ、スカークはパッと見て完凸したいなと思ったので、実装されたら完凸を目指すかも。&lt;/p&gt;&#xA;&lt;p&gt;フリーナはあんまり思わないので完凸はしない。&lt;/p&gt;&#xA;&lt;p&gt;スカークの実装時期を予測すると、全く読めないけど、ストーリーに絡んで来たとき即座に実装されるか、あるいは、めちゃくちゃ遅くなるか、どちらかだと思います。&lt;/p&gt;&#xA;&lt;p&gt;めちゃくちゃ遅くなる場合は、もはや考慮すべきではないかもしれません。というのも、その頃には環境は変わっているだろうし、熱は冷めていて、他のキャラのほうが魅力的かもしれません。例えばですが、炎神、氷神とスカークのどちらを選ぶかみたいな話になっている可能性もある。&lt;/p&gt;&#xA;&lt;p&gt;したがって、早くに実装される場合は、完凸を目指したいキャラ。&lt;/p&gt;&#xA;&lt;p&gt;元素はなんだろう。見た目からは氷、雷っぽいかな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3d-modelとcardを連携してみた</title>
      <link>https://syui.github.io/blog/post/2023/11/04/vrm/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/11/04/vrm/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://card.syui.ai/ai&#34;&gt;https://card.syui.ai/ai&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;動作環境&#34;&gt;動作環境&lt;/h3&gt;&#xA;&lt;p&gt;ios17で動作します。ios16では動作しません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;[ok] &amp;hellip; ios17.x&lt;/li&gt;&#xA;&lt;li&gt;[no] &amp;hellip; ios16.x&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;safari&lt;/code&gt;の以下の機能が必要です。&lt;/p&gt;&#xA;&lt;p&gt;ios17のデフォルトでは有効になっています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Allow WebGL in Web Workers&lt;/li&gt;&#xA;&lt;li&gt;GPU Process: Canvas Rendering&lt;/li&gt;&#xA;&lt;li&gt;GPU Process: DOM Rendering&lt;/li&gt;&#xA;&lt;li&gt;OffscreenCanvas in Workers&lt;/li&gt;&#xA;&lt;li&gt;OffscreenCanvas&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;fix-motion&#34;&gt;fix motion&lt;/h3&gt;&#xA;&lt;p&gt;例えば、以下はblenderでポーズを編集している様子なんだけど、プレビューと出力結果が異なります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/blender_20230908_0005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/blender_20230908_0006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは、アニメーションが自動で動作するように設定されているためです。そのままvrmを読み込むとTポーズになりますが、&lt;a href=&#34;https://github.com/JLChnToZ/vrm-dance-viewer&#34;&gt;JLChnToZ/vrm-dance-viewer&lt;/a&gt;は設定で手を下げて固定します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/worker/vrm-idle-helper.ts&#34; data-lang=&#34;ts:src/worker/vrm-idle-helper.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/JLChnToZ/vrm-dance-viewer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LERP_SCALE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;node&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;node&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setRotationFromQuaternion&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;rotation3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;setFromRotationMatrix&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;node&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// ここがポーズをおかしくする要因&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// コメント化すると元通り。ただvrmを自然なポーズに固定する必要がでてくる&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//.slerp(finalRotation, Math.min(deltaTime * LERP_SCALE, 1)),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;また、blinkを設定すると、顔を標準位置から移動するとおかしくなります。これは&lt;code&gt;three-vrm&lt;/code&gt;の古いバージョンのバグです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/worker/vrm-idle-helper.ts&#34; data-lang=&#34;ts:src/worker/vrm-idle-helper.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateEyeBlink&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;VRM&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//if (!model.blendShapeProxy) return;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//let v = blinkDelays.get(model);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//if (v == null || v &amp;lt; -BLINK_DURATION)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//  v = MathUtils.randFloat(MIN_BLINK_DELAY, MAX_BLINK_DEALY);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//  v -= deltaTime;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//blinkDelays.set(model, v);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//model.blendShapeProxy.setValue(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//  VRMSchema.BlendShapePresetName.Blink,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//  v &amp;gt; LOOK_CAMERA_THRESHOLD ? 0 : MathUtils.pingpong(-v, BLINK_DURATION / 2) * 2 / BLINK_DURATION,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これをどう自然に動かしていけばいいのか悩み中。全部のvrmをデフォルトのTポーズから変更するのもあんまり良くない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>freenomの現状と考察</title>
      <link>https://syui.github.io/blog/post/2023/10/29/freenom/</link>
      <pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/29/freenom/</guid>
      <description>&lt;p&gt;前回の続きです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://syui.ai/blog/post/2023/03/23/domain/&#34;&gt;https://syui.ai/blog/post/2023/03/23/domain/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;freenomのdomain更新がうまくいったので、そのとき感じたことを書きます。&lt;/p&gt;&#xA;&lt;p&gt;感じたことは以下の2点です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;スパム排除が活発になる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;新規登録が厳格化される&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これらは認証手続きがめんどくさい感じになっていたので、そのように感じました。&lt;/p&gt;&#xA;&lt;p&gt;今回も以前と変わらない使用感で&lt;code&gt;.cf&lt;/code&gt;を1年更新できました。費用は&lt;code&gt;$0&lt;/code&gt;でした。&lt;/p&gt;&#xA;&lt;p&gt;基本的にグリーン判定のアカウントは継続して使えているみたいです。&lt;/p&gt;&#xA;&lt;p&gt;ただし、アカウントによっては対応が異なるという情報があります。&lt;/p&gt;&#xA;&lt;p&gt;これはスパム排除の一貫だと考えられます。停止、あるいは更新料が必要になったケースがあるようです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、freenomを使い続けるのはリスキーと言えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;例えば、pixiv(pawoo), misskey系などは海外から相当警戒されているようで、特に児童ポルノ関連と予想されますが、domainが停止されたことがありました。これはfreenomだけでなく、別のregisterからも確認されています。&lt;/p&gt;&#xA;&lt;p&gt;また、連合(fediverse)を見てみると、やはりこれらのサーバーは相当に警戒されているように感じます。&lt;/p&gt;&#xA;&lt;p&gt;したがって、仮にfreenomで停止されたとしても、それがfreenomだけの問題でない可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、registerの中でfreenomは今後さらにスパムや要注意サーバーを排除する動きが活発化することが予想されます。よって、個人的にはおすすめできないと考えます。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、あくまで個人利用、かつ海外から警戒されない範囲での一般利用の場合、問題が生じる危険性は少ないと判断しています。&lt;/p&gt;&#xA;&lt;p&gt;これは私のアカウントが普通に使えて更新もできているからです。やはり、伝聞だけではわからないことが多々あります。ここでは、その伝聞を考慮した上で個人の所感を述べていると思ってください。&lt;/p&gt;&#xA;&lt;p&gt;海外から警戒される利用というのは、児童ポルノに見られるイラスト等のことを指します。これは日本基準ではなく海外基準での判断になります。&lt;/p&gt;&#xA;&lt;p&gt;分散snsのprotocolが広まって以来、日本では問題にならないけど海外では問題視されるケースが確認されています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;freenomと私&#34;&gt;freenomと私&lt;/h3&gt;&#xA;&lt;p&gt;私は弱々のdomainを$0で取れるfreenomのようなサービスは、開発者にとって非常に喜ばしいものだったと思います。&lt;/p&gt;&#xA;&lt;p&gt;それはdomainの価値を理解するのに役立ちましたし、また、テスト環境も構築しやすかった。&lt;/p&gt;&#xA;&lt;p&gt;そのようなサービスが失われてしまうのは寂しい。&lt;/p&gt;&#xA;&lt;p&gt;私自身が$0のdomainを使ってきましたし、また、人にもおすすめしてきました。&lt;/p&gt;&#xA;&lt;p&gt;なぜかというと、誰でも気軽に始めやすいし、そういうサービスだったからです。&lt;/p&gt;&#xA;&lt;p&gt;検索エンジンからはスパム扱いされ、検索しても出てこないような弱々のdomainでしたが、私は満足していて楽しかったです。&lt;/p&gt;&#xA;&lt;p&gt;freenomというサービスからはそういった経験や機会を得られました。感謝。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vrmのキャラクター編集</title>
      <link>https://syui.github.io/blog/post/2023/10/25/vrm/</link>
      <pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/25/vrm/</guid>
      <description>&lt;p&gt;3d-modelである&lt;code&gt;.vrm&lt;/code&gt;のキャラクター編集でやったことなどをまとめます。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://vrm.syui.ai&#34; allowfullscreen frameborder=&#34;0&#34; style=&#34;border: none&#34; width=&#34;100%&#34; height=&#34;400px&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h3 id=&#34;輪っかを作る&#34;&gt;輪っかを作る&lt;/h3&gt;&#xA;&lt;p&gt;輪っかを作るには、髪の毛から適当な付け髪を選択肢、テクスチャを編集します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_vrm_0008.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;部位を光らせる&#34;&gt;部位を光らせる&lt;/h3&gt;&#xA;&lt;p&gt;部位を光らせるには、blenderで当該テクスチャ(マテリアル)を選択し、&lt;code&gt;Emission&lt;/code&gt;の項目で画像を削除、カラーを設定します。&lt;/p&gt;&#xA;&lt;p&gt;アイの場合は、&lt;code&gt;Face&lt;/code&gt;, &lt;code&gt;Hair&lt;/code&gt;にあるマテリアルの2つを&lt;code&gt;#fff700&lt;/code&gt;にしました。&lt;/p&gt;&#xA;&lt;p&gt;なお、事前にblenderで&lt;code&gt;.vrm&lt;/code&gt;をインポートするアドオンを入れておいてください。あと、blenderは一度modelを保存しないとエクスポートの反映されなかったので注意。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_vrm_0007.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_vrm_0005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;iframe&#34;&gt;iframe&lt;/h3&gt;&#xA;&lt;p&gt;今までの3d-modelは、skechfabなどから&lt;code&gt;iframe&lt;/code&gt;していましたが、自分でホストすることにしました。&lt;/p&gt;&#xA;&lt;p&gt;これが単なるmodelの鑑賞なら&lt;code&gt;three.js&lt;/code&gt;を使えばいいです。&lt;code&gt;iframe&lt;/code&gt;は必要ありません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、cardのmodelはそれ自体が動かないものなので&lt;code&gt;three.js&lt;/code&gt;で表示したほうが簡単です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、人のmodelとなれば話は変わってきます。つまり、棒立ちのmodelを表示するだけではダメなのです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、motion(animation)を当てる必要がありますが、それもランダム、かつ違和感のないものでなければいけません。例えば、定型的な動き、腕を上げて下ろすとか、それを繰り返すだけではダメということになります。&lt;/p&gt;&#xA;&lt;p&gt;この処理を作成するには、&lt;code&gt;three.js&lt;/code&gt;だけでは不十分で、&lt;code&gt;three-vrm&lt;/code&gt;が必要になり、かつ&lt;code&gt;three-vrm&lt;/code&gt;を使うにもかなりの記述が必要になります。&lt;/p&gt;&#xA;&lt;p&gt;つまり、web-appを作る必要があって、作ったweb-appをiframeで表示することになります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:example.html&#34; data-lang=&#34;html:example.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;iframe&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://syui.ai&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;allowfullscreen&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;frameborder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;border: none&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100%&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;400px&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;iframe&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;animation&#34;&gt;animation&lt;/h3&gt;&#xA;&lt;p&gt;ここでいう&lt;code&gt;animation&lt;/code&gt;とは&lt;code&gt;motion&lt;/code&gt;と同じ意味です。&lt;/p&gt;&#xA;&lt;p&gt;手順としては、&lt;code&gt;.fvp&lt;/code&gt;にexportする際に様々なモーションがありますので、その動きを&lt;code&gt;.mp4&lt;/code&gt;に保存したあと&lt;code&gt;deepmotion&lt;/code&gt;で合成します。&lt;/p&gt;&#xA;&lt;p&gt;現在使っている&lt;code&gt;ipad 9th&lt;/code&gt;が落ちるのでmacで作業します。&lt;/p&gt;&#xA;&lt;p&gt;ipadで保存したmodelは&lt;code&gt;.vroid&lt;/code&gt;になります。これをexportすると&lt;code&gt;.vrm&lt;/code&gt;になります。&lt;/p&gt;&#xA;&lt;p&gt;macで読み込む場合、&lt;code&gt;.vroid&lt;/code&gt;が必要になるので、icloudなどにmodelを保存して共有します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_vrm_0009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これを動画で保存します。そして、&lt;code&gt;deepmotion.com&lt;/code&gt;で&lt;code&gt;.bvh&lt;/code&gt;を作成します。&lt;code&gt;.bvh&lt;/code&gt;は&lt;code&gt;.vmd&lt;/code&gt;に相当します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://deepmotion.com&#34;&gt;https://deepmotion.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gamefromscratch.com/creating-animated-anime-characters-with-vroid-studio-and-deepmotion/&#34;&gt;https://gamefromscratch.com/creating-animated-anime-characters-with-vroid-studio-and-deepmotion/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=XsX0X8odGsY&#34;&gt;https://www.youtube.com/watch?v=XsX0X8odGsY&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;google-model-viewer&#34;&gt;google-model-viewer&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Import the component --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://ajax.googleapis.com/ajax/libs/model-viewer/3.3.0/model-viewer.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Use it like any other HTML element --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;model-viewer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;alt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Neil Armstrong&amp;#39;s Spacesuit from the Smithsonian Digitization Programs Office and National Air and Space Museum&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shared-assets/models/NeilArmstrong.glb&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ar&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;environment-image&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shared-assets/environments/moon_1k.hdr&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;poster&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shared-assets/models/NeilArmstrong.webp&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;shadow-intensity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;camera-controls&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;touch-action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pan-y&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;model-viewer&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://modelviewer.dev/&#34;&gt;https://modelviewer.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;google-model-viewer&lt;/code&gt;というものがあります。これを使うことで&lt;code&gt;.glb&lt;/code&gt;を表示できるのですが、&lt;code&gt;.vrm&lt;/code&gt;のポーズがデフォルトでは見栄えがよくありません。したがって、ポーズを付けるには、&lt;code&gt;.bvh&lt;/code&gt;などを&lt;code&gt;.vrma&lt;/code&gt;に変換してblenderで合成させる必要があります。&lt;/p&gt;&#xA;&lt;p&gt;bvh -&amp;gt; vrma&lt;/p&gt;</description>
    </item>
    <item>
      <title>three-vrm v2.0 update</title>
      <link>https://syui.github.io/blog/post/2023/10/24/vrm/</link>
      <pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/24/vrm/</guid>
      <description>&lt;p&gt;&lt;code&gt;three-vrm&lt;/code&gt;関連のブログを調べていると、ほとんどのコードが動かないので&lt;code&gt;three-vrm v2.0&lt;/code&gt;の対応をまとめます。&lt;/p&gt;&#xA;&lt;p&gt;唯一、動くコードを発行していたのがpixivの&lt;a href=&#34;https://pixiv.github.io/three-vrm/packages/three-vrm/examples/&#34;&gt;example&lt;/a&gt;でした。参考にしてみてください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/pixiv/three-vrm/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd three-vrm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git checkout gh-pages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd ./packages/three-vrm/examples/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim lookat-advanced.html &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;example&#34;&gt;example&lt;/h3&gt;&#xA;&lt;p&gt;以下は私が作った&lt;code&gt;example&lt;/code&gt;です。基本的には&lt;code&gt;.js&lt;/code&gt;なので好きなframeworkで動かしてみてください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:pacakge.json&#34; data-lang=&#34;json:pacakge.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@pixiv/three-vrm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.0.6&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.157.0&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:main.js&#34; data-lang=&#34;js:main.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;GridHelper&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Mesh&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;MeshLambertMaterial&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;PlaneGeometry&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Vector3&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;DirectionalLight&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Fog&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;HemisphereLight&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;AnimationAction&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;AnimationClip&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;AnimationMixer&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;MathUtils&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Matrix4&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Quaternion&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLookAt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMSchema&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@pixiv/three-vrm&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three/examples/jsm/loaders/GLTFLoader&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;OrbitControls&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three/examples/jsm/controls/OrbitControls&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// model&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defaultModelUrl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://pixiv.github.io/three-vrm/packages/three-vrm/examples/models/VRM1_Constraint_Twist_Sample.vrm&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// lookat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_v3A&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Vector3&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMSmoothLookAt&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLookAt&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;humanoid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;applier&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;humanoid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;applier&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;smoothFactor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;yawLimit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;45.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;pitchLimit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;45.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yawDamped&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitchDamped&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;autoUpdate&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAt&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getWorldPosition&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;_v3A&lt;/span&gt; ) );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;yawLimit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;abs&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yaw&lt;/span&gt; ) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;pitchLimit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;abs&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitch&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yaw&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;k&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;exp&lt;/span&gt;( &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;smoothFactor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yawDamped&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yaw&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yawDamped&lt;/span&gt; ) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;k&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitchDamped&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitchDamped&lt;/span&gt; ) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;k&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;applier&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;applyYawPitch&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yawDamped&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitchDamped&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_needsUpdate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_needsUpdate&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_needsUpdate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;applier&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;applyYawPitch&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_yaw&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pitch&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// renderer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WebGLRenderer&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;alpha&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;antialias&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;outputEncoding&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sRGBEncoding&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shadowMap&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSize&lt;/span&gt;( window.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerWidth&lt;/span&gt;, window.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHeight&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPixelRatio&lt;/span&gt;( window.&lt;span style=&#34;color:#a6e22e&#34;&gt;devicePixelRatio&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;domElement&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// camera&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PerspectiveCamera&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;, window.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerWidth&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHeight&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20.0&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// camera controls&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OrbitControls&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;domElement&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;screenSpacePanning&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// scene&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Scene&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add color&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bgColor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;background&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;bgColor&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;fog&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Fog&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;bgColor&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ambiantLight&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HemisphereLight&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x444444&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ambiantLight&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ambiantLight&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add mesh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mesh&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PlaneGeometry&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MeshLambertMaterial&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;depthWrite&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;grid&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GridHelper&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;grid&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// light&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;light&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DirectionalLight&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xffffff&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;light&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;position&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; ).&lt;span style=&#34;color:#a6e22e&#34;&gt;normalize&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;light&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// gltf and vrm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentAnimationUrl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;helperRoot&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Group&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;helperRoot&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;renderOrder&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;helperRoot&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loadVRM&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;modelUrl&lt;/span&gt; ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;crossOrigin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;anonymous&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;helperRoot&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clear&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;autoUpdateHumanBones&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; } );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;modelUrl&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;removeUnnecessaryVertices&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VRMUtils&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;removeUnnecessaryJoints&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//VRMUtils.rotateVRM0(vrm);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;traverse&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;frustumCulled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// replace the lookAt to our extended one&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;smoothLookAt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMSmoothLookAt&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;humanoid&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;applier&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;smoothLookAt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;copy&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAt&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;smoothLookAt&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;humanoid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getNormalizedBoneNode&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;leftUpperArm&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;z&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;humanoid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getNormalizedBoneNode&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rightUpperArm&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;z&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;loadVRM&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;defaultModelUrl&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;blink&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;random&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; .&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;expressionManager&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setValue&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blink&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;expressionManager&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setValue&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blink&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// animate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clock&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Clock&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animate&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;requestAnimationFrame&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;animate&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clock&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getDelta&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentMixer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;sin&lt;/span&gt;(Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clock&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;elapsedTime&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;blink&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;humanoid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getNormalizedBoneNode&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;neck&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;rotation&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//currentVrm.humanoid.getNormalizedBoneNode(&amp;#39;leftUpperArm&amp;#39;).rotation.z = s;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//currentVrm.humanoid.getNormalizedBoneNode(&amp;#39;rightUpperArm&amp;#39;).rotation.x = s;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentVrm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;delta&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;camera&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;animate&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;scene-rotation&#34;&gt;scene rotation&lt;/h3&gt;&#xA;&lt;p&gt;modelを回転させる&lt;/p&gt;</description>
    </item>
    <item>
      <title>vrm viewerを調整してみた</title>
      <link>https://syui.github.io/blog/post/2023/10/23/vrm/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/23/vrm/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vrm.syui.ai&#34;&gt;https://vrm.syui.ai&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;基本的には、default-modelを読み込む設定とか、アニメーションの動きとかを調整してみました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/main.ts&#34; data-lang=&#34;ts:src/main.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/JLChnToZ/vrm-dance-viewer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;model_url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;isCancel&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;AxiosError&lt;/span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;model_load&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model_url&lt;/span&gt;, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;responseType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blob&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loadingPromises&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;loadModel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasLoadModel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;triggerLoading&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Blob&lt;/span&gt;([&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;], {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;model_url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;model_load&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;loadingPromises&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;triggerLoading&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例えば、&lt;code&gt;updateHead&lt;/code&gt;で頭の動きが調整されています。ここで読み込まれているのは、頭とポーズと目の動きです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/worker/vrm-idle-helper.ts&#34; data-lang=&#34;ts:src/worker/vrm-idle-helper.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateModel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;VRM&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lookAts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;has&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;)) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;updateHead&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;updateEyeBlink&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;updateIdlePose&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateHead&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;VRM&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deltaTime&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;色はこれです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/worker/scene/renderer.ts&#34; data-lang=&#34;ts:src/worker/scene/renderer.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;WebGLRenderer&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;WebGLRenderer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;HTMLCanvasElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OffscreenCanvas&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WebGLRenderer&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;antialias&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;canvas&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;outputEncoding&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;THREE&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sRGBEncoding&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderer&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/pixiv/three-vrm/blob/dev/docs/migration-guide-1.0.md&#34;&gt;https://github.com/pixiv/three-vrm/blob/dev/docs/migration-guide-1.0.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>vroidで3d modelを作ってみた</title>
      <link>https://syui.github.io/blog/post/2023/10/22/vrm/</link>
      <pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/22/vrm/</guid>
      <description>&lt;p&gt;アイの3d-modelを&lt;a href=&#34;https://vroid.com/&#34;&gt;vroid&lt;/a&gt;で作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://syui.github.io/ai/video/ai_vrm_0001.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;経緯&#34;&gt;経緯&lt;/h2&gt;&#xA;&lt;p&gt;まずは&lt;code&gt;blender&lt;/code&gt;で作ろうと思い、原神のnahidaを公式から&lt;a href=&#34;https://www.bilibili.com/blackboard/activity-TVh3Jjh9W1.html&#34;&gt;download&lt;/a&gt;して、動かせるところまでやりました。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、これはアイの3d-modelを作成する上で参考になりました。特に等身ですが。&lt;/p&gt;&#xA;&lt;p&gt;次に、vroidで3d-model(.vrm)を作成するわけですが、輪っかは髪の毛から作りました。&lt;/p&gt;&#xA;&lt;p&gt;vroid-hubというものがあり、覗いてみると、あまりに自然にwebで動いているのでびっくりしました。&lt;/p&gt;&#xA;&lt;p&gt;これはlibがあると踏んで探してみると&lt;a href=&#34;https://github.com/pixiv/three-vrm&#34;&gt;@pixiv/three-vrm&lt;/a&gt;がありました。&lt;/p&gt;&#xA;&lt;p&gt;ただ、モーション(.vmd)はpixivから公開されていないようでした。最初に選択できるモーションは公開されてるとうれしかった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;web-viewer&#34;&gt;web viewer&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/JLChnToZ/vrm-dance-viewer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最初からモデルを読み込むにはこんな感じを末尾に追記。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/main.ts&#34; data-lang=&#34;ts:src/main.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/JLChnToZ/vrm-dance-viewer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;three/examples/jsm/loaders/GLTFLoader&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./worker/scene/scene&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./ai.vrm&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;window.&lt;span style=&#34;color:#a6e22e&#34;&gt;onload&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gltf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;scene&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vrm&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;(&lt;span style=&#34;color:#a6e22e&#34;&gt;xhr&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;( &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;xhr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loaded&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xhr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; )&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;% loaded`&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;loadingPromises&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;triggerLoading&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ただ、アニメである&lt;code&gt;./worker/anime-manager.ts&lt;/code&gt;が複雑でよくわからないのと、色がおかしい問題があります。&lt;/p&gt;&#xA;&lt;p&gt;ボーン非表示は以下のように変更します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts:src/worker/model-manager.ts&#34; data-lang=&#34;ts:src/worker/model-manager.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gltfLoader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GLTFLoader&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VRMCoreLoaderPlugin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parser&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;autoUpdateHumanBones&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ref&#34;&gt;ref&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JLChnToZ/vrm-dance-viewer&#34;&gt;https://github.com/JLChnToZ/vrm-dance-viewer&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>bluesky(pds)をupdateした</title>
      <link>https://syui.github.io/blog/post/2023/10/12/pds/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/12/pds/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/bluesky-social/atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git reset --hard 3b65224c8003f68892bc8434b0d47c7173554a53&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM node:18.17.1-buster&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN mkdir -p /app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN mkdir -p /app/packages/pds/dist/images&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WORKDIR /app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADD ./ ./&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN npm install -g pnpm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN make deps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN make build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN echo DB_POSTGRES_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;postgres://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;password&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;@0.0.0.0:5432/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;db&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN cp -rf .env /app/packages/pds/.env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WORKDIR /app/packages/pds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/bluesky-social/atproto/pull/1198/files#diff-ea571f7816400e5a8a1f03b40b3a63316e0a1fc3abf4f1c937e7ee7a9682fca5L27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CMD &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dist/bin.js&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker compose up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、フリーナの凸について</title>
      <link>https://syui.github.io/blog/post/2023/10/06/genshin/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/06/genshin/</guid>
      <description>&lt;p&gt;原神で今一番の関心事はフリーナの凸数です。引くことは決まっている。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回はフリーナ凸数について考えていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;これまでの傾向から2凸が強い前提で話をします。&lt;/p&gt;&#xA;&lt;p&gt;無凸, 2凸, 完凸のどれにしようか迷っています。&lt;/p&gt;&#xA;&lt;p&gt;今後も使い続けることを想定するなら完凸がオススメですが、完凸は7キャラ分に相当します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、フリーナを1凸、夜蘭を4凸のほうがいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;そして、この場合、事後に夜蘭の完凸を目指すことになるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;原石は&lt;code&gt;40000&lt;/code&gt;あります。11/06では、+3000くらいだと思います。ナヒーダ完凸時は&lt;code&gt;80,000&lt;/code&gt;が必要でした。&lt;/p&gt;&#xA;&lt;p&gt;今回もフォンテーヌが終わる頃には完凸分は確保できると思います。&lt;/p&gt;&#xA;&lt;p&gt;では夜蘭の完凸を目指すか、フリーナの完凸を目指すか、どちらがいいかを考えてみたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;夜蘭かフリーナか&#34;&gt;夜蘭かフリーナか&lt;/h3&gt;&#xA;&lt;p&gt;私は夜蘭を引く場合、完凸を目指したいと思います。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭は完凸してこそ真価が発揮されると思っていて、ナヒーダに似ています。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダも完凸するか否かで大きな違いがあります。別人と言っていい。ですから、夜蘭も4凸で止めるより完凸した方が絶対にいいですね。&lt;/p&gt;&#xA;&lt;p&gt;この場合、フリーナも無凸か1凸で確保することになるため達成時期が遅くなります。&lt;/p&gt;&#xA;&lt;p&gt;もしかしたらフォンテーヌが終了しても目標は完了していないかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;逆に、フリーナの完凸を目指す場合、夜蘭は引かないと思います。計画としてはシンプルですね。&lt;/p&gt;&#xA;&lt;p&gt;どちらが強くなるかは一目瞭然です。夜蘭の完凸を目指したほうが強くなります。この場合、フリーナも確保するので当然といえば当然です。&lt;/p&gt;&#xA;&lt;p&gt;ただ、計画完了までには時間がかかりますし、キャラが過剰になります。将来より強いキャラが登場した時の対応も難しい。&lt;/p&gt;&#xA;&lt;p&gt;あるいは、フリーナを2凸まで進め、あとは原石を貯めるだけ貯めておいたほうがいいのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは色々な意味で完凸を目指して大満足でした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、他のキャラとなると難しい。例えば、ナヒーダと主人公の衣装が一番好みですね。&lt;/p&gt;&#xA;&lt;p&gt;この場合、考えるべきは、ナヒーダを最強にするために役立つのはどちらか、どの凸かを考えるべきでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;せっかく完凸キャラがいるのですから、次に完凸を目指すにしても、合わせてパワーを発揮できるものが良さそうです。&lt;/p&gt;&#xA;&lt;p&gt;とすると、バフ性能と噂されているフリーナの完凸を目指す、という判断になりそう。&lt;/p&gt;&#xA;&lt;p&gt;例えば、完凸ナヒーダがいるとしましょう。&lt;/p&gt;&#xA;&lt;p&gt;これがバフx2によって、そのキャラ2人分と同じくらいの効果があるという考え方があります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gitbookのgh-actions</title>
      <link>https://syui.github.io/blog/post/2023/10/05/gitbook/</link>
      <pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/05/gitbook/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.github/workflows/gh-pages.yml&#34; data-lang=&#34;yml:.github/workflows/gh-pages.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gitbook build and deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;src&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Install ubuntu package&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install calibre&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          #install japanese font if your document is JP&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo apt-get install fonts-takao-mincho fonts-takao&lt;/span&gt;          &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Run PDF export&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          # install n to downgrade npm version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo npm install -g n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          fixed_npm=`n ls-remote --all 10  | head -n 1`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          # downgrade to 10.x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo n ${fixed_npm}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          # install gitbok-cli and call&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          npm install gitbook-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          ./node_modules/.bin/gitbook install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          ./node_modules/.bin/gitbook pdf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          ./node_modules/.bin/gitbook build&lt;/span&gt;          &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Archive pdf artifacts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/upload-artifact@v2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;output.pdf&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;book.pdf&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;github_token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;deploy_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;publish_branch&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;publish_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./_book&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;user_name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ai[bot]&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;user_email&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;138105980+yui-syui-ai[bot]@users.noreply.github.com&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/peaceiris/actions-gh-pages&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/a&gt;は、private-repoに対応していないので、env:&lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt;を作成して、そこに公開鍵を入れます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>cloudflare pagesでbasic認証</title>
      <link>https://syui.github.io/blog/post/2023/10/04/cloudflare/</link>
      <pubDate>Wed, 04 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/10/04/cloudflare/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Charca/cloudflare-pages-auth&#34;&gt;https://github.com/Charca/cloudflare-pages-auth&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;./functions&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;env:&lt;code&gt;CFP_PASSWORD&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;cloudflareは、zero-trustで簡単に認証を追加することができます。&lt;/p&gt;&#xA;&lt;p&gt;passwordのみの場合は、cloudflare pagesの&lt;code&gt;functions&lt;/code&gt;を追加することで実現できます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;./functions&lt;/code&gt;というディレクトリを&lt;code&gt;/&lt;/code&gt;に置いて、&lt;code&gt;.ts&lt;/code&gt;を追加します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋2分攻略</title>
      <link>https://syui.github.io/blog/post/2023/09/18/genshin/</link>
      <pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/09/18/genshin/</guid>
      <description>&lt;p&gt;螺旋12層は&lt;code&gt;7:00/10:00&lt;/code&gt;以内に攻略すると星3になります。&lt;/p&gt;&#xA;&lt;p&gt;今回は&lt;code&gt;8:00/10:00&lt;/code&gt;以内という目標を立ててやってみることにしました。それぞれを2分以内に攻略している動画になります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_rasen_20230901_0001.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_rasen_20230901_0002.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_rasen_20230901_0003.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;個人的な所感&#34;&gt;個人的な所感&lt;/h3&gt;&#xA;&lt;p&gt;鍾離を入れると、タイムを&lt;code&gt;8:00&lt;/code&gt;以内にするのが難しかった。こうやればできるというのはわかるけど、私の手持ちキャラ、育成キャラでは厳しい感じだった。&lt;/p&gt;&#xA;&lt;p&gt;私の手持ちで育成している水元素が今のところ&lt;code&gt;行秋&lt;/code&gt;しかいない。&lt;/p&gt;&#xA;&lt;p&gt;したがって、この枠を拡張するため水神&lt;code&gt;フリーナ&lt;/code&gt;を待っているところです。&lt;/p&gt;&#xA;&lt;p&gt;そのため、フリーナはすごく楽しみにしてると同時に、すごく期待してる。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭を引かなかった理由もほぼこの一点に集約されます。&lt;/p&gt;&#xA;&lt;p&gt;私が当初、水元素の確保枠として設定していたのは2枠で、夜蘭を引くと、水神後は誰かが余ってしまう可能性が高い。&lt;/p&gt;&#xA;&lt;p&gt;ただ、最強キャラを引かないというのもリスキーだったなあと思います。&lt;/p&gt;&#xA;&lt;p&gt;全員育てればいいというのは、個人的な方針ではないため、他元素で足りていないところを補完する事を考えるようにしています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;フリーナの性能予想&#34;&gt;フリーナの性能予想&lt;/h3&gt;&#xA;&lt;p&gt;以下は全て個人的な予想です。&lt;/p&gt;&#xA;&lt;p&gt;HPを削り、HPを回復する。最終的に、それらは裁判のように公平な値になるだろうと予想しています。つまり、HPが削られる分量と回復する分量は同じになる。&lt;/p&gt;&#xA;&lt;p&gt;HPを削った時、何らかのバフ効果を得る。&lt;/p&gt;&#xA;&lt;p&gt;広範囲の水元素付与能力を持つ。これは回復と連動するかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;フリーナの凸効果&#34;&gt;フリーナの凸効果&lt;/h3&gt;&#xA;&lt;p&gt;私は、雷電の完凸は最強レベルだと思っています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;奥義・夢想真説による夢想の一心状態の時、雷電将軍の通常攻撃、重撃、落下攻撃が敵に命中すると、周囲チーム全員(雷電将軍自身を除く)の元素爆発のクールタイム-1秒。この効果は1秒毎に1回のみ可能で、継続時間内の最大5回まで発動可能。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;これは昔から思っていて、ゲームバランスを破壊する可能性があるからです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ナヒーダは完凸で爆発ダメージと範囲がぶっ壊れています。しかも必要なエネルギーは少なく、クールタイムも短い。&lt;/p&gt;&#xA;&lt;p&gt;ただ、唯一ネックなのが攻撃速度とクールタイムです。&lt;/p&gt;&#xA;&lt;p&gt;雷電の完凸はこのクールタイムの問題を解消してくれます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダ爆発で通常攻撃、雷電爆発で5回攻撃、ナヒーダ爆発というループを回せるのではないでしょうか。この場合のDPSとお手軽さは最高レベルのものなのでは。&lt;/p&gt;&#xA;&lt;p&gt;仮にフリーナが凸効果でこれらを解消してくれるなら、水元素と合わせ、ナヒーダを更に強く使うことができるようになります。&lt;/p&gt;&#xA;&lt;p&gt;そして、私は、フリーナの凸効果はナヒーダ完凸と何らかのシナジーがあるものになるだろうと予想しています。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、草元素は雷元素以上に水元素とシナジーがあるからです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、雷電の完凸の効果と同じような連携可能なデザインにしてくるだろうと予想しています。&lt;/p&gt;&#xA;&lt;p&gt;どういったものになるのかわかりませんが、攻撃速度か、あるいは元素反応に寄与するものではないかと予想します。&lt;/p&gt;&#xA;&lt;p&gt;こうなってくると、フリーナの完凸を目指すべきかもしれません。雷電でもいいかもしれない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ育成</title>
      <link>https://syui.github.io/blog/post/2023/09/09/genshin/</link>
      <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/09/09/genshin/</guid>
      <description>&lt;p&gt;フォンテーヌが来るまで聖遺物の森林の厳選だけやってたので、その結果をお伝えします。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/games/genshin/genshin_chara_nahida_fix3.png&#34;&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/genshin_chara_nahida_fix3.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;凸効果を含む爆発中のステータス&#34;&gt;凸効果を含む爆発中のステータス&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;status&lt;/th&gt;&#xA;          &lt;th&gt;int&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;熟知&lt;/td&gt;&#xA;          &lt;td&gt;688 -&amp;gt; 1020&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;会心率&lt;/td&gt;&#xA;          &lt;td&gt;64.9% -&amp;gt; 88.9%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;会心ダメ&lt;/td&gt;&#xA;          &lt;td&gt;141.7%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;爆発&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;心景幻成発動時、魔耶の宮殿は下記効果を獲得する。チーム内にいる元素熟知の最も高いキャラクターを参照し、その元素熟知の25%を基にフィールド上の領域内キャラクターの元素熟知をアップする。この方法でアップできる元素熟知は最大250までとなる。 &lt;strong&gt;熟知+172&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;4凸&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;近くに所聞遍計の蘊種印状態にある敵が1/2/3/4体またはそれ以上いる時、ナヒーダの元素熟知が100/120/140/160アップする。&lt;strong&gt;熟知+160&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;天賦&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの元素熟知が200を超えている時、その200を超えた分の元素熟知の数値1につき、所聞遍計の滅浄三業によるダメージ+0.1%、会心率+0.03%。&#xA;&lt;strong&gt;熟知1000&lt;/strong&gt;以上なら &lt;strong&gt;滅浄ダメ+80% / 会心率+24%&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;聖遺物厳選は必要か&#34;&gt;聖遺物厳選は必要か&lt;/h3&gt;&#xA;&lt;p&gt;必要ないです。なぜなら厳選しても結果はたいして変わらないからです。&lt;/p&gt;&#xA;&lt;p&gt;時間をかけるだけの結果、あるいは効果は得られないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;例えば、聖遺物を厳選し、会心率+1.0%に更新した、と言っても、それが火力や結果、つまり敵を倒す時間に直結するかというと、それは違います。&lt;/p&gt;&#xA;&lt;p&gt;聖遺物の厳選は、単なる自己満足です。それ以外でやる理由はありません。&lt;/p&gt;&#xA;&lt;p&gt;最も効率がいいのは、キャラに合った固定ステータスの聖遺物を付けることです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ナヒーダなら何も考えず全部熟知にすればOKです。鍾離ならHP。&lt;/p&gt;&#xA;&lt;p&gt;これを元素バフにしたり、会心にしたりといったことで、敵を倒す時間はたいして変わりません。&lt;/p&gt;&#xA;&lt;p&gt;それよりもどの聖遺物を付けるかやプレイヤースキルのほうが結果に影響を及ぼします。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、樹脂の使い道が他にないので、デイリーのついでにやってました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダ育成論&#34;&gt;ナヒーダ育成論&lt;/h3&gt;&#xA;&lt;p&gt;ナヒーダの育成に重要なのはこの文章です。最大参照される熟知は1000まで。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ナヒーダの元素熟知が200を超えている時、その200を超えた分の元素熟知の数値1につき、所聞遍計の滅浄三業によるダメージ+0.1%、会心率+0.03%。この方法でアップできる滅浄三業のダメージは最大80%、会心率は最大24%までとなる。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;つまり、ナヒーダは熟知1000を目指してると勝手に強くなるキャラなので、育成としては普通にそれだけやってればいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これはゲーム、自己満足の世界なので、私も必要ないことをあれこれ考えてみることにします。&lt;/p&gt;&#xA;&lt;p&gt;この効果はダメージを伸ばすためのものです。で、熟知1000にしたときの80%, 24%が最もダメージを伸ばせるのかというと、微妙なところです。熟知の恩恵も考えなくてはいけないので、これを会心に振ると、熟知が下がるので、大した違いは出てこないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、そこは原神。特化型よりバランス型のほうが最終的にちょっと強くなるように考えられています。ステータスは高ければ高いほど、その恩恵はダウンします。ですから、バランスよくステータスを割り振るのが結果として最も強くなる。&lt;/p&gt;&#xA;&lt;p&gt;これはゲームを単純にしないため、あるいは現実世界の反映なのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、原神がインスパイアしたゲームとされているゼルダは、現実世界をモデルに設計されています。&lt;/p&gt;&#xA;&lt;p&gt;たかがゲームですが、本当によく考えられている。現実世界の複雑さをパラメーター化し、参照しているのです。&lt;/p&gt;&#xA;&lt;p&gt;多くのゲームは、これだけやっとけば一番強くなるみたいな設計のもの、単純なものが多いです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、原神はそうではありません。原神は複雑さとバランスの上で最強が決まる。&lt;/p&gt;&#xA;&lt;p&gt;そういう設計なので、非常に長い期間を飽きずに遊べるゲームになっている。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、単純さも重要です。ナヒーダは熟知を盛っておけばとりあえず強くなる、そういうわかりやすいキャラであり、これは他のキャラも同じです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、それが最強かというと、それは違う。私はそう考えています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最強のナヒーダを目指して&#34;&gt;最強のナヒーダを目指して&lt;/h3&gt;&#xA;&lt;p&gt;さて、ナヒーダの育成について考えてみると、重要なのは熟知、会心率、会心ダメです。&lt;/p&gt;&#xA;&lt;p&gt;これらをバランスよく上げる必要があります。&lt;/p&gt;&#xA;&lt;p&gt;ではどれくらいがいいのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;私のナヒーダですと固有天賦の効果で会心率は&lt;code&gt;79.5&lt;/code&gt;になります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;488&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.03&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;会心率 +14.6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;滅ダメ +48.8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では、爆発とスキル、凸効果をあわせてみるとどうでしょう。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;心景幻成発動時、魔耶の宮殿は下記効果を獲得する。チーム内にいる元素熟知の最も高いキャラクターを参照し、その元素熟知の25%を基にフィールド上の領域内キャラクターの元素熟知をアップする。この方法でアップできる元素熟知は最大250までとなる。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;688&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.25&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;熟知 +172&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;近くに所聞偏計の蘊種印状態にある敵が1/2/3/4体またはそれ以上いる時、ナヒーダの元素熟知が100/120/140/160アップする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blenderで3d modelを作った</title>
      <link>https://syui.github.io/blog/post/2023/09/08/3d/</link>
      <pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/09/08/3d/</guid>
      <description>&lt;p&gt;blenderで3d modelを作ってみました。&lt;/p&gt;&#xA;&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;card&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;100%&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/9a80a6d6cf6f4b08906505c7f945d3ce/embed?autostart=1&amp;camera=0&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;&#xA;&lt;p&gt;しかし、裏面に新しいマテリアルからテクスチャイメージを追加しても裏面がレンダリング(uvmap)でガビガビになる問題があって、それを回避する方法を見つけたのでメモします。&lt;/p&gt;&#xA;&lt;p&gt;基本的にはskechfabのeditorで編集したものを使ったため3d modelの面(face)が悪さをしていた模様。&lt;/p&gt;&#xA;&lt;p&gt;やったこととして以下の通り。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;delete face&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;setting -&amp;gt; 3d viewport -&amp;gt; face -&amp;gt; alha 0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;viewport shading -&amp;gt; backface culling&lt;/code&gt;, &lt;code&gt;image texter -&amp;gt; backface culling&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;手順としては、まず&lt;code&gt;edit mode&lt;/code&gt;に移行し&lt;code&gt;face&lt;/code&gt;を選択します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/blender_20230908_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これを2回ほど削除すると、表面が表示されます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/blender_20230908_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/blender_20230908_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最後に残った面に&lt;code&gt;image texter&lt;/code&gt;を追加して終わりです。&lt;code&gt;backface culling&lt;/code&gt;のチェックを忘れずに。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/blender_20230908_0004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>bluesky勉強会#2</title>
      <link>https://syui.github.io/blog/post/2023/09/03/discrod/</link>
      <pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/09/03/discrod/</guid>
      <description>&lt;p&gt;この前、bluesky勉強会2があって、discordで発表してみた。初発表だったので緊張した。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://428lab.connpass.com/event/293255/&#34;&gt;https://428lab.connpass.com/event/293255/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;スライド : &lt;a href=&#34;https://yui.syui.ai/slidev&#34;&gt;https://yui.syui.ai/slidev&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook air mid2013が壊れたので直した</title>
      <link>https://syui.github.io/blog/post/2023/09/02/macbook/</link>
      <pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/09/02/macbook/</guid>
      <description>&lt;p&gt;今使ってるのはmacbook air m1です。&lt;/p&gt;&#xA;&lt;p&gt;intelのmid2013はあまり使ってない古い機種です。&lt;/p&gt;&#xA;&lt;p&gt;このmid2013のssdが突然認識しなくなったので部品を注文して修理しました。&lt;/p&gt;&#xA;&lt;p&gt;今までmid2013で行った修理は&lt;code&gt;ディスプレイ交換&lt;/code&gt;, &lt;code&gt;キーボード交換&lt;/code&gt;, &lt;code&gt;バッテリー交換&lt;/code&gt;でした。&lt;/p&gt;&#xA;&lt;p&gt;部品代は、それぞれ10,000くらいをみておけばいいかな。ssdもそれくらいだった。&lt;/p&gt;&#xA;&lt;p&gt;あまり使ってないので修理する意味はあまりないんだけど、昔から愛用してきた端末だから使えるようにしておきたい。&lt;/p&gt;&#xA;&lt;p&gt;古いiphoneも修理して取ってある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋攻略の近道</title>
      <link>https://syui.github.io/blog/post/2023/09/01/genshin/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/09/01/genshin/</guid>
      <description>&lt;h3 id=&#34;原神における最短攻略法&#34;&gt;原神における最短攻略法&lt;/h3&gt;&#xA;&lt;p&gt;まず、ナヒーダと夜蘭を確保します。&lt;/p&gt;&#xA;&lt;p&gt;次に夜蘭の完凸を目指します。&lt;/p&gt;&#xA;&lt;p&gt;他のキャラはイベントや夜蘭のガチャで引き当てた星4を使います。&lt;/p&gt;&#xA;&lt;p&gt;もし私が初めから原神をやるならそうすると思います。&lt;/p&gt;&#xA;&lt;p&gt;今の環境では様々なキャラを確保するより夜蘭の完凸を目指したほうが手っ取り早く螺旋等を攻略できるのではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭は絶縁をつけます。つまり、絶縁だけ厳選すればよく、他キャラもすべて絶縁でいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;日頃の螺旋攻略の動画です。基本的にipad-wifiでやっているので、戦闘中はよく止まります。あまり気にしてないけど。&lt;/p&gt;&#xA;&lt;h3 id=&#34;完凸のすすめ&#34;&gt;完凸のすすめ&lt;/h3&gt;&#xA;&lt;p&gt;今のところ、個人的におすすめな完凸は、夜蘭と放浪者です。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダもおすすめですが、攻撃速度がネックです。せめて完凸効果が回数制限ではなく、爆発の宮殿があるときは発動可能なものにしてくれればよかったのですが。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私は今回も夜蘭をスルーします。&lt;/p&gt;&#xA;&lt;p&gt;キャラ過剰だし、夜蘭なしでも螺旋は攻略できているので、水神、炎神、氷神の気に入ったキャラを完凸しようかなと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;噂によると水神はバフ性能らしいので、おそらく、ない。バフ性能にあまり魅力を感じていません。&lt;/p&gt;&#xA;&lt;p&gt;なので、完凸を目指すとしたら炎神か氷神になりそう。それまでは原石をためておく予定。&lt;/p&gt;</description>
    </item>
    <item>
      <title>dockerでstable diffusionを構築してみた</title>
      <link>https://syui.github.io/blog/post/2023/08/31/docker/</link>
      <pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/31/docker/</guid>
      <description>&lt;h3 id=&#34;stable-diffusion-v14&#34;&gt;stable diffusion v1.4&lt;/h3&gt;&#xA;&lt;p&gt;src :  &lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original&#34;&gt;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;sd-v1-4.ckpt : &lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/resolve/main/sd-v1-4.ckpt&#34;&gt;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/resolve/main/sd-v1-4.ckpt&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;.ckpt&lt;/code&gt;はファイルが大きいのでgit cloneでdownloadされません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;model,outputs&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mv sd-v1-4.ckpt ./model/model.ckpt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM nvcr.io/nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu20.04&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ARG DEBIAN_FRONTEND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;noninteractive&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV TZ&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Asia/Tokyo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y wget git git-lfs libglib2.0-0 libsm6 libxrender1 libxext-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    sh Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -r Miniconda3-latest-Linux-x86_64.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV PATH /opt/miniconda3/bin:$PATH&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RUN git clone https://github.com/CompVis/stable-diffusion &amp;amp;&amp;amp; \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     cd stable-diffusion &amp;amp;&amp;amp; \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     conda init bash &amp;amp;&amp;amp; \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     conda env create -f environment.yaml &amp;amp;&amp;amp; \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     echo &amp;#34;conda activate ldm&amp;#34; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN git clone https://github.com/basujindal/stable-diffusion.git &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    cd stable-diffusion &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    conda init bash &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    conda env create -f environment.yaml &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;conda activate ldm&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:compose.yml&#34; data-lang=&#34;yml:compose.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;stable_diffusion&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;working_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/stable-diffusion&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tty&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./model/:/stable-diffusion/models/ldm/stable-diffusion-v1/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./outputs:/stable-diffusion/outputs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;reservations&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;devices&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#f92672&#34;&gt;capabilities&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;gpu]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;: &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;NVIDIA_VISIBLE_DEVICES=all&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;NVIDIA_DRIVER_CAPABILITIES=all&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker compose up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker compose exec stable_diffusion bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;masterpiece, high quality, very_high_resolution, large_filesize, full color, little girl, simple white onepice&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python optimizedSD/optimized_txt2img.py --H &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; --W &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; --seed &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; --n_iter &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; --n_samples &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --ddim_steps &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; --prompt $prompt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;スペックがあまり良くないubuntu-serverで構築しているので、実行すると他のサーバーが止まる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>dockerの/var/lib/dockerを外付けhddに移動する</title>
      <link>https://syui.github.io/blog/post/2023/08/30/docker/</link>
      <pubDate>Wed, 30 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/30/docker/</guid>
      <description>&lt;p&gt;検索しても適切な方法が見つからなかったので手順を記録します。&lt;/p&gt;&#xA;&lt;p&gt;これをそのままcp, rsync, mvしても、そのファイルは使えません。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;failed: Operation not permitted&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;これは&lt;code&gt;format:ext4&lt;/code&gt;が関係しているかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、基本的には、論理ボリュームを作成、mountした上でrsyncします。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl stop docker.service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 論理ボリュームの作成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo vgcreate docker /dev/sdb1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo vgs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo lvcreate -L 600G -n docker docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo vgs -o +lv_size,lv_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mkfs.ext4 /dev/docker/docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 論理ボリュームのmount&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p ~/mnt/tmp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mount /dev/docker/docker ~/mnt/tmp/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ファイルの移行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo rsync -avx /var/lib/docker/ ~/mnt/tmp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# backup&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mv /var/lib/docker /var/lib/docker.back&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /var/lib/docker&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mkdir /var/lib/docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;710&lt;/span&gt; /var/lib/docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mount /dev/docker/docker /var/lib/docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# umount&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo umount ~/mnt/tmp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo rm -rf ~/mnt/tmp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# auto-mount&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo fdisk -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo blkid | grep sdb1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UUID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$uuid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo vim /etc/fstab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/docker/docker /var/lib/docker ext4 defaults &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dockerは肥大化しやすいのに罠すぎる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、レイラが強かった</title>
      <link>https://syui.github.io/blog/post/2023/08/22/genshin/</link>
      <pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/22/genshin/</guid>
      <description>&lt;p&gt;今回は、星4のレイラが強いという話と、最近のプレイ状況の話をします。&lt;/p&gt;&#xA;&lt;p&gt;この前、クレーの夏イベントで星4のレイラが配布されました。&lt;/p&gt;&#xA;&lt;p&gt;それを見て、このキャラ強いかもと思ったので、育成してみたところ、めちゃくちゃ強かったので、螺旋のPTに入れました。育成推奨です。&lt;/p&gt;&#xA;&lt;p&gt;私が星4で育成を推奨しているキャラは各元素につき最大2名として考えます。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;特徴&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;ベネット&lt;/td&gt;&#xA;          &lt;td&gt;爆発で回復とバフ、短時間スキル&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;香菱&lt;/td&gt;&#xA;          &lt;td&gt;強力な爆発&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;          &lt;td&gt;強力な爆発、スキルの攻撃力とエネルギー回復力&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;風&lt;/td&gt;&#xA;          &lt;td&gt;リネット&lt;/td&gt;&#xA;          &lt;td&gt;初登場&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;氷&lt;/td&gt;&#xA;          &lt;td&gt;レイラ&lt;/td&gt;&#xA;          &lt;td&gt;スキルのループ可能なシールド、継続する爆発&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;忍&lt;/td&gt;&#xA;          &lt;td&gt;スキルでの回復及び継続的な元素反応&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ただし、風のリネットについては、ウェンティと万葉で足りているため、育成するかは不明。&lt;/p&gt;&#xA;&lt;h3 id=&#34;pt&#34;&gt;PT&lt;/h3&gt;&#xA;&lt;p&gt;ナヒーダ、レイラ、忍、行秋です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_07.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;久々の螺旋&#34;&gt;久々の螺旋&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230812_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;強い敵&#34;&gt;強い敵&lt;/h3&gt;&#xA;&lt;p&gt;フォンテーヌで強い敵がいるというので、戦ってきた。初見では鍾離が即死して焦ったけど、爆発回避しまくってなんとか勝った。やっぱり初見で倒せるのは嬉しい。動画は2日目のやつ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_08.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>virtualbox 7.xでブリッジアダプターが起動しない</title>
      <link>https://syui.github.io/blog/post/2023/08/19/vbox/</link>
      <pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/19/vbox/</guid>
      <description>&lt;p&gt;外部からアクセスするにはvirtualboxのnetwork設定でブリッジアダプターが必要なんだけど、windowsで使用ししているネットワークアダプタにipv6のチェックが入っていると動きません。&lt;/p&gt;&#xA;&lt;p&gt;これをやらないとネットワークアダプタにvirtualboxのイーサネットが自動追加されない感じだと思う。ipv6のチェックは外したら再起動します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/windows_virtualbox_network_20230819_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/windows_virtualbox_network_20230819_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、natのポートフォワーディングもそのホストから接続するときに使うやつなので、他のpcからアクセスできなかったと思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>スライドをreveal.jsからslidevに移行した</title>
      <link>https://syui.github.io/blog/post/2023/08/13/slidev/</link>
      <pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/13/slidev/</guid>
      <description>&lt;p&gt;今までスライドの生成は&lt;code&gt;reveal.js&lt;/code&gt;でやっていたのですが、久しぶりに触ってみたら、markdownの処理が機能しなかったので、&lt;a href=&#34;https://sli.dev/&#34;&gt;slidev&lt;/a&gt;に移行しました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md:slides.md&#34; data-lang=&#34;md:slides.md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;theme: eloc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class: text-center&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;highlighter: shiki&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lineNumbers: false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;info: |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ## Slidev Starter Template&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Presentation slides for developers.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Learn more at [&lt;span style=&#34;color:#f92672&#34;&gt;Sli.dev&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;https://sli.dev&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drawings:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  persist: false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;transition: slide-left&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: ai bot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## ai `bot`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## [yui.syui.ai](https://yui.syui.ai)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;yui.syui.ai&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;https://yui.syui.ai&lt;/span&gt;) access&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;kbd&lt;/span&gt;&amp;gt;ctrl&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;kbd&lt;/span&gt;&amp;gt; + &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;kbd&lt;/span&gt;&amp;gt;enter&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;kbd&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .&lt;span style=&#34;color:#a6e22e&#34;&gt;slidev-layout&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      @apply &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;overflow-visible&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;filter&lt;/span&gt;: invert();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pre&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        @apply &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;opacity-95&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;::&lt;span style=&#34;color:#a6e22e&#34;&gt;before&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      @apply &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;absolute&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;white&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-z-1&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;w-screen&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;h-screen&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;min-w-full&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;min-h-full&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;content&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;filter&lt;/span&gt;: invert();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;center&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;cover&lt;/span&gt; url();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@syui.ai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>discordの配信環境を整えた</title>
      <link>https://syui.github.io/blog/post/2023/08/12/discord/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/12/discord/</guid>
      <description>&lt;p&gt;macでは、音声キャプチャっていうのがインストールできなくて、これがインストールできないとアプリの音声が流れなかったので対応しました。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;リカバリモードで、起動セキュリティユーティリティ &amp;gt; 低セキュリティ &amp;gt; kernel拡張をenableにする&lt;/p&gt;&#xA;&lt;p&gt;リカバリモードのターミナルを開いて&lt;/p&gt;&#xA;&lt;p&gt;spctl kext-consent disable spctl kext-consent add 7266XEXAPM spctl kext-consent enable&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://support.discord.com/hc/ja/articles/1500006741102&#34;&gt;https://support.discord.com/hc/ja/articles/1500006741102&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;rogueamoeba.com/audiohijack をインストールする&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/discord_jp/status/1645651865588183042&#34;&gt;https://twitter.com/discord_jp/status/1645651865588183042&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的に挙動がバグってるので、どうしてもうまく行かないことはあります。この辺は運次第だと思います。何度か同じことやるとうまくいくかもしれません。私の場合は、許可するウィンドウが出たり出なかったり、複数出たり、違うものが出たり、ウィンドウのタイトルやボタンがなかったり、と色々でした。&lt;/p&gt;&#xA;&lt;h2 id=&#34;quicktime-player&#34;&gt;quicktime player&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ipadをusb接続してムービー収録で画面を出す&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;discordの音声キャプチャがインストールされていることを確認する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;この場合、画面共有しているアプリとマイクから音が取れます。ipadでプレイしている原神をライブ配信できました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配信の確認&#34;&gt;配信の確認&lt;/h2&gt;&#xA;&lt;p&gt;別垢を作って違うデバイスから確認します。ブラウザとアプリでログインアカウントを別々にしても、ブラウザのほうが何故か同一アカウントになってしまう。この辺の挙動もよくわからない。&lt;/p&gt;&#xA;&lt;p&gt;でもこれで配信自体はできるようになったし、色々な仕組みを理解できたので良かった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/discord_20230814_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>fly.ioから自鯖に移行した</title>
      <link>https://syui.github.io/blog/post/2023/08/11/flyio/</link>
      <pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/11/flyio/</guid>
      <description>&lt;p&gt;去年の8月までは&lt;code&gt;$0&lt;/code&gt;で運用できてたんだけど、そこから約1年、月に&lt;code&gt;$30~40&lt;/code&gt;くらいでした。&lt;code&gt;$30&lt;/code&gt;は確実に超えてる感じなので、&lt;code&gt;$40&lt;/code&gt;のほうが実態に近いかな。&lt;/p&gt;&#xA;&lt;p&gt;つまり、この1年で&lt;code&gt;$360~480&lt;/code&gt;くらいかかってる。&lt;/p&gt;&#xA;&lt;p&gt;移行も面倒なのでしばらく放置してたんだけど、fly.ioでhostingしているmastodonが思うように動かなくなってきており、具体的には、激重になってた。&lt;/p&gt;&#xA;&lt;p&gt;これはmastodonを動かすのに使っていた&lt;code&gt;redis&lt;/code&gt;の裏技が封印された事によるものだと思う。&lt;/p&gt;&#xA;&lt;p&gt;年に&lt;code&gt;$360~480&lt;/code&gt;かけて激重のmastodonを運用するのは割に合わないと思ったので、移行を決意。fly.ioにhostしてたほぼすべてのサーバーを自前運用に切り替えました。&lt;/p&gt;&#xA;&lt;p&gt;目標としては、また&lt;code&gt;$0&lt;/code&gt;を目指す感じになりそう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;postgres-backup--restore&#34;&gt;postgres backup &amp;amp; restore&lt;/h2&gt;&#xA;&lt;p&gt;fly.ioのpostgresのbackupとdockerへのrestoreの手順です。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-sh:pg.dump&#34; data-lang=&#34;sh:pg.dump&#34;&gt;$ brew install libpq&#xA;$ echo &amp;#39;export PATH=&amp;#34;/opt/homebrew/opt/libpq/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;$ source ~/.zshrc&#xA;&#xA;$ flyctl proxy 5432 -a $pg_app_name&#xA;# postgres://${username}:${password}@${host}:5432/${db_name}&#xA;$ pg_dump -h localhost -p 5432 -U $username $db_name &amp;gt;! pg.dump&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-sh:pg.restore&#34; data-lang=&#34;sh:pg.restore&#34;&gt;$ sudo docker compose up db&#xA;$ su&#xA;$ cat pg.dump | docker compose exec -T db psql -U $username -p 5432&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これは、docker-composeの構成によります。例えば、下記の場合は、こうなります。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-sh:pg.restore&#34; data-lang=&#34;sh:pg.restore&#34;&gt;$ sudo docker compose up mitra_postgres&#xA;$ su&#xA;$ cat pg.dump | docker compose exec -T mitra_postgres psql -U postgres -p 5433&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:compose.yml&#34; data-lang=&#34;yml:compose.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.9&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;mitra&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mitra&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bind&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./files&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/app/files&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env_file&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;.env.local&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;mitra_postgres&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres:latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mitra_postgres&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;5433&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;5433&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;mitra_db:/var/lib/postgresql/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;POSTGRES_PASSWORD=$password&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;mitra_db&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;flyio-volume-backup&#34;&gt;fly.io volume backup&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly ssh sftp shell r&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ get /path/to/dir ./&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ aunpack dir.zip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを解凍してdockerのvolumeに設定するといいでしょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>memosが素晴らしかった</title>
      <link>https://syui.github.io/blog/post/2023/08/06/memo/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/06/memo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://archlinuxjp.slack.com/&#34;&gt;slack/archlinuxjp&lt;/a&gt;で&lt;code&gt;GreenTee&lt;/code&gt;さんが&lt;a href=&#34;https://github.com/usememos/memos&#34;&gt;usermemos/memos&lt;/a&gt;がすごくいいと教えてくれて、それを使ってみたところかなり良かったので、活用法を考えてみた。&lt;/p&gt;&#xA;&lt;p&gt;活用例としては、tagでページを作ることを思いついた。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://demo.usememos.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$host&lt;span style=&#34;color:#e6db74&#34;&gt;/api/v1/memo?creatorId={1,2}&amp;amp;tag=todo&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm -i hrwg/vue-marked &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm -i moment&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(i, index) in memos_a.data&amp;#34;  class=&amp;#34;memo-body&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;vue-marked&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;substring&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;vue-marked&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i.content.substring(100, 120) !== &amp;#39;&amp;#39;&amp;#34;&amp;gt;&amp;lt;a :href=&amp;#34;this.host + i.id&amp;#34; target=&amp;#34;_blank&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;...&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i.updatedTs&amp;#34; class=&amp;#34;memo-time&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;this.host + i.id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_blank&amp;#34;&lt;/span&gt;&amp;gt;{{&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;updatedTs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;moment&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;)}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;this.host + i.creatorUsername&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_blank&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;creatorUsername&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VueMarked&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-marked&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;moment&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;moment&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; () {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://demo.usememos.com&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;memos&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VueMarked&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;filters&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;moment&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;moment&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;unix&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YYYY.MM.DD&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;mounted&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api/v1/memo?creatorId=1&amp;amp;tag=todo&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;,{ &lt;span style=&#34;color:#a6e22e&#34;&gt;crossdomain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt; =&amp;gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;memos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;serverとして様々な建て方があり、dbも色々な形態があるんだけど、local-dbも使おうと思えば使えるので、まずは&lt;a href=&#34;https://usememos.com/docs/install/cloud/flyio&#34;&gt;fly.io&lt;/a&gt;のvolumeと&lt;a href=&#34;https://litestream.io/guides/backblaze/#create-a-bucket&#34;&gt;backblaze&lt;/a&gt;を採用してみて、お金がかかりそうならlocalに切り替えようと思ってる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui.cfをサスペンドした</title>
      <link>https://syui.github.io/blog/post/2023/08/05/domain/</link>
      <pubDate>Sat, 05 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/08/05/domain/</guid>
      <description>&lt;p&gt;domainを2つも管理したくないという理由から、freenomで取得してた&lt;code&gt;syui.cf&lt;/code&gt;をサスペンドするための&lt;a href=&#34;https://syui.ai/blog/post/2023/03/23/domain/&#34;&gt;処理&lt;/a&gt;を少しずつ進めていて、ほぼ完了したのでお伝えします。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、&lt;code&gt;syui.cf&lt;/code&gt;はgoogle.com等にindexされない。されても上位に表示される可能性はほぼゼロだった。逆に&lt;code&gt;syui.ai&lt;/code&gt;は普通だった。&lt;/p&gt;&#xA;&lt;p&gt;私は、自分が持つdomainは一つでいいやと思っていて、サービスアカウントもできるだけ減らしていきたい人なので、今回は、ついでにアカウント整理をだいぶやった感じ。&lt;/p&gt;&#xA;&lt;p&gt;こういう機会でもないとやらないので、結果的によかった。&lt;/p&gt;&#xA;&lt;p&gt;でも面倒だったし、楽しい作業ではなかった。&lt;/p&gt;&#xA;&lt;p&gt;今回、複数持ってたgoogleアカウントを一つにまとめた。&lt;/p&gt;&#xA;&lt;p&gt;なぜ持っていたかと言うと、googleログイン(サードパーティ)認証に使ってた。&lt;/p&gt;&#xA;&lt;p&gt;google, apple, twitterなどの大手サービスではidが取れなかった。&lt;/p&gt;&#xA;&lt;p&gt;そのためにメインで使うアカウントを定められずにいた。&lt;/p&gt;&#xA;&lt;p&gt;idが取れてれば明らかにそれを使うんだけど、そうでないと使うアカウントがバラけてしまっていた。&lt;/p&gt;&#xA;&lt;p&gt;また、企業サービスに個人情報をなるべく取られたくないので、わざわざアカウントを使い分けたりすることもあった。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ある新興サービスに登録する必要が出てきたとする。あなたはどのメールアドレスを使うだろう。&lt;/p&gt;&#xA;&lt;p&gt;メインを使うという人もいれば、捨てアドを使うという人もいると思う。&lt;/p&gt;&#xA;&lt;p&gt;私は、どちらかというと後者だった。ただ、捨てアドというよりサブアカウントを使う感じだった。&lt;/p&gt;&#xA;&lt;p&gt;しかし、それも面倒になってきた。&lt;/p&gt;&#xA;&lt;p&gt;今回、拠点やメインで使うアカウントが定まってきた段階でまとめることにした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;メールの変遷&#34;&gt;メールの変遷&lt;/h3&gt;&#xA;&lt;p&gt;メールは今までfreenom+mailgun+gmailの組み合わせで無料のドメインメールのようなものを設定してた。これは裏技のようで面白かったし、ずっと無料で使えてたので良かったと思う。&lt;/p&gt;&#xA;&lt;p&gt;今はicloud+(m/130 JPY)に加入してそれを使ってるので、メールに関してはほぼapple経由になった。&lt;/p&gt;&#xA;&lt;p&gt;mail userを作るのはpcでもスマホでも一瞬で終わるし、iosのmessage(sms)やfacetime(phone)とメールアドレスを紐付けられる。つまり、アドレスをsmsの送受信に設定できるようになる。&lt;/p&gt;&#xA;&lt;p&gt;ただし、個人情報がより強固に紐付けられているので、例えば、message(sms)の送信元をメールアドレスに設定している場合は、一瞬で身バレすると思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>boothで初の技術書を出してみた</title>
      <link>https://syui.github.io/blog/post/2023/07/25/bluesky/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/25/bluesky/</guid>
      <description>&lt;p&gt;この前、booth経由で&lt;a href=&#34;https://syui.fanbox.cc/shop&#34;&gt;技術書&lt;/a&gt;を出してみました。&lt;/p&gt;&#xA;&lt;p&gt;blueskyの人達が暖かく迎え入れてくれたので、嬉しかった。&lt;/p&gt;&#xA;&lt;p&gt;boothを使うのも本を出すのも何かを売るのも初めてだったので、まだまだわからないことだらけ。&lt;/p&gt;&#xA;&lt;p&gt;本は数時間で完売。とてもありがたかった。&lt;/p&gt;&#xA;&lt;p&gt;なお、在庫の補充は今後もないと思う。&lt;/p&gt;&#xA;&lt;p&gt;今回はその経緯をブログにしてみる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;色々な仕組み&#34;&gt;色々な仕組み&lt;/h3&gt;&#xA;&lt;p&gt;本書は、自分が「これならお金を出してもいいかな」と思えるような本を目標に作りました。&lt;/p&gt;&#xA;&lt;p&gt;例えば、本を買った人にカードが付いてくるなら、少しは買いたくなりますよね。&lt;/p&gt;&#xA;&lt;p&gt;私もカードが付いてくる本は欲しくなったりします。&lt;/p&gt;&#xA;&lt;p&gt;ただ、本を買っても読まずカード目当て、というのも、ちょっと寂しいですよね。&lt;/p&gt;&#xA;&lt;p&gt;そこで、ここにも新しい仕掛けが必要だと考えました。&lt;/p&gt;&#xA;&lt;p&gt;本書を買ってくれる人は、現在、blueskyのカードゲームをやっている人が多いです。&lt;/p&gt;&#xA;&lt;p&gt;そして、その中にはプログラミングをやってみたいなと思ってる人が少なからずいました。&lt;/p&gt;&#xA;&lt;p&gt;私もそういう人達の力になりたかったし、なにかできないかなあと考えていました。&lt;/p&gt;&#xA;&lt;p&gt;そこで、手順通りに進めてプログラムを作ると、タマゴのカードを育成、孵化できるような仕組みを考えました。&lt;/p&gt;&#xA;&lt;p&gt;ただし、これらの仕組みは、本を買った人だけが楽しめるようなものであってはならない。&lt;/p&gt;&#xA;&lt;p&gt;本を買ってない人でも楽しめるような仕組みを目指して作りました。&lt;/p&gt;&#xA;&lt;p&gt;あくまでタマゴ育成は、おまけであり、新しく追加されたタマゴ育成の説明やヒントが書かれているだけのもの、という位置づけです。&lt;/p&gt;&#xA;&lt;p&gt;実は、これを本書の購入者に限定することは簡単にできます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、下記のようにやればいい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$book_user&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo no book user&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ですが、そのようなことはやっていませんし、やるつもりもない。&lt;/p&gt;&#xA;&lt;p&gt;本を買ってない人は楽しめない、そんな仕組みは作らない。&lt;/p&gt;&#xA;&lt;p&gt;なぜか。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、気分が乗らないから。&lt;/p&gt;&#xA;&lt;p&gt;私は自分がやりたくないことはできない、そのようなものなのです。&lt;/p&gt;&#xA;&lt;p&gt;やりたいことをやるだけ。&lt;/p&gt;&#xA;&lt;p&gt;しかし、投稿をコピーすることで簡単に実行できてしまうようなものでも面白さが半減してしまうと思いました。&lt;/p&gt;&#xA;&lt;p&gt;ですから、購入してくれた人も、購入していない人も、納得できるような仕組み作りを目指しました。&lt;/p&gt;&#xA;&lt;p&gt;今回は、投稿をコピーしても実行されないようなシンプルな仕組みを作りました。&lt;/p&gt;&#xA;&lt;p&gt;本書はblueskyユーザーに向けたプログラミング入門であり、少しでもプログラミングを楽しく学んでもらえたらいいなと思って作ったものです。&lt;/p&gt;&#xA;&lt;p&gt;楽しく学ぶ仕掛けとして、カードを使っているに過ぎません。&lt;/p&gt;&#xA;&lt;p&gt;最も重要なのは、本書を購入してくれた人が満足してくれること、楽しんでくれることです。&lt;/p&gt;&#xA;&lt;p&gt;カードを付属したのも、タマゴ育成の仕組みも、そのために作りました。&lt;/p&gt;&#xA;&lt;p&gt;その結果、「これならお金を出してもいいかな」と思えるような本になった気がします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;具体的にやったこと&#34;&gt;具体的にやったこと&lt;/h3&gt;&#xA;&lt;p&gt;制作過程というか、やったことを書いてみます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;表紙の絵を描いた&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;新しいカードをいくつか作った&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;カードの所有者一覧のレイアウトを作ったり、新しいバッジが追加されるようにした&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;apiを作ってdeployした&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;botに隠しコマンドを作ってタマゴのカードがドロップするようにした&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;botに新しいコマンドを作ってタマゴを孵化する仕組みを考えて作った&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;カードのページに本やリンクを追加するプログラムを作って、レイアウトを整えた&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;rustで読者向けのプログラムを作ってテストした&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;本をgitbookで構成して文章を書いた&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;注文を受け付ける前に発送するカードをランダム、かつ検証できるようにした&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ランダムの結果を暗号化して公開鍵を公開し、完売した段階で秘密鍵を公開して、データを復号化できる仕組みを作った&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;本をwebとpdfでbuild, deployした&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;boothとfanboxを連携して本を出品した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;blueskyで告知した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;本が完売した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;申請があった人のページに本カードとリンクを追加した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;リアルカードを作った&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;リアルカードを発送した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;本の内容で指摘があったところを修正した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;リアルカードが届いたことを確認できた人をカードの所有者一覧に追加した&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;twitterで告知したら本は売れたか&#34;&gt;twitterで告知したら本は売れたか&lt;/h3&gt;&#xA;&lt;p&gt;twitterで同じことをしても、おそらく、一つも売れなかったと思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ランニング、3日目</title>
      <link>https://syui.github.io/blog/post/2023/07/16/running/</link>
      <pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/16/running/</guid>
      <description>&lt;p&gt;日課のランニングに久しぶりにスマホを持っていって3日目。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20230716_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;明日も持っていくかはわからない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ランニング、2日目</title>
      <link>https://syui.github.io/blog/post/2023/07/15/running/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/15/running/</guid>
      <description>&lt;p&gt;日課のランニングに久しぶりにアプリを持っていった。&lt;/p&gt;&#xA;&lt;p&gt;1日目はタイムがおかしかった。自分が遅くなったのかなあとちょっと思った。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20230715_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;2日目はタイムが戻った。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20230715_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;直近の記録を見ると、2日目の計測が正しいと思う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20230715_0003.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20230715_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;久しぶりにアプリを使う場合は、1日目だけでなく2日目も計測した方がいいかもしれない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、最小限のベストプラクティス</title>
      <link>https://syui.github.io/blog/post/2023/07/13/genshin/</link>
      <pubDate>Thu, 13 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/13/genshin/</guid>
      <description>&lt;p&gt;もし原神を今から始める場合のベストプラクティスを考えてみます。&lt;/p&gt;&#xA;&lt;p&gt;星5で確保すべきキャラは以下の4人です。星4で育てるキャラも以下の4人です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230712_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ただし、注意点があります。それは以下のキャラごとに分けられます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;クレー&#34;&gt;クレー&lt;/h3&gt;&#xA;&lt;p&gt;好きなキャラを使いましょう。楽しむためのゲームです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、課金の有無も自分が楽しめるほうを選択しましょう。&lt;/p&gt;&#xA;&lt;p&gt;いかに早く強くなるかと言うのは、楽しさに直結しません。直結する人はいるかもしれません。その場合は課金しましょう。&lt;/p&gt;&#xA;&lt;p&gt;私は無課金のほうが楽しめるので無課金でやってるだけです。クレーを使うのも同じ理由。&lt;/p&gt;&#xA;&lt;p&gt;好きにやりましょう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;バーバラ&#34;&gt;バーバラ&lt;/h3&gt;&#xA;&lt;p&gt;序盤のバーバラは育成すべき。&lt;/p&gt;&#xA;&lt;p&gt;私も最初はバーバラを使っていましたし、今も時々使います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ウェンティ&#34;&gt;ウェンティ&lt;/h3&gt;&#xA;&lt;p&gt;神です。確保しておいて損はありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;綾華&#34;&gt;綾華&lt;/h3&gt;&#xA;&lt;p&gt;移動でよく使いますが、強いです。移動キャラは1人くらい確保したほうがいいかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230712_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;簡単に火力を出せる構成&#34;&gt;簡単に火力を出せる構成&lt;/h3&gt;&#xA;&lt;p&gt;草、水、雷です。これらの元素をPTに入れ、残りはシールドや回復を入れます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_06.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、キャラ確保より完凸を目指す方向へ</title>
      <link>https://syui.github.io/blog/post/2023/07/12/genshin/</link>
      <pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/12/genshin/</guid>
      <description>&lt;p&gt;現在、私はナヒーダを完凸させている以外で完凸する予定のキャラはいません。&lt;/p&gt;&#xA;&lt;p&gt;なぜナヒーダを完凸させたのかというと、個人的に可能性を感じたり、タイミングが良かったりと言った理由からです。&lt;/p&gt;&#xA;&lt;p&gt;どのへんに可能性を感じたかと言うと、ナヒーダが草元素という点と今後に実装される水神、炎神の存在です。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは水元素、炎元素と組むことで爆発の性能が上がります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、起点となる草元素と通常攻撃を使う可能性があるナヒーダと組ませることで、完凸が無駄になる場面は少ないだろうという判断でした。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭を選ばなかった理由も同じで、今後、水神に置き換わる可能性があるからです。&lt;/p&gt;&#xA;&lt;p&gt;まあ、原神はそういうのはあまりないかな。夜蘭はスキルで早く走れるので今もおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;そのような事情から個人的にはナヒーダ完凸はすごくおすすめだと考えていて、例えば、1位のdpsを誇る編成はナヒーダを使うみたい。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、ナヒーダ、雷電、夜蘭、行秋の編成です。&lt;/p&gt;&#xA;&lt;p&gt;これはナヒーダの通常攻撃が必要になり、雷電の爆発は必ずしも打つ必要はありません。&lt;/p&gt;&#xA;&lt;p&gt;では、今後、完凸を目指すキャラは出てこないのでしょうか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;キャラ確保より完凸を目指す方向へ&#34;&gt;キャラ確保より完凸を目指す方向へ&lt;/h3&gt;&#xA;&lt;p&gt;私はおそらく、今後はキャラ確保より完凸を目指す方向にシフトしていくだろうと予想しています。&lt;/p&gt;&#xA;&lt;p&gt;これは、登場するキャラの魅力度や性能によるかな。&lt;/p&gt;&#xA;&lt;p&gt;今はまだわかりません。あくまでその可能性が高いという話。&lt;/p&gt;&#xA;&lt;p&gt;なぜかと言うと、現時点で使用キャラが固定化されており、これ以上、キャラが増えても使い切れないし、育成できないと考えているからです。&lt;/p&gt;&#xA;&lt;p&gt;今後、私は、ナヒーダ完凸とシナジーがあるキャラの完凸を優先的に目指すと思います。&lt;/p&gt;&#xA;&lt;p&gt;無課金で完凸を目指すことになるとは思いもしなかったけど、もしかしたらまた目指すかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;今のところ、完凸を目指す可能性が高いのは、水神、氷神でしょう。&lt;/p&gt;&#xA;&lt;p&gt;草は水とシナジーがあり、水は氷とシナジーがあるためです。&lt;/p&gt;&#xA;&lt;p&gt;でも、原神的には炎神は最強になりそうな気がするなあ。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、今は石を貯めて凸を重ねていく方向で考えています。&lt;/p&gt;&#xA;&lt;p&gt;そんな原神プレイの方向性の話でした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>cors-originのerrorを回避するためのproxyを変えた</title>
      <link>https://syui.github.io/blog/post/2023/07/08/cors/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/08/cors/</guid>
      <description>&lt;p&gt;今までherokuでcors-originのerrorを回避するためにproxy-serverを立ててたんだけど、やめた。これ一つのために&lt;code&gt;$7&lt;/code&gt;かかってた。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Access to fetch at &amp;lsquo;http://localhost:3000/&amp;rsquo; from origin &amp;lsquo;http://127.0.0.1:8080&amp;rsquo;&#xA;has been blocked by CORS policy: No &amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; header is present on the requested resource.&#xA;If an opaque response serves your needs, set the request&amp;rsquo;s mode to &amp;rsquo;no-cors&amp;rsquo; to fetch the resource with CORS disabled.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ja/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin&#34;&gt;https://developer.mozilla.org/ja/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;このerrorは、例えば、apiのgetが同一のurlで行われていないことが要因です。&lt;/p&gt;&#xA;&lt;p&gt;ですから、vueなら以下のようにproxyで同一url内であることを偽装すれば回避できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:vue.config.js&#34; data-lang=&#34;js:vue.config.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;devServer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^/api*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.example.com&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;pathRewrite&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^/api&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/App.vue&#34; data-lang=&#34;js:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api/test&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//.get(&amp;#34;https://api.example.com/test&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt; =&amp;gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ただし、この回避方法はあくまでlocal, previewのみであり、&lt;code&gt;$ yarn build&lt;/code&gt;などの&lt;code&gt;./dist&lt;/code&gt;出力には適用されません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyとtwitter</title>
      <link>https://syui.github.io/blog/post/2023/07/05/bluesky/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/07/05/bluesky/</guid>
      <description>&lt;p&gt;今回は、blueskyの便利ツールを&lt;code&gt;archlinuxjp&lt;/code&gt;の方に投げた関係で、適当に思ってることや便利ツールを紹介します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;blueskyの便利ツール&#34;&gt;blueskyの便利ツール&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://firesky.tv&#34;&gt;https://firesky.tv&lt;/a&gt; : グローバルタイムラインのストリーム。色々と設定できたり、フィルタリングできたり&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bsky.jazco.dev&#34;&gt;https://bsky.jazco.dev&lt;/a&gt; : ユーザーの視覚化&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bsky.jazco.dev/stats&#34;&gt;https://bsky.jazco.dev/stats&lt;/a&gt; : ユーザーのポスト数&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://vqv.app/stats&#34;&gt;https://vqv.app/stats&lt;/a&gt; : ユーザーのプロフィール集計&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://atscan.net&#34;&gt;https://atscan.net&lt;/a&gt;  :  pdsのスキャンやdid&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://skybridge.fly.dev&#34;&gt;https://skybridge.fly.dev&lt;/a&gt; : mastodonのclientでblueskyをやるためのurl&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://tapbots.com/ivory&#34;&gt;https://tapbots.com/ivory&lt;/a&gt; : mastodon clientのivoryに対応&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/videah/SkyBridge&#34;&gt;https://github.com/videah/SkyBridge&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;blueskyの公式ツール&#34;&gt;blueskyの公式ツール&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://plc.directory&#34;&gt;https://plc.directory&lt;/a&gt; : 公式のplc&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://plc.directory/export?after=2023-07-05&#34;&gt;https://plc.directory/export?after=2023-07-05&lt;/a&gt; : json&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://plc.directory/did:plc:4hqjfn7m6n5hno3doamuhgef/log&#34;&gt;https://plc.directory/did:plc:4hqjfn7m6n5hno3doamuhgef/log&lt;/a&gt; : didからlogを検索&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bsky.social/xrpc/com.atproto.repo.listRecords&#34;&gt;https://bsky.social/xrpc/com.atproto.repo.listRecords&lt;/a&gt; : bsky.socialのfeed&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bsky.social/xrpc/com.atproto.repo.listRecords?repo=yui.bsky.social&amp;amp;collection=app.bsky.feed.post&amp;amp;reverse=true&#34;&gt;https://bsky.social/xrpc/com.atproto.repo.listRecords?repo=yui.bsky.social&amp;amp;collection=app.bsky.feed.post&amp;amp;reverse=true&lt;/a&gt; : bsky.socialのfeedをユーザーでフィルタリング&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;blueskyとtwitter&#34;&gt;blueskyとtwitter&lt;/h3&gt;&#xA;&lt;p&gt;私が予測していることを少し書きます。&lt;/p&gt;&#xA;&lt;h4 id=&#34;twitterが終了するまでtwitterの代わりは存在しない&#34;&gt;twitterが終了するまで、twitterの代わりは存在しない&lt;/h4&gt;&#xA;&lt;p&gt;twitterが完全に終了するまで、そこから動く人は殆どいないでしょう。これは企業アカウントも同じです。&lt;/p&gt;&#xA;&lt;p&gt;大移動があるとしたらそれはよりよいtwitterの代わりが現れたときではなく、twitterが終了したときです。&lt;/p&gt;&#xA;&lt;p&gt;終了することが予めわかっていた場合でさえ、そこから動き出す人は大多数のうちの少数です。&lt;/p&gt;&#xA;&lt;p&gt;多くは、それが終了したとき、やむを得ず移動を始めるだけです。&lt;/p&gt;&#xA;&lt;p&gt;このことはほぼ確実に予測される流れだと思います。&lt;/p&gt;&#xA;&lt;p&gt;つまり、twitterの代わりが出てくるとしたら、その後ということになります。&lt;/p&gt;&#xA;&lt;h4 id=&#34;世の中は変わり続ける&#34;&gt;世の中は変わり続ける&lt;/h4&gt;&#xA;&lt;p&gt;世の中は変わり続けるし、便利になり続ける。変わらないものは、いずれ不便になって終わりを迎える。&lt;/p&gt;&#xA;&lt;p&gt;では、今後、snsの便利さはどういったものになるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;私の予想では、今までの一つのサービス内でしか有効でなかったアカウントは、複数サービスでも使える形式に変化していくだろうと思います。使える形式というのは、今のところ、やり取りできる、会話できると言った意味合いです。&lt;/p&gt;&#xA;&lt;p&gt;なぜそのようになるのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、そっちのほうが便利だからです。&lt;/p&gt;&#xA;&lt;p&gt;この流れはやがてトレンドになり、いつしか常識となっているだろうと考えます。&lt;/p&gt;&#xA;&lt;p&gt;これを前提とすると、twitterの選択肢は2つあると思います。&lt;/p&gt;&#xA;&lt;p&gt;(1) 今まで通りtwitter内でしかやり取りできないまま縮小、あるいは終了する&lt;/p&gt;&#xA;&lt;p&gt;(2) twitterが他のサービスのアカウントともやり取りできるようなプロトコルを採用する&lt;/p&gt;&#xA;&lt;h4 id=&#34;atとactivitypub&#34;&gt;atとactivitypub&lt;/h4&gt;&#xA;&lt;p&gt;現在、snsに採用されるプロトコル(protocol)として有望なものが2つあります。&lt;/p&gt;&#xA;&lt;p&gt;at(proto)とactivitypubです。&lt;/p&gt;&#xA;&lt;p&gt;この2つが大きくなると思います。&lt;/p&gt;&#xA;&lt;p&gt;なぜ1つでないのか。なぜ2つなのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、対立構造を取らないと大きくならないからです。&lt;/p&gt;&#xA;&lt;p&gt;台頭するサービスや技術は、往々にして1つの確実なものがあるのではなく、2つのどちらを選ぶかみたいな構造になります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、windowsかmacか。アメリカかロシアか。twitterかfacebookか。googleかappleか。iosかandroidか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>northflankでsqliteをbackupする方法</title>
      <link>https://syui.github.io/blog/post/2023/06/30/northflank/</link>
      <pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/30/northflank/</guid>
      <description>&lt;p&gt;northflankが便利でapiはこちらで立てることが多いですが、northflank/cliが充実してきたので、やり方を紹介します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo npm i -g @northflank/cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ northflank login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ northflank exec service --project $project --service $service --cmd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cp -rf /data/new.sqlite /data/`date &amp;#39;+%Y%m%d&amp;#39;`.sqlite&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;tokenの権限で詳細に設定できます。volumeをbackupすることもできますが、sqliteならnorthflank/cliでcmdをcronすればいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://northflank.com/docs/v1/api/execute-command&#34;&gt;https://northflank.com/docs/v1/api/execute-command&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyの連合を試してみた</title>
      <link>https://syui.github.io/blog/post/2023/06/20/bluesky/</link>
      <pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/20/bluesky/</guid>
      <description>&lt;p&gt;今回の目標は、&lt;a href=&#34;https://github.com/bluesky-social/pds/&#34;&gt;bluesky-social/pds&lt;/a&gt;, &lt;a href=&#34;https://github.com/bluesky-social/atproto/&#34;&gt;bluesky-social/atproto&lt;/a&gt;の統合です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_atproto_pds_20230620_03.13.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_atproto_pds_20230620_04.03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_atproto_pds_20230620_04.13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_atproto_pds_20230620_10.11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;pdsは、連合のsandbox環境ですが、様々な設定ができません。個人的には、&lt;code&gt;AVAILABLE_USER_DOMAINS&lt;/code&gt;をsandbox環境でも有効にしたいと考え、構築してみました。これを有効にすると、handleがその設定のものになります。例えば、&lt;code&gt;.ai&lt;/code&gt;と設定すれば、登録されるユーザーのhandleは&lt;code&gt;user.ai&lt;/code&gt;となります。&lt;/p&gt;&#xA;&lt;p&gt;これがsandboxの連合環境でも動作するのか確かめたかったという理由です。&lt;/p&gt;&#xA;&lt;p&gt;通常は不可能ですが、&lt;code&gt;plc.bsky-sandbox.dev&lt;/code&gt;に登録できたので、希望があると考えました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL plc.bsky-sandbox.dev/export|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.operation|.services.atproto_pds.endpoint,.alsoKnownAs&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;https://at.syui.ai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;at://syui.ai&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結論から言うと、有効に動作させることに成功しましたが、現在のsandboxは定員がいっぱいなのか、plc, bgs側で何らかが制限されている気がします。&lt;/p&gt;&#xA;&lt;p&gt;pdsのdockerをそのまま構築しても、自身のプロフィールにはアクセスできず、投稿も見れません。フォローやリプライは送ることができますが、記録されていないように感じます。最初は普通にできました。ただ、その後できなくなりました。&lt;/p&gt;&#xA;&lt;p&gt;設定の&lt;code&gt;Experiment: Use AppView Proxy&lt;/code&gt;から切り替えられます。プロフィールを編集したければoffにし、連合のfeedを見たければ、onにするという感じです。&lt;/p&gt;&#xA;&lt;p&gt;sandboxも初期の頃は連合が機能していたようですが、最新では参加できない感じになっているのかもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;pds&#34;&gt;pds&lt;/h3&gt;&#xA;&lt;p&gt;今回は、pds + atproto/pds + docker-compose + cloudflare(zero-trust)という構成です。archlinux上で構築します。&lt;/p&gt;&#xA;&lt;p&gt;dbにpostgresを使用します。pdsにある&lt;code&gt;caddy, watchtower&lt;/code&gt;を利用します。pds自体はatproto/pdsから再構築します。&lt;code&gt;atproto/packages/pds/Dockerfile&lt;/code&gt;にあるものを&lt;code&gt;atproto/Dockerfile&lt;/code&gt;においてdocker buildしても動きません。したがって、独自にbuildしたものを使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml:compose.yaml&#34; data-lang=&#34;yaml:compose.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.9&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;caddy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;caddy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;caddy:2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;pds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bind&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds/caddy/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bind&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds/caddy/etc/caddy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/caddy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pds&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;pds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;syui/bluesky-social/pds:latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds/atproto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bind&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bind&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds/image&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/image&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env_file&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/pds/pds.env&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;watchtower&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;watchtower&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;containrrr/watchtower:latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bind&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/var/run/docker.sock&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/var/run/docker.sock&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;TZ&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;US/Pacific&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;WATCHTOWER_CLEANUP&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;WATCHTOWER_SCHEDULE&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@midnight&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;db&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres:latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;db-store:/var/lib/postgresql/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;POSTGRES_PASSWORD=pass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;db-store&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;postgresのpasswordは変更しておいてください&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋のドレイク</title>
      <link>https://syui.github.io/blog/post/2023/06/17/genshin/</link>
      <pubDate>Sat, 17 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/17/genshin/</guid>
      <description>&lt;p&gt;今日は螺旋のドレイクに挑戦したので記録します。&lt;/p&gt;&#xA;&lt;p&gt;初見では3分かかってたけど、なんとか1分台(まあ2分だけど)に縮められた感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_05.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完凸の最終評価</title>
      <link>https://syui.github.io/blog/post/2023/06/16/genshin/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/16/genshin/</guid>
      <description>&lt;h3 id=&#34;結論&#34;&gt;結論&lt;/h3&gt;&#xA;&lt;p&gt;結論から言うと、ナヒーダの完凸は強い。&lt;/p&gt;&#xA;&lt;p&gt;完凸してよかった。非常に満足しているという評価です。&lt;/p&gt;&#xA;&lt;p&gt;具体的にどこがよかったのかを話します。&lt;/p&gt;&#xA;&lt;p&gt;まず、ナヒーダを完凸すると、戦い方自体が変化します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、雷電と組ませても、ナヒーダ爆発のほうが火力が出るので、螺旋も秘境もナヒーダをメインアタッカーとして使うようになりました。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダ爆発が溜まっていなければ、そこで雷電の爆発みたいなローテーションを組むことで、確実にナヒーダの爆発がたまります。&lt;/p&gt;&#xA;&lt;p&gt;最近の螺旋では3元素を使うアビスが出てきました。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダ完凸がいると瞬殺でした。&lt;/p&gt;&#xA;&lt;p&gt;爆発後のダメージが凄まじく、私の環境下では、ナヒーダ以上に安定して高火力を出せるキャラはなかなかいません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今一番頼りにしているアタッカーがナヒーダということになります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;原神熱が冷めてきた&#34;&gt;原神熱が冷めてきた&lt;/h3&gt;&#xA;&lt;p&gt;ナヒーダ完凸後は原神をあまりプレイしなくなったことにも少し触れておきます。&lt;/p&gt;&#xA;&lt;p&gt;原神をプレイしなくなった理由は、ナヒーダの完凸に絶望したとか、満足しなかったとか、完凸しなければよかったとかではないです。&lt;/p&gt;&#xA;&lt;p&gt;むしろその逆で、ナヒーダ完凸してなければ、今の螺旋をクリアできたかは怪しいと思っています。相当な時間がかかっていたかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、私の無課金攻略では、ナヒーダを完凸するという選択は非常に満足し、納得しています。完凸してよかったし、完凸してなかったら攻略がヤバかったかも。&lt;/p&gt;&#xA;&lt;p&gt;まあ、その分の原石で他のキャラを当ててたらわかりませんが。&lt;/p&gt;&#xA;&lt;p&gt;今の環境だと夜蘭(またはニイロウ)がいたら良かったなと思う場面がいくつかあります。水キャラで育成してるの行秋だけなので水が足りない。&lt;/p&gt;&#xA;&lt;p&gt;さて、では、なぜ私はナヒーダ完凸後に原神をあまりプレイしなくなったのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは完凸とはあまり関係ないかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;現実にやることが増えてきて、原神も当初の目標を達成できたので、そのあたりかなと思っています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後の原神&#34;&gt;今後の原神&lt;/h3&gt;&#xA;&lt;p&gt;今後の原神は、(1)神の確保、(2)祭礼本の完凸、(3)イベントやり終える、ことを目標にする感じかな。&lt;/p&gt;&#xA;&lt;p&gt;この間にたくさんのイベントを落としてきたので(3)が一番きついと思う。&lt;/p&gt;&#xA;&lt;p&gt;今は聖遺物厳選を考えるのもめんどいので、方針としては、最強のナヒーダを目指すことしか考えてない。秘境も森林のところにしか通ってなかったりする。&lt;/p&gt;&#xA;&lt;p&gt;それ意味あるの?他のキャラ育成した方がいいんじゃないというのは確かにその通り。そっちのほうが強くなりますので。&lt;/p&gt;&#xA;&lt;p&gt;ただ、今のところ私は「考えること、やることを減らしていきたい」と思っていて、たまに気が向いたら絶縁くらいは通おうかなってくらいの感覚でのんびりプレイしてます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダは完凸したほうがいいのか&#34;&gt;ナヒーダは完凸したほうがいいのか&lt;/h3&gt;&#xA;&lt;p&gt;正直、ナヒーダは完凸した方がいいと思いました。&lt;/p&gt;&#xA;&lt;p&gt;キャラの使い方、PTの使い方、火力が根本的に変わったからです。&lt;/p&gt;&#xA;&lt;p&gt;他のキャラの完凸も、ここまでの変化をもたらすものなのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの場合は、ナヒーダ自身とPTが根本的に覆ります。&lt;/p&gt;&#xA;&lt;p&gt;満足度は高かったし、個人的にはおすすめできます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは他の神と同じようにスキルが最強格です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、完凸することで、爆発も最強格になりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;神の完凸優先度&#34;&gt;神の完凸優先度&lt;/h3&gt;&#xA;&lt;p&gt;ウェンティ以外なら誰でもいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;この点、ウェンティはちょっと不遇ですね。&lt;/p&gt;&#xA;&lt;p&gt;私は、鍾離の強化事件からキャラの強さに調整が入ったと考えています。&lt;/p&gt;&#xA;&lt;p&gt;ウェンティはその前からいたキャラで調整が適用されていません。&lt;/p&gt;&#xA;&lt;p&gt;鍾離強化前と強化後のキャラを比較すると、強化前のキャラは性能的におすすめしづらい気がしてる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダと夜蘭の完凸どちらを選ぶ&#34;&gt;ナヒーダと夜蘭の完凸、どちらを選ぶ&lt;/h3&gt;&#xA;&lt;p&gt;改めて選択できるとしても私はナヒーダを選びます。&lt;/p&gt;&#xA;&lt;p&gt;ただ、夜蘭もおすすめできます。&lt;/p&gt;&#xA;&lt;p&gt;最大の理由がスキル移動です。&lt;/p&gt;&#xA;&lt;p&gt;私は、ナヒーダ、雷電、鍾離、綾華のPTをよく使っています。&lt;/p&gt;&#xA;&lt;p&gt;綾華は主に移動に使っているのですが、それ以外も強い。&lt;/p&gt;&#xA;&lt;p&gt;戦闘が強くて、移動が便利なキャラというのは、それだけ重宝するし、長く使い続けられるのです。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭はそれに該当すると思います。&lt;/p&gt;&#xA;&lt;p&gt;ただ、ナヒーダも代替不可能なスキルを持っています。爆発火力も最大級。&lt;/p&gt;&#xA;&lt;p&gt;これもどっちでもいいと思います。好きなほうを選びましょう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt; &lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_04.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ会心型</title>
      <link>https://syui.github.io/blog/post/2023/06/06/genshin/</link>
      <pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/06/genshin/</guid>
      <description>&lt;p&gt;今までナヒーダを熟知型として使ってきたけど、会心型にしてみた。&lt;/p&gt;&#xA;&lt;h3 id=&#34;熟知型&#34;&gt;熟知型&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/games/genshin/genshin_chara_nahida.png&#34;&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/genshin_chara_nahida.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;会心型&#34;&gt;会心型&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/games/genshin/genshin_chara_nahida_fix2.png&#34;&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/genshin_chara_nahida_fix2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;どちらが強いかというと、聖遺物がそこそこいいものを装備させている場合は、大半のケースで大差ないと思う。&lt;/p&gt;&#xA;&lt;p&gt;なので、これをやる意味があるのかというとあんまりない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ原神はステータスを上げれば上げるほど、その効果は小さくなる傾向にあると思ってる。つまり、攻撃力100-200の間は効果を実感しやすいけど、攻撃力1000-2000の間は効果を実感しづらいという感じかな。&lt;/p&gt;&#xA;&lt;p&gt;だからどんなステータスでも、ただ上げればいいってものでもはなく、まんべんなく上げていくほうが結果として強くなる。&lt;/p&gt;&#xA;&lt;p&gt;これは熟知にも当てはまる。熟知もある一定までは効果を実感できるけど、それ以上になると、効果は薄くなると思う。&lt;/p&gt;&#xA;&lt;p&gt;また、バフで熟知と攻撃は盛れるけど、会心は盛りづらいという事情もあると思う。&lt;/p&gt;&#xA;&lt;p&gt;完凸ナヒーダは、熟知を自分で補完できるので、大体、+300くらい補完できるのではないかな。つまり、熟知は700くらいあればいいということになり、それ以上ある場合は、会心系のステータスに割り振った方がいいのかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、結果としては微々たる差であり、そこまで考える必要ないと思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、2023/06の螺旋</title>
      <link>https://syui.github.io/blog/post/2023/06/05/genshin/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/05/genshin/</guid>
      <description>&lt;p&gt;螺旋が過去最高難易度らしいと聞いて、やりたくなってたのでやった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230605_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近、原神はデイリー、イベントもやらなくなって、螺旋もやらなくなってた。&lt;/p&gt;&#xA;&lt;p&gt;私はipad(wifi)でプレイしてるんだけど、基本的にはキャラを入れ替えても瞬時には入れ替わらないし、よく止まるので、螺旋がきつくなってきたなあと感じてる。&lt;/p&gt;&#xA;&lt;p&gt;12-1,2前半は久しぶりにウェンティが活躍してた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画描いた5</title>
      <link>https://syui.github.io/blog/post/2023/06/03/manga/</link>
      <pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/06/03/manga/</guid>
      <description>&lt;p&gt;漫画を描いたのと、ページを参照できなくて不便だったので、参照できるようにしたのと、イラストを描いたのと、カードを作ったりしてました。&lt;/p&gt;&#xA;&lt;p&gt;また、bot(@yui.bsky.social)から限定カードを1,2日だけ排出するようにしてました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;新しいページを作った&#34;&gt;新しいページを作った&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://manga.syui.ai/91&#34;&gt;yui | manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;以前 : &lt;a href=&#34;https://syui.ai/ai/manga&#34;&gt;/ai/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;イラスト&#34;&gt;イラスト&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_137.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;プロットやキャラ&#34;&gt;プロットやキャラ&lt;/h3&gt;&#xA;&lt;p&gt;今回も少しだけ普段から思ってることを書きます。&lt;/p&gt;&#xA;&lt;p&gt;私は頭の中にプロット?があり、割と勝手に生成されます。&lt;/p&gt;&#xA;&lt;p&gt;キャラも勝手に喋るので、特に考えたりはあまりないです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、アイに関しては、私とは全く別人格なので、アイはアイで勝手にすればいいと思ってます。私は知りません。&lt;/p&gt;&#xA;&lt;p&gt;ただ、物語に関しては、できるだけ面白くなるよう調整したりします。今回も話が暗くなりすぎないように最後のほうはギャグ方向で調整しました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;アイのモジモード&#34;&gt;アイのモジ・モード&lt;/h3&gt;&#xA;&lt;p&gt;本来はアイの小説由来ですが、&lt;a href=&#34;https://syui.github.io/moji/&#34;&gt;ai-moji&lt;/a&gt;が関係しています。&lt;/p&gt;&#xA;&lt;p&gt;何かを書き換える能力を持つようです。&lt;/p&gt;&#xA;&lt;p&gt;機会があれば、&lt;code&gt;ai-moji&lt;/code&gt;はupdateしたいと思っています。いくつかの文字の変更と拡大画像の生成。&lt;/p&gt;&#xA;&lt;p&gt;blueskyが面白いので、最新情報のほとんどをblueskyに投稿するようになってしまいました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画描いた4</title>
      <link>https://syui.github.io/blog/post/2023/05/24/manga/</link>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/05/24/manga/</guid>
      <description>&lt;p&gt;この前、blueskyのほうで新しいカード追加すると同時に漫画出そうと思ってたんだけど、ほぼ土日だけで30ページくらい描いたんだけど、間に合わなかったので、とりあえず出すことにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/ai/manga/&#34;&gt;/ai/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回、私の漫画の書き方がちょっと変わってるかもしれないと思ったので、まとめてみます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ネームを書かない&#34;&gt;ネームを書かない&lt;/h3&gt;&#xA;&lt;p&gt;漫画にはネームって呼ばれるものがあるらしい。と言っても具体的になにかは知らない。おそらく、構成のことを言ってるんだと思うけど、私は、頭の中に物語ができているので、ネームと呼ばれるものはやったことがありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;下書きをしない&#34;&gt;下書きをしない&lt;/h3&gt;&#xA;&lt;p&gt;私は、下書きをしません。絵というのは線を何本も重ねて、少しずつ形にしていく手法を取る人もいるかも知れませんが、私の場合、一発書きです。レイヤーなども面倒なので基本使いません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;コマ割りを考えない&#34;&gt;コマ割りを考えない&lt;/h3&gt;&#xA;&lt;p&gt;漫画ではコマ割りに困っている人が多いらしいです。しかし、私の漫画の描き方は非常に独特で、まずコマ割りを適当に行います。で、そのコマ割りに合わせて絵を書きます。絵が先にあって、その絵にコマ割りを合わせるということは基本ありません。私の場合、コマが最初で、絵があとなのです。ですから、コマ割りに悩んだことはないですね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;設定資料を作らない&#34;&gt;設定資料を作らない&lt;/h3&gt;&#xA;&lt;p&gt;時間ないので設定資料を作りません。あると便利なのは間違いないし、作るべきだと思っているけど、作れてないのが現状。&lt;/p&gt;&#xA;&lt;p&gt;設定資料は、このサイトにまとめてあることだけです。それ以外にはありません。&lt;/p&gt;&#xA;&lt;p&gt;私は自分が作った設定を読み返すことがほとんどないので、その多くを作者すら忘れてたりもするんだけど、あまり気にしてない。&lt;/p&gt;&#xA;&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;&#xA;&lt;p&gt;まとめると、最初は頭の中に話があって、まずコマ割り、あるいはパターンのコピーをし、そこに一発描きで頭の中の話を描き出す、みたいな作業になります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、武器ガチャで爆死</title>
      <link>https://syui.github.io/blog/post/2023/05/23/genshin/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/05/23/genshin/</guid>
      <description>&lt;p&gt;この前のナヒーダがピックアップされてた時、武器ガチャも引いていて、爆死したりしてた。&lt;/p&gt;&#xA;&lt;p&gt;サイフォスと祭礼を狙ってたんだけど、それらが一つも出なくて、星5の鍵がでて、終了しました。&lt;/p&gt;&#xA;&lt;p&gt;最近、原神のイベントとか全くできてなくてやばい。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ナヒーダはモチーフ武器より祭礼のほうが強いと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230512_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230512_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;螺旋&#34;&gt;螺旋&lt;/h3&gt;&#xA;&lt;p&gt;なんとなく目標としてた人が螺旋タイム出してたので、私も完凸のナヒーダ使ってタイム出してみた。少し追いついたような気がしたのでうれしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt; &lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_03.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>github appsで任意のアイコンを設定する</title>
      <link>https://syui.github.io/blog/post/2023/04/29/github/</link>
      <pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/04/29/github/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/github_apps_icon_20230429_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat .git/config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;remote &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;token&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;@github.com/user/repo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この前、botからtokenでgit pushしてたんだけど、不意にiconを設定してみたくなったので、appsを作って設定してみた。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、.git以下には、様々な情報があって、その中でも重要なのが個人を識別するemailなんだけど、githubも他のgit-serverもそうだけど、emailからiconを設定します。&lt;/p&gt;&#xA;&lt;p&gt;github appsを作って、iconを設定し、apiにアクセスして、それをemailに設定するとokです。&lt;/p&gt;&#xA;&lt;p&gt;github appsは&lt;code&gt;id+name[bot]@users.noreply.github.com&lt;/code&gt;が機能します。これは通常のuser(id)でも同じ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://api.github.com/users/yui-bsky-social[bot]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat ~/.gitconfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 132127762+yui-bsky-social&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;bot&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;@users.noreply.github.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでpushすれば、commitにgithub appsで作ったbotのiconが表示されるはず。&lt;/p&gt;&#xA;&lt;p&gt;githubもそうだけど、基本的に名前が取られててつらい。名前をどうしようかが一番悩みました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵本を作ってみた</title>
      <link>https://syui.github.io/blog/post/2023/04/17/book/</link>
      <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/04/17/book/</guid>
      <description>&lt;p&gt;アイが一冊だけ持ってる絵本。たまに作中に出てくるやつを作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;たまたまお店でいいものが売ってて「あなただけの絵本を作りましょう」という真っ白な絵本なんだけど、それを買って作ってみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_book_20230417_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_book_20230417_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;デザイン&#34;&gt;デザイン&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/icon/book.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;カードを作ってみた&#34;&gt;カードを作ってみた&lt;/h3&gt;&#xA;&lt;p&gt;そろそろカード作り始めないと、やばいかもしれないと思ったので、カード作ってたんだけど、素材が切れた話。&lt;/p&gt;&#xA;&lt;p&gt;その前に、少しだけカードのルールというか設定の一部を紹介します。&lt;/p&gt;&#xA;&lt;p&gt;リアルカードの設定は以下のようになっています。重要な点は主に2つ。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一つの絵柄につき一枚しか発行できない&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一人一枚しか持てない&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;このようなルールが存在していて、それは私も例外ではないので、例えば、私は同じ絵柄のものを2枚は作らないし、また、1枚以上のカードを作った場合、誰かにあげるか、破棄するか、どちらかになります。&lt;/p&gt;&#xA;&lt;p&gt;まあ、期間を制限していないので、抜け道はあるんだけど、このカード、世界で一つだけのカードという設定ではあります。今のところは。&lt;/p&gt;&#xA;&lt;p&gt;で、そのために&lt;a href=&#34;https://card.syui.ai/docs&#34;&gt;docs&lt;/a&gt;に設置したのがowner(所有者)のページです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;素材が切れた&#34;&gt;素材が切れた&lt;/h3&gt;&#xA;&lt;p&gt;以前はオーロラシールを素材に使ってたんだけど、それが無くなってしまい、買いに出かけたら生産中止になったらしいので、途中から製法を変えて作りました。もしかしたら、こっちのほうがいいかも。&lt;/p&gt;&#xA;&lt;p&gt;これは絵本を作ってるときに気づいたもので、やたら質感がいいシールだなと思い、それを使うことにしたのがきっかけでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_book_20230417_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完凸</title>
      <link>https://syui.github.io/blog/post/2023/04/12/genshin/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/04/12/genshin/</guid>
      <description>&lt;p&gt;全くすり抜け無かったので、ギリギリ行けた感じ。&lt;/p&gt;&#xA;&lt;p&gt;今後使ってみて使用感を確かめていきたいけど、めちゃくちゃ強くなってるのを既に感じてる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230412_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230412_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyの記事をgihyo.jpで書いた</title>
      <link>https://syui.github.io/blog/post/2023/04/11/bluesky/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/04/11/bluesky/</guid>
      <description>&lt;p&gt;今回、blueskyの記事を&lt;a href=&#34;https://gihyo.jp&#34;&gt;gihyo.jp&lt;/a&gt;で書かせていただきました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gihyo.jp/article/2023/04/what_is_bluesky&#34;&gt;https://gihyo.jp/article/2023/04/what_is_bluesky&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;そういえばこの記事、blueskyで&lt;code&gt;あなたが書いたやつ、注目トップに入ってる&lt;/code&gt;と教えてもらい、私はそれを全く知らなかったので、嬉しい知らせだったりした。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、今回の記事について、私が書いたかどうかはかなり怪しい。&lt;/p&gt;&#xA;&lt;p&gt;というのも、ほとんど技術評論社の方が色々と編集や修正、調べ物をしてくれたので、文章の殆どの部分を助けてもらったと言っても過言ではありません。タイトルや表題を含めてそうですね。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/gihyojp?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#gihyojp&lt;/a&gt; にて、今注目の分散型SNS、Blueskyの記事を2本公開しましたー &lt;br&gt;&lt;br&gt;こちらはユーザ寄りの視点から、誕生の背景や現在の盛り上がり、そして、基本機能や特徴について解説していただいております &lt;a href=&#34;https://twitter.com/hashtag/SNS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SNS&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Bluesky?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Bluesky&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/blueskysocial?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#blueskysocial&lt;/a&gt; &lt;a href=&#34;https://t.co/7YamjJWlp2&#34;&gt;https://t.co/7YamjJWlp2&lt;/a&gt;&lt;/p&gt;&amp;mdash; 馮　富久/FUON Tomihisa (@tomihisa) &lt;a href=&#34;https://twitter.com/tomihisa/status/1645704336591429633?ref_src=twsrc%5Etfw&#34;&gt;April 11, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;もしよかったら読んでみてください。&lt;/p&gt;&#xA;&lt;p&gt;今回、私がやりたかったのは、(1)様々なコミュニティの良さを伝えること、(2)今後の未来について、プロトコルと分散を用いてサービスの垣根は取り外される方向になる気がするみたいなことを伝えること。&lt;/p&gt;&#xA;&lt;p&gt;主にこの2つかな。&lt;/p&gt;&#xA;&lt;p&gt;技術評論社の方々に感謝。&lt;/p&gt;&#xA;&lt;p&gt;そういえば、技術評論社のサイト、前々からすごく見やすいし、いいなって思ってたんだよね。&lt;/p&gt;&#xA;&lt;p&gt;これ&lt;code&gt;archjp&lt;/code&gt;でも言ってた気がするけど。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyの初meetupがあった</title>
      <link>https://syui.github.io/blog/post/2023/04/09/bluesky/</link>
      <pubDate>Sun, 09 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/04/09/bluesky/</guid>
      <description>&lt;p&gt;世界初のbluesky meetupが東京で開催されました。尽力されたmeetup運営の方々、お疲れさまでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://428lab.connpass.com/event/279572/&#34;&gt;https://428lab.connpass.com/event/279572/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;そこで、私が開発してるものをmeetup運営の方が好意で紹介してくださいました。本当にありがとう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://speakerdeck.com/akiomik/introduction-of-apps-developed-by-japanese&#34;&gt;https://speakerdeck.com/akiomik/introduction-of-apps-developed-by-japanese&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ただ、提出する資料について私がちょっと誤解していて、結論から言うと、他の方々の発表資料は全部良すぎたんだけど、自分のやつがダメでした。&lt;/p&gt;&#xA;&lt;p&gt;ダメというのは、あくまで個人的な意見なんだけど、これについて少しだけ書いてみたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;当日、私が開発したものの紹介は、うまくいったように見えました。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、meetup運営の人達がうまくフォローしてくれたからです。つまり、全部、運営の人が助けてくれたからうまくいっただけなのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、他の方々の資料を見て、ああすればよかった、こうすればよかったというのがたくさんあったので、改めて問題点を修正してみることに。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/at.syui.ai/main/public/meetup/bot_s1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/at.syui.ai/main/public/meetup/bot_s2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回のmeetupは、bluesky運営や開発の人たちにものすごい元気を与えたんじゃないかなって思っていて、素晴らしすぎた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyでカードゲームを作ってみた</title>
      <link>https://syui.github.io/blog/post/2023/04/01/api/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/04/01/api/</guid>
      <description>&lt;p&gt;カードゲームと言ってもルールはないし、最初は占い的なものとして作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;技術的なことについて、少しだけ書きます。&lt;/p&gt;&#xA;&lt;p&gt;entのschemaにDefaultFuncがあるのを見つけて、この機能に助けられました。&lt;/p&gt;&#xA;&lt;p&gt;本来は&lt;code&gt;ent/entc.go&lt;/code&gt;で新しいリクエスト先を作成して、main.goで処理しなければならないかもしれないかもしれないと思っていました。前回触ったときはそうやってランダム値をdefaultにするため回避していた記憶。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go:/ent/schema/card.go&#34; data-lang=&#34;go:/ent/schema/card.go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;Card&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Fields&lt;/span&gt;() []&lt;span style=&#34;color:#a6e22e&#34;&gt;ent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Field&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;ent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Field&lt;/span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;card&amp;#34;&lt;/span&gt;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Immutable&lt;/span&gt;().&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//Default(card).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;DefaultFunc&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Seed&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Now&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;UnixNano&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Intn&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;card&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Intn&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;card&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;card&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Optional&lt;/span&gt;(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Immutable&lt;/span&gt;().&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Optional&lt;/span&gt;().&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Default&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;() &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Now&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;In&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jst&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;長続きする遊びってなんだろう&#34;&gt;長続きする遊びってなんだろう&lt;/h3&gt;&#xA;&lt;p&gt;次は、普段からちょっとだけ考えてることについて。&lt;/p&gt;&#xA;&lt;p&gt;運要素が介在しないゲームと言うのは、あまり長続きしないのです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、ハマる人はハマるんだけど、運要素が大きければ大きいほど長続きしやすいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、長く遊ばれ続けるには、どこかに運要素を入れたほうがいいと言うのが私の考えです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、バランスが重要だと思います。&lt;/p&gt;&#xA;&lt;p&gt;全部運というのも遊びとしては難しいと思います。&lt;/p&gt;&#xA;&lt;p&gt;どうせ全部運で決まるんでしょ、頑張っても意味ないでしょ、となってしまうからです。&lt;/p&gt;&#xA;&lt;p&gt;今回作ったのは、普通にカードを集めて、運が良ければ当たるってだけのシンプルなものです。&lt;/p&gt;&#xA;&lt;p&gt;よければblueskyのほうでbotに&lt;code&gt;/card&lt;/code&gt;してみてください。&lt;/p&gt;&#xA;&lt;p&gt;集めたカードはこちらに表示されます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://card.syui.ai&#34;&gt;https://card.syui.ai&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>northflankでentのapiを触ってみた</title>
      <link>https://syui.github.io/blog/post/2023/03/29/api/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/29/api/</guid>
      <description>&lt;p&gt;最近、fly.ioを使ってることもあって、db:postgresよりもsqliteのほうがありがたい感じになってる。&lt;/p&gt;&#xA;&lt;p&gt;northflankで動かしてたapiのdbがpostgresだったので、docker-volumeに変更して、sqliteに変更にしてみました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ハマったところ&#34;&gt;ハマったところ&lt;/h3&gt;&#xA;&lt;p&gt;ハマったのは前回と同じで、&lt;code&gt;service/CMD override&lt;/code&gt;で&lt;code&gt;custom command&lt;/code&gt;を選択して、goの場合は&lt;code&gt;bin/binary&lt;/code&gt;とかやります。&lt;/p&gt;&#xA;&lt;p&gt;表示 : &lt;code&gt;/cnb/process/web bin/binary&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;volumeも少しハマりました。&lt;/p&gt;&#xA;&lt;p&gt;container上のvolumeなので、&lt;code&gt;/&lt;/code&gt;はcontainerのrootを指します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、volumeを&lt;code&gt;/data&lt;/code&gt;にmountするとして、sqliteはこんな感じになります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ go generate ./...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ go build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go:main.go&#34; data-lang=&#34;go:main.go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;dialect&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SQLite&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file:/data/ent.sqlite?_fk=1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//client, err := ent.Open(dialect.SQLite, &amp;#34;file:ent?mode=memory&amp;amp;cache=shared&amp;amp;_fk=1&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今現在、ちょっとした遊びを考えてるんだけど、遊びを考えるのって難しい。&lt;/p&gt;&#xA;&lt;p&gt;例えば、botでカード占いをできるようにしたんだけど、これをapiと連携した場合、どんな感じにすれば面白いんだろうとか、長く楽しめそうかなとか、その辺。&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui.aiに完全に移行しました</title>
      <link>https://syui.github.io/blog/post/2023/03/26/domain/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/26/domain/</guid>
      <description>&lt;p&gt;blogのタイトルとかも&lt;code&gt;syui.ai&lt;/code&gt;に変更しました。&lt;/p&gt;&#xA;&lt;p&gt;実は&lt;code&gt;syui.ai&lt;/code&gt;というdomainやtitleは、キーボードの押しやすさ、ぱっと見た感じから個人的にかなり気に入ってたので、ちょっと寂しい。&lt;/p&gt;&#xA;&lt;p&gt;新しく&lt;code&gt;syui.ai&lt;/code&gt;になるけど、こちらは個人的に一番好きなdomainです。&lt;/p&gt;&#xA;&lt;p&gt;これからもよろしくお願いします。&lt;/p&gt;&#xA;&lt;p&gt;最近はblueskyを触ってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_20230321_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui.aiからdomainを移行してみた</title>
      <link>https://syui.github.io/blog/post/2023/03/23/domain/</link>
      <pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/23/domain/</guid>
      <description>&lt;p&gt;syui.ai -&amp;gt; syui.ai へdomainを移行しました。&lt;/p&gt;&#xA;&lt;p&gt;昨日は「徐々に移行する感じになると思う」みたいなこと言ってたけど、やりたかったのでやった。&lt;/p&gt;&#xA;&lt;p&gt;こういうのは機会がある時にやらないと、私なんかはめんどくさがりなので基本動かないのでよかった。&lt;/p&gt;&#xA;&lt;p&gt;やっぱり新しいdomainを使ってみたかったというのが一番の理由です。&lt;/p&gt;&#xA;&lt;p&gt;そして、二番目が「domainを2個も管理したくない」という理由。もちろん、&lt;code&gt;.cf&lt;/code&gt;も引き続き維持しますが、できれば内容を空にしておきたい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;freenomの今後&#34;&gt;freenomの今後&lt;/h3&gt;&#xA;&lt;p&gt;freenomが現在、新規登録を停止しています。理由はfacebookからの訴訟だと言われているようです。&lt;/p&gt;&#xA;&lt;p&gt;今後、高い確率でfreenomに起こりそうなことを個人的に予想します。&lt;/p&gt;&#xA;&lt;p&gt;現在、freenomは、登録を停止していて、これが裁判所からの命令によるものかはわかりませんが、スパムアカウントを排除しようとする流れになると思われます。&lt;/p&gt;&#xA;&lt;p&gt;それが終わると新規登録が再開され、再開後は登録の手続きが厳格化すると考えられます。&lt;/p&gt;&#xA;&lt;p&gt;ここで、すでに調査済みのグリーン判定をもらったアカウントは継続して使えると思います。&lt;/p&gt;&#xA;&lt;p&gt;したがって、ほぼ確実にグリーン判定が得られるような人は、この件を心配する必要はないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;domainの性質上、検閲は容易ではありません。また、更新の阻害や取り上げも容易ではなく、普通に使用している場合は特にそうですね。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、freenomでは&lt;code&gt;syui.ai&lt;/code&gt;の一つしか取得していません。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、こういった予想が外れることも想定しておかなければなりませんが、このまま&lt;code&gt;.cf&lt;/code&gt;を使い続けて問題が発生する可能性は著しく低いと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;逆に、今後はdomainの価値が高くなる可能性すらあるかもしれません。そんな感じの個人予想をしています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mastodon&#34;&gt;mastodon&lt;/h3&gt;&#xA;&lt;p&gt;mastodonはアカウントの引っ越しができるっぽいので、新インスタンスを立てたあと、両アカウントで引っ越しの設定をしてから、旧インスタンスを削除すれば良さそう。&lt;/p&gt;&#xA;&lt;p&gt;でもfly.ioのfree planでは2つもインスタンスを立てられないので(主にredis)、引き継ぎなしで移行する必要があって、今のところは引っ越さなくてもいいかという結論。&lt;/p&gt;&#xA;&lt;p&gt;一応、現在のインスタンスのdomainを変えて運用することは可能。ただ、それだと連合に迷惑がかかる可能性があるので、できれば連携してるアカウントの引っ越しシグナルを相手側が受け取って、連携してるアカウントが無くなった時点で閉じたほうが良さそう。&lt;/p&gt;&#xA;&lt;p&gt;この辺は色々と他の方法を探ってみるけど、無さそうならdomainを&lt;code&gt;.ai&lt;/code&gt;に変えるだけかもしれないし、&lt;code&gt;.cf&lt;/code&gt;のまま運用するかもしれない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui.aiというdomainを買ってみた</title>
      <link>https://syui.github.io/blog/post/2023/03/22/domain/</link>
      <pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/22/domain/</guid>
      <description>&lt;p&gt;今回はdomainを何に使おうか迷ってる話です。&lt;/p&gt;&#xA;&lt;p&gt;domainを買うと言っても、自分の中では&lt;code&gt;.io&lt;/code&gt;, &lt;code&gt;.ai&lt;/code&gt;の2つしか候補がありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;そして、&lt;code&gt;.ai&lt;/code&gt;を選びました。&lt;/p&gt;&#xA;&lt;p&gt;何に使うのかですが、理想としては&lt;code&gt;.cf&lt;/code&gt;を&lt;code&gt;.ai&lt;/code&gt;に置き換えることです。domainを2つも管理したくない気持ちがあります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これは現実的ではないかもしれません。あまりに&lt;code&gt;.cf&lt;/code&gt;に色んなものをhostしすぎた。&lt;/p&gt;&#xA;&lt;p&gt;したがって、徐々に&lt;code&gt;.ai&lt;/code&gt;をメインで使っていくようにするのが良さそう。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、mail, blog, socialとかに使っていきたい。今までと変わらない感じだけど。&lt;/p&gt;&#xA;&lt;p&gt;現在、&lt;a href=&#34;https://at.syui.ai&#34;&gt;at.syui.ai&lt;/a&gt;にself-hostしたatへの投稿を表示しています。&lt;/p&gt;&#xA;&lt;p&gt;ここをblogやweb-siteにしてsyui.aiからredirectするのもいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;今の所、過去に作ったものはそのまま残して、新しく作ったものを&lt;code&gt;syui.ai&lt;/code&gt;にhostしていく予定です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、結局は&lt;code&gt;.cf&lt;/code&gt;を使い続けるかもしれませんね。この辺、どうなるか、私にもわかりません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;.cf&lt;/code&gt;はずっと気に入って使っていたdomainで、&lt;code&gt;.ai&lt;/code&gt;は昔から欲しかったdomainです。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、やりたかったこと第一弾として、本来ならatでは2文字のhandleは取れないんだけど(3文字から)、2文字のhandleでやってみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_20230321_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;でもactivitypubやmatrixの形式のほうが、かっこいいかもしれませんね。&lt;/p&gt;&#xA;&lt;p&gt;activity : &lt;code&gt;@ai@syui.ai&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;matrix : &lt;code&gt;@ai:syui.ai&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;いや、微妙かな&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのatをdeployしてみた3</title>
      <link>https://syui.github.io/blog/post/2023/03/21/bluesky/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/21/bluesky/</guid>
      <description>&lt;p&gt;awsやらfly.ioやらで少しずつ負荷を確認してたのですが、今回は本番環境にdeployしてみた話です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bsky.syui.ai&#34;&gt;https://bsky.syui.ai&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;video src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/bluesky_20230406_0001.mp4&#34; width=&#34;350&#34; controls&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的にはこれまでのdeploy方法と変わりません。ポイントも同じです。&lt;/p&gt;&#xA;&lt;p&gt;fly.ioの場合は、port:80,443を&lt;code&gt;2583&lt;/code&gt;に投げてやればOKです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;aws-s3&lt;/code&gt;, &lt;code&gt;cloudfront&lt;/code&gt;を使わないため&lt;code&gt;cfg.publicUrl&lt;/code&gt;が機能しなかったので、&lt;code&gt;imgUriEndpoint&lt;/code&gt;を変更しました。今回もgithub-pagesを使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:packages/pds/src/index.ts&#34; data-lang=&#34;js:packages/pds/src/index.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;imgUriEndpoint&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`https://img.syui.ai/image`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dist, public, staticなどにjpgを置いてbuildすることでアクセスできるかもですが、やってみた限りでは無理でした。この辺はまだあまり見れていません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;invite-code&#34;&gt;invite code&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;packages/pds/src/api/com/atproto/account/createInviteCode.ts&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# com.atproto.server.createInviteCode&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://$host/xrpc/com.atproto.account.createInviteCode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;useCount\&amp;#34;:5}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -X POST -u admin:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;admin_password&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $url &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ref : &lt;a href=&#34;https://github.com/bluesky-social/atproto/pull/204/commits/f0558a0dfb79c9275ddeb0e01b48c3b1b8cef4dc&#34;&gt;https://github.com/bluesky-social/atproto/pull/204/commits/f0558a0dfb79c9275ddeb0e01b48c3b1b8cef4dc&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;domainとmailについて&#34;&gt;domainとmailについて&lt;/h3&gt;&#xA;&lt;p&gt;少し前に&lt;code&gt;syui.ai&lt;/code&gt;のdomainを購入し、appleのicloud+に加入して&lt;code&gt;custom mail&lt;/code&gt;を使い始めました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;.ai&lt;/code&gt;はけっこう高かった気がするんだけど、欲しかったので買った。&lt;/p&gt;&#xA;&lt;p&gt;今まではfreenomで取得した&lt;code&gt;.cf&lt;/code&gt;を無料で使ってきました。&lt;/p&gt;&#xA;&lt;p&gt;mailもmailgunの設定でgmailに転送していたので、無料でした。&lt;/p&gt;&#xA;&lt;p&gt;freenomとmailgunは非常に良いサービスです。かなり長い期間使ってきましたが、一度も問題が起こったことはありません。これらサービスには感謝です。&lt;/p&gt;&#xA;&lt;p&gt;正直、最初はこんな長く続けるとは思ってなかったのです。&lt;/p&gt;&#xA;&lt;p&gt;楽しく遊んでたら、色々なものをホストして、いつの間にか超肥大化してた。そんな感じです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、atのself-hostはsyui.aiでいいとして、pageとかを作りたい場合、完全にfly.ioかつnodeで構築するしかなさそう。あるいは、他でhostしてhttp,httpsの場合はredirectみたいな処理を入れるかです。また、&lt;code&gt;.well-known/&lt;/code&gt;を設定しづらい気がしてて、A(root)にするのはあまり良くないかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bluesky_20230321_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた130</title>
      <link>https://syui.github.io/blog/post/2023/03/21/illust/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/21/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_130.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ちょっとだけ個人的な話をしてみる&#34;&gt;ちょっとだけ個人的な話をしてみる&lt;/h3&gt;&#xA;&lt;p&gt;お絵かきをはじめて130枚目のイラストになります。&lt;/p&gt;&#xA;&lt;p&gt;特に記念すべき数字というわけでもないんですが、今回は少しだけ変わったことがあったので、それについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;私のイラストはtwitterに上げるときもあれば、上げないときもあって、ほとんどは描いても上げないかな。ブログに上げるだけのことが多いです。&lt;/p&gt;&#xA;&lt;p&gt;twitterに上げるときは、likeが1つ付くときもあれば、付かないときもあって、付かないことのほうが圧倒的に多いと思います。&lt;/p&gt;&#xA;&lt;p&gt;今回の絵は、twitterではなく、blueskyに上げてみました。&lt;/p&gt;&#xA;&lt;p&gt;blueskyで絵を投稿してる人を見かけて、私もなにか書こうかなと思ったのです。&lt;/p&gt;&#xA;&lt;p&gt;twitterよりも圧倒的に人が少ないはずのblueskyのほうが反応があったので、嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;ただ、この現象自体は、少し前から確認されていました。&lt;/p&gt;&#xA;&lt;p&gt;絵について適当になにか書きます。&lt;/p&gt;&#xA;&lt;p&gt;私は、絵を全く描けないのですが、こうやってsnsに投稿していて、思うところがあります。&lt;/p&gt;&#xA;&lt;p&gt;私が見たいと思っているのは、その人が反映された絵なので、初心者であればあるほど面白いと思っているのです。&lt;/p&gt;&#xA;&lt;p&gt;絵には、その人の特徴が現れます。&lt;/p&gt;&#xA;&lt;p&gt;多くの人はうまく描きたいと願い、練習をするかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、その練習はなんのためなのか。&lt;/p&gt;&#xA;&lt;p&gt;多くの人から称賛を受けるための上手な絵を描きたいと願うのか、あるいは、自分が書きたい絵を描けるよう自己実現を願うのか。&lt;/p&gt;&#xA;&lt;p&gt;前者はAIが最も得意とする分野です。AIに書かせたほうが良い結果が生まれるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ですが、後者の「本当はこう描きたかったのに、それができなかった。できるようになりたい」という想いはどうでしょう。&lt;/p&gt;&#xA;&lt;p&gt;私は、他の人の絵を見るとき、上手いか下手かなどに興味がありません。&lt;/p&gt;&#xA;&lt;p&gt;その人が現れているか否か。それだけを見ています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、初心者であればあるほど、その人の特徴が絵には現れるので、私は好きだったりするのです。&lt;/p&gt;&#xA;&lt;p&gt;みんなもお絵描きしよう。楽しいですよ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;nostrの話&#34;&gt;nostrの話&lt;/h3&gt;&#xA;&lt;p&gt;絵とは全く関係ないですが、nostrは情報価値の判断、そして、流通が速すぎます。&lt;/p&gt;&#xA;&lt;p&gt;独自のコミュニティが日本語で機能しています。&lt;/p&gt;&#xA;&lt;p&gt;情報通な人ほど、早めにここの情報に触れておくことを強くおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;これは絵とは全く関係がありません。コンピュータや情報、未来に関係します。&lt;/p&gt;&#xA;&lt;p&gt;今後、起こりうることのいくつかは、すでにnostrで実現されていると思います。おそらく、そんな感じ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのatをdeployしてみた2</title>
      <link>https://syui.github.io/blog/post/2023/03/13/bluesky/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/13/bluesky/</guid>
      <description>&lt;p&gt;前回、deployしてみた感触では&lt;code&gt;token error&lt;/code&gt;が出ていて、それを解消すれば良さそうに思ってたんだけど、気になる情報があったので、今回はそれにあたってみた。&lt;/p&gt;&#xA;&lt;p&gt;atは&lt;code&gt;plc.directory&lt;/code&gt;に登録しなければいけなかったみたいで、その登録ができていなかったぽい。&lt;/p&gt;&#xA;&lt;p&gt;重要なのは&lt;code&gt;serverDid&lt;/code&gt;でserverを立てる際はここに登録した値を入れる必要があるみたいです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/syui/atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd !$:t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# error : python, not found better-sqlite3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvm use &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm config edit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/bin/python3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i node-gyp npm lerna&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i better-sqlite3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今回、blueskyで&lt;a href=&#34;https://github.com/KingYoSun&#34;&gt;KingYoSun&lt;/a&gt;さんに助けてもらいました。ありがとうございます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/KingYoSun/atproto-aws/tree/main&#34;&gt;https://github.com/KingYoSun/atproto-aws/tree/main&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;plc.directoryにdomainなどを登録して、didを取得するまでをやります。これを&lt;code&gt;serverDid&lt;/code&gt;に使用する感じだと思います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:packages/dev-env/src/main.ts&#34; data-lang=&#34;js:packages/dev-env/src/main.ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbor&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@ipld/dag-cbor&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;uint8arrays&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uint8arrays&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`signingKey=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;keypair&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;did&lt;/span&gt;()&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`recoveryKey=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;keypair&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;did&lt;/span&gt;()&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;create&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;signingKey&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;keypair.did&lt;/span&gt;(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;recoveryKey&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;keypair.did&lt;/span&gt;(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;handle&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${ADMIN_USER_NAME}.${DOMAIN}&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://${DOMAIN}&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;prev&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Uint8Array&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cbor&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;encode&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;`sig=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;uint8arrays&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keypair&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sign&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;base64url&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make run-dev-env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ handle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;admin.example.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ service&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://example.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://plc.directory/did:plc:q4ugjxbx2mp6rmnnljjystesttesttest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;type\&amp;#34;: \&amp;#34;create\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;signingKey\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;signingKey&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;recoveryKey\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;recoveryKey&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;handle\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;handle&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;service\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;service&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;prev\&amp;#34;: null,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  \&amp;#34;sig\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;sig&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hash of genesis operation does not match DID identifier: xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;did:plc:xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Ok&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;適当な解説&#34;&gt;適当な解説&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;Makefile&lt;/code&gt;からコマンド体系化がわかります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyでhandle.updateしてみた</title>
      <link>https://syui.github.io/blog/post/2023/03/08/bluesky/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/08/bluesky/</guid>
      <description>&lt;p&gt;bluesky(bsky.social)では現在、handle.updateが追加されていて、いわゆるcustom-domain(custom-handle)のようなことができるようになっています。これを&lt;code&gt;handle.update&lt;/code&gt;と呼びます。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、&lt;code&gt;syui.bsky.social -&amp;gt; syui.ai&lt;/code&gt;などにhandleを変更することができます。&lt;/p&gt;&#xA;&lt;p&gt;で、実際にこのhandle.updateをやってみた感想を書きます。&lt;/p&gt;&#xA;&lt;p&gt;web, cliの両方に簡単に機能を追加しましたので、誰でもできると思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;web&#34;&gt;web&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bsky.syui.ai/login&#34;&gt;bsky.syui.ai&lt;/a&gt; -&amp;gt; login -&amp;gt; profile -&amp;gt; handle.update&lt;/p&gt;&#xA;&lt;p&gt;note: re-login&lt;/p&gt;&#xA;&lt;h3 id=&#34;cli&#34;&gt;cli&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S rust --noconfirm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/syui/atr&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd !$:t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cargo build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:~/.config/atr/config.toml&#34; data-lang=&#34;toml:~/.config/atr/config.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bsky.social&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pass&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;syui.bsky.social&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/atr h xxx.bsky.social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/atr h example.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# note: change config.toml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# user = &amp;#34;example.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/atr a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/atr profile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;shell&#34;&gt;shell&lt;/h3&gt;&#xA;&lt;p&gt;shellでも書いてみました。大体はこんな感じです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/zsh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# session.create&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;syui.bsky.social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pass&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://bsky.social/xrpc/com.atproto.session.create&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -sL -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;handle\&amp;#34;:\&amp;#34;&lt;/span&gt;$user&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,\&amp;#34;password\&amp;#34;:\&amp;#34;&lt;/span&gt;$pass&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}&amp;#34;&lt;/span&gt; $url &amp;gt;! token.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat token.json|jq .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# get : did, accessJwt&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;did&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat token.json|jq -r .did&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat token.json|jq -r .accessJwt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# handle.update&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://bsky.social/xrpc/com.atproto.handle.update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;handle\&amp;#34;:\&amp;#34;syui.ai\&amp;#34;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -sL -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$token&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;handleupdate&#34;&gt;handle.update&lt;/h3&gt;&#xA;&lt;p&gt;なぜatではhandle.customと言わず、handle.updateという単語が採用されているのでしょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完全体を目指す4</title>
      <link>https://syui.github.io/blog/post/2023/03/02/genshin/</link>
      <pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/03/02/genshin/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;ここでいう完全体とは、無課金で完凸、全天賦MAXにして、聖遺物を厳選し、翼(緑)と精霊(草)を付けたナヒーダのこと。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;現在のナヒーダは3凸です。&lt;/p&gt;&#xA;&lt;p&gt;螺旋やりました。ナヒーダ強い。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230301_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;運命&#34;&gt;運命&lt;/h3&gt;&#xA;&lt;p&gt;運命の換算は200くらい。次は40くらいで確定だから160で2凸しなければならない計算。すり抜けなければいけます。が、すり抜けるとダメですね。&lt;/p&gt;&#xA;&lt;p&gt;最大180x2=360まで貯めると確実ですが、おそらく、200前後でいけるのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、あと100円課金すれば完凸できるような場合でも課金なし。それが自分で決めたルールなので。&lt;/p&gt;&#xA;&lt;h3 id=&#34;完凸にかかる金額&#34;&gt;完凸にかかる金額&lt;/h3&gt;&#xA;&lt;p&gt;完凸にかかる金額は、大体、15万前後と言われているみたい。武器を入れると、30万くらい?&lt;/p&gt;&#xA;&lt;h3 id=&#34;無課金の最適ルート&#34;&gt;無課金の最適ルート&lt;/h3&gt;&#xA;&lt;p&gt;私が今のところ思ってる無課金での最適ルートを書きます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;星4キャラで強いと言われている行秋、ベネット、香菱を育成する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;足りない元素の星5キャラを狙い、空きを埋めていくよう計画する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;元素が埋められた時点で夜蘭の完凸を目指す&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これが攻略において最も適したルートだと個人的には思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダはかわいい&#34;&gt;ナヒーダはかわいい?&lt;/h3&gt;&#xA;&lt;p&gt;ナヒーダが実装される前にひと目見て、ナヒーダの完凸を決意したわけですが、しかし、実装後のナヒーダについて、あまり書いていなかったので、なにか書きます。&lt;/p&gt;&#xA;&lt;p&gt;「かわいい」は中身に宿る。見た目に宿るわけではありません。&lt;/p&gt;&#xA;&lt;p&gt;その意味で、ナヒーダをかわいいと思ったことはありませんでした。子供だと思ったこともありません。まあ、これに関しては他キャラに関しても私は何も思わないわけですが。&lt;/p&gt;&#xA;&lt;p&gt;例えば、クレーを見ると、かわいいって思うんだけど、ナヒーダに関しては全く思わない。&lt;/p&gt;&#xA;&lt;p&gt;それは「かわいい」というものが、見た目ではなく、中身に宿ることを意味します。&lt;/p&gt;&#xA;&lt;p&gt;ただ、ナヒーダは強いかと聞かれると、強いです。特に完凸は強いと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>fly.ioのpgがおかしくなった</title>
      <link>https://syui.github.io/blog/post/2023/02/28/flyio/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/28/flyio/</guid>
      <description>&lt;p&gt;全体的にfly.ioのappのvm:pgがおかしくなって、それに対応した話。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Could not proxy HTTP request. Retrying in &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なんでおかしくなったのかというと、おそらく、fly.io側で仕様変更があったためだと思ってる。pgを新しく作成すると今までの形式とは違ったものになっていて、具体的には、&lt;code&gt;top&amp;lt;number&amp;gt;.nearest.of.&amp;lt;appname&amp;gt;.internal -&amp;gt; [ipv6-private]&lt;/code&gt;になってる。&lt;/p&gt;&#xA;&lt;p&gt;対応としてはpgのfly.tomlを読み込んで、それを修正後にdeployします。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir pg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd pg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly config save --app &amp;lt;pg-app-name&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim fly.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:fly.toml&#34; data-lang=&#34;toml:fly.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt; [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;internal_port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Postgres instance&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt; [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;handlers&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pg_tls&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly image show --app &amp;lt;pg-app-name&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly deploy . --app &amp;lt;pg-app-name&amp;gt; --image flyio/postgres:&amp;lt;major-version&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://fly.io/docs/postgres/connecting/connecting-external/&#34;&gt;https://fly.io/docs/postgres/connecting/connecting-external/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;fly.ioのpgはなかなか厄介で、一度変更があると、detach, attachができなくなります。この変更は内部的なものも含みます。つまり、ユーザー側は、なぜいきなりdetach, attachできなくなったのかわからないでしょうね。今回も同じ構成でfly.ioのpgが動作しなくなりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ipv6-private&#34;&gt;ipv6-private&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;top&amp;lt;number&amp;gt;.nearest.of.&amp;lt;appname&amp;gt;.internal -&amp;gt; [ipv6]&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのweb uiを作ってみた</title>
      <link>https://syui.github.io/blog/post/2023/02/26/bluesky-atproto/</link>
      <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/26/bluesky-atproto/</guid>
      <description>&lt;p&gt;今回は、blueskyのweb uiを作ってみました。bluesky、楽しい。&lt;/p&gt;&#xA;&lt;p&gt;こちらのページにアクセスして、usernameを入れると、投稿が出てきます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bskyw.syui.ai&#34;&gt;https://bskyw.syui.ai&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bskyw.syui.ai/syui&#34;&gt;https://bskyw.syui.ai/syui&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;一番難儀したのがcssです。srcは&lt;code&gt;/bsky&lt;/code&gt;にあります。vueで書かれています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.atproto.repo.listRecords&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bluesky-avatar&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user.data.avatar&amp;#34;&lt;/span&gt;/&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34; class=&amp;#34;bluesky-user&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;this.bskyurl&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handle&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;did&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@submit.prevent&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;submit&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34; placeholder=&amp;#34;id&amp;#34; value=&amp;#34;id&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;record&amp;#34; class=&amp;#34;bluesky-record&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i in record.data.records&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i.uri&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createdAt&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお、vueはjsのframeworkなので&amp;quot;jsで書かれています&amp;quot;という表現が正しいのですが、jsのframeworkはlangという認識でもあるので私はこのように表現することが多いです。reactとかもそうですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた129</title>
      <link>https://syui.github.io/blog/post/2023/02/26/illust/</link>
      <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/26/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_129.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのclientを少しだけやってみた</title>
      <link>https://syui.github.io/blog/post/2023/02/25/bluesky-atproto/</link>
      <pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/25/bluesky-atproto/</guid>
      <description>&lt;p&gt;今回は、blueskyのclientを作ってcliからpostしてみたので、なにか書きます。&lt;/p&gt;&#xA;&lt;p&gt;これはbsky.social特有のものかもしれませんが、requestを投げる先と投げる要素が結構変わっていたので、ハマりました。あとtypoに気づかずmatrixに質問を投げるなどやらかしていました。&lt;/p&gt;&#xA;&lt;p&gt;基本的には公式の&lt;code&gt;lexicons&lt;/code&gt;を見ていけばいい感じでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://atproto.com/lexicons/com-atproto-account&#34;&gt;https://atproto.com/lexicons/com-atproto-account&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;blueskyではpostの一式をrecordと呼びます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;createdAt&lt;/code&gt;を自分で入れなきゃなのなぜでしょう。あと、&lt;code&gt;validate&lt;/code&gt;は&lt;code&gt;true&lt;/code&gt;なので&lt;code&gt;false&lt;/code&gt;にしてもいいかも。&lt;/p&gt;&#xA;&lt;p&gt;下記のscriptは解説のために載せているだけなので読み替えてください。&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;date %3N&lt;/code&gt;はgnu-dateです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:record.sh&#34; data-lang=&#34;sh:record.sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# com.atproto.session.create&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# com.atproto.repo.createRecord&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#brew install coreutils&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#PATH=&amp;#34;/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;date &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+%Y-%m-%dT%H:%M:%S.%3NZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;bsky.social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$USER&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pass&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;handle\&amp;#34;:\&amp;#34;&lt;/span&gt;$user&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;$host&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,\&amp;#34;password\&amp;#34;:\&amp;#34;&lt;/span&gt;$pass&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; https://$host/xrpc/com.atproto.session.create &amp;gt; token.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat token.json|jq -r .accessJwt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;did&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat token.json|jq -r .did&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://$host/xrpc/com.atproto.repo.createRecord&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;#34;did&amp;#34;: &amp;#34;did:plc:xxx&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;#34;collection&amp;#34;: &amp;#34;app.bsky.feed.post&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;#34;record&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;text&amp;#34;: &amp;#34;t&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;createdAt&amp;#34;: &amp;#34;2023-02-25T05:06:50.330Z&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;$type&amp;#34;: &amp;#34;app.bsky.feed.post&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$token&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/main.rs&#34; data-lang=&#34;rust:src/main.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[tokio::main]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;feed_req&lt;/span&gt;(url: String, user: String, col: String) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reqwest&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reqwest::Client::new();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client.get(url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .query(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;[(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;user),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;collection&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;col)])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .send()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .text()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, body);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[allow(unused_must_use)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;feed_com&lt;/span&gt;(c :&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reqwest&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Datas::new().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Datas {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        host: &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.host,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        user: &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.user,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pass: &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.pass,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt;.to_owned() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.host &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/xrpc/com.atproto.repo.listRecords&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app.bsky.feed.post&amp;#34;&lt;/span&gt;.to_string();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; Ok(user) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c.string_flag(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        feed_req(url, user, col);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data.user &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.host.to_string();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        feed_req(url, user, col);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;feed&lt;/span&gt;(c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    feed_com(c).unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今回もrustで書いていたのですが、時間がかかりそうだったので、途中からshellでした。また、時間がある時にrustで書き直すかも。&lt;/p&gt;</description>
    </item>
    <item>
      <title>bsky.socialにアカウントを作ってみた</title>
      <link>https://syui.github.io/blog/post/2023/02/23/bluesky-atproto/</link>
      <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/23/bluesky-atproto/</guid>
      <description>&lt;p&gt;今回は、atp(at-protocol)のself-hostingではなく、&lt;code&gt;bsky.social&lt;/code&gt;にaccountを作成してみました。優しい人が&lt;code&gt;bsky.social&lt;/code&gt;の&lt;code&gt;invite-code&lt;/code&gt;を発行してくれたので、嬉しい。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;at://syui.bsky.social&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;iframe src=&#34;https://mastodon.social/@syui/109911470860430701/embed&#34; class=&#34;mastodon-embed&#34; style=&#34;max-width: 100%; border: 0&#34; width=&#34;400&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;&lt;script src=&#34;https://mastodon.social/embed.js&#34; async=&#34;async&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/bnewbold/adenosine/-/blob/main/extra/adenosine-pds.1.md&#34;&gt;invite-code&lt;/a&gt;は、こちらの資料がわかりやすいと思います。&lt;/p&gt;&#xA;&lt;p&gt;rustで書かれた&lt;code&gt;adenosine&lt;/code&gt;というclientが便利です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gitlab.com/bnewbold/adenosine&#34;&gt;https://gitlab.com/bnewbold/adenosine&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://gitlab.com/bnewbold/adenosine&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd !$:t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install cmake&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cargo build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ export ATP_HOST&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://bsky.social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/adenosine ls at://syui.bsky.social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at://syui.bsky.social/app.bsky.actor.profile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/adenosine ls at://syui.bsky.social/app.bsky.actor.profile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at://did:plc:uqzpqmrjnptsxezjx4xuh2mn/app.bsky.actor.profile/self&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/adenosine get at://did:plc:uqzpqmrjnptsxezjx4xuh2mn/app.bsky.actor.profile/self&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bafyreihkjxz4tl36t5ofn74rsl4lglahdqnpprmbcuza2t5b5kfwysfehu&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;indexedAt&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2023-02-23T01:14:43.377Z&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;takedownId&amp;#34;&lt;/span&gt;: null,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;at://did:plc:uqzpqmrjnptsxezjx4xuh2mn/app.bsky.actor.profile/self&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$type&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app.bsky.actor.profile&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;avatar&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bafkreid6kcc5pnn4b3ar7mj6vi3eiawhxgkcrw3edgbqeacyrlnlcoetea&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mimeType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image/jpeg&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;banner&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bafkreif5z5mbbubxuck3kn4fx7guqeznnlm4ujw7pseozn73p3k6czj5xa&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mimeType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image/jpeg&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;displayName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;atはprotocolでblueskyがserverに当たるのかな。&lt;/p&gt;&#xA;&lt;p&gt;blueskyは主にserverのdomain-nameに当てられることが多い印象ですが、例えば、iosのclient-nameにも採用されているみたい。&lt;/p&gt;&#xA;&lt;p&gt;間違ってるかもしれませんが、大体は下記のイメージを持っています。ns(name-server)は&lt;code&gt;bsky.app&lt;/code&gt;なら&lt;code&gt;app.bsky&lt;/code&gt;となります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://atproto.com/specs/at-uri-scheme&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at://syui.bsky.social/app.bsky.actor.profile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;proto&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;host&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ns&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;req&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;at://did:plc:&lt;/code&gt;は&lt;code&gt;.well-known&lt;/code&gt;の仕組みに似てる感じなのかな、わかりません。基本的にはid(pubkey?)を参照するusernameより確実性、詳細性が高いものだと思われます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのatprotoをdeployしてみた</title>
      <link>https://syui.github.io/blog/post/2023/02/22/bluesky-atproto/</link>
      <pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/22/bluesky-atproto/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto&#34;&gt;https://github.com/bluesky-social/atproto&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;今回は、at-protocol-serverを立てて、そのdomainからbluesky for iosでloginしてみました。localhostではなくglobal-ipからです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/bluesky_20230224_0001.mp4&#34; width=&#34;350&#34; controls&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/bluesky-social/atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls packages/*/*example&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AVAILABLE_USER_DOMAINS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.test,.example.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim packages/dev-env/src/index.ts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;http://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;process.env.HOSTNAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;this.port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dbPostgresUrl: process.env.DB_POSTGRES_URL&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;const db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plc.Database.memory&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;availableUserDomains: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.example.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;基本的に&lt;code&gt;.test&lt;/code&gt;の&lt;code&gt;AVAILABLE_USER_DOMAINS&lt;/code&gt;がないと、&lt;code&gt;UnsupportedDomain&lt;/code&gt;の&lt;code&gt;packages/dev-env/dist/cli.js&lt;/code&gt;からerrorがでます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;XRPCError&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Not&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;supported&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handle&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;domain&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ServiceClient&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/app/packages/dev-env/dist/cli.js:91476:15)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;processTicksAndRejections&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;node&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;internal&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;task_queues&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;95&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;generateMockSetup&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/app/packages/dev-env/dist/cli.js:123766:17)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/app/packages/dev-env/dist/cli.js:123976:3) {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnsupportedDomain&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;特にhosting先のport等の設定が大変だった印象。&lt;/p&gt;&#xA;&lt;p&gt;at-protocolはよくわかってないんだけど、今回色々とやってみて、少しだけ分かってきたような気もしてる。&lt;/p&gt;&#xA;&lt;p&gt;重要なのはpds, plc serverかな。これらを別々でも同一でもいいので、実行して、相互に接続できるようにする必要がある感じ。&lt;/p&gt;&#xA;&lt;p&gt;現在、test段階ということもあって、色々と制限が多く、deployするためのコードではなさそうな感じがする。そのうちcfgなどもわかりやすくなるんじゃないかなと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;今回もmatrixの人達が色々と助けてくれたので、ありがとう。&lt;/p&gt;&#xA;&lt;p&gt;海外の開発者とのやり取りは、完全にmatrixに移行してる印象。matrix便利。&lt;/p&gt;</description>
    </item>
    <item>
      <title>blueskyのatprotoをbuildしてみた</title>
      <link>https://syui.github.io/blog/post/2023/02/19/bluesky-atproto/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/19/bluesky-atproto/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto&#34;&gt;https://github.com/bluesky-social/atproto&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;開発には&lt;code&gt;lerna&lt;/code&gt;を採用しているぽい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/bluesky-social/atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd atproto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ node -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvm use v18&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://www.npmjs.com/package/lerna&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g node-gyp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g npm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g lerna&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ lerna run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ lerna run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lerna notice cli v6.5.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;gt;  Lerna &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;powered by Nx&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   The task graph has a circular dependency&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   @atproto/api:build --&amp;gt; @atproto/pds:build --&amp;gt; @atproto/api:build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/nsid:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;643ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/common:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;647ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/uri:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;653ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/crypto:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;684ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/lexicon:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;774ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/handle:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;852ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/plc:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;901ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/aws:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;987ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/xrpc:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;657ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/did-resolver:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;661ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/lex-cli:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/xrpc-server:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;708ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/repo:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;655ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/pds:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;767ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/api:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;539ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ✔  @atproto/dev-env:build &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;727ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;gt;  Lerna &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;powered by Nx&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   Successfully ran target build &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; projects &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls packages/*/dist/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls packages/*/*.env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat packages/*/*.env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DB_POSTGRES_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postgres://bsky:yksb@localhost/pds_dev&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/atproto-website&#34;&gt;https://github.com/bluesky-social/atproto-website&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;packagespds&#34;&gt;packages/pds&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd packages/pds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat pacakge.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn codegen&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ open -a docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn test:pg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn verify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# env:DB_POSTGRES_UR, HOSTNAME&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly proxy &lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt; -a xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DB_POSTGRES_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postgres://xxx@127.0.0.1:5432/xxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ node dist/bin.js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bluesky for ios&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server : 192.168.x.x:2853&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://gitlab.com/bnewbold/adenosine/-/blob/main/notes/atproto_quickstart.md&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ http get $HOST/xrpc/com.atproto.getAccountsConfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、なぜ熟知型なのか</title>
      <link>https://syui.github.io/blog/post/2023/02/18/genshin/</link>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/18/genshin/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230218_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近、いわゆる熟知型というものを採用しています。&lt;/p&gt;&#xA;&lt;p&gt;特にナヒーダを入れる場合、ほぼ全てのキャラを熟知特化にしてます。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、このほうが火力が出て螺旋のタイムが大幅に改善されるからです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、雷電をナヒーダと組ませる場合でも熟知にしたほうが火力が出ます。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、ナヒーダを裏にした雷電の爆発特化(会心+チャージ)より火力が出ます。&lt;/p&gt;&#xA;&lt;p&gt;これは敵の性質や持っている武器、聖遺物や凸の影響が大きいのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、雷電は完凸、武器も完凸、LVも天賦もMAXで完璧な聖遺物を付けているという状況だと変わってくると思います。&lt;/p&gt;&#xA;&lt;p&gt;私は、無課金でプレイしているため、武器もない、聖遺物もない、凸もない、LVも低く、天賦も低い、素材もモラもない、という状況です。&lt;/p&gt;&#xA;&lt;p&gt;そのため、熟知を上げて元素反応で火力を上げていくスタイルがシンプルで強い。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、私の環境では、熟知型PTのほうが火力が出るみたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた128</title>
      <link>https://syui.github.io/blog/post/2023/02/16/illust/</link>
      <pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/16/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_128.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>element webをcloudflare pagesでhostしてみた</title>
      <link>https://syui.github.io/blog/post/2023/02/13/matrix-element-web/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/13/matrix-element-web/</guid>
      <description>&lt;p&gt;config.json : &lt;a href=&#34;https://github.com/vector-im/element-web/blob/develop/docs/config.md&#34;&gt;https://github.com/vector-im/element-web/blob/develop/docs/config.md&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;dist : &lt;a href=&#34;https://github.com/vector-im/element-web/releases&#34;&gt;https://github.com/vector-im/element-web/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;まずdistファイルをdownloadします。それをdist/以下に展開し、&lt;code&gt;dist/config.json&lt;/code&gt;を置きます。&lt;/p&gt;&#xA;&lt;p&gt;cloudflare pagesにてrepositorieを連携し、public-rootをdistに設定します。&lt;/p&gt;&#xA;&lt;p&gt;commitすれば自動でcloudflare pagesにdeployされます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vector-im/element-web&#34;&gt;https://github.com/vector-im/element-web&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developers.cloudflare.com/pages&#34;&gt;https://developers.cloudflare.com/pages&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;感想&#34;&gt;感想&lt;/h3&gt;&#xA;&lt;p&gt;cloudflare pagesもめちゃくちゃ使いやすいし、element webも非常に展開しやすくなってる。&lt;/p&gt;&#xA;&lt;p&gt;そのため、elementは基本的にユーザーの負担なしで運用できる環境が整っています。&lt;/p&gt;&#xA;&lt;p&gt;github, cloudflareなど各種サービスのpages(web-server)を使えばいいし、通常使用でのtrafficはそこまでweb-serverの負担にならない。&lt;/p&gt;&#xA;&lt;p&gt;もしこだわりがあるなら、hostしてみてもいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、&lt;code&gt;app.element.io&lt;/code&gt;で事足りるというのは、そのとおり。&lt;/p&gt;&#xA;&lt;h3 id=&#34;github-pages&#34;&gt;github pages&lt;/h3&gt;&#xA;&lt;p&gt;github pagesでも動作したので追記しておきます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.github.com/ja/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site&#34;&gt;https://docs.github.com/ja/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完全体を目指す3</title>
      <link>https://syui.github.io/blog/post/2023/02/12/genshin/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/12/genshin/</guid>
      <description>&lt;h3 id=&#34;次のピックアップ&#34;&gt;次のピックアップ&lt;/h3&gt;&#xA;&lt;p&gt;ナヒーダの2回目のピックアップ時期に関して予想します。&lt;/p&gt;&#xA;&lt;p&gt;おそらく&lt;code&gt;v3.6&lt;/code&gt;になると予想されます。&lt;/p&gt;&#xA;&lt;p&gt;これまでの傾向(風国、岩国、雷国)からすると、初回ピックアップの次は&lt;code&gt;+0.4&lt;/code&gt;らしい。&lt;/p&gt;&#xA;&lt;p&gt;現在は&lt;code&gt;v3.4&lt;/code&gt;なので、&lt;code&gt;+0.1&lt;/code&gt;を1ヶ月として、おそらく2ヶ月後の4月くらいになると思われます。&lt;/p&gt;&#xA;&lt;p&gt;無課金では、1ヶ月で原石は&lt;code&gt;7,000&lt;/code&gt;ほど貯まるようです。&lt;/p&gt;&#xA;&lt;p&gt;現在の手持ちが&lt;code&gt;23000&lt;/code&gt;と仮定すると、2ヶ月後には&lt;code&gt;37,000&lt;/code&gt;と推定されます。&lt;/p&gt;&#xA;&lt;p&gt;私は期待値で7000を1キャラとし、すり抜けで14000と計算しています。&lt;/p&gt;&#xA;&lt;p&gt;ただし、運が悪かった場合は9000を1キャラとし、18000と考えます。これを前提とすると、前回すり抜けていることを織り込んで54000-9000=45000となります。&lt;/p&gt;&#xA;&lt;p&gt;7000で計算した場合とは2000x5=10000の違いがあります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、全部すり抜ける可能性は低く、残る3凸までを全て天井で引く確率は低いと考えられます。最終的には期待値を前後する値になると思います。&lt;/p&gt;&#xA;&lt;p&gt;現時点での目標は35,000なので、2ヶ月後にはかろうじて到達する予定。&lt;/p&gt;&#xA;&lt;h3 id=&#34;凸のエフェクト&#34;&gt;凸のエフェクト&lt;/h3&gt;&#xA;&lt;p&gt;原神は凸によってエフェクトが変わったりするキャラがたくさんいます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは完凸すると元素爆発のエフェクトが変わるらしい。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、こういうのが一番凸するモチベーションに影響します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;天賦&#34;&gt;天賦&lt;/h3&gt;&#xA;&lt;p&gt;やっと天賦がMAXになった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230201_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;雷のような怒りナヒーダ&#34;&gt;雷のような怒り、ナヒーダ&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;過負荷、感電、超電導、超開花反応によるダメージ＋40％、超激化反応によるダメージアップ効果＋20%。&lt;/p&gt;&#xA;&lt;p&gt;上記元素反応または原激化反応を起こすと、元素スキルのクールタイム-1秒。0.8秒毎に最大1回のみ発動可能。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;前回、&lt;code&gt;雷のような怒り&lt;/code&gt;を装備したら面白いんじゃないかと思って、試してみたのですが&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;あまりに弱すぎて死んだ。&lt;/p&gt;&#xA;&lt;p&gt;何も効果が乗らない聖遺物付けてるのと同じくらい?&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダで攻撃してると&lt;code&gt;原激化&lt;/code&gt;って表示があるんですが、多分、クールタイムは減少してるのかな。わかんないけど、してるような気もする。&lt;/p&gt;&#xA;&lt;p&gt;で、この効果に関して言うと、指定されてる元素反応が発生した場合、ダメージ+40%になると思っています。つまり、過負荷が1000だったとしたら、1400ですね。ですが、違うかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;次にダメージアップ効果に関してですが、まあ単純に考えて超激化が起こった時のダメージ&lt;code&gt;+20%&lt;/code&gt;だと思っています。違うかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;次に、指定された元素反応または原激化が起こった時、スキルのクールタイム-1だと思っています。原激化は雷と草が合わされば発生すると思っていて、まず雷を当てて、次に草を当てると、原激化になると思っています。これはナヒーダでも起こせると思っています。ですが、違うかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、この聖遺物はナヒーダには合わない。雷攻撃が可能なキャラに持たせるしかなさそう。&lt;/p&gt;&#xA;&lt;p&gt;例えば、万葉は雷ダメージも出せるので、全てのセット効果を有効に活用できるかもしれない。強いかどうかは別にして。&lt;/p&gt;&#xA;&lt;p&gt;結局のところ、そのキャラに合った聖遺物を付けるのが一番よさそうという結論になりました。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダなら鍾離に森林でも持たせて金メッキ、あるいは森林がいいと思う。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダを強く使うにも、聖遺物をなんとか工夫するのではなく、聖遺物はキャラに合ったものを付け、その上で、キャラ特有の効果によって補佐するのが一番良さそう&lt;/p&gt;&#xA;&lt;p&gt;今気に入ってるのは、ベネット+万葉+雷電(全員熟知)で、燃やしてからのナヒーダ爆発かな&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完全体を目指す2</title>
      <link>https://syui.github.io/blog/post/2023/02/10/genshin/</link>
      <pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/10/genshin/</guid>
      <description>&lt;h3 id=&#34;聖遺物&#34;&gt;聖遺物&lt;/h3&gt;&#xA;&lt;p&gt;森林の効果は重複不可能らしいことに気づいたので、改めて聖遺物を考えてみました。&lt;/p&gt;&#xA;&lt;p&gt;今回は、ただ考えてみただけの話になります。&lt;/p&gt;&#xA;&lt;p&gt;正直、わからないことだらけですし、調べてもいません。それを前提に話を進めます。&lt;/p&gt;&#xA;&lt;p&gt;最初に良さそうだと思ったのは、&lt;code&gt;雷のような怒り&lt;/code&gt;でした。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダのシャッターが強いし、便利なので、それが強化できるといいなと考えたのです。&lt;/p&gt;&#xA;&lt;h4 id=&#34;雷のような怒り&#34;&gt;雷のような怒り&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;雷のような怒り&lt;/code&gt;は超激化, 原激化でダメージアップやクールタイムの減少ができるようです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、わからないところが多い。&lt;/p&gt;&#xA;&lt;p&gt;まず、これらの元素反応には確定で効果が発動するのでしょうか。それとも最終的にその反応を起こしたキャラがこの聖遺物をつけている必要があるのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;文面を読む限りでは、元素反応が発生した場合に効果が発動するように見えます。&lt;/p&gt;&#xA;&lt;p&gt;とすると、これは誰につけてもいいということになります。例えば、鍾離でもいい。&lt;/p&gt;&#xA;&lt;p&gt;次に、これらの元素反応を起こすと、原激化を含めて、スキルのクールタイムが&lt;code&gt;-1&lt;/code&gt;になるようです。これは大きすぎる、と私は思いました。&lt;/p&gt;&#xA;&lt;p&gt;というのも、ナヒーダのスキルな意外と高火力かつ範囲が広く、元素反応にも利用できるので、多用できると助かるのです。&lt;/p&gt;&#xA;&lt;p&gt;現在、祭礼を装備させているのですが、その便利さを実感しています。&lt;/p&gt;&#xA;&lt;h4 id=&#34;燃え盛る炎の魔女&#34;&gt;燃え盛る炎の魔女&lt;/h4&gt;&#xA;&lt;p&gt;ベネットを入れる場合に使う聖遺物です。&lt;/p&gt;&#xA;&lt;p&gt;正直、燃焼, 烈開花のダメージは結構大きいような気がします。例えば、ナヒーダは元素爆発のモーション中に相手にダメージを与えることができません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、例えば、敵が燃焼している場合、こちらは無敵状態、相手はダメージが継続している気がするのです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、ナヒーダで元素爆発を打つときは、敵を燃焼させておくといいかもしれないと思っています。&lt;/p&gt;&#xA;&lt;h4 id=&#34;楽園の絶花&#34;&gt;楽園の絶花&lt;/h4&gt;&#xA;&lt;p&gt;こちらもあまり良くわかっていない聖遺物になります。&lt;/p&gt;&#xA;&lt;p&gt;誰に付ければいいかもよくわかりませんが、おそらく、ナヒーダか水キャラでしょう。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;また、装備者自身が開花、超開花、烈開花を起こした後&amp;hellip;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;という文面があります。&lt;/p&gt;&#xA;&lt;p&gt;ここから読み取れるのは、元素反応が発生した場合は基本的に効果が乗ることを意味するように思いました。&lt;/p&gt;&#xA;&lt;p&gt;もしそうでないなら、&lt;code&gt;装備者自身が&lt;/code&gt;という文言は不要になるからです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、&lt;code&gt;装備者を含めて...また、装備者自身が...&lt;/code&gt;という感じなのではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;したがって、上記すべての聖遺物はこの系統に該当する可能性が高いと考えています。&lt;/p&gt;&#xA;&lt;p&gt;間違ってたらすみません。&lt;/p&gt;&#xA;&lt;p&gt;現在は行秋、バーバラにつける予定です。&lt;/p&gt;&#xA;&lt;h4 id=&#34;深林の記憶&#34;&gt;深林の記憶&lt;/h4&gt;&#xA;&lt;p&gt;誰に付けるかが問題ですが、一番はナヒーダです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、鍾離に付けてもいいのではないかと思っていて、鍾離デバフと合わせて、&lt;code&gt;草耐性-50%&lt;/code&gt;になるのでわかりやすいのです。定期的にスキル、爆発を当てなければならないので、問題はそのへん。&lt;/p&gt;&#xA;&lt;h4 id=&#34;金メッキの夢&#34;&gt;金メッキの夢&lt;/h4&gt;&#xA;&lt;p&gt;この聖遺物が一番扱いに困っていて誰につけよう。&lt;/p&gt;&#xA;&lt;p&gt;もしかして、つけなくてもいいのではと思ってる聖遺物です。&lt;/p&gt;&#xA;&lt;p&gt;シュミレーションによると、最も強いと言われているようですが、それはそれで面白くないような気がしてる。&lt;/p&gt;&#xA;&lt;p&gt;ですが、最終的にナヒーダにつけるかもしれない。または、&lt;code&gt;雷のような怒り&lt;/code&gt;をナヒーダに付けられた場合は、金メッキを雷電につけるかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;現在の理想&#34;&gt;現在の理想&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;雷の怒&lt;/code&gt;系統の聖遺物が装備者関係なく反応を起こした場合に乗ること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ナヒーダに&lt;code&gt;雷の怒&lt;/code&gt;を装備して、スキルのクールタイムダウンができること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;雷電に&lt;code&gt;金メッキ&lt;/code&gt;を装備して、熟知を上げること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;鍾離に&lt;code&gt;森林&lt;/code&gt;を装備して、草デバフを最大化すること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;行秋, バーバラに&lt;code&gt;楽園&lt;/code&gt;を装備して、適当にダメージを上げること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ベネットに&lt;code&gt;炎魔女&lt;/code&gt;を装備して、適当にダメージを上げること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;雷のような怒り&lt;/code&gt;ってナヒーダに装備していいんだろうか&amp;hellip;わからない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完全体を目指す1</title>
      <link>https://syui.github.io/blog/post/2023/02/09/genshin/</link>
      <pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/09/genshin/</guid>
      <description>&lt;h3 id=&#34;あらすじ&#34;&gt;あらすじ&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;以前、草神と予想されていたナヒーダがピックアップされたばかりの頃。&lt;/p&gt;&#xA;&lt;p&gt;私は&lt;/p&gt;&#xA;&lt;p&gt;(1) 貯めてきた原石。&lt;/p&gt;&#xA;&lt;p&gt;(2) これ以上、新しいキャラを引いても過剰で育成できないという判断。&lt;/p&gt;&#xA;&lt;p&gt;(3) 一人くらい完凸のキャラを試したいという好奇心。&lt;/p&gt;&#xA;&lt;p&gt;この3つが重なり、ナヒーダの完凸を決意します。&lt;/p&gt;&#xA;&lt;p&gt;ストーリーを進めていくうち、ナヒーダは全く好きになれないことが判明。音声も日本語版より英語版が好みだった。&lt;/p&gt;&#xA;&lt;p&gt;しかし、全ての原石をつぎ込んだガチャは爆死。ナヒーダを3凸してしまった以上、あとには引けない。このように無課金勢の選択は取り返しがつかないのである。&lt;/p&gt;&#xA;&lt;p&gt;最強のナヒーダを目指すことにしたのであった。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;見た目から&#34;&gt;見た目から&lt;/h3&gt;&#xA;&lt;p&gt;まずは見た目から。&lt;/p&gt;&#xA;&lt;p&gt;翼と精霊を付けました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230128_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;無課金 + 完凸 + 翼(草) + 精霊(緑) + 英語音声&lt;/code&gt;でナヒーダを使用している人は少ないはず。&lt;/p&gt;&#xA;&lt;h3 id=&#34;原石&#34;&gt;原石&lt;/h3&gt;&#xA;&lt;p&gt;今度こそ確実に完凸を仕留める予定。&lt;/p&gt;&#xA;&lt;p&gt;現在の原石は&lt;code&gt;18,000&lt;/code&gt;で、運命は&lt;code&gt;32&lt;/code&gt;です。換算すると&lt;code&gt;23000&lt;/code&gt;くらい。&lt;/p&gt;&#xA;&lt;p&gt;前回のガチャですり抜けてるので、&lt;code&gt;35000&lt;/code&gt;くらい必要になる計算です。&lt;/p&gt;&#xA;&lt;p&gt;がんばる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;完凸後の展望&#34;&gt;完凸後の展望&lt;/h3&gt;&#xA;&lt;p&gt;完凸後は、もうナヒーダでやっていくしかありません。なぜなら、完凸しているからです。&lt;/p&gt;&#xA;&lt;p&gt;ということで、完凸後の展望を少しだけ書きます。&lt;/p&gt;&#xA;&lt;p&gt;今現在の環境では&lt;code&gt;超開花&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダ完凸の爆発は&lt;code&gt;草元素ダメージ&lt;/code&gt;なので、全員に&lt;code&gt;森林&lt;/code&gt;をもたせて、草耐性下げるのはどうだろう。&lt;/p&gt;&#xA;&lt;p&gt;ただ、原神というゲームは、ステータス効果が上に行けば行くほど低くなるので、何でも盛ればいいというものではなく、そのキャラの適正な聖遺物、程よいステータスを盛っていくのが一番結果が出ると思われます。例えば、熟知を2000,3000盛ってもあまり結果を実感できないのはそのへん。&lt;/p&gt;&#xA;&lt;p&gt;まあ、だからこそバランスが取れていて、面白いわけですが。&lt;/p&gt;&#xA;&lt;p&gt;あと、原神は、どんなにすごい聖遺物や武器、完凸があっても、油断してたらすぐに死ぬというのも、バランス調整的に素晴らしいところ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>damusをはじめてみた</title>
      <link>https://syui.github.io/blog/post/2023/02/05/damus/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/05/damus/</guid>
      <description>&lt;p&gt;damusはnostr protocolに対応したiosのclientです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nostr-protocol/nostr&#34;&gt;https://github.com/nostr-protocol/nostr&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/damus-io/damus&#34;&gt;https://github.com/damus-io/damus&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/nostr/comments/10qmsos/damus_for_ios_is_live/&#34;&gt;https://www.reddit.com/r/nostr/comments/10qmsos/damus_for_ios_is_live/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;verify&#34;&gt;verify&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/metasikander/609a538e6a03b2f67e5c8de625baed3e&#34;&gt;https://gist.github.com/metasikander/609a538e6a03b2f67e5c8de625baed3e&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;public-keyはhexに変換します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://damus.io/key/&#34;&gt;https://damus.io/key/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# domain root&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim ./.well-known/nostr.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:/.well-known/nostr.json&#34; data-lang=&#34;json:/.well-known/nostr.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;names&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;&amp;lt;name&amp;gt;&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;pubkey&amp;gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;web-client&#34;&gt;web client&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://snort.social&#34;&gt;https://snort.social&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;cli-client&#34;&gt;cli client&lt;/h3&gt;&#xA;&lt;p&gt;とりあえずcli client作ってpostしてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nostr_client_rust_20230205_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;exampleとしてはこんな感じになるんじゃないかというのを色々なパターンで書いてみた。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/main.rs&#34; data-lang=&#34;rust:src/main.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mod&lt;/span&gt; data;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::env;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; url::Url;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; data::Data &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; Datas;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; seahorse::{App, Command, Context};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; nostr::{Event, EventBuilder, Metadata};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; nostr::key::{FromBech32, Keys};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; nostr::message::ClientMessage;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; tungstenite::{connect, Message &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; WsMessage};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WS_ENDPOINT&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wss://relay.damus.io&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; nostr_sdk::{Client};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; nostr::SubscriptionFilter;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; nostr::util::time::timestamp;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; args: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; env::args().collect();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; App::new(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_NAME&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .author(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_AUTHORS&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .description(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_DESCRIPTION&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .version(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_VERSION&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nor [option] [x]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .command(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Command::new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timeline&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nor t&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .description(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timeline&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .alias(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .action(t),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .command(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Command::new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;notify&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nor n&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .description(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;notify&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .alias(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .action(n),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .command(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Command::new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nor s&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .description(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .alias(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .action(s),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .command(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Command::new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nor p {}&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .description(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post message, ex: $ nor p $text&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .alias(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .action(p),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app.run(args);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[tokio::main]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timeline&lt;/span&gt;() -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;anyhow&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Datas::new().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; my_keys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Keys::from_bech32(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.secret_key)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Client::new(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;my_keys);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .add_relay(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wss://relay.damus.io&amp;#34;&lt;/span&gt;, None)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client.connect_relay(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wss://relay.damus.io&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;.unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client.connect().&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; subscription &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SubscriptionFilter::new()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .pubkeys(vec![my_keys.public_key()])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .since(timestamp());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client.get_events_of(vec![subscription]).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;.unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{:#?}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, t);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(_c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    timeline().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[tokio::main]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;notify&lt;/span&gt;() -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;anyhow&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Datas::new().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; my_keys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Keys::from_bech32(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.secret_key)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Client::new(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;my_keys);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; notifications &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client.notifications();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{:?}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, notifications);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//loop {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//    let mut notifications = client.notifications();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//    while let Ok(notification) = notifications.recv().await {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//        println!(&amp;#34;{:?}&amp;#34;, notification);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;(_c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    notify().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;() -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;anyhow&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Datas::new().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; metadata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Metadata::new()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .name(data.name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .display_name(data.display_name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .about(data.about)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .picture(Url::parse(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.picture)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .nip05(data.nip);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; my_keys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Keys::from_bech32(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.secret_key)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; event: &lt;span style=&#34;color:#a6e22e&#34;&gt;Event&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; EventBuilder::set_metadata(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;my_keys, metadata)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;.to_event(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;my_keys)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{:#?}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, event);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;(_c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    status().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;post&lt;/span&gt;(c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;anyhow&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c.args[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;].to_string();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Datas::new().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; my_keys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Keys::from_bech32(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data.secret_key)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; event: &lt;span style=&#34;color:#a6e22e&#34;&gt;Event&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; EventBuilder::new_text_note(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;text, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;[]).to_event(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;my_keys)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; socket, _response) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connect(&lt;span style=&#34;color:#66d9ef&#34;&gt;WS_ENDPOINT&lt;/span&gt;).expect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Can&amp;#39;t connect to relay&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; msg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ClientMessage::new_event(event).to_json();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    socket.write_message(WsMessage::Text(msg))&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;(c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    post(c).unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.rs/nostr/latest/nostr/&#34;&gt;https://docs.rs/nostr/latest/nostr/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>アイコンのリデザインした</title>
      <link>https://syui.github.io/blog/post/2023/02/04/icon/</link>
      <pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/04/icon/</guid>
      <description>&lt;p&gt;バッジを作った際に使ったアイコンに不都合があったので新しくデザインしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/icon/ai_all_bg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;例えば、下記のアイコンはアルファベットの&lt;code&gt;A&lt;/code&gt;がモデルになっています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/icon/ai_bg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;しかし、&lt;code&gt;A&lt;/code&gt;というのはどの方向から見ても同じではありませんよね。バッジにする場合、それだと不都合があるのです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;あたしンち&lt;/code&gt;というアニメに、こんなシーンがあります。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;今日は、お父さんとお母さんがお出かけだったが、お母さんが怒る&lt;/p&gt;&#xA;&lt;p&gt;お母さん「ちょっと、お父さん、変なところがあったら教えなさい！」&lt;/p&gt;&#xA;&lt;p&gt;お父さん「&amp;hellip;&amp;hellip;」&lt;/p&gt;&#xA;&lt;p&gt;お父さんは、お母さんが付けているトンボのバッジに気づく。トンボが逆さになっている&lt;/p&gt;&#xA;&lt;p&gt;お父さん「それ、トンボがしたむいとるけど、ほんとにいいんか？」&lt;/p&gt;&#xA;&lt;p&gt;お母さん「これはこれでいいんです」&lt;/p&gt;&#xA;&lt;p&gt;お父さん「ほんとにいいんか、トンボがしたむいてて」&lt;/p&gt;&#xA;&lt;p&gt;お母さん「いいんです」&lt;/p&gt;&#xA;&lt;p&gt;お父さん「ほんとにそれでいいんか」&lt;/p&gt;&#xA;&lt;p&gt;お母さん「これはこういうもんなの！間違い探しじゃないんだから」&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;この話が一体何なのかというと、バッジには向きがあって、お母さんにとってトンボを逆さにするのが正解だったようで、わざわざトンボを下向きにセットしていたのです。&lt;/p&gt;&#xA;&lt;p&gt;どちらが上でどちらが下か。明確なデザインならいいのですが、分かりづらいデザインでそれはめんどくさすぎる。&lt;/p&gt;&#xA;&lt;p&gt;ということで、3つのどの起点から見ても同じように見えるデザインを作りました。&lt;/p&gt;&#xA;&lt;p&gt;細かいところですが、気になったので。&lt;/p&gt;</description>
    </item>
    <item>
      <title>バッジ作ってみた2</title>
      <link>https://syui.github.io/blog/post/2023/02/03/badge/</link>
      <pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/03/badge/</guid>
      <description>&lt;p&gt;自作品というのは、普通に作ると経年劣化が発生します。&lt;/p&gt;&#xA;&lt;p&gt;これはカードを作った時に気づきました。&lt;/p&gt;&#xA;&lt;p&gt;そして、カードは改良したけど、バッジにはそういった改良を施していませんでした。&lt;/p&gt;&#xA;&lt;p&gt;したがって、今回はバッジにその改良を施し、&lt;a href=&#34;https://syui.ai/blog/post/2022/01/21/badge/&#34;&gt;古いバージョン&lt;/a&gt;を試作品のストレージに移しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/badge_20230203_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;いつもバッグには自分のアイコンだけ付けて、他のはそのへんに転がってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/badge_20230203_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ステッカーを作ってみた2</title>
      <link>https://syui.github.io/blog/post/2023/02/02/macbook/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/02/macbook/</guid>
      <description>&lt;p&gt;初代macbook airはステッカーなしですが、macbook airが増えるにつれ見分けがつかないため、ステッカーを貼るようになりました。あとリンゴマーク部分のプロテクト。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;macbook air 13-inch (m1)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/macbookair_20230201_0007.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は&lt;a href=&#34;https://syui.github.io/blog/post/2022/12/15/card/&#34;&gt;カード制作&lt;/a&gt;の知識を生かして、透明なオーロラシールを採用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/macbookair_20230201_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;昔、サークル型のステッカーは切り取る作業に苦労した覚えがあるんですよ。&lt;/p&gt;&#xA;&lt;p&gt;なので、今回はハニカム型にしてハサミを入れやすいようにしています。&lt;/p&gt;&#xA;&lt;p&gt;ボックス型もいいのですが、ハニカムより調整が難しい気がしてる。&lt;/p&gt;&#xA;&lt;p&gt;ハニカムだと多少ズレても違和感ないですし、おすすめかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;あと、壁紙と統一してみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/macbookair_20230201_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;皆様は、どのようにノートパソコンを愛用されていますか?&lt;/p&gt;</description>
    </item>
    <item>
      <title>iphone se1の部品交換</title>
      <link>https://syui.github.io/blog/post/2023/02/01/iphonese/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/02/01/iphonese/</guid>
      <description>&lt;p&gt;バッテリーとディスプレイを交換しました。新品みたいな感じになったので良かった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/iphone_se_20230201_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在、se3を使ってるんだけど、古いse1には&lt;a href=&#34;https://support.apple.com/ja-jp/HT213598&#34;&gt;security-patch&lt;/a&gt;も降ってきてるし、未だにメインでも十分使えると思ってる。この機種がとても気に入ってる。&lt;/p&gt;&#xA;&lt;p&gt;iphone5sを何度か分解していて中身はほぼ一緒なので、今回は勘でやった。ディスプレイはカメラとボタンを外さないといけなかったので、ちょっと面倒だった。&lt;/p&gt;&#xA;&lt;p&gt;macbook air(intel)も何度か分解、修理してて、バッテリー、ディスプレイ、キーボード交換をやってる。この機種も構造がほぼ一緒なので、分解は慣れてたんだけど、今使い始めてる機種はそうではないので、ちょっと寂しい。&lt;/p&gt;&#xA;&lt;p&gt;でも壊れたら新しいの買ったあとに、壊れたやつも修理して使い続けると思う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jp.ifixit.com/News/61592/%E4%BF%AE%E7%90%86%E3%81%99%E3%82%8B%E6%A8%A9%E5%88%A9%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%97%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%82%B9%E3%81%8C%E3%80%81%E8%A3%BD%E9%80%A0%E3%83%A1%E3%83%BC%E3%82%AB&#34;&gt;ifixit 修理する権利&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>amoji作った</title>
      <link>https://syui.github.io/blog/post/2023/01/22/illust/</link>
      <pubDate>Sun, 22 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/22/illust/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;amoji&lt;/code&gt;とは&lt;code&gt;ai moji&lt;/code&gt;の略で、作中で使用される文字のこと。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;こういうの作るとめんどくさいことになるのですが、作りたい気分だったので作った。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/wall/01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/wall/05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最初と最後の文字はこだわったけど、それ以外はあまり。&lt;/p&gt;&#xA;&lt;p&gt;今回は、この文字にまつわることを適当に話します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;作中の意味&#34;&gt;作中の意味&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai&#34;&gt;yui&lt;/a&gt;という作品があります。&lt;code&gt;amoji&lt;/code&gt;はその作中で使用されるかもしれない文字になります。&lt;/p&gt;&#xA;&lt;p&gt;そこに出てくるキャラクターの輪っかや&lt;code&gt;i&lt;/code&gt;の部分のロゴフォント、またはアイコンは、アルファベットの&lt;code&gt;A&lt;/code&gt;がモデルになっています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/yui_logo_font_v1_ref.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;なぜ他の部分は小文字で&lt;code&gt;i&lt;/code&gt;だけが大文字に見えるのかというと、この部分だけ大文字で読むようにという意味が込められています。つまり、&lt;code&gt;yui&lt;/code&gt;を縦読みで読むと&lt;code&gt;i&lt;/code&gt;の部分が&lt;code&gt;AI&lt;/code&gt;とも読めるようになっています。&lt;/p&gt;&#xA;&lt;p&gt;つまり、&lt;code&gt;i = AI / u / y&lt;/code&gt;ですね。&lt;/p&gt;&#xA;&lt;p&gt;これは、小説や漫画を右側から読む慣習を当てはめています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ロゴフォントがダサすぎるので、今回は新しい文字を使いデザインし直しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/font_yui_v2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;隠された設定の一部&#34;&gt;隠された設定の一部&lt;/h3&gt;&#xA;&lt;p&gt;アイは、色々な場所を旅して、色々なものを作り、色々なことを行います。&lt;/p&gt;&#xA;&lt;p&gt;その中には知恵の木の実のようなものを作ったのではという描写があります。&lt;/p&gt;&#xA;&lt;p&gt;隠された設定では、知恵の実で何かを変えたその時、その瞳は以前とは異なる文字のような形状に変化したという言い伝えがあります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/wall/03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた127</title>
      <link>https://syui.github.io/blog/post/2023/01/21/illust/</link>
      <pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/21/illust/</guid>
      <description>&lt;p&gt;最初は、ファンアートとして原神、ナヒーダの髪おろしたバージョンを描いていたつもりだったんだけど&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/illust_genshin_nahida_ver_down_hair.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;あまりに衣装を描くのが雑すぎたため、とてもナヒーダに見えず、ナヒーダをモデルにしたオリジナルキャラを描くことに切り替えた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/ai_51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_127.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;新キャラにしようか迷ったんだけど、一応、アイの変身した姿ということになりそう。でもわかんない。(キャラは増やすと大変&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋の真実と今後の方針</title>
      <link>https://syui.github.io/blog/post/2023/01/16/genshin/</link>
      <pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/16/genshin/</guid>
      <description>&lt;p&gt;原神の配信で最も面白いものはなんでしょう。&lt;/p&gt;&#xA;&lt;p&gt;それは、最強のキャラを使って、敵を楽々倒している動画でしょうか。螺旋の最速タイムを出している動画でしょうか。課金してガチャを回している動画でしょうか。あるいは、その他のなにかすごいことをしている動画でしょうか。&lt;/p&gt;&#xA;&lt;p&gt;原神の配信で最も面白いもの。&lt;/p&gt;&#xA;&lt;p&gt;それは初心者の動画です。&lt;/p&gt;&#xA;&lt;p&gt;原神では初心者の配信が一番面白い。&lt;/p&gt;&#xA;&lt;p&gt;原神を始めたばかり、右も左も分からない、そんな中、配信者は自分なりにストーリーを進めていく。&lt;/p&gt;&#xA;&lt;p&gt;そんな動画はすごく面白い。&lt;/p&gt;&#xA;&lt;p&gt;特に攻略や性能情報を見ていない、あまり気にしていない人達の配信がおすすめです。それが特に面白い。&lt;/p&gt;&#xA;&lt;p&gt;逆にいえば、攻略や性能の話ばかりしている私はものすごくつまらない。&lt;/p&gt;&#xA;&lt;p&gt;螺旋の話でもやりはじめるようになったら&amp;hellip;もうおしまいです。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今期の螺旋について解説。&lt;/p&gt;&#xA;&lt;h3 id=&#34;バーバラが強い&#34;&gt;バーバラが強い&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230116_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;バーバラが強いです。今後はメインとして使っていく予定。&lt;/p&gt;&#xA;&lt;p&gt;あと戦っているとき私が気にしているのは、元素粒子の回収くらいかな。&lt;/p&gt;&#xA;&lt;p&gt;スキルを素早く回せるクールタイムが短いキャラで粒子を取り出し、それを爆発が重いキャラで回収します。今回の例でいうと、万葉とベネットのスキルを回して香菱に交代するみたいな感じかな。まあ、そのへんは臨機応変に。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20230116_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;黄金王獣は、全くよくわからないボスだったけど、前回で慣れました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;夜蘭は引かない&#34;&gt;夜蘭は引かない&lt;/h3&gt;&#xA;&lt;p&gt;私は、今回も夜蘭はスルーです。&lt;/p&gt;&#xA;&lt;p&gt;一応、夜蘭を確保するだけの原石は貯まりましたが、スルーします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;初心者になるために&#34;&gt;初心者になるために&lt;/h3&gt;&#xA;&lt;p&gt;今回は、初心者の配信が一番面白いという話をしました。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、そういった人達が一番楽しんでいるから。&lt;/p&gt;&#xA;&lt;p&gt;私もなにか初心者になれるものを見つけていきたい。&lt;/p&gt;&#xA;&lt;p&gt;原神の中にもまだまだたくさんありますよ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>terminalのOSC52を使いclipboardを共有する</title>
      <link>https://syui.github.io/blog/post/2023/01/15/nvim/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/15/nvim/</guid>
      <description>&lt;p&gt;terminalのOSC52という機能を使うと、ssh-sessionでもcopyしたものがsystemのclipboardに入ります。これらはosの互換性に関係ないため幅広く使えます。&lt;/p&gt;&#xA;&lt;p&gt;ただし、clipboardの共有は、往々にしてセキュリティ問題があるため注意してください。&lt;/p&gt;&#xA;&lt;p&gt;また、&lt;code&gt;tmux&lt;/code&gt;ではできなかったので、&lt;code&gt;iterm2&lt;/code&gt;の別タブで行いました。&lt;/p&gt;&#xA;&lt;p&gt;iterm2の設定は、&lt;code&gt;General -&amp;gt; Selection -&amp;gt; Application ... access clipboard&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;まず、&lt;code&gt;tty-copy&lt;/code&gt;はコマンドです。&lt;code&gt;tty-copy text&lt;/code&gt;というように使います。ssh先でもssh元のclipboardに入ります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jirutka/tty-copy&#34;&gt;https://github.com/jirutka/tty-copy&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;次にvim-pluginです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ojroques/vim-oscyank&#34;&gt;https://github.com/ojroques/vim-oscyank&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;yy&lt;/code&gt;で同時に&lt;code&gt;OSCYankReg&lt;/code&gt;が実行されてsystemのclipboardに入れる設定です。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Plug &amp;#39;ojroques/vim-oscyank&amp;#39;, {&amp;#39;branch&amp;#39;: &amp;#39;main&amp;#39;}&#xA;&#xA;&amp;#34;let g:oscyank_silent = v:true&#xA;let g:oscyank_term = &amp;#39;tmux&amp;#39;&#xA;autocmd TextYankPost * if v:event.operator is &amp;#39;y&amp;#39; &amp;amp;&amp;amp; v:event.regname is &amp;#39;&amp;#39; | execute &amp;#39;OSCYankReg &amp;#34;&amp;#39; | endif&#xA;autocmd TextYankPost * if v:event.operator is &amp;#39;y&amp;#39; &amp;amp;&amp;amp; v:event.regname is &amp;#39;+&amp;#39; | execute &amp;#39;OSCYankReg +&amp;#39; | endif&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ただ、tmux上で動作しないのがよくわからない。&lt;/p&gt;&#xA;&lt;p&gt;tmuxには&lt;code&gt;set-option -g set-clipboard on&lt;/code&gt;等を設定して、commandやpluginもtmuxに該当する項目があるのに動作しませんでした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>twitter devのban祭りに参加した</title>
      <link>https://syui.github.io/blog/post/2023/01/14/twitter/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/14/twitter/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/apps&#34;&gt;twitter dev&lt;/a&gt;にて、app(client)がbanされはじめているらしいという情報があり、自分が作ったやつは大丈夫かなと思い確認してみると、大丈夫そうだったので、ついでにmastodonのbotと連携させて遊んでたら&amp;hellip;&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;und&#34; dir=&#34;ltr&#34;&gt;/usr/bin/jq&lt;br&gt;&amp;quot;&lt;a href=&#34;https://t.co/zZHO828PqJ&#34;&gt;https://t.co/zZHO828PqJ&lt;/a&gt;&amp;quot;&lt;br&gt;&amp;quot;4.0.0 (compatible; Mitra 1.9.0)&amp;quot;&lt;/p&gt;&amp;mdash; syui (@syui__) &lt;a href=&#34;https://twitter.com/syui__/status/1614122043431342080?ref_src=twsrc%5Etfw&#34;&gt;January 14, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;結果としてban祭りに参加。&lt;/p&gt;&#xA;&lt;p&gt;現在、read権限はあるんだけど、write権限が突然消えました。&lt;/p&gt;&#xA;&lt;p&gt;twitter devで確認してみると&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This App has violated Twitter Rules and policies. As a result, certain functions will be limited&lt;/p&gt;&#xA;&lt;p&gt;本アプリは、Twitterのルールやポリシーに違反しています。そのため、一部の機能が制限されます。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;ということらしい。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/stablediffusion?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#stablediffusion&lt;/a&gt; &lt;a href=&#34;https://t.co/LfESE70tv6&#34;&gt;pic.twitter.com/LfESE70tv6&lt;/a&gt;&lt;/p&gt;&amp;mdash; syui (@syui__) &lt;a href=&#34;https://twitter.com/syui__/status/1614117533786984448?ref_src=twsrc%5Etfw&#34;&gt;January 14, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;絵が駄目だったのか、mastodonのlinkがダメだったのか、あるいはそれ以外が原因か&amp;hellip;わかりませんが、楽しかったからいいか。&lt;/p&gt;&#xA;&lt;p&gt;仕組みとしては、botに&lt;code&gt;twitter-mode&lt;/code&gt;を実装して、twitter-modeがenableのときに特定のコマンド出力をtwitterにも所定の形式で投稿するようにしました。&lt;/p&gt;&#xA;&lt;p&gt;timerなども実装してたので、例えば、時間を指定すると毎日stable-diffusionで画像を生成して投稿してくれる機能にも対応しました。twitter-modeに含めただけだけど。&lt;/p&gt;&#xA;&lt;p&gt;そういえば、goで書いているclientのgh-actions(releases)が以前から壊れてて、直さないとなあと思ってたので、ついでに直したのと、clientに今回の投稿に必要なオプションを追加したりしました。gh-actionsは&lt;code&gt;gox&lt;/code&gt;をやめて&lt;code&gt;goreleaser&lt;/code&gt;を使い始めた。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.github/workflows/releases.yml&#34; data-lang=&#34;yml:.github/workflows/releases.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pull_request&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;types&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;closed&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v[0-9]+.[0-9]+.[0-9]+&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;goreleaser&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;fetch-depth&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup Go&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/setup-go@v3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;go-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;check-latest&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Run GoReleaser&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;goreleaser/goreleaser-action@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;args&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release --rm-dist&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_TOKEN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;C_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.C_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;CS_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.CS_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.goreleaser.yml&#34; data-lang=&#34;yml:.goreleaser.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;project_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;twg&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;GO111MODULE=on&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;before&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;hooks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;go mod tidy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;builds&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;main&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;binary&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;twg&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ldflags&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - -&lt;span style=&#34;color:#ae81ff&#34;&gt;s -w&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - -&lt;span style=&#34;color:#ae81ff&#34;&gt;X main.Version={{.Version}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - -&lt;span style=&#34;color:#ae81ff&#34;&gt;X main.Revision={{.ShortCommit}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - -&lt;span style=&#34;color:#ae81ff&#34;&gt;X github.com/syui/twg/oauth.ckey={{ .Env.C_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - -&lt;span style=&#34;color:#ae81ff&#34;&gt;X github.com/syui/twg/oauth.cskey={{ .Env.CS_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;CGO_ENABLED=0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;archives&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;name_template&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;replacements&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;darwin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;darwin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;linux&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;linux&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;windows&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;windows&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;386&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;i386&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;amd64&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;x86_64&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;format_overrides&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;goos&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;windows&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;zip&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;prerelease&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;auto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>mitraをfly.ioにdeployしてみた</title>
      <link>https://syui.github.io/blog/post/2023/01/09/mitra/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/09/mitra/</guid>
      <description>&lt;p&gt;mitraは、rustで書かれた仮想通貨のwalletと連携可能なインスタンスです。&lt;/p&gt;&#xA;&lt;p&gt;uiとbackendが素晴らしく、とてもシンプルです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codeberg.org/silverpill/mitra&#34;&gt;https://codeberg.org/silverpill/mitra&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codeberg.org/silverpill/mitra-web&#34;&gt;https://codeberg.org/silverpill/mitra-web&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;gotosocialと同じくmatrixの設計を参考にしているように感じられました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/mitra_20230111_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://codeberg.org/silverpill/mitra&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd mitra&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp config.yaml.example config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cargo build --release --features production&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat .env.local&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENVIRONMENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;development&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ENVIRONMENT=production&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONFIG_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;./config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#CONFIG_PATH=/app/server/config.yaml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#VUE_APP_BACKEND_URL=https://example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#VUE_APP_BACKEND_URL=http://example.com:8380&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#PORT=8380&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://codeberg.org/silverpill/mitra-web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd mitra-web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm install --no-save&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npx allow-scripts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mv dist ../&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml:config.yaml&#34; data-lang=&#34;yaml:config.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;database_url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://mitra:mitra@127.0.0.1:55432/mitra&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;storage_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;files&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;web_client_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dist&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;http_host&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;http_port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8380&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;instance_uri&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;instance_title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Mitra&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;instance_short_description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;My instance&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;instance_description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;My instance&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;registrations_open&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#http_host: &amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#instance_uri: example.com:8380&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;fly.ioでは&lt;code&gt;instance_uri: example.com&lt;/code&gt;を使用します。portを指定すると502になります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gotosocialを立ててみた時の話</title>
      <link>https://syui.github.io/blog/post/2023/01/08/gotosocial/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/08/gotosocial/</guid>
      <description>&lt;p&gt;gotosocialは今現在最も簡単に建てられるactivitypubのインスタンスです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/superseriousbusiness/gotosocial&#34;&gt;https://github.com/superseriousbusiness/gotosocial&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;golangを採用しているというのが大きく、dbもsqliteです。最もシンプルな構成だと思います。&lt;/p&gt;&#xA;&lt;p&gt;sqliteは、あまり速くはないもののshellとの親和性が非常に高いため、dbの中では最も扱いやすい部類に入ります。あくまで個人感想。&lt;/p&gt;&#xA;&lt;p&gt;fly.ioは、sqliteをvol mountで使用できるためserverを立てる必要がありません。したがって、全て一つのserver内で完結します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、mastodonの場合、web &amp;amp; api server, redis-server, pg-serverと3つが必要になります。&lt;/p&gt;&#xA;&lt;p&gt;ただし、gotosocialは、最低限のweb-uiしか持ちません。したがって、通常操作するには、uiをつけるか、あるいはclientから行う必要があります。&lt;/p&gt;&#xA;&lt;p&gt;これは、matrixの設計に似ています。&lt;/p&gt;&#xA;&lt;p&gt;web-client : &lt;a href=&#34;https://pinafore.social/&#34;&gt;https://pinafore.social/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;android : &lt;a href=&#34;https://tusky.app/&#34;&gt;https://tusky.app/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;flyio&#34;&gt;fly.io&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Dockerfile&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM superseriousbusiness/gotosocial&#xA;&#xA;WORKDIR /gotosocial&#xA;ADD config.yaml /gotosocial/&#xA;&#xA;CMD [&amp;#34;--config-path&amp;#34;, &amp;#34;/gotosocial/config.yaml&amp;#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly launch --name $app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly vol create &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;_data --size &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -a $app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;config&#34;&gt;config&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml:config.yaml&#34; data-lang=&#34;yaml:config.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$app.fly.dev&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;db-type&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sqlite&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;db-address&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/data/goto/sqlite.db&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;accounts-registration-open&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:fly.toml&#34; data-lang=&#34;toml:fly.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;mounts&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$app_data&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/data/goto&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;deploy&#34;&gt;deploy&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-user&#34;&gt;create user&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fly ssh consosh consolee&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /gotosocial/gotosocial --config-path /gotosocial/config.yaml admin account create --username $user --email $mail --password $pass&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /gotosocial/gotosocial --config-path /gotosocial/config.yaml admin account confirm --username $user&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /gotosocial/gotosocial --config-path /gotosocial/config.yaml admin account promote --username $user&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;domain&#34;&gt;domain&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/superseriousbusiness/gotosocial/blob/main/example/config.yaml&#34;&gt;https://github.com/superseriousbusiness/gotosocial/blob/main/example/config.yaml&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>nvimを使ってみる</title>
      <link>https://syui.github.io/blog/post/2023/01/07/nvim/</link>
      <pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/07/nvim/</guid>
      <description>&lt;p&gt;&lt;code&gt;neovim&lt;/code&gt;、いわゆる&lt;code&gt;nvim&lt;/code&gt;ですが、今まで全く使ってなかったので、今回は少しカスタマイズして使ってみました。&lt;/p&gt;&#xA;&lt;p&gt;vimscriptとluaで書けますが、luaで書いていこうと思います。したがって、pluginから何から全て移行です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S neovim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p ~/.config/nvim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ touch ~/.config/nvim/init.lua&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua:~/.config/nvim/init.lua&#34; data-lang=&#34;lua:~/.config/nvim/init.lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keymaps&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua:~/.config/nvim/lua/keymaps.lua&#34; data-lang=&#34;lua:~/.config/nvim/lua/keymaps.lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- vim.api.nvim_set_keymap(&amp;#34;&amp;#34;, &amp;#34;&amp;lt;space&amp;gt;&amp;#34;, &amp;#34;&amp;lt;Nop&amp;gt;&amp;#34;, { noremap = true, silent = true })&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; opts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { noremap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, silent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; keymap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vim.api.nvim_set_keymap&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keymap(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;space&amp;gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;Nop&amp;gt;&amp;#34;&lt;/span&gt;, opts)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これはvimでいう&lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;をマッピングする設定です。&lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt;にします。&lt;/p&gt;&#xA;&lt;p&gt;続いてpluginをインストールします。&lt;code&gt;packer&lt;/code&gt;を使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;https://github.com/wbthomason/packer.nvim&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone --depth &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; https://github.com/wbthomason/packer.nvim&lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; ~/.local/share/nvim/site/pack/packer/start/packer.nvim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua:~/.config/nvim/lua/plugins.lua&#34; data-lang=&#34;lua:~/.config/nvim/lua/plugins.lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.cmd &lt;span style=&#34;color:#e6db74&#34;&gt;[[packadd packer.nvim]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;packer&amp;#39;&lt;/span&gt;).startup(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(use)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wbthomason/packer.nvim&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rlane/pounce.nvim&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:PackerInstall&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pouncenvim&#34;&gt;pounce.nvim&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;pounce.nvim&lt;/code&gt;は&lt;code&gt;easymotion&lt;/code&gt;のようなものです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua:~/.config/nvim/plugin/pounce.lua&#34; data-lang=&#34;lua:~/.config/nvim/plugin/pounce.lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pounce&amp;#34;&lt;/span&gt;).setup({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; accept_keys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jfkdlsahgnuvrbytmiceoxwpqz&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; accept_best_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;enter&amp;gt;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; multi_window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; debug &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua:~/.config/nvim/lua/keymaps.lua&#34; data-lang=&#34;lua:~/.config/nvim/lua/keymaps.lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keymap(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;lt;C-u&amp;gt;Pounce&amp;lt;Return&amp;gt;&amp;#34;&lt;/span&gt;, opts)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで&lt;code&gt;&amp;lt;space&amp;gt;&amp;lt;space&amp;gt;&lt;/code&gt;を押すと発動します。適当に検索したい1文字を入力して飛びます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた126</title>
      <link>https://syui.github.io/blog/post/2023/01/04/illust/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/04/illust/</guid>
      <description>&lt;p&gt;お正月のイラスト&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_126.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rustでdeeplのcliを作った</title>
      <link>https://syui.github.io/blog/post/2023/01/02/rust-json-request/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2023/01/02/rust-json-request/</guid>
      <description>&lt;p&gt;deeplは翻訳サービスです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.deepl.com/ja/docs-api&#34;&gt;https://www.deepl.com/ja/docs-api&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は、主にrustのjson, requestのexampleを載せる趣旨で書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;cargo&#34;&gt;cargo&lt;/h3&gt;&#xA;&lt;p&gt;面倒なので最初に&lt;code&gt;cargo.toml&lt;/code&gt;に書きそうなpkgを載せておきます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:Cargo.toml&#34; data-lang=&#34;rust:Cargo.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;seahorse&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dotenv&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.15&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;serde_derive&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;serde_json&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;serde&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt; = { &lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/mehcode/config-rs&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;branch&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;shellexpand&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toml&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reqwest&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tokio&lt;/span&gt; = { &lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;features&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;full&amp;#34;&lt;/span&gt;] }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;json&#34;&gt;json&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:~/.config/msr/deepl.json&#34; data-lang=&#34;json:~/.config/msr/deepl.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;translations&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detected_source_language&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JA&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;I&amp;#39;m not sure if I should use reqwest for response as well.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;serde_json&lt;/code&gt;を使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/main.rs&#34; data-lang=&#34;rust:src/main.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; serde::{Deserialize, Serialize};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::fs;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Serialize, Deserialize, Debug)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[serde(tag = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DeepData&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    translations: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Translation&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Serialize, Deserialize, Debug)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Translation&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    text: String,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    detected_source_language : String,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; shellexpand::tilde(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/.config/msr/deepl.json&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; l.to_string();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fs::read_to_string(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;l).expect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;could not read file&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; p: &lt;span style=&#34;color:#a6e22e&#34;&gt;DeepData&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; serde_json::from_str(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;o).unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;p.translations[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;].text;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, o);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;reqwest&#34;&gt;reqwest&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;reqwest&lt;/code&gt;を使います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ完凸の意義</title>
      <link>https://syui.github.io/blog/post/2022/12/31/genshin/</link>
      <pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/31/genshin/</guid>
      <description>&lt;p&gt;原神はナヒーダの完凸を目指すことにしたので、その意義を考えていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20221231_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;関係ないけど、この前、とんでもない聖遺物が来た。&lt;/p&gt;&#xA;&lt;h3 id=&#34;完凸の意義&#34;&gt;完凸の意義&lt;/h3&gt;&#xA;&lt;p&gt;原神において、完凸にはたくさんの意義があり、人それぞれ求めるものは違うと思います。&lt;/p&gt;&#xA;&lt;p&gt;ここで少しだけ私の個人的な考えを述べます。&lt;/p&gt;&#xA;&lt;p&gt;原神は、カジュアルゲームです。簡単に遊べるけど奥が深い、そんなゲームだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;カジュアルゲームに完凸は不要です。&lt;/p&gt;&#xA;&lt;p&gt;では完凸の意義とは一体何なのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;多くの人はこのゲームに爽快感を求めているのだと私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;つまり、爽快感を演出できる効果やキャラの完凸がおすすめだと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最強の完凸&#34;&gt;最強の完凸&lt;/h3&gt;&#xA;&lt;p&gt;個人的には夜蘭だと思います。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭の完凸は性能と爽快感を併せ持ちます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダの完凸&#34;&gt;ナヒーダの完凸&lt;/h3&gt;&#xA;&lt;p&gt;ナヒーダの完凸は、上記の基準から言うと、非常に厳しいと考えます。&lt;/p&gt;&#xA;&lt;p&gt;まずナヒーダの使用感として、通常攻撃や元素爆発などに爽快感がありません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、一般的にナヒーダの完凸はおすすめしません。完凸するなら雷電や鍾離のほうがおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;ただし、性能面で言うと、ナヒーダの完凸はそれほど悪くないと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;下記は単純なダメージの総合を期待値で算出したものになります。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;凸&lt;/th&gt;&#xA;          &lt;th&gt;ダメージ&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;x1.10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;x1.20&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;x1.10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;x1.05&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;x1.05&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;x6.00&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;強い強いと言われている雷電2凸の&lt;code&gt;x1.40&lt;/code&gt;を考えると、ナヒーダ完凸のダメージ倍率の伸び&lt;code&gt;x6.00&lt;/code&gt;は凄まじいものがあります。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの完凸は、簡単に言うと元素爆発後の印がついた敵に通常(攻撃)することで新たな追加ダメージが6回発生するというものです。&lt;/p&gt;&#xA;&lt;p&gt;条件は印+元素爆発+通常です。基本的には元素爆発にダメージが発生するようになると考えて、その性能を評価したいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは印を付けた敵が草起点の元素反応を起こすごとにエネルギーを回復します。爆発は50族で雷キャラが1体いると回復速度が上がます。つまり、爆発は簡単に回せるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの完凸はかなり強いと評価します。&lt;/p&gt;&#xA;&lt;p&gt;ただし、水キャラが居ると爆発が延長します。延長すると、次の追加ダメージが出せるまでの時間も延長されるのではないかと予想されます。&lt;/p&gt;&#xA;&lt;p&gt;しかし、単に爆発効果が延長されるだけで爆発は同じ時間に打てる可能性もあり、その場合は完凸効果とのバッティングは発生しません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;完凸の手段&#34;&gt;完凸の手段&lt;/h3&gt;&#xA;&lt;p&gt;原神は無課金のルールでやっています。このルールを破ることはありません。&lt;/p&gt;&#xA;&lt;p&gt;現在、原石は&lt;code&gt;10,000&lt;/code&gt;です。あと&lt;code&gt;20,000&lt;/code&gt;ほど必要になる計算です。&lt;/p&gt;&#xA;&lt;p&gt;次にナヒーダがピックアップされるまではガチャを回さない予定です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた125</title>
      <link>https://syui.github.io/blog/post/2022/12/24/illust/</link>
      <pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/24/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_125.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ランニング、42kmを走った時の思い出と正確な記録</title>
      <link>https://syui.github.io/blog/post/2022/12/22/run/</link>
      <pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/22/run/</guid>
      <description>&lt;p&gt;以前、以下の記事でランニングについて書きました。主に私が42kmを走ったときの内容が記録されています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/blog/post/2021/09/29/running&#34;&gt;https://syui.ai/blog/post/2021/09/29/running&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/blog/post/2021/05/14/nike&#34;&gt;https://syui.ai/blog/post/2021/05/14/nike&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;しかし、改めて読み返してみると、いいことばかり書いて、本当のことを書いていない。都合が悪いことは書いていない。そんなふうに感じました。&lt;/p&gt;&#xA;&lt;p&gt;今回は個人的にあまり思い出したくない、かっこ悪い思い出を、データと共に残しておきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;はじめて42kmを走ったとき後半はバテバテだった&#34;&gt;はじめて42kmを走ったとき、後半はバテバテだった&lt;/h3&gt;&#xA;&lt;p&gt;はじめて42kmを走ったのは&lt;code&gt;2021/05/13&lt;/code&gt;でした。記録によるとそうです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その時のことは結構記憶に残っていて、実はあまりいい思い出ではありません。&lt;/p&gt;&#xA;&lt;p&gt;毎日、日課で走っているような人というのは、私を含めて、本気で走ることがありません。&lt;/p&gt;&#xA;&lt;p&gt;明日もありますし、そんなことやってられないのです。&lt;/p&gt;&#xA;&lt;p&gt;ただ日課をこなす。それだけです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、内心、ちょっとでも力を出せば、長距離は走れると思っていて、速く走ろうと思えば速く走れると思っている&amp;hellip;そんな自信がどこかにありました。&lt;/p&gt;&#xA;&lt;p&gt;42kmを走る前は、まあいけるだろう、そう思っていました。ちょっとドキドキしたけど。&lt;/p&gt;&#xA;&lt;p&gt;いつも半分の力しか出していないので、まあ大丈夫なんじゃないかな。そう思っていました。&lt;/p&gt;&#xA;&lt;p&gt;たしかに前半は大丈夫な感じでした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、後半は雲行きが怪しくなりはじめ「これは、やばい」と思い始めました。&lt;/p&gt;&#xA;&lt;p&gt;なんか疲れ始めている気がする。&lt;/p&gt;&#xA;&lt;p&gt;これは異常事態ですが、このことは今まで公開していなかったデータに残っています。&lt;/p&gt;&#xA;&lt;p&gt;後半バテバテだったのが明らかになるので、私もあまり出したくなかったんだと思う。&lt;/p&gt;&#xA;&lt;p&gt;最初はいつもどおりな感じ。1km地点はスマホ操作とかでもたついてたのか若干遅い感じしますが、許容範囲内。特に不思議ではありません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0004.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0005.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0006.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここから一気にペースが落ちはじめます。私の記憶でも「これ以上速く走れない」という感覚が出始めます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0007.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;そして、どんどんペースは落ちていき&amp;hellip;最終的にはここまで落ちています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0008.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;もう一つの真実次の日のこと&#34;&gt;もう一つの真実、次の日のこと&lt;/h3&gt;&#xA;&lt;p&gt;そして、もう一つ、書いていないと思ったのが次の日のことです。&lt;/p&gt;&#xA;&lt;p&gt;「42kmを走った後は死にそうだったけど、寝たら治った」と私は書いています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、記録を見てみると、それは嘘です。&lt;/p&gt;&#xA;&lt;p&gt;実は、42kmを走って、次の日、普段の生活には問題がなかったものの、日課であるランニングには影響があった記憶があります。&lt;/p&gt;&#xA;&lt;p&gt;なんか足が重くて思うように走れなかった記憶があって&amp;hellip;でも、かっこ悪いので、そういうのは書かなかったのではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;42km走ったのが&lt;code&gt;5/13&lt;/code&gt;、その次の日が&lt;code&gt;5/14&lt;/code&gt;、翌々日が&lt;code&gt;5/15&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/running_20221222_0009.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;データによると、明らかに次の日もバテています。疲れが残っていたと考えられますし、私の記憶でも疲れが残ってたような気がする。&lt;/p&gt;&#xA;&lt;p&gt;復活したのは翌々日の&lt;code&gt;5/15&lt;/code&gt;です。これもデータを見ると明らかでした。&lt;/p&gt;&#xA;&lt;p&gt;あとで読み返したとき、自分にとって都合がいい情報しか残っていないのもよくないので、今回、改めて情報を補足しておくことにします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、最近の螺旋とナヒーダのガチャについて書いていく</title>
      <link>https://syui.github.io/blog/post/2022/12/21/genshin/</link>
      <pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/21/genshin/</guid>
      <description>&lt;h3 id=&#34;最近の螺旋がきつい&#34;&gt;最近の螺旋がきつい&lt;/h3&gt;&#xA;&lt;p&gt;無課金だからなのか、螺旋がきつくなってきた感があります。&lt;/p&gt;&#xA;&lt;p&gt;今回の編成例はこんな感じ。黄金王獣のためだけに凝光をLV1からLV60に育成しましたよ。また、今回、クレーを入れられなかった。&lt;/p&gt;&#xA;&lt;p&gt;意外と強かったのが万葉ナショナルです。これからもこの編成は使っていこう。&lt;/p&gt;&#xA;&lt;p&gt;あと、ナヒーダ+雷電+綾華+バーバラも結構使える。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20221220_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その前の螺旋もきつかった。何回か挑戦することになってしまってる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20221214_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダの完凸&#34;&gt;ナヒーダの完凸&lt;/h3&gt;&#xA;&lt;p&gt;次はナヒーダについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは、見た目が凄く好きです。全体的なデザインが素晴らしいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;鍾離や雷電ほど強いわけではなく、万葉や夜蘭よりも性能が厳しいナヒーダですが、でも普通に強いと思います。&lt;/p&gt;&#xA;&lt;p&gt;一方で、最終的には個人的な好みに全く刺さらないのがナヒーダでした。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、原神のキャラは全員好きですし、ナヒーダもその一人です。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私の中では他のキャラと変わらない位置づけ。&lt;/p&gt;&#xA;&lt;p&gt;原神の中で唯一刺さったクレーとは大きな差があります。&lt;/p&gt;&#xA;&lt;p&gt;私は特別好きでもないキャラの完凸を目指してしまうのでしょうか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダとガチャ&#34;&gt;ナヒーダとガチャ&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ここからは少しの創作を交えて語ることにします。何をどのように解釈してもらっても構いませんが、私の考えは最後に述べます。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;ナヒーダのガチャは多少の後悔と爆死という結果で終わりました。&lt;/p&gt;&#xA;&lt;p&gt;それがどのようにもたらされたのか、どうすればよかったのかを語りたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;まず私は、ナヒーダについて何も知らずにガチャを回し始めました。未知の期待だけがありました。&lt;/p&gt;&#xA;&lt;p&gt;ガチャは一気にやりました。&lt;/p&gt;&#xA;&lt;p&gt;結果として、あまりの大勝。考えられる限り最高の結果でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ナヒーダ2凸 : 残りの原石数46,000 -&amp;gt; 32,000、残りの運命30 -&amp;gt; 10&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;つまり、原石14,000の消費だけで2凸です。&lt;/p&gt;&#xA;&lt;p&gt;残りの原石は32,000もありました。&lt;/p&gt;&#xA;&lt;p&gt;私は一度、ここで手を止めてしまいます。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、あまりにも勝ちすぎていると思ったから。&lt;/p&gt;&#xA;&lt;p&gt;ここで撤退したほうがいいのか?&lt;/p&gt;&#xA;&lt;p&gt;そんな考えが頭をよぎりました。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ここで撤退するのが合理的な判断、正解となります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ここで撤退すると、私はあるものを失います。それが何なのかは後に説明することにします。&lt;/p&gt;&#xA;&lt;p&gt;さて、私は、大勝で手に入れたナヒーダを使い、色々な感触を確かめ始めました。&lt;/p&gt;&#xA;&lt;p&gt;使っているうち私は思います。&lt;/p&gt;&#xA;&lt;p&gt;「もう十分強いし、完凸しなくてもいいのでは?」&lt;/p&gt;&#xA;&lt;p&gt;しかし、完凸を目指すと決めた手前、一体どうすればいいんじゃ&amp;hellip;。しかも今から回して何故か出る気がしない。&lt;/p&gt;&#xA;&lt;p&gt;そうなのです。&lt;/p&gt;&#xA;&lt;p&gt;私は、ここで流れを止めてしまった。あまりにも大勝すぎる。当たりすぎていると。&lt;/p&gt;&#xA;&lt;p&gt;ここからは爆死コースだ。&lt;/p&gt;&#xA;&lt;p&gt;そう思いました。&lt;/p&gt;&#xA;&lt;p&gt;そして、少し考えたあと、私は決意します。&lt;/p&gt;&#xA;&lt;p&gt;最初に言ったように完凸を目指す。&lt;/p&gt;&#xA;&lt;p&gt;残りの原石は全部使う。&lt;/p&gt;&#xA;&lt;p&gt;ここでやっておかないと、私は多分、完凸できない。&lt;/p&gt;&#xA;&lt;p&gt;いつでも後戻りできてしまう状態だと、もったいないという結論にどう考えてもそうなってしまう。&lt;/p&gt;&#xA;&lt;p&gt;ここですべてつぎ込み爆死するからこそ、次こそは何が何でも完凸するという決意が生まれる。&lt;/p&gt;&#xA;&lt;p&gt;そう思いました。&lt;/p&gt;&#xA;&lt;p&gt;私はその後、持っていた原石すべて注ぎ込み、文字通り爆死。&lt;/p&gt;&#xA;&lt;p&gt;しかも考えられる限り最悪の爆死でした&amp;hellip;全てハズレで天井の1体のみ。&lt;/p&gt;&#xA;&lt;p&gt;現在、ナヒーダ3凸です。&lt;/p&gt;&#xA;&lt;p&gt;完凸にはあと3が必要で、最低でも21,000の原石が必要になります。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;ですが、ここで完凸への決意が折れなくて本当によかった。&lt;/p&gt;&#xA;&lt;p&gt;私はナヒーダを完凸します。(目指すという意味で&lt;/p&gt;&#xA;&lt;p&gt;特別好きでもない、強いわけでもないキャラの完凸を目指すのか?&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;そうです。なんか色々あってそういうことになってしまいました。&lt;/p&gt;&#xA;&lt;p&gt;ここまで爆死した以上、完凸するしかない！！(やばい思考だ&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガチャの秘訣&#34;&gt;ガチャの秘訣&lt;/h3&gt;&#xA;&lt;p&gt;ここからは、私の解釈ですが、ガチャは義務感でやると当たらないような気がしてる。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、そんなの関係ないといえば、全くもってそのとおり。ガチャに秘訣なんてありません。すべての結果はたまたまです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回私は、一度手を止めたあとの後半のガチャは、ほとんど義務感でやってしまい、過去例を見ない最悪の結果を引き当ててしまいます。&lt;/p&gt;&#xA;&lt;p&gt;途中にナヒーダを試しに使ってみて、既に知っているというのも良くなかった。&lt;/p&gt;&#xA;&lt;p&gt;未知の期待と決意によってのみ、一気に最初から最後まで回すべきでした。そう思います。&lt;/p&gt;&#xA;&lt;p&gt;皆様はガチャに臨むとき、自分なりの考えや秘訣はありますか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた7</title>
      <link>https://syui.github.io/blog/post/2022/12/15/card/</link>
      <pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/15/card/</guid>
      <description>&lt;p&gt;久しぶりに改めてカードを作ってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;以前のカードはベースを紙にしていました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、紙ベースだと劣化が激しいような気がしたのです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、たった数ヶ月でそこまでの変化はありませんでしたが、なんとなく数年後に色あせてくるのが見えるような気がしました。&lt;/p&gt;&#xA;&lt;p&gt;個人的には納得できるものではありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;そこで、改めてカードを作り直してみることにしたのです。&lt;/p&gt;&#xA;&lt;p&gt;これまで作ったカードはすべて「試作品箱」に移し、手持ちのカードはゼロ。&lt;/p&gt;&#xA;&lt;p&gt;ゼロからのスタートです。&lt;/p&gt;&#xA;&lt;p&gt;新しいカードは、ベースにプラスチック版を採用することにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;暑さはこんくらいです。3mmくらいかな。わかんないけど。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;そして、プラスチック板をベースにした初めてのカードが出来上がりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;シールはホログラムに印刷を行い、それを保護するガラスチップのシールを上に貼ります。&lt;/p&gt;&#xA;&lt;p&gt;ホログラムだけだと色々問題が出てきてしまうのは以前作ったカードでわかっていました。&lt;/p&gt;&#xA;&lt;p&gt;そして、最後に切り取りを行いますが、これをカッターやハサミでやってしまうと、微妙なところに歪みが発生してしまうことがあります。したがって、裁断機を使いました。&lt;/p&gt;&#xA;&lt;p&gt;実はこのカードを作成したのは数ヶ月前です。ブログに書いていませんでした。&lt;/p&gt;&#xA;&lt;p&gt;数ヶ月、カードの様子を見ていましたが、とても納得のできる仕上がりです。&lt;/p&gt;&#xA;&lt;p&gt;劣化が感じられませんし、手に持った感覚もしっかりしています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これからカードを作るときは、この方式を採用していきたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>matrixのclientを作ってみた</title>
      <link>https://syui.github.io/blog/post/2022/12/10/matrix-client/</link>
      <pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/10/matrix-client/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.rs/matrix-sdk/latest/matrix_sdk/index.html&#34;&gt;matrix-rust-sdk&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;どんな感じで書けばいいのかexampleを載せておきます。そのままでは動きませんが。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/client.rs&#34; data-lang=&#34;rust:src/client.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[allow(unused_mut)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; client_builder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Client::builder().homeserver_url(homeserver_url);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[cfg(feature = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sled&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; home &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dirs::home_dir().expect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no home directory found&amp;#34;&lt;/span&gt;).join(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sdk&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client_builder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client_builder.sled_store(home, None)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[cfg(feature = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;indexeddb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client_builder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client_builder.indexeddb_store(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sdk&amp;#34;&lt;/span&gt;, None).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client_builder.build().&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;client&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .login_username(username, password)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .initial_device_display_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sdk&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .send()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// sync&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;client.sync_once(SyncSettings::default()).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;.unwrap().next_batch;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; sync_token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client.sync_once(SyncSettings::default()).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;.unwrap().next_batch;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; settings &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SyncSettings::default().token(sync_token);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client.sync(settings).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client.sync(SyncSettings::default()).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/post.rs&#34; data-lang=&#34;rust:src/post.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; alias &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#example:matrix.org&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;!example:matrix.org&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// room_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; room_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;RoomId&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;::try_from(id).unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// room_alias&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; room_alias &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;RoomAliasId&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;::try_from(alias).unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; room &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client.resolve_room_alias(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;room_alias).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; room_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; room.room_id;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; Some(room) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client.get_joined_room(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;room_id) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    client.join_room_by_id(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;room_id).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RoomMessageEventContent::text_plain(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;message);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    room.send(content, None).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;code&amp;gt;test&amp;lt;/code&amp;gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RoomMessageEventContent::text_html(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;message, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;o);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    room.send(content, None).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/timeline.rs&#34; data-lang=&#34;rust:src/timeline.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timeline&lt;/span&gt;(event: &lt;span style=&#34;color:#a6e22e&#34;&gt;OriginalSyncRoomMessageEvent&lt;/span&gt;, room: &lt;span style=&#34;color:#a6e22e&#34;&gt;Room&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; Room::Joined(room) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; room &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; room_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; room.room_id();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event.sender;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event.content.body();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, room_id, u, body);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client.add_event_handler(timeline);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/bot.rs&#34; data-lang=&#34;rust:src/bot.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bot&lt;/span&gt;(event: &lt;span style=&#34;color:#a6e22e&#34;&gt;OriginalSyncRoomMessageEvent&lt;/span&gt;, room: &lt;span style=&#34;color:#a6e22e&#34;&gt;Room&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; Room::Joined(room) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; room &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; MessageType::Text(text_content) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event.content.msgtype &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; text_content.body.contains(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;!party&amp;#34;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RoomMessageEventContent::text_plain(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        room.send(content, None).&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;.unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client.add_event_handler(bot);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>archlinuxでsystemd-nspawnを使いcontinerを立ててみた</title>
      <link>https://syui.github.io/blog/post/2022/12/05/archlinux-systemd-nspaw-continer/</link>
      <pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/05/archlinux-systemd-nspaw-continer/</guid>
      <description>&lt;p&gt;botに複数の仮想環境を構築する必要があったので、今回はsystemd-nspawnを採用してみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、systemd-nspawnはとっつきにくいですが、一度使えるようになっておくと、本格的に便利だと感じました。&lt;/p&gt;&#xA;&lt;p&gt;ただ、とっつきにくさがすごい。コマンドも複数あって混乱を招くと思われます。&lt;/p&gt;&#xA;&lt;p&gt;archwikiの最初の説明が以下です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p ~/arch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacstrap -c ~/arch base&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -D : chroot&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemd-nspawn -D ~/arch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ logout&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -b : コンテナ起動&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemd-nspawn -b -D ~/arch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -n : ネットワーク&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemd-nspawn -b -D ~/arch -n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これは色んな意味で正しいのですが、私の環境では動作しません。&lt;/p&gt;&#xA;&lt;p&gt;設定したpasswordでloginできない。なお、設定していないと空なのでenterでloginできるはず(たぶん)。ttyのsecurityが働いているからです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Arch Linux 6.0.11-arch1-1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pts/1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arch login:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arch-nspawn login: root&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Login incorrect&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここでホストから&lt;code&gt;~/arch/etc/securetty&lt;/code&gt;を編集し、ここでは&lt;code&gt;pts/1&lt;/code&gt;でloginしようとしているため、これを追記します。&lt;code&gt;pts/0&lt;/code&gt;なら&lt;code&gt;pts/0&lt;/code&gt;ですし、その他ならそのttyを記述してください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo vim ~/arch/etc/securetty&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;さて、loginできたとしましょう。&lt;/p&gt;&#xA;&lt;p&gt;一旦、&lt;code&gt;poweroff&lt;/code&gt;して仮想環境(continer)を落とします。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ poweroff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ machinectl list&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、本来のsystemd-nspawnの一般的な使い方を説明します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mastodonにbotを立ててみた</title>
      <link>https://syui.github.io/blog/post/2022/12/03/msbot/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/12/03/msbot/</guid>
      <description>&lt;p&gt;この前、botでも立ててみようかなと思ったので、mastodon(single-mode)にbotを立ててみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;rustで書いてたclientを拡張できたので、とてもよかった。botの構築には今使ってるclientを組み込むことにしました。&lt;/p&gt;&#xA;&lt;p&gt;例えば、botに話しかけると&amp;hellip;賢すぎる。bot、すごい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/mastodon_bot_20221203_0004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今できるのは、mastodonをupdateしたり&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/mastodon_bot_20221203_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;commitやdockerを見たり、検索したり&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/mastodon_bot_20221203_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;codeをreviewしてもらったり&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/mastodon_bot_20221203_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;画像を生成してもらったり&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/mastodon_bot_20221203_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;などができます。&lt;/p&gt;&#xA;&lt;p&gt;呼び出しをmentionにしたのは、負担を軽くするためかな。timelineを監視するより、notify(通知)を監視したほうが負担は少なそう。&lt;/p&gt;&#xA;&lt;p&gt;botはserverに常駐させるため、できる限り負担は少ないほうがいいですし、また、mastodon server(web server)自体を自分が運営してることもあり、api request、つまりweb serverへの負担も少ないほうがよさそう。&lt;/p&gt;&#xA;&lt;p&gt;timelineを毎回取得、あるいはlatestのみの取得でもあっても、頻繁に更新される性質があるため、notifyの取得のほうがserverへの負担は少ないと思われます。微々たるもので、あまり変わらないかもしれませんが。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、botを立ててよかった。楽しい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>dendriteをupgradeしてみた</title>
      <link>https://syui.github.io/blog/post/2022/11/22/matrix-dendrite-2/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/11/22/matrix-dendrite-2/</guid>
      <description>&lt;h3 id=&#34;matrix&#34;&gt;matrix&lt;/h3&gt;&#xA;&lt;p&gt;micro-blogのmastodonがtwitterに似ているのなら、chatのmatrixはslackに似ています。&lt;/p&gt;&#xA;&lt;p&gt;mastodon, matrixの類似点は分散であるところです。&lt;/p&gt;&#xA;&lt;p&gt;matrixのaddressは&lt;code&gt;@user:example.com&lt;/code&gt;となります。&lt;/p&gt;&#xA;&lt;p&gt;matrixには様々なclientがあり、とくにwebのclientが手軽です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、elementがそれに当たります。自分が使っているserverを指定します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://app.element.io/&#34;&gt;https://app.element.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;matrixは、serverからのapiとclientの組み合わせで使います。&lt;/p&gt;&#xA;&lt;p&gt;mastodonとの違いはserverがui(html)を提供しないところです。これは、clientがui(html)を提供します。&lt;/p&gt;&#xA;&lt;p&gt;やり取りは主にchat形式になります。roomが存在し、気に入ったroomに入り、投稿と閲覧を行います。&lt;/p&gt;&#xA;&lt;p&gt;dmも可能です。この場合も通常はroomが作成されます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dendrite&#34;&gt;dendrite&lt;/h3&gt;&#xA;&lt;p&gt;前回、matrixのdendrite-serverを立てたのですが、今回はdendriteのupgradeを試みてわかったことを書きます。&lt;/p&gt;&#xA;&lt;p&gt;dendriteは、goで書かれたmatrix-serverです。&lt;/p&gt;&#xA;&lt;p&gt;monolith, polylithがあり、polylithは大規模用です。single-userはmonolithを選択しましょう。&lt;/p&gt;&#xA;&lt;p&gt;まず、DBですが、postgresql(pgsql)を使用しましょう。sqliteは正常に動作しません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://matrix-org.github.io/dendrite/installation/database&#34;&gt;https://matrix-org.github.io/dendrite/installation/database&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;latestもpgsqlならconfig(v2)で動作します。v1との違いは&lt;code&gt;database&lt;/code&gt;と&lt;code&gt;jetstream&lt;/code&gt;あたりです。&lt;/p&gt;&#xA;&lt;h4 id=&#34;latest-config&#34;&gt;latest config&lt;/h4&gt;&#xA;&lt;p&gt;flyでdomainの&lt;code&gt;$app.fly.dev&lt;/code&gt;をcertしておいてください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:dendrite.yaml&#34; data-lang=&#34;yml:dendrite.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;global&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;xxx.fly.dev&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#well_known_server_name: &amp;#34;syui.ai:443&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;private_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/dendrite/matrix_key.pem&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;key_validity_period&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;168h0m0s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;trusted_third_party_id_servers&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;matrix.org&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;vector.im&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;jetstream&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;in_memory&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;storage_path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/data/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;topic_prefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Dendrite    &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;metrics&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;basic_auth&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;username&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;metrics&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;password&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;metrics&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;dns_cache&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cache_size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;4000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cache_lifetime&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;app_service_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;config_files&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;client_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;registration_disabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;registration_shared_secret&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enable_registration_captcha&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_public_key&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_private_key&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_bypass_secret&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_siteverify_api&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;turn&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_user_lifetime&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_uris&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_shared_secret&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_username&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_password&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;rate_limiting&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;threshold&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cooloff_ms&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;edu_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;federation_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;federation_certificates&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;federation_sender&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;send_max_retries&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;disable_tls_validation&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;proxy_outbound&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;localhost&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8008&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;key_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;media_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;base_path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/data/media&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;max_file_size_bytes&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10485760&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;dynamic_thumbnails&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;max_thumbnail_generators&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;thumbnail_sizes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;crop&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;crop&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;640&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;480&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;scale&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;room_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;signing_key_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;key_perspectives&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;matrix.org&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;keys&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;key_id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ed25519:auto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;public_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;key_id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ed25519:a_RXGa&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;public_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;prefer_direct_fetch&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sync_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;user_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;account_database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;device_database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres://db.internal:5432/?sslmode=disable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;tracing&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;jaeger&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;serviceName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;disabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;rpc_metrics&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;sampler&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;reporter&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;headers&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;baggage_restrictions&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;throttler&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;logging&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;level&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;info&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;params&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/var/log/dendrite&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;old-config&#34;&gt;old config&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:dendrite.yaml&#34; data-lang=&#34;yml:dendrite.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;global&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;my-matrix.domain&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;private_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/dendrite/matrix_key.pem&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;key_validity_period&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;168h0m0s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;trusted_third_party_id_servers&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;matrix.org&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;vector.im&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;kafka&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;addresses&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;kafka:9092&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;topic_prefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Dendrite&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;use_naffka&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;naffka_database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;metrics&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;basic_auth&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;username&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;metrics&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;password&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;metrics&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;dns_cache&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cache_size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cache_lifetime&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;app_service_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7777&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://appservice_api:7777&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;config_files&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;client_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7771&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://client_api:7771&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;external_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:8071&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;registration_disabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;registration_shared_secret&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enable_registration_captcha&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_public_key&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_private_key&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_bypass_secret&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;recaptcha_siteverify_api&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;turn&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_user_lifetime&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_uris&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_shared_secret&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_username&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;turn_password&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;rate_limiting&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;threshold&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cooloff_ms&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;edu_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7778&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://edu_server:7778&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;federation_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7772&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://federation_api:7772&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;external_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:8072&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;federation_certificates&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;federation_sender&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7775&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://federation_sender:7775&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;send_max_retries&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;disable_tls_validation&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;proxy_outbound&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;localhost&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;key_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7779&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://key_server:7779&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;media_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7774&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://media_api:7774&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;external_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:8074&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;base_path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/data/media&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;max_file_size_bytes&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10485760&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;dynamic_thumbnails&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;max_thumbnail_generators&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;thumbnail_sizes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;crop&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;crop&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;640&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;480&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;scale&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;room_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7770&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://room_server:7770&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;signing_key_server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7780&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://signing_key_server:7780&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;key_perspectives&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;matrix.org&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;keys&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;key_id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ed25519:auto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;public_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;key_id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ed25519:a_RXGa&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;public_key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;prefer_direct_fetch&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sync_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7773&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://sync_api:7773&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;external_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:8073&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;user_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;internal_api&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://0.0.0.0:7781&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connect&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://user_api:7781&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;account_database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;device_database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;tracing&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;jaeger&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;serviceName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;disabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;rpc_metrics&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;sampler&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;reporter&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;headers&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;baggage_restrictions&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;throttler&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;logging&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;level&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;info&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;params&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/var/log/dendrite&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ref : &lt;a href=&#34;https://codeberg.org/gerald/dendrite-on-flyio/src/branch/main/dendrite-example.yaml&#34;&gt;https://codeberg.org/gerald/dendrite-on-flyio/src/branch/main/dendrite-example.yaml&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>fly.ioとmatrix</title>
      <link>https://syui.github.io/blog/post/2022/11/21/matrix-dendrite/</link>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/11/21/matrix-dendrite/</guid>
      <description>&lt;p&gt;今回は、fly.ioでmatrix-serverを立ててみました。serverは&lt;code&gt;dendrite&lt;/code&gt;を採用します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/matrix-org/dendrite&#34;&gt;https://github.com/matrix-org/dendrite&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;fly.ioにはいくつか制約があり、dockerfileをdeployすることになります。&lt;/p&gt;&#xA;&lt;p&gt;したがって、versionを&lt;code&gt;matrixdotorg/dendrite-monolith:v0.3.11&lt;/code&gt;に固定します。configはv1を使用します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;matrixdotorg/dendrite-monolith:latest&lt;/code&gt;はconfig v1,2に関わらずpanic(golang)を起こします。&lt;/p&gt;&#xA;&lt;p&gt;そのうちconfigはv2で書き直す予定ですが、v2で書いた人は教えてもらえると嬉しいです。configは重要な箇所だけ載せています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:dendrite.yaml&#34; data-lang=&#34;yml:dendrite.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;global&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;syui.ai&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;well_known_server_name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;syui.ai:443&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;kafka&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;addresses&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;kafka:9092&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;topic_prefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Dendrite&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;use_naffka&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;naffka_database&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;file:///data/dendrite.db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;max_open_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;max_idle_conns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;conn_max_lifetime&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;DNSでA(ipv4),AAAA(ipv6), SRVなども設定しておいてください。sub-domainの場合はmain-domainの&lt;code&gt;.well-known/matrix/server&lt;/code&gt;に以下のようなファイルを置きます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://matrix-org.github.io/dendrite/installation/domainname&#34;&gt;https://matrix-org.github.io/dendrite/installation/domainname&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;    &amp;#34;m.server&amp;#34;: &amp;#34;matrix.example.com:8448&amp;#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl start docker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo docker run --rm -it -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;:/key -w /key --entrypoint /usr/bin/generate-keys matrixdotorg/dendrite-monolith:v0.3.11 --tls-cert server.crt --tls-key server.key --private-key matrix_key.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:Dockerfile.txt&#34; data-lang=&#34;sh:Dockerfile.txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM matrixdotorg/dendrite-monolith:v0.3.11&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COPY matrix_key.pem dendrite.yaml server.crt server.key /etc/dendrite/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CMD [&amp;#34;--config&amp;#34;,&amp;#34;/etc/dendrite/dendrite.yaml&amp;#34;, &amp;#34;--tls-cert&amp;#34;, &amp;#34;/etc/dendrite/server.crt&amp;#34;, &amp;#34;--tls-key&amp;#34;, &amp;#34;/etc/dendrite/server.key&amp;#34;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:fly.toml&#34; data-lang=&#34;yml:fly.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kill_signal&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SIGINT&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kill_timeout&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;internal_port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;8008&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;concurrency&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;hard_limit&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;soft_limit&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;handlers&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tls&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;443&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;handlers&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tls&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tcp_checks&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;interval&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10s&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;grace_period&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5s&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2s&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;mounts&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx_data&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/data&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl launch --name $app --no-deploy --region ams&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl volumes create &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;_data --size &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --region ams --app $app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# これはwebからやったほうがいい &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl certs add $domain&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# add : $app.fly.dev&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# add : $mydomain&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# deployする際はignoreに注意&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat .dockerignore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# userを作成します&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://matrix-org.github.io/dendrite/administration/createusers&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl ssh console&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /usr/bin/create-account -config /etc/dendrite/dendrite.yaml -username USERNAME -password xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここから&lt;a href=&#34;https://federationtester.matrix.org/&#34;&gt;test&lt;/a&gt;したあと、&lt;a href=&#34;https://matrix.org/&#34;&gt;web&lt;/a&gt;から&lt;a href=&#34;https://matrix.to/&#34;&gt;login&lt;/a&gt;しましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>fly.ioとmastodon</title>
      <link>https://syui.github.io/blog/post/2022/11/17/mastodon/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/11/17/mastodon/</guid>
      <description>&lt;p&gt;&lt;code&gt;fly.io&lt;/code&gt;を使ってみて、数ヶ月が経過したのでレビューです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://fly.io&#34;&gt;https://fly.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;fly.ioでは&lt;a href=&#34;https://github.com/mastodon/mastodon&#34;&gt;mastodon&lt;/a&gt;を動かしており、安定して動作しています。&lt;/p&gt;&#xA;&lt;p&gt;したがって、fly.ioの評価は最高です。cliからも使いやすく、一度立ち上げると、dockerfileを使用することもあり、トラブルが起こりにくい印象。&lt;/p&gt;&#xA;&lt;p&gt;また、毎月&lt;code&gt;$5&lt;/code&gt;以内ならサービスしてくれるようで、数ヶ月の運用が&lt;code&gt;$0&lt;/code&gt;でした。この辺も非常にありがたい。&lt;/p&gt;&#xA;&lt;p&gt;fly.ioのようなサービスは個人開発者、特に趣味でやっている開発者にとって必要です。例えば、投資家の方々や大企業は、fly.ioのスポンサーしてくれると嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;fly.ioは非常におすすめです。&lt;/p&gt;&#xA;&lt;p&gt;最近になってmastodonにbotを入れました。&lt;/p&gt;&#xA;&lt;p&gt;botを作るの楽しいのと、前から使っていたclientが改良されていくので嬉しい。botは&lt;a href=&#34;https://www.archlinux.jp/&#34;&gt;archlinux&lt;/a&gt;で動いています。&lt;/p&gt;&#xA;&lt;p&gt;clientは以下のframework等を使うと非常に便利。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ksk001100/seahorse&#34;&gt;https://github.com/ksk001100/seahorse&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.rs/mammut/latest/mammut/&#34;&gt;https://docs.rs/mammut/latest/mammut/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;botにdiffusionコマンドを追加したんだけど、そのおかげで画像生成する機会が増えました。&lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;stable-diffusion&lt;/a&gt;は、面倒で全く触ってなかった。&lt;/p&gt;&#xA;&lt;p&gt;新しい絵もできました。AIと手書きの合作です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_124.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;上記の絵はAIとの合作なのですが、生成した画像の人物が崩れていて、もったいないと思ったので、人物を手書きすることにしました。以下の2つが元になっています。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://mastodon.social/@syui/109358065305956601/embed&#34; class=&#34;mastodon-embed&#34; style=&#34;max-width: 100%; border: 0&#34; width=&#34;400&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;&lt;script src=&#34;https://static-cdn.mastodon.social/embed.js&#34; async=&#34;async&#34;&gt;&lt;/script&gt;&#xA;&lt;iframe src=&#34;https://mastodon.social/@syui/109362755591494337/embed&#34; class=&#34;mastodon-embed&#34; style=&#34;max-width: 100%; border: 0&#34; width=&#34;400&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;&lt;script src=&#34;https://static-cdn.mastodon.social/embed.js&#34; async=&#34;async&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;手動で画風を合わせるの、けっこう大変。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、雷電ナショナルを超えるもの</title>
      <link>https://syui.github.io/blog/post/2022/11/05/genshin/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/11/05/genshin/</guid>
      <description>&lt;p&gt;雷電ナショナルを超えるもの&amp;hellip;それは雷電ナショナルだ！&lt;/p&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt;&lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_02.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;螺旋12-3後半&#34;&gt;螺旋12-3後半&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;雷電, ナヒーダ, 行秋, ベネット&lt;/code&gt;の編成です。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダを使い始めて一番最初に思いついたのがこれでした。&lt;/p&gt;&#xA;&lt;p&gt;タイムは従来の雷電ナショナルより縮まっています。(あくまで私の場合&lt;/p&gt;&#xA;&lt;h3 id=&#34;編成例の解説&#34;&gt;編成例の解説&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/genshin_20221105_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;1-クレー-綾華-鍾離-万葉&#34;&gt;1. クレー, 綾華, 鍾離, 万葉&lt;/h4&gt;&#xA;&lt;p&gt;個人的にこの編成をよく使っています。&lt;/p&gt;&#xA;&lt;p&gt;オリジナルです。使ってる人は一度も見てない。(どこかにいるとは思う&lt;/p&gt;&#xA;&lt;p&gt;名前は&amp;hellip;クレーボンバーとでもしておきましょうか。&lt;/p&gt;&#xA;&lt;p&gt;クレーのスキルと万葉のスキル長押しの組み合わせが強いです。&lt;/p&gt;&#xA;&lt;p&gt;敵やフィールドによっては、万葉の爆発で凍結が可能になることがあります。それを見逃さず綾華の爆発を入れます。例えば、今回の螺旋12-3前半で使えると思います。&lt;/p&gt;&#xA;&lt;p&gt;また、鍾離の爆発による石化に綾華の爆発を当てるのもいいと思います。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-雷電-行秋-ベネット-香菱&#34;&gt;2. 雷電, 行秋, ベネット, 香菱&lt;/h4&gt;&#xA;&lt;p&gt;従来の雷電ナショナルです。螺旋でよく使用しています。どのような状況にも対応できます。ただし、少し雷が苦手です。&lt;/p&gt;&#xA;&lt;h4 id=&#34;3-ナヒーダ-雷電-行秋-香菱&#34;&gt;3. ナヒーダ, 雷電, 行秋, 香菱&lt;/h4&gt;&#xA;&lt;p&gt;こちらはナヒーダで殴るため、ナヒーダナショナルとでもしておきましょうか。雷の敵に対応できると思います。&lt;/p&gt;&#xA;&lt;p&gt;いまのところ、一番の編成は最初に挙げた&lt;code&gt;雷電, ナヒーダ, 行秋, ベネット&lt;/code&gt;だと個人的には思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダが最強の汎用性を持つ可能性</title>
      <link>https://syui.github.io/blog/post/2022/11/04/genshin/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/11/04/genshin/</guid>
      <description>&lt;p&gt;今回は、主にナヒーダの個人的な性能評価になります。単なる個人感想ですが、思ってることを書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最強の汎用性&#34;&gt;最強の汎用性&lt;/h3&gt;&#xA;&lt;p&gt;私は、原神では最強の汎用性を持つキャラが風元素になるだろうと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;原神には、生まれ持った変えられない要素と変えられる要素の2つがあります。&lt;/p&gt;&#xA;&lt;p&gt;変えられない要素の一つは、キャラが持つ元素です。&lt;/p&gt;&#xA;&lt;p&gt;変えられる要素としては、例えば、聖遺物や武器などが挙げられます。&lt;/p&gt;&#xA;&lt;p&gt;原神はオープンワールドです。&lt;/p&gt;&#xA;&lt;p&gt;そして、この世界はあらゆる元素で満ちています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、焚き火や水たまりを使い元素反応を起こすことが出来ます。&lt;/p&gt;&#xA;&lt;p&gt;そのため各元素を拡散できる風元素は、このゲームにおいて、とても汎用性が高いのです。&lt;/p&gt;&#xA;&lt;p&gt;それ故、一番汎用性が高いキャラは万葉だと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;例えば、1対1の戦闘を想定してみてください。相手は同一元素を持つアビスとします。&lt;/p&gt;&#xA;&lt;p&gt;この場合、万葉なら相手のシールドを削ることが出来ます。しかし、他のキャラだと厳しい。&lt;/p&gt;&#xA;&lt;p&gt;様々なタイプの元素を拡散できる万葉は、このような状況でも強いのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、草元素、そして、ナヒーダの登場により、私は、最強の汎用性を持つキャラを書き換えました。&lt;/p&gt;&#xA;&lt;p&gt;最強の汎用性を持ち、かつ将来においても最強である可能性が高いナヒーダに変更しました。&lt;/p&gt;&#xA;&lt;p&gt;草元素の汎用性は、風元素と同じレベルで高いと思います。&lt;/p&gt;&#xA;&lt;p&gt;将来的に最強の汎用性を持つキャラは、私は、草元素か風元素のどちらかになるだろうと思っています。&lt;/p&gt;&#xA;&lt;p&gt;そして、ナヒーダは草元素の神です。&lt;/p&gt;&#xA;&lt;p&gt;この水準の草元素キャラが今後、実装される可能性はそれほど高くない。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、万葉がウェンティの汎用性を上回った例があるので、絶対とは言い切れませんが。&lt;/p&gt;&#xA;&lt;h3 id=&#34;変えられる要素&#34;&gt;変えられる要素&lt;/h3&gt;&#xA;&lt;p&gt;原神には、変えられる要素と変えられない要素があります。生まれ持ったものは変えられません。しかし、それ以外のものは変えられます。&lt;/p&gt;&#xA;&lt;p&gt;今度は変えられる要素の話になります。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは、聖遺物や武器を変えることで、あらゆる役割全てをこなすことができます。&lt;/p&gt;&#xA;&lt;p&gt;メインアタッカー、サブアタッカー、サポート。そして、すべての元素に対応できます。&lt;/p&gt;&#xA;&lt;p&gt;裏からも表からも高火力を出せます。元素付与、元素反応の起点を作ることができます。バフと回復を同時に担うことができます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、低い水準なら、これらをこなせるキャラはたくさんいます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ナヒーダの場合、これらすべてを非常に高い水準でこなすことができます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは強すぎる&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;絶対に引いておきましょう。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;タイトル&lt;/th&gt;&#xA;          &lt;th&gt;内容&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎魔女ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;聖遺物の炎魔女4、熟知にして装備。過負荷、燃焼と列開花のダメージをあげます。万葉の長押し拡散が有効です&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;溶解ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;草で燃焼を継続させたあと、氷を継続的にぶつけます&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;金箔ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;森林4を装備し、熟知、熟知、与える治療効果をセット。武器に金箔をつけます&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;星三ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;武器は星3の魔導書論を装備。相当のダメージが出ます&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;遠距離ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;祭礼がおすすめ。弓キャラと組み合わせが強い。実はスキルだけでも相当のダメージが出る場合があります&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;video controls style=&#34;width:100%;&#34;&gt; &lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/genshin_nahida_battle_01.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;現時点でのランキング&#34;&gt;現時点でのランキング&lt;/h3&gt;&#xA;&lt;p&gt;あくまで個人的なランキングです。&lt;/p&gt;&#xA;&lt;p&gt;私の考えでは、このような順位付け自体が不正確です。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、キャラは環境によって強くもなるし、弱くもなるからです。しかし、ランキングはわかりやすいので、あえて不正確なランキングを明示しておきます。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;順位&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;          &lt;td&gt;岩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;万葉/夜蘭&lt;/td&gt;&#xA;          &lt;td&gt;風、水&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;私は、使っていて雷電よりナヒーダのほうが使いやすいし、強いと思いました。汎用性が高すぎるのです。&lt;/p&gt;&#xA;&lt;p&gt;原神では、たしかに、元素爆発はそのキャラクターにおいて、最も強い攻撃、強い要素だと考えています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、そのキャラが強いか弱いか見る際、爆発を評価することは合理的です。&lt;/p&gt;&#xA;&lt;p&gt;雷電にはそれがあります。元素爆発が強すぎる。&lt;/p&gt;&#xA;&lt;p&gt;ですが、それよりも上の要素が一つだけあります。&lt;/p&gt;&#xA;&lt;p&gt;それが元素反応です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ2凸</title>
      <link>https://syui.github.io/blog/post/2022/11/03/genshin/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/11/03/genshin/</guid>
      <description>&lt;p&gt;ナヒーダ2凸しました。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは、一見してそんなにダメージが出せているようには見えません。しかし、総合でとんでもないダメージが出ています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、何気なく使っていると、敵がいつの間にか死んでいる、そんな印象を受けます。&lt;/p&gt;&#xA;&lt;p&gt;螺旋で使ってみましたが、タイムが圧倒的に縮まりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガチャその1&#34;&gt;ガチャ、その1&lt;/h3&gt;&#xA;&lt;p&gt;3連でいきなり出ました。ここで撤退しようか、ちょっと考えちゃった。&lt;/p&gt;&#xA;&lt;p&gt;幸先がいいということで、そのままガチャを回していると、以下の結果になりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ナヒーダ2凸 : 残りの原石数46,000 -&amp;gt; 32,000、残りの運命30 -&amp;gt; 10&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;あまりに大勝でした。怖いくらいに大勝すぎた&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;ベネット無凸から4凸できました。地味に嬉しかったです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダの使い方&#34;&gt;ナヒーダの使い方&lt;/h3&gt;&#xA;&lt;p&gt;スキルが一番重要です。ナヒーダで出すダメージは、ほぼスキルになります。&lt;/p&gt;&#xA;&lt;p&gt;爆発はただ単にスキルのダメージ等を伸ばす効果です。&lt;/p&gt;&#xA;&lt;p&gt;元素反応(スキル追撃)を起こすため自身で通常攻撃します。&lt;/p&gt;&#xA;&lt;p&gt;この3点が主な使い方になります。&lt;/p&gt;&#xA;&lt;p&gt;つまり、スキル打って、爆発でスキルダメージあげて、通常攻撃でスキルを発動させるみたいな感じの使い方。&lt;/p&gt;&#xA;&lt;p&gt;ただし、元素反応ありきの発動(追撃)だったと思うので、前もって反応の下地は整えておいたほうがいいかも。例えば、雷電のスキルとか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダの完凸効果&#34;&gt;ナヒーダの完凸効果&lt;/h3&gt;&#xA;&lt;p&gt;スキルでマークしている敵、爆発範囲内、通常攻撃が当たると、最大で6回の草元素ダメージが発生します。&lt;/p&gt;&#xA;&lt;p&gt;これは特大ダメージとなるため、見栄えもいいですし、強いと思います。&lt;/p&gt;&#xA;&lt;p&gt;完凸していると、ほぼナヒーダだけで戦えると思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、雷電の完凸効果と比較すると、私は雷電のほうを評価します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;わからないこと&#34;&gt;わからないこと&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1凸の元素タイプのカウントは、モチーフ武器にも乗るのでしょうか?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;完凸の追撃は、10秒間とありますが、次の発生はどの時点になるのでしょうか?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;元素爆発を打ったときと考えるのが妥当ではあります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、元素爆発は水元素がチーム内にいると延長されてしまうので、完凸効果の追撃とバッティングするように思います。&lt;/p&gt;&#xA;&lt;p&gt;延長されればされるほど次の追撃までの時間が長くなってしまうので。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダの声と英語音声&#34;&gt;ナヒーダの声と英語音声&lt;/h3&gt;&#xA;&lt;p&gt;日本語音声から英語音声にしてみました。主に、ナヒーダのために。&lt;/p&gt;&#xA;&lt;p&gt;確かに、日本語のナヒーダの声は、ナヒーダの性格にマッチしていて、合っていると思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、個人的な好みではありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;そこで、英語音声にしてみると、一番しっくり来ました。&lt;/p&gt;&#xA;&lt;p&gt;これがナヒーダの性格に合っているかわかりませんが、私が求めていた声でした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;カメラ感度&#34;&gt;カメラ感度&lt;/h3&gt;&#xA;&lt;p&gt;設定でカメラの感度を変えましょう。&lt;/p&gt;&#xA;&lt;p&gt;マークしやすくなります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダの利点&#34;&gt;ナヒーダの利点&lt;/h3&gt;&#xA;&lt;p&gt;マークされた敵は連動します。一つでもマークされた敵に攻撃すると、マークされた全体を攻撃することができます。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの利点は、スキルのみでダメージを出せる点だと思います。&lt;/p&gt;&#xA;&lt;p&gt;爆発を打つのが煩わしいとき、もったいないときがあります。それでも爆発は溜まったらとにかく打っていくほうがいいのですが、それでも、ナヒーダは、爆発に依存しないダメージ源になるため、非常に便利で、どのような状況にも対応できると思います。&lt;/p&gt;&#xA;&lt;p&gt;対応力でいうと、すべての神の中で一番ではないでしょうか。これは、元素タイプが草であること、そして、スキルダメージが主であることが関係します。&lt;/p&gt;&#xA;&lt;p&gt;爆発は、敵によってなかなか溜めづらい事があります。元素が弱点だったり一致だったりする場合は特にそうです。&lt;/p&gt;&#xA;&lt;p&gt;そんなときにもナヒーダなら、元素エネルギーを回復しつつ、ダメージを出していけると思います。&lt;/p&gt;&#xA;&lt;p&gt;そのへんがナヒーダの最大の利点だと考えています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダの弱点を考える</title>
      <link>https://syui.github.io/blog/post/2022/10/25/genshin/</link>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/25/genshin/</guid>
      <description>&lt;h3 id=&#34;1-元素爆発&#34;&gt;1. 元素爆発&lt;/h3&gt;&#xA;&lt;p&gt;元素爆発の範囲が広いということは、威力が低く抑えられる可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;これは、原神のバランス調整的な考え方でもありますが、多くの場合に当てはまります。&lt;/p&gt;&#xA;&lt;p&gt;範囲が広く、威力も高く、永続ダメージを与え続け、元素付与を行えるような無双攻撃は存在しないと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-pt制限&#34;&gt;2. PT制限&lt;/h3&gt;&#xA;&lt;p&gt;炎、雷、水といったPT制限があります。&lt;/p&gt;&#xA;&lt;p&gt;反応が起こせない場合、ナヒーダは使えません。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、PT制限が付くからこそ、強く設定できるという側面があると思われるので、メリットとデメリットがあります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、PTの自由度が少ないということは、思った以上にデメリットも大きいかもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-浮いてる敵&#34;&gt;3. 浮いてる敵&lt;/h3&gt;&#xA;&lt;p&gt;通常、法器による攻撃というのは、浮いている敵にも当たります。&lt;/p&gt;&#xA;&lt;p&gt;それが法器キャラの一つの利点でもあります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ナヒーダの場合、地面からの攻撃に見えるので、浮いている敵に当たるのでしょうか。原神は、割と現実に忠実なところがあるので、当たらない可能性が高いと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-印の消滅&#34;&gt;4. 印の消滅&lt;/h3&gt;&#xA;&lt;p&gt;敵を倒すと、新たな敵にまた印を付け直さなければならないという弱点があります。&lt;/p&gt;&#xA;&lt;p&gt;ただ、クールタイムが短いことから、それほど問題になる場面は多くないと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;5-移動の遅さ&#34;&gt;5. 移動の遅さ&lt;/h3&gt;&#xA;&lt;p&gt;小さいので移動が遅いです。&lt;/p&gt;&#xA;&lt;p&gt;けど、かわいいので問題ありません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、計画を大きく変更した</title>
      <link>https://syui.github.io/blog/post/2022/10/24/genshin/</link>
      <pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/24/genshin/</guid>
      <description>&lt;p&gt;ナヒーダの完凸を目指す上で、これまでの計画を大きく変更する必要がありました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;計画の変更&#34;&gt;計画の変更&lt;/h3&gt;&#xA;&lt;p&gt;これまでの計画というのは、下記の表(空枠)にあるように、各元素ごとに強キャラ2体を確保していくことでした。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;神&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;保有&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;風&lt;/td&gt;&#xA;          &lt;td&gt;ウェンティ&lt;/td&gt;&#xA;          &lt;td&gt;万葉&lt;/td&gt;&#xA;          &lt;td&gt;無凸/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;岩&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;mdash;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;mdash;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/&amp;mdash;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/完凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ベネット/香菱&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;氷&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;綾華&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;実はこれでも新キャラの確保はできる限り抑えるようにしています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、私が夜蘭を引かない理由は、水神が今後の実装で予想されるからです。&lt;/p&gt;&#xA;&lt;p&gt;行秋の完凸を既に持っているので、水枠はこれで埋まります。夜蘭を入れる余地がありません。&lt;/p&gt;&#xA;&lt;p&gt;夜蘭は絶対に引いておいたほうがいいキャラではありますが、水神が将来実装されるので、私は引かないと思います。&lt;/p&gt;&#xA;&lt;p&gt;今回、ナヒーダの完凸を目指すにあたって、大きな計画の変更があります。&lt;/p&gt;&#xA;&lt;p&gt;変更する方向性はただ一つ。&lt;/p&gt;&#xA;&lt;p&gt;それは&lt;code&gt;凸を目指す&lt;/code&gt;こと。&lt;/p&gt;&#xA;&lt;p&gt;今までは無凸を確保したらすぐに撤退という計画をとっていました。&lt;/p&gt;&#xA;&lt;p&gt;これを星5キャラ前提ではありますが&lt;code&gt;凸を目指すキャラを考えてみる&lt;/code&gt;に変更しました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、凸を考えていくと、新しいキャラ、つまり強キャラを引いていくことがほとんどできなくなります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ナヒーダの完凸を目指すとして、それがナヒーダ無凸を加えた新キャラ6体分に相当するので、リスキー、かつコスパが悪い、と言えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;上記を前提に新しい表を作ってみます。すると、以下のようになりました。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;神&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;凸&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;風&lt;/td&gt;&#xA;          &lt;td&gt;ウェンティ&lt;/td&gt;&#xA;          &lt;td&gt;万葉&lt;/td&gt;&#xA;          &lt;td&gt;無/無&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;岩&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;          &lt;td&gt;ノエル&lt;/td&gt;&#xA;          &lt;td&gt;無/完&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;          &lt;td&gt;北斗orフィッシュル&lt;/td&gt;&#xA;          &lt;td&gt;2凸/完&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;主人公&lt;/td&gt;&#xA;          &lt;td&gt;完/完&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/完&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ベネット/香菱&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/完&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;氷&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;綾華&lt;/td&gt;&#xA;          &lt;td&gt;&amp;mdash;-/無&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;確保する分は今後実装予定の神枠だけ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダ描いた</title>
      <link>https://syui.github.io/blog/post/2022/10/23/genshin/</link>
      <pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/23/genshin/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/illust_genshin_nahida_fan_art.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/illust_genshin_nahida_fan_art_field.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;#genshin&lt;/code&gt;, &lt;code&gt;#nahida&lt;/code&gt;, &lt;code&gt;#fanart&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダの凸を考える</title>
      <link>https://syui.github.io/blog/post/2022/10/22/genshin/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/22/genshin/</guid>
      <description>&lt;p&gt;今回は、個人的なナヒーダの評価をまとめていきたいと思います。タイトルには凸とありますが、主に凸の話になると思うので、そう書いていますが、凸に限らず、ナヒーダに関するすべてを今回は見ていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダを凸する必要性&#34;&gt;ナヒーダを凸する必要性&lt;/h3&gt;&#xA;&lt;p&gt;まず、原神やってる人が一番気になるナヒーダを凸する必要性についてです。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、凸する必要性はありません。ないと思います。&lt;/p&gt;&#xA;&lt;p&gt;あらゆるキャラは凸する必要がありません。&lt;/p&gt;&#xA;&lt;p&gt;それで十分に攻略可能だと思われます。凸しなくても楽しめるゲームです。&lt;/p&gt;&#xA;&lt;p&gt;いや、むしろ完凸ばかりしてしまうと、強すぎて楽しめないとかまであるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私に限っては今回、ナヒーダを凸したい理由がいくつかあるのです。&lt;/p&gt;&#xA;&lt;p&gt;最も重要で、かつ一般的な理由の一つとしては&lt;code&gt;今まで一度も星5キャラの凸というものを試してみたことがないから&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;私は、これをナヒーダでやることに決めました。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダの姿が公式に登場して以降、私は初めて原神のキャラについて詳細に調べ始めました。&lt;/p&gt;&#xA;&lt;p&gt;そこでは、これまでは見たいとも思わなかったリーク情報に当たり始めます。&lt;/p&gt;&#xA;&lt;p&gt;ここではじめて、私が「ナヒーダにかなり注目しているらしい」ことを知ります。ああ、自分はナヒーダにこんな熱中してたのか。&lt;/p&gt;&#xA;&lt;p&gt;実は、原神はクレーがかわいかったから始めたゲームでした。&lt;/p&gt;&#xA;&lt;p&gt;なにかの記事でクレーが載ってて、かわいいと思ったのです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私が始めた当初、クレーは既に実装済み。ゲームをやればクレーがわかるので、さほど調べることもありません。&lt;/p&gt;&#xA;&lt;p&gt;クレーを使いたいからゲームをやろう。そうすれば自ずとわかるでしょ。それだけでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ナヒーダに関しては、現時点ですべてが謎に包まれています。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、まだ実装されてないからです。&lt;/p&gt;&#xA;&lt;p&gt;とは言え、これほどまでに気にしたキャラですから、凸しようと思ったのです。&lt;/p&gt;&#xA;&lt;p&gt;凸だけではありません。&lt;/p&gt;&#xA;&lt;p&gt;私は今まで王冠もあまり使ったことがありませんでした。クレーですら天賦はすべてLV9です。&lt;/p&gt;&#xA;&lt;p&gt;ですから、ナヒーダは、この際、完全強化、完全育成する予定です。&lt;/p&gt;&#xA;&lt;p&gt;無課金でも、一人くらい最強を目指すキャラを決めてみるのも楽しそうだ、とそう思ったのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;本当は完凸したほうがいいキャラ&#34;&gt;本当は完凸したほうがいいキャラ&lt;/h3&gt;&#xA;&lt;p&gt;私は、雷電が最強だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;私が最も評価するステータス、それが元素チャージ効率だからです。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、原神においては、元素爆発が最も重要な戦闘要素になるからです。&lt;/p&gt;&#xA;&lt;p&gt;正直なところ、完凸を目指すキャラを一人決めろといわれたら、私は、雷電が最も最適だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;上記の要素から言って、ナヒーダが雷電を超える、ということは、おそらく、ないでしょう。そんなふうに思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;キャラ数と原神インタビュー&#34;&gt;キャラ数と原神インタビュー&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://automaton-media.com/articles/newsjp/20221004-221503/&#34;&gt;https://automaton-media.com/articles/newsjp/20221004-221503/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本当に重要なことがたくさん書いてあるので、原神をプレイしている人は一読するのをおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;ここから様々なことがわかりますが、一つは、原神のキャラはインフレしない。インフレしないようにデザインされるであろうということが予想されます。&lt;/p&gt;&#xA;&lt;p&gt;私は、育成するキャラを非常に限定しており、今後も使っていくキャラ、引いていくキャラを限定する方向で考えています。&lt;/p&gt;&#xA;&lt;p&gt;現在の計画では、狙っている空枠は以下のようになります。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;神&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;保有&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;風&lt;/td&gt;&#xA;          &lt;td&gt;ウェンティ&lt;/td&gt;&#xA;          &lt;td&gt;万葉&lt;/td&gt;&#xA;          &lt;td&gt;無凸/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;岩&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;          &lt;td&gt;ナヒーダ&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/完凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ベネット/香菱&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;氷&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;綾華&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;この表から言えることは、今後、強いと言われるキャラをそのまま引いていくと、キャラ過剰になることが予測されます。私の場合、おそらく、風キャラはもう取らない。&lt;/p&gt;&#xA;&lt;p&gt;私は、せっかく育てたキャラは長く使っていきたいと考えているため、キャラ過剰と言えるような状態は、できる限り回避したほうがよさそうと考えています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、無課金の安泰と挑戦</title>
      <link>https://syui.github.io/blog/post/2022/10/21/genshin/</link>
      <pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/21/genshin/</guid>
      <description>&lt;p&gt;原神の無課金攻略は、持っているキャラで決まると思います。快適性が。&lt;/p&gt;&#xA;&lt;p&gt;このキャラは強いといわれるキャラを確保していくことが重要になり、凸は必要ありません。&lt;/p&gt;&#xA;&lt;p&gt;そして、今現在の私の状況、つまり、手持ちキャラと原石数は、これだけあれば、将来的にも安泰と言えるような状況にあります。&lt;/p&gt;&#xA;&lt;p&gt;当初目標にしていたキャラはすべて確保済みで、原石は運命を換算した上で4,5000ほどあります。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今後の実装が予想される草神、水神、炎神、氷神をすべて確保できると推定できます。無課金攻略では絶対的に確保推奨されると予想されます。&lt;/p&gt;&#xA;&lt;p&gt;私は、このまま順当に予定通りに原石を貯めガチャを回していくだけで安泰といえる位置づけになります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、草国の実装、そして、ナヒーダの登場によって、私の心は揺らいでいます。&lt;/p&gt;&#xA;&lt;p&gt;無課金攻略において「このキャラは好きだから、最強にしよう、このキャラにすべてつぎ込む！」というよう方針はおすすめできません。私自身、そのような方針を取ることに迷いがあります。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、好きなようにやるのが原神。しかし、この方針は快適攻略が困難になる可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、安定、安泰のみを考え、ただ淡々と定石をこなすだけの原神は、それはそれで少し寂しい気もします。&lt;/p&gt;&#xA;&lt;p&gt;一度、好きなキャラ、タイミングがあったキャラに「持てる原石すべて注ぎ込み爆死する」というのもいいかもしれない。そんなふうに思っています。&lt;/p&gt;&#xA;&lt;p&gt;いや、それはダメだ、もったいない、将来のことを考えろ。このままいけば安泰だ。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;でも、私は、ナヒーダの完凸を目指すことに決めました。手が届けばモチーフ武器も目指します。&lt;/p&gt;&#xA;&lt;p&gt;無謀すぎるというのは、全くそのとおり。そもそも原石数が足りてない。もったいないというのもそのとおり。無凸が一番。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ナヒーダは、見た目が好き。&lt;/p&gt;&#xA;&lt;p&gt;だから、こいつを最強にしてみることにする。性能的、元素的に無理かもしれないけど。&lt;/p&gt;&#xA;&lt;p&gt;本当はクレーで最強を目指そうかと思ったこともあったんだけど、タイミングが合わなかった。たしか当初、クレーの凸を目指そうか迷ったことがありました。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、私は、ナヒーダがピックアップされたら原石全部使います。&lt;/p&gt;&#xA;&lt;p&gt;完凸届かなかった場合、2回目、3回目のピックアップで狙っていく予定。&lt;/p&gt;&#xA;&lt;p&gt;完凸、いけるかなあ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画描いた3</title>
      <link>https://syui.github.io/blog/post/2022/10/20/manga/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/20/manga/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/manga/51.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/52.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/53.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/54.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/55.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/56.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/57.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/58.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/59.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ナヒーダを引こうか迷ってる話</title>
      <link>https://syui.github.io/blog/post/2022/10/15/genshin/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/15/genshin/</guid>
      <description>&lt;p&gt;今回は、ナヒーダを引こうか迷ってる話をします。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダは、クラクサナリデビ、草神と呼ばれる原神のキャラで、エルフ耳の幼女です。&lt;/p&gt;&#xA;&lt;p&gt;さて、まずは個人的な性癖の話は置いといて(あとで書く)、原神の方針をどのように考えているかを書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;復刻の是非&#34;&gt;復刻の是非&lt;/h3&gt;&#xA;&lt;p&gt;この前、原神を開発しているmihoyoが方針について質疑応答している記事がありました。それを読んでの感想になります。&lt;/p&gt;&#xA;&lt;p&gt;私は、youtubeなどで原神を辛口批評している動画を見たことがあります。&lt;/p&gt;&#xA;&lt;p&gt;そこでは原神の良いところが述べられたあと、原神はここを改善すべき、こうすべきだ、ああすべきだという意見が述べられていました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私は、それらすべて原神の良いところなのにと思いました。&lt;/p&gt;&#xA;&lt;p&gt;その一つが「復刻の是非」です。&lt;/p&gt;&#xA;&lt;p&gt;新規の人が復刻を待ち望んでいます。復刻武器を手にできないのは不公平だ、改善すべきだという意見があります。&lt;/p&gt;&#xA;&lt;p&gt;私は、復刻には反対です。&lt;/p&gt;&#xA;&lt;p&gt;つまり、復刻を行わない原神の方針は正しいとそう考えているのです。&lt;/p&gt;&#xA;&lt;p&gt;このように考える理由はいくつかあります。&lt;/p&gt;&#xA;&lt;p&gt;まずは開発側が一度復刻の誘惑に取り憑かれるとそこから抜け出すのは難しいと考えているからです。&lt;/p&gt;&#xA;&lt;p&gt;確かに、復刻を待ち望むユーザーの声は多く、そして、私自身も復刻を望んでいるアイテムや武器がいくつかあります。&lt;/p&gt;&#xA;&lt;p&gt;それでも私は、復刻を一切行わないmihoyoの態度は、完全に正しいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;これまで多くの開発運営が復刻を行ってきました。そうすれば手軽にユーザーの好感や評価を得られることができるからです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、そういった運営は、やがて復刻しかやらなくなり、新しいものを作っていく活力を失います。ユーザーも「どうせまた復刻が来るんだろ」と言ってゲームから離れていきました。イベント配布に価値が全く無くなってしまったのです。&lt;/p&gt;&#xA;&lt;p&gt;復刻しないことで、長く遊ぶユーザーの価値は大切にされ、新規で入ってきた人も、これを逃せば次がないイベント、ゲームを続けようという気持ちになります。&lt;/p&gt;&#xA;&lt;p&gt;原神を開発しているmihoyoは、とてつもないセンスを感じます。&lt;/p&gt;&#xA;&lt;p&gt;キャラクターやモデル、衣装やパラメーター、コンセプトや物語、そして、方針に至るまで、本当にセンスがありすぎる。&lt;/p&gt;&#xA;&lt;p&gt;復刻という楽な道、誘惑に駆られることなく、ただただ新しい物語やキャラクターを作り続けているのが原神です。&lt;/p&gt;&#xA;&lt;p&gt;これがどれほど大変で困難な選択だったのか、私は理解できます。&lt;/p&gt;&#xA;&lt;p&gt;復刻を連発すれば、確かに、楽に簡単にユーザーの好感や評価を得られることでしょう。&lt;/p&gt;&#xA;&lt;p&gt;しかし、mihoyoは、あえてそのような楽な道は選ばなかったのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;pvpの導入&#34;&gt;PvPの導入&lt;/h3&gt;&#xA;&lt;p&gt;少し関連して、PvPの導入についても私が思っていることを書きます。&lt;/p&gt;&#xA;&lt;p&gt;原神にはPvPが導入されていません。&lt;/p&gt;&#xA;&lt;p&gt;今この時代のゲームとしては異例のことです。&lt;/p&gt;&#xA;&lt;p&gt;それはなぜか?&lt;/p&gt;&#xA;&lt;p&gt;PvPを導入すると運営が楽だからです。簡単だからです。&lt;/p&gt;&#xA;&lt;p&gt;最も簡単に楽に半永久的なコンテンツを提供できる仕組み、それがPvPであり、人と人とを戦わせるゲームなのです。&lt;/p&gt;&#xA;&lt;p&gt;開発側は、ただ人々を戦わせる闘技場を作り、ルールを決めるだけ。&lt;/p&gt;&#xA;&lt;p&gt;あとは、そこに人々を押し込んで争わせる。&lt;/p&gt;&#xA;&lt;p&gt;それだけで半永久的に人々は戦い続けてくれます。&lt;/p&gt;&#xA;&lt;p&gt;敵を作る必要もなければ、ボスを用意する必要もありません。調整する必要もなければ、キャラや物語を作る必要すらない。&lt;/p&gt;&#xA;&lt;p&gt;このように最も楽にかつ効率的に金儲けができる仕組みが既にあり、多くの運営がそれをゲームに導入するのに、なぜかmihoyoはそれを採用しなかったのです。&lt;/p&gt;&#xA;&lt;p&gt;ここにも、mihoyoには、なにか信念、変わらない方針みたいなものがあるのではないかと感じます。&lt;/p&gt;&#xA;&lt;p&gt;mihoyoは楽な道を選ばない。あえて簡単な道を選ばず、そして、結果を出すのです。&lt;/p&gt;&#xA;&lt;p&gt;それだけの力があり、そして、センスがある。これが私の原神(mihoyo)が採用してきた方針の評価です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;結論&#34;&gt;結論&lt;/h3&gt;&#xA;&lt;p&gt;結論として、私がmihoyoになにかアドバイスや意見があるのかというと、まったくありません。&lt;/p&gt;&#xA;&lt;p&gt;私がmihoyoに言えることはなにもありません。&lt;/p&gt;&#xA;&lt;p&gt;mihoyoは、現時点で正しい方針を採用し続けています。&lt;/p&gt;&#xA;&lt;p&gt;そして、結果が出ている。&lt;/p&gt;&#xA;&lt;p&gt;このようなmihoyoの方針というのは、とても困難なことであり、楽な道では決してありません。&lt;/p&gt;&#xA;&lt;p&gt;復刻やPvPを導入しないことでユーザーの批判も多かったことでしょう。&lt;/p&gt;&#xA;&lt;p&gt;にもかかわらず方針を曲げずここまで来た。&lt;/p&gt;&#xA;&lt;p&gt;仮に冒頭で述べたyoutuberの意見や多くの人々、ユーザーの要望通りのゲームを作っても売れなかったと思います。&lt;/p&gt;&#xA;&lt;p&gt;そもそもmihoyoはセンスがありすぎる。&lt;/p&gt;&#xA;&lt;p&gt;私がなにか意見する必要など全くなく、アドバイスできることもありません。&lt;/p&gt;&#xA;&lt;p&gt;mihoyoはmihoyoのやりたいようにやればいい。それで十分にうまくいくと私は考えています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ナヒーダを引こうか迷っている話&#34;&gt;ナヒーダを引こうか迷っている話&lt;/h3&gt;&#xA;&lt;p&gt;次に、個人的な話に移ります。&lt;/p&gt;&#xA;&lt;p&gt;ナヒーダを引こうか迷っている話です。&lt;/p&gt;&#xA;&lt;p&gt;「え？ナヒーダを引かないの？あなた、クレーが好きなんじゃないの。つまり、幼女が好きなんでしょ？なんで引かないの？」&lt;/p&gt;&#xA;&lt;p&gt;中にはこのように考える人もいるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;このことについて少しだけ私の事情や性癖の話をしたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;この意見については、正しくもあり、間違いでもある、と私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、私個人の印象(いわゆるロリコンという印象)は読んでいる人が決めるもので、私が決めるものではありません。&lt;/p&gt;&#xA;&lt;p&gt;それを前提に話をすすめますが、実は、私はクレーが好きなのであって、幼女が好きなわけではないのです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、私が好きなキャラは、アニメ、けいおんの平沢唯です。平沢唯は高校生(大学生)で幼女ではありません。&lt;/p&gt;&#xA;&lt;p&gt;原神にはクレーの他にも小さいキャラがたくさんいます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、七七、ドリー、早柚、ディオナなど。&lt;/p&gt;&#xA;&lt;p&gt;私、彼女たちが好きって一度でも言ったことありましたっけ?&lt;/p&gt;&#xA;&lt;p&gt;ありません。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、それほど好きではないからです。&lt;/p&gt;&#xA;&lt;p&gt;私が可愛いと思ったキャラは、クレーの次が&lt;code&gt;蛍&lt;/code&gt;、その次が&lt;code&gt;コレイ&lt;/code&gt;でした。他にも可愛いキャラいっぱいいますが。&lt;/p&gt;&#xA;&lt;p&gt;ここに幼女キャラは、入っていますか?&lt;/p&gt;&#xA;&lt;p&gt;入っていません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>くいなちゃん描いた3</title>
      <link>https://syui.github.io/blog/post/2022/10/12/illust/</link>
      <pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/12/illust/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://kuina.ch/others/license&#34;&gt;kuina-chan&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/kuina_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/c_09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた123</title>
      <link>https://syui.github.io/blog/post/2022/10/08/illust/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/08/illust/</guid>
      <description>&lt;p&gt;久しぶりに背景も描いた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_123.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた122</title>
      <link>https://syui.github.io/blog/post/2022/10/07/illust/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/10/07/illust/</guid>
      <description>&lt;p&gt;AIの背景はきれいでらくなんだけど、あまり楽しくない気がするので、自分で書く背景の割合を増やしていこう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_122.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook airの初期設定</title>
      <link>https://syui.github.io/blog/post/2022/09/29/macbook/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/29/macbook/</guid>
      <description>&lt;p&gt;macbook air(m1)をカスタムオプションでapple storeから購入したので、初期設定でやったことをまとめます。&lt;/p&gt;&#xA;&lt;p&gt;m1を選択した理由は、先っぽが尖っているからです。この形状が昔から好きだったので、m1を選択しました。&lt;/p&gt;&#xA;&lt;p&gt;まず、どのos(linuxを除く)にも言えることですが、macでもすべての項目をdisableしていく作業、つまり、設定をスキップしたり、「後で設定する」を選択していく作業から始まります。&lt;/p&gt;&#xA;&lt;p&gt;最初にインストールしたソフトウェアとサービスの一覧です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;使ってるソフトウェア&#34;&gt;使ってるソフトウェア&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;xcode, etc&amp;hellip; : &lt;a href=&#34;https://developer.apple.com/jp/&#34;&gt;https://developer.apple.com/jp/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;chrome : &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;https://www.google.com/chrome/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;google日本語入力 : &lt;a href=&#34;https://www.google.co.jp/ime/&#34;&gt;https://www.google.co.jp/ime/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;iterm2 : &lt;a href=&#34;https://iterm2.com/&#34;&gt;https://iterm2.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;homebrew : &lt;a href=&#34;https://github.com/Homebrew/brew&#34;&gt;https://github.com/Homebrew/brew&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;karabiner : &lt;a href=&#34;https://github.com/pqrs-org/Karabiner-Elements&#34;&gt;https://github.com/pqrs-org/Karabiner-Elements&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;shiftit : &lt;a href=&#34;https://github.com/fikovnik/ShiftIt&#34;&gt;https://github.com/fikovnik/ShiftIt&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;keepassxc : &lt;a href=&#34;https://github.com/keepassxreboot/keepassxc&#34;&gt;https://github.com/keepassxreboot/keepassxc&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;使ってるサービス&#34;&gt;使ってるサービス&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;github : &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;twitter : &lt;a href=&#34;https://twitter.com/&#34;&gt;https://twitter.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;google : &lt;a href=&#34;https://www.google.com/&#34;&gt;https://www.google.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;youtube : &lt;a href=&#34;https://www.youtube.com/&#34;&gt;https://www.youtube.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;heroku : &lt;a href=&#34;https://heroku.com/&#34;&gt;https://heroku.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;fly.io : &lt;a href=&#34;https://fly.io/&#34;&gt;https://fly.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;northflank : &lt;a href=&#34;https://northflank.com/&#34;&gt;https://northflank.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;sketchfab : &lt;a href=&#34;https://sketchfab.com/&#34;&gt;https://sketchfab.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;amazon : &lt;a href=&#34;https://www.amazon.co.jp/&#34;&gt;https://www.amazon.co.jp/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;mailgun : &lt;a href=&#34;https://mailgun.com/&#34;&gt;https://mailgun.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;cloudflare : &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;https://www.cloudflare.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;freenom : &lt;a href=&#34;https://www.freenom.com/&#34;&gt;https://www.freenom.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;wiki : &lt;a href=&#34;https://wiki.archlinux.jp/&#34;&gt;https://wiki.archlinux.jp/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;slack : &lt;a href=&#34;https://archlinuxjp.slack.com/&#34;&gt;https://archlinuxjp.slack.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;reddit : &lt;a href=&#34;https://www.reddit.com/&#34;&gt;https://www.reddit.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;macの個人設定&#34;&gt;macの個人設定&lt;/h3&gt;&#xA;&lt;p&gt;まず、電源offのショートカットがないので作ります。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;キーボード -&amp;gt; ショートカット -&amp;gt; アプリケーション -&amp;gt; システム終了...&lt;/code&gt; : Ctrl + Command + L&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ここで&lt;code&gt;システム終了...&lt;/code&gt;と&lt;code&gt;...&lt;/code&gt;まで日本語入力して設定します。これは、メニュー項目の表示にあたります。macは表示項目で操作するようです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた121</title>
      <link>https://syui.github.io/blog/post/2022/09/25/illust/</link>
      <pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/25/illust/</guid>
      <description>&lt;p&gt;新しいペンを買ったので、ちょっと練習。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_121.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモン、アルセウスの思い出</title>
      <link>https://syui.github.io/blog/post/2022/09/24/pogo/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/24/pogo/</guid>
      <description>&lt;p&gt;家にあったフィギュア見ながらアイコン描いてた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_make_46.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は少しポケモンの思い出話をします。&lt;/p&gt;&#xA;&lt;p&gt;私の中で思い出深いポケモンというと、2匹のポケモンが思い浮かびます。&lt;/p&gt;&#xA;&lt;p&gt;まずは最初に旅をしたリザードン。最初から最後までずっとリザードン、XYもメガリザードンXばかり使ってたなあ。リザードンは一番最初に好きになったポケモンでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/pogo/pogo_05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;そして、もう一つは伝説(幻)で一番熱中し追いかけた記憶があるアルセウス。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/pogo/pogo_04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;多分、アルセウスを追いかけてたときがポケモンやってて一番熱中してたと思う。&lt;/p&gt;&#xA;&lt;p&gt;アルセウス欲しさのためネットをやり始め、そこで優しい人からアルセウスをもらいました。&lt;/p&gt;&#xA;&lt;p&gt;ですから、私がパソコンをやり始めた時期というのは、アルセウスを追いかけてた時期とかぶります。&lt;/p&gt;&#xA;&lt;p&gt;だからなんだって言う話なのですが、そんな思い出も今のゲームに受け継いでいけたらなあと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンやってると、みんな好きなポケモンがいるものです。&lt;/p&gt;&#xA;&lt;p&gt;twitterやyoutubeを見てると、そんなアイコンを見かけたりします。&lt;/p&gt;&#xA;&lt;p&gt;だから私も気が向いたので作ってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;男の子のモデルはpokemongoで使ってるアバターをもとに作りました。レッドをモデルにした衣装を使ってる。&lt;/p&gt;&#xA;&lt;p&gt;女の子はアイで、この前に撮ったフィギュア写真をもとに作りました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた120</title>
      <link>https://syui.github.io/blog/post/2022/09/23/illust/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/23/illust/</guid>
      <description>&lt;p&gt;イラスト描きました。刀を鞘に収めるポーズだけど鞘がない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_120.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵師はどうやって自分が描いたことを証明するのか？</title>
      <link>https://syui.github.io/blog/post/2022/09/22/illust/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/22/illust/</guid>
      <description>&lt;p&gt;イラスト描きました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_119.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は、それとは別に「絵師がどうやって自分が描いたことを証明するの？」という疑問について考えてみたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、私は絵師ではありません。全く絵が描けません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、自分が描いたことの証明は可能だと思っていて、今回はその一例を紹介することにします。&lt;/p&gt;&#xA;&lt;p&gt;私は、自分が描いたものをどのように描いたか、すべて保存しています。&lt;/p&gt;&#xA;&lt;p&gt;というより、私が使っているアプリは履歴を自動的に保存するようになっている。&lt;/p&gt;&#xA;&lt;p&gt;そのため、やろうと思えば自分が描いたことの証明は簡単にできます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、私は横顔を書くのが苦手です。絵を書いているときの様子を自己証明とともに上げてみることにします。&lt;/p&gt;&#xA;&lt;p&gt;&lt;video src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/illust_02.mp4&#34; width=&#34;100%&#34; controls&gt;&lt;/video&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回、自己証明に物理バッジを使っています。しかし、例えば、スマホのtwitter画面でもなんでもいいと思います。そういったものを動画に添えて撮影したものを投稿すればいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;といっても、こんなことやる意味も暇も普通はありませんので、だれもやっていないのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;これをテクノロジーで簡略化する場合、正直、完全な証明は難しいと考えられます。今の所、人間が目視で確認するしか方法はありません。&lt;/p&gt;&#xA;&lt;p&gt;いくつか良さそうな候補として思いつくのは、最初に上げた画像にprivate-keyを紐付け同じ画像をnftにも上げます。そして、public-keyをブロックチェーンの独自コントラクト内に焼き付ける。nftは時間が記録されますから、一番最初にネットワーク上に置かれた画像と鍵が合います。img binaryもdiffして一致を確認し、最初に鍵があったものを所有者とみなせばいい。&lt;/p&gt;&#xA;&lt;p&gt;しかし、すべての絵師がこの方法に従う以外、自分が描いたことの証明にはなりません。&lt;/p&gt;&#xA;&lt;p&gt;絵が完成した時点で上記の処理が自動化されていたとしましょう。この場合、最初にその絵を書いた人がわかります。ですが、すべての絵師がこの方法に従うかというと現時点でありえない。&lt;/p&gt;&#xA;&lt;p&gt;したがって、nftに画像を上げるイコールで自分が描いたことの証明にはなりません。他の人が勝手に上げただけなのかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;nftにもあらゆる可能性が考えられますが、現時点でそこまで有効なものではありません。&lt;/p&gt;&#xA;&lt;p&gt;自分が描いたことの証明は、このような動画+証明書を目視で確認するしかないと思われます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3Dモデルを作ってみる3</title>
      <link>https://syui.github.io/blog/post/2022/09/18/3dscan/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/18/3dscan/</guid>
      <description>&lt;p&gt;scaniverseが&lt;code&gt;LiDAR&lt;/code&gt;なしでも使えるようになりました。これはnianticが買収してから無料になった3Dモデルが作成できるアプリです。&lt;/p&gt;&#xA;&lt;p&gt;trinoは以前から&lt;code&gt;LiDAR&lt;/code&gt;なしでも使えて便利だったようですが、ここに来てscaniverseが有力になりました。&lt;/p&gt;&#xA;&lt;p&gt;したがって、この2つのアプリを簡単に比較してみたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;以下は同じものをスキャンした例です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;scaniverse&#34;&gt;scaniverse&lt;/h3&gt;&#xA;&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;figure&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share src=&#34;https://sketchfab.com/models/9e65c253cacd42c2b5d579a8e5523b72/embed?autostart=1&amp;camera=0&#34; width=&#34;100%&#34; height=&#34;480&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;&#xA;&lt;p&gt;公平に見て、scaniverseのほうが使い勝手が良かったのと、trinoではモデル生成できなかった写真立て(カード立て)がscaniverseではできました。&lt;/p&gt;&#xA;&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;card&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;100%&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/9a80a6d6cf6f4b08906505c7f945d3ce/embed?autostart=1&amp;camera=0&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;&#xA;&lt;p&gt;したがって、現時点でscaniverseのほうがおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、しっかりとした3Dモデルはtrinoのほうが作れていると感じます。&lt;/p&gt;&#xA;&lt;p&gt;scaniverseは一見してきれいに見えますが、表面的な部分のみで、内側を読み取るのは苦手なようです。&lt;/p&gt;&#xA;&lt;p&gt;scaniverseは、内部を作り込むのではなく、無理やり表面に結合するというような形になることが多かった。&lt;/p&gt;&#xA;&lt;p&gt;これは、&lt;code&gt;LiDAR&lt;/code&gt;が使えるかどうかで変わってくるのかもしれません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、無課金の1年で育成や武器、螺旋はどこまでできる？</title>
      <link>https://syui.github.io/blog/post/2022/09/18/genshin/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/18/genshin/</guid>
      <description>&lt;p&gt;今回は、完全無課金の1年で原神はどこまでできるのかを紹介します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;無課金で攻略できるの&#34;&gt;無課金で攻略できるの？&lt;/h3&gt;&#xA;&lt;p&gt;結論から言うと、無課金でも攻略できます。&lt;/p&gt;&#xA;&lt;p&gt;ただし、通常の場合と比べ、難易度は遥かに高いと考えてもらえれば正確です。&lt;/p&gt;&#xA;&lt;p&gt;世の中には「螺旋星36なんて無課金でも10日で簡単にとれる」というような情報がたくさんあります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これらは間違った理解であり、誇張された事実である可能性が非常に高いと考えられます。つまり、大多数の実感とは大きく異なります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、2chに書き込まれる情報の多くは事実に基づいておらず、誇張され、嘘や見栄に溢れており、それらの情報の信憑性は全くないということが明らかにされています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、そういったものを見て判断すると、それらは誤った理解に繋がりかねないと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;現実的に信憑性のある情報は個人ブログ等に掲載されている傾向にあります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、こちらの記事は、非常に現実的な内容となっており、おおよそ大多数の実感に近いものだと考えられます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://okichan.site/genshin-mukakin-tumaranai&#34;&gt;https://okichan.site/genshin-mukakin-tumaranai&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;課金と無課金は、両者に異なった楽しみかたが存在すると思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、課金には「あるキャラクターをかっこよく使いたい」、「最強を目指したい」という楽しみ方があります。&lt;/p&gt;&#xA;&lt;p&gt;無課金には「コツコツ続け徐々に強くなっていく」という楽しみ方があるように感じます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、人それぞれですし、目指すべきところも違いますが、原神は無課金でも十分に楽しめるゲームです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;育成&#34;&gt;育成&lt;/h3&gt;&#xA;&lt;p&gt;1年で引いたキャラです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220917_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私がよく使うキャラに☆をつけています。&lt;/p&gt;&#xA;&lt;p&gt;これは引くべきタイミングが非常に重要だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;無課金というのは原石を貯める時間が必須になります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、ある程度貯まった段階で引きたいキャラのピックアップを迎えなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;プレイ開始時期やガチャを回す個別判断が影響してきます。運要素も強く影響すると考えてもらえればわかりやすいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;無課金で順調に攻略していくには運が必要になります。&lt;/p&gt;&#xA;&lt;p&gt;必要なのは、計画(実行)と運だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;武器&#34;&gt;武器&lt;/h3&gt;&#xA;&lt;p&gt;1年で引いた武器です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220917_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;武器があまり無い。祭礼、西風すらあまりない。&lt;/p&gt;&#xA;&lt;p&gt;例えば、祭礼が発動せず元素粒子が回収できないことで螺旋攻略が遅れてしまうことがあります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;螺旋&#34;&gt;螺旋&lt;/h3&gt;&#xA;&lt;p&gt;螺旋はある時期から毎回やってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220917_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;無課金での螺旋はあまりこだわりを持ってやるべきものではありません。&lt;/p&gt;&#xA;&lt;p&gt;私も「そろそろ攻略できそう」と思ったあたりから参加しました。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、人それぞれですが、あまり無茶なことをしようとすると、原神自体が楽しめなくなってしまう可能性があります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後の展望&#34;&gt;今後の展望&lt;/h3&gt;&#xA;&lt;p&gt;ベネットを1凸したいのと、ナヒーダを引きたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神3.0、クレーで螺旋攻略</title>
      <link>https://syui.github.io/blog/post/2022/09/17/genshin/</link>
      <pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/17/genshin/</guid>
      <description>&lt;p&gt;今の螺旋は結構ギリギリです。&lt;/p&gt;&#xA;&lt;p&gt;PTは前半がクレー、綾華、鍾離、万葉。後半が雷電、行秋、ベネット、香菱。&lt;/p&gt;&#xA;&lt;p&gt;クレーは単にこだわり枠なので、他キャラのほうがいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ポイントは、12-3の前半に万葉で敵の水を拡散、そこに綾華の爆発を当てます。後半は雷電ナショナルです。1分あればいけます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた118</title>
      <link>https://syui.github.io/blog/post/2022/09/15/illust/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/15/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_118.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は、キャラは自分で描きましたが、背景はAIが描きました。&lt;/p&gt;&#xA;&lt;p&gt;背景考えるの毎回大変だったんだよなあ&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、このまま背景をAIに頼ると、自分で背景を考える構築力が落ちると思っていて、統一感を保つのが難しくなります。&lt;/p&gt;&#xA;&lt;p&gt;背景も個性が出る部分だと思うので、やはり、自分で描くのが一番いいのかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、たまには、めんどくさいときなんかはAIに頼るのも悪くないかもしれないと思っていて、AIもパラメータ、調整や修正のコツを学んでいけたらなあと思っています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iphone se1からse3に移行した</title>
      <link>https://syui.github.io/blog/post/2022/09/14/iphone-ios-16/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/14/iphone-ios-16/</guid>
      <description>&lt;p&gt;愛機のse1がios15までしかsupportしないので、se3を買いました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/iphone_se1_se3_camera_0005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;カメラの画質がめちゃくちゃ良くなった。上がse1、下がse3です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/iphone_se1_se3_camera_0003.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/iphone_se1_se3_camera_0004.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/iphone_se1_se3_camera_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/iphone_se1_se3_camera_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;より明るくはっきり写ってる感じ。&lt;/p&gt;&#xA;&lt;p&gt;macbook airとipadも買って移行しましたが、特筆すべきことはありません。スペックは一部カスタマイズで上げました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;iphone se1 -&amp;gt; se3&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;macbook air 2013 -&amp;gt; m1&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ipad 7 -&amp;gt; 9&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>wingetでpwshをupgradeしてopensshで使う</title>
      <link>https://syui.github.io/blog/post/2022/09/13/windows-winget-pwsh-openssh/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/13/windows-winget-pwsh-openssh/</guid>
      <description>&lt;p&gt;wingetが便利になってたので、wingetで最新のpwsh(powershell)をインストールして使ってみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh windows&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7.2.6&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget upgrade microsoft.powershell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7.3.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget install microsoft.powershell.preview&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pwsh-preview&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# winのpathは面倒なので適当に補完。下記でも行けると思いますが、念の為tabで変換するといいかも&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim c:/programdata/ssh/sshd_config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PasswordAuthentication no&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ForceCommand pwsh-preview&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ net stop sshd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ net start sshd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh windows&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;powershell 7.3.0-preview&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget upgrade --all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;winget、便利。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3Dモデルを作ってみる2</title>
      <link>https://syui.github.io/blog/post/2022/09/10/skechfab/</link>
      <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/10/skechfab/</guid>
      <description>&lt;p&gt;この前、apple storeで新しい&lt;code&gt;macbook air&lt;/code&gt;と&lt;code&gt;ipad&lt;/code&gt;と&lt;code&gt;iphone&lt;/code&gt;を買ったんだけど、最新のipadを買ったらやってみたいことの一つに&lt;code&gt;3Dモデルの生成&lt;/code&gt;があったので、やってみた。&lt;/p&gt;&#xA;&lt;p&gt;trinoというアプリで生成しました。これ最新のipadじゃなくてもできるんだね。&lt;/p&gt;&#xA;&lt;p&gt;前に調べたとき別アプリが最新のipadしか対応してない感じだったので、断念してた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ちょびちょびが来た</title>
      <link>https://syui.github.io/blog/post/2022/09/06/genshin/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/06/genshin/</guid>
      <description>&lt;p&gt;原神をプレイしてると、ふわふわ浮いて「ちょび、ちょび」言ってる丸っこいやつをつけてる人がいて、あれはなんだろうとずっと思ってたんだけど、うちにも来た。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/genshin_20220907_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;よう来た、よう来た。ゆっくりしておいき。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、レッド引いた</title>
      <link>https://syui.github.io/blog/post/2022/09/05/pokemas/</link>
      <pubDate>Mon, 05 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/05/pokemas/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/pokemas/pokemas_03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;レッドは爆死して天井だったけど、サトシとシロナはすぐに出てくれたので良かった。&lt;/p&gt;&#xA;&lt;p&gt;レッド強すぎて絶対に引くべき。あと、ピカチュウが熱い。ポケマスも独自路線や一定の需要を掴みかけている雰囲気ある。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンではピカチュウは最弱だった。それ故、ピカチュウはポケモンの顔ではあるけど、誰も使っていない。&lt;/p&gt;&#xA;&lt;p&gt;アニメでは大活躍しているから意外かもだけど、強いピカチュウを使いたいと思っていた人もファンの中にはいたはず。&lt;/p&gt;&#xA;&lt;p&gt;だから、サトシやレッドが最強のピカチュウを使って戦うというシュチエーションに熱いものを感じる。&lt;/p&gt;&#xA;&lt;p&gt;現在、ポケマスというゲームでは最強のポケモンがピカチュウになってる。これは、どのポケモンゲームにも見かけなかった現象なので、気になる人はポケマスをプレイしよう。&lt;/p&gt;&#xA;&lt;p&gt;関係ないけどポケモンのフィギュア持ってるので写真あげときます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_make_46.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、アルセウス以外は他の人にあげたので今はいません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストAIの活用法</title>
      <link>https://syui.github.io/blog/post/2022/09/04/diffusion-windows/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/04/diffusion-windows/</guid>
      <description>&lt;p&gt;イラストAI(画像生成AI)として&lt;a href=&#34;https://huggingface.co/&#34;&gt;huggingface&lt;/a&gt;の&lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;diffusion&lt;/a&gt;などが話題になっています。今回はpromptを調整することでいい感じの画像を作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/ai/0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:prompt.txt&#34; data-lang=&#34;sh:prompt.txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;a magical fantasy royal castle town that sits on a magnificent floating island, sunset scenery, trending on artstation, award winning digital art, anime, pixiv&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;japanese anime of a beaultiful girl, fantasy costume, fantasy background, be autiful composition, cinematic lighting, pixiv, light novel, digital painting, extremely, detailed, sharp focus, ray tracing, 8k, cinematic postprocessing, genshin&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;mysterious fantasy night sky in spectacular iridescent clouds, twinkling stars, trending on artstation, award winning digital art, anime, pixiv, fantasy background, be autiful composition, cinematic lighting, pixiv, light novel, digital painting, extremely, detailed, sharp focus, ray tracing, 8k, cinematic postprocessing&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下記は生成したイラストの一部です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>diffusion img2imgでイラストを再生成してみた</title>
      <link>https://syui.github.io/blog/post/2022/09/03/diffusion-img2img/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/09/03/diffusion-img2img/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;diffusion&lt;/a&gt;というツールがあり、&lt;a href=&#34;https://huggingface.co/&#34;&gt;huggingface.co&lt;/a&gt;からtokenをもらってAIによる画像ファイルを生成できます。&lt;/p&gt;&#xA;&lt;p&gt;なお、cudaをサポートしている環境下で実行してください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install transformers scipy ftfy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install git+https://github.com/huggingface/diffusers.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python:t.py&#34; data-lang=&#34;python:t.py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; torch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; diffusers &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; StableDiffusionPipeline&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; torch &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; autocast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MODEL_ID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CompVis/stable-diffusion-v1-4&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEVICE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cuda&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;YOUR_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; StableDiffusionPipeline&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;from_pretrained(MODEL_ID, revision&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fp16&amp;#34;&lt;/span&gt;, torch_dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;float16, use_auth_token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;YOUR_TOKEN)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to(DEVICE)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a dog painted by Katsuhika Hokusai&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; autocast(DEVICE):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pipe(prompt, guidance_scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.5&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test.png&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3 t.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、img2imgを使って画像ファイルを参照した上で生成してみます。input.pngを置いておきます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python:tt.py&#34; data-lang=&#34;python:tt.py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; torch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; diffusers &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; StableDiffusionPipeline&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; torch &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; autocast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MODEL_ID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CompVis/stable-diffusion-v1-4&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEVICE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cuda&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;YOUR_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; StableDiffusionPipeline&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;from_pretrained(MODEL_ID, revision&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fp16&amp;#34;&lt;/span&gt;, torch_dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;float16, use_auth_token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;YOUR_TOKEN)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to(DEVICE)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; PIL &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Image&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; torch &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; autocast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cute girl&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;init_image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input.png&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RGB&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;init_image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; init_image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resize((&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; autocast(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cuda&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    images &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pipe(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;prompt,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        init_image&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;init_image,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        strength&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guidance_scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.5&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        num_inference_steps&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        generator&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;images[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;output.png&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;localでのpython動作環境が難しいなら&lt;a href=&#34;https://colab.research.google.com&#34;&gt;google colab&lt;/a&gt;を使う方法もあります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>fly.ioとnorthflankの感想</title>
      <link>https://syui.github.io/blog/post/2022/08/31/heroku-fly-northflank/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/31/heroku-fly-northflank/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.heroku.com/&#34;&gt;heroku&lt;/a&gt;の移行先として挙げられる&lt;a href=&#34;https://fly.io&#34;&gt;fly.io&lt;/a&gt;, &lt;a href=&#34;https://northflank.com/&#34;&gt;northflank&lt;/a&gt;の感想になります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=32599398&#34;&gt;https://news.ycombinator.com/item?id=32599398&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;fly.io&lt;/code&gt;が個人的には合っていると思いました。&lt;/p&gt;&#xA;&lt;p&gt;fly.ioはdockerで動かしますが、goなどのbuild, deployが非常に快適でわかりやすかったです。mastodonはredisが入っているため動かすには工夫が必要ですが、go, rust, phoenixなどはそれらが必要ない場合が多く、go, rustはsingle-binaryなので、fly.tomlも書きやすい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gitea&#34;&gt;gitea&lt;/h3&gt;&#xA;&lt;p&gt;例えば、giteaはfly.ioで簡単に動きました。dockerを利用するので当たり前かもしれませんが、herokuでは相当の工夫が必要でした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a directory to store fly.io application config&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir gitea-on-fly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# enter into the newly created directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd gitea-on-fly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tell fly.io you wish to create a new application in the amsterdam region (there are many other regions you could pick too)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# pick any name for the app that you&amp;#39;d like, in the example we are using `gitea-on-fly`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flyctl launch --name gitea-on-fly --no-deploy --region ams&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# give the newely create application persistant storage, so your data persists between app updates&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flyctl volumes create gitea_data --size &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --region ams --app gitea-on-fly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:fly.toml&#34; data-lang=&#34;toml:fly.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitea-on-fly&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kill_timeout&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;image&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitea/gitea:latest&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# latest is the most recent stable release&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GITEA__database__DB_TYPE&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sqlite3&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GITEA__database__PATH&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/data/gitea/gitea.db&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GITEA__server__DOMAIN&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitea-on-fly.fly.dev&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GITEA__server__SSH_DOMAIN&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitea-on-fly.fly.dev&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GITEA__server__ROOT_URL&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://gitea-on-fly.fly.dev&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;GITEA__security__INSTALL_LOCK&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Don&amp;#39;t show installer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# GITEA__service__DISABLE_REGISTRATION=&amp;#34;true&amp;#34; # TODO: uncomment once you have created your first user&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# persist data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[[&lt;span style=&#34;color:#a6e22e&#34;&gt;mounts&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/data&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitea_data&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ssh traffic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;internal_port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https traffic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;internal_port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;handlers&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;force_https&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [[&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;handlers&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tls&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ flyctl open&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://blog.gitea.io/2022/04/running-gitea-on-fly.io/&#34;&gt;https://blog.gitea.io/2022/04/running-gitea-on-fly.io/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>herokuからfly.ioへの移行</title>
      <link>https://syui.github.io/blog/post/2022/08/27/fly-heroku/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/27/fly-heroku/</guid>
      <description>&lt;p&gt;herokuのplan:free(hobby)が廃止され、&lt;code&gt;mo/$31&lt;/code&gt;になるので、&lt;a href=&#34;https://heroku.com/&#34;&gt;heroku&lt;/a&gt;から&lt;a href=&#34;https://fly.io/&#34;&gt;fly.io&lt;/a&gt;へ移行を考えています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Heroku Dynos starts at $7/month, Heroku Data for Redis® starts at $15/month, Heroku Postgres starts at $9/month.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.heroku.com/next-chapter&#34;&gt;https://blog.heroku.com/next-chapter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;herokuのこれまでの評価は、素晴らしかったです。感謝しかありません。ありがとう！&lt;/p&gt;&#xA;&lt;h3 id=&#34;flyio-planfreehobby&#34;&gt;fly.io plan:free(hobby)&lt;/h3&gt;&#xA;&lt;p&gt;クレジットカードを登録するとplan:hobbyが使えるようになります。クレジットカードはできればVプリカ(visaプリペイドカード)などを使用するようにしてください。登録できない場合に通常のクレジットカードで登録するしかありません。このへんは未検証です。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Add a payment method to get even more free allowances.&lt;/p&gt;&#xA;&lt;p&gt;VM: shared-cpu&#x9;2,340 hours per month&#x9;Run 3 shared-cpu-1x VMs with 256MB RAM full time.&#xA;Volumes&#x9;3GB&#x9;Provision 3GB of persistent volumes for permanent storage&#xA;Bandwidth&#x9;160GB per month&#x9;See outbound data transfer for regional breakdown&#xA;Anycast IPs&#x9;Unlimited IPv6, 1 IPv4 per active app&#x9;Additional IPv4 addresses are $2 per month&#xA;Certificates&#x9;10 active certificates&#x9;Add 10 certificates to your apps&lt;/p&gt;</description>
    </item>
    <item>
      <title>フィギュアを作った</title>
      <link>https://syui.github.io/blog/post/2022/08/20/figure/</link>
      <pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/20/figure/</guid>
      <description>&lt;p&gt;フィギュア制作の情報をまとめます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;きっかけ&#34;&gt;きっかけ&lt;/h2&gt;&#xA;&lt;p&gt;オタクなのでフィギュアは一つくらいほしいなあと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;スマブラで使っているゼルダをamiiboで買おうか、原神の蛍を買おうか、迷いました。&lt;/p&gt;&#xA;&lt;p&gt;最終的にビビッと来るものがなかったので、自分で作ることにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_07.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;制作過程&#34;&gt;制作過程&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;2021-07-17&lt;/code&gt;から&lt;code&gt;2021-08-13&lt;/code&gt;の間に3つのフィギュアを作っては作り直していました。&lt;/p&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_01.jpg&#34; width=&#34;300&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_02.jpg&#34; width=&#34;300&#34;&gt;&#xA;&lt;p&gt;しばらくそのフィギュアを机においていましたが、1年後の&lt;code&gt;2022-08-15&lt;/code&gt;からまたフィギュアを作り直すことしました。そして、&lt;code&gt;2022-08-19&lt;/code&gt;に完成しました。&lt;/p&gt;&#xA;&lt;p&gt;これがトップにある画像になります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;必要なもの&#34;&gt;必要なもの&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;スカルピー&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;オーブン&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;針金&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;塗料&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;印刷シール&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;スパチュラはなくてもいいです。あまり使ってない。カッターとかハサミなど日常品は省略しています。オーブンはスカルピーが有毒なので別なものを買ったほうがいいです。塗装はアクリル絵の具で厚塗りを重ねることで完全に塗ることができ、仕上げスプレーを使うことでザラザラを消すことができます。ただし、塗装スプレーを使ったほうが手っ取り早いです。顔は印刷シール使うと簡単です。焼いたあとカットしてます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体的な手順&#34;&gt;具体的な手順&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;粘土をこねる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;無水エタノールで表面処理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;焼く&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;カットとやすりで修正と表面処理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;スプレーで肌色、服全体を塗る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ラッカー系塗料で細部を塗る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;光沢スプレーなどで仕上げ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ポイント&#34;&gt;ポイント&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;髪の毛は細くすると見栄えが良くなるけど、耐久性も下がる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;それぞれの部位は思った以上に小さくする必要があります。大きくなりがちです。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;固定できるポーズが重要。この辺はあとに響くので見栄えとのバランスが難しいです。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一気に焼いてはいけない。小さい部位ごとに完成させていくイメージ。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;納得行くまで粘土をこねる。とりあえず完成イメージを作る。1日置いてみる。この繰り返しが一番の近道。すぐに焼いてはいけない。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ただし、焼く練習は必要。まずは小さいものや髪の毛を焼いてみよう。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;表面処理とラッカー系塗料&#34;&gt;表面処理とラッカー系塗料&lt;/h2&gt;&#xA;&lt;p&gt;最初はアクリル絵の具でそのまま塗っているだけでしたが、表面処理とラッカー系塗料を行うと、はじめて市販のフィギュアっぽくなりました。それまでは明らかに自作という感じでした。&lt;/p&gt;&#xA;&lt;div style=&#34;text-align:center;&#34;&gt;&#xA;&lt;p&gt;左が市販、右が自作&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_06.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;では、表面処理とは何を指すのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;表面処理は主に固める前と後で分けられます。&lt;/p&gt;&#xA;&lt;p&gt;固める前は無水エタノールなどでなめらかにすること。固めた後はやすりなどで削ることです。&lt;/p&gt;&#xA;&lt;p&gt;ラッカー系塗料がおすすめです。ただし、換気が必要です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;磁石と輪っか&#34;&gt;磁石と輪っか&lt;/h2&gt;&#xA;&lt;p&gt;磁石を頭に入れる事で輪っかを設置しやすくなります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/figure_05.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ダイゴ&amp;デオキシス</title>
      <link>https://syui.github.io/blog/post/2022/08/11/pokemas/</link>
      <pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/11/pokemas/</guid>
      <description>&lt;p&gt;絶対に引いておけと言われる性能をしています。例えば、アタッカーとしてより強力なキャラが追加されても、フォルムチェンジによる総合力の点でこれに匹敵するものは今後もなかなか出てこないと考えられます。ということで、これは絶対に確保しておいたほうがいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220809_0001.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220809_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケマスに実装してほしいもの&#34;&gt;ポケマスに実装してほしいもの&lt;/h3&gt;&#xA;&lt;p&gt;プレイヤーの選択あるいはランダムによって変化する強化要素をもう少し追加してくれるとうれしいです。&lt;/p&gt;&#xA;&lt;p&gt;原神で言うところの聖遺物厳選と呼ばれるようなシステムですが、こういったやりこみ要素が追加されると、遊びの幅が広がると思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>コロナに感染した時の話</title>
      <link>https://syui.github.io/blog/post/2022/08/07/covid/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/07/covid/</guid>
      <description>&lt;p&gt;7月末あたりコロナに感染してました。&lt;/p&gt;&#xA;&lt;p&gt;何かの参考になるかもしれないので、その時の話を少し書きます。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;日付&lt;/th&gt;&#xA;          &lt;th&gt;症状&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1日目&lt;/td&gt;&#xA;          &lt;td&gt;なんかちょっとだけ喉に違和感あり&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2日目&lt;/td&gt;&#xA;          &lt;td&gt;発熱して最大38.0の熱がでる。めちゃくちゃしんどかった。あとから思い返すと、しんどかったのはこの1日だけだった&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3日目&lt;/td&gt;&#xA;          &lt;td&gt;熱は36.6に下がる。しんどさが和らぐ。朝起きると喉の奥が焼けるような痛み。水を飲むと痛みはさっと引いた。昼頃からマシになった&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4日目&lt;/td&gt;&#xA;          &lt;td&gt;しんどさと喉の痛みは引いたが咳が出る。そして、なぜか全身に発疹が出始める&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5日目&lt;/td&gt;&#xA;          &lt;td&gt;咳は引いたが、全身の発疹がひどくなる。暑さを感じるとチリチリという痒さを生じる発疹だった。この症状には覚えがある&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6日目&lt;/td&gt;&#xA;          &lt;td&gt;病院に行って薬をもらう。診断結果としては「わからない」とされる。汗と関係するアレルギーと推測されたようだ。たしかに、2日目は寒気がするので毛布をかぶり大量の汗をかいてた。通常時はそういったことで発疹は出たことがない。しかし、今回のように免疫力が落ちている状態だと相まって出たものなのかもしれない&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7日目&lt;/td&gt;&#xA;          &lt;td&gt;薬を飲む。全身に出ていた発疹が引いてきたように感じた&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;8日目&lt;/td&gt;&#xA;          &lt;td&gt;全身に出ていた発疹が消えた。ただし、相変わらず汗をかくとチリチリした痒みが生じるので、完治には数週間かかるかもしれない。昔に発疹がでたときもそうだった&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;14日目&lt;/td&gt;&#xA;          &lt;td&gt;ようやく痒みがなくなってきた&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;17日目&lt;/td&gt;&#xA;          &lt;td&gt;2,3日様子を見たが、完全に痒みがなくなったので完治した&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ワクチン接種なし。4日目にコロナ症状のつらさは終わった感じだったけど、5日目から謎の発疹(アレルギー)症状が出てしまい、それが一番つらかった。&lt;/p&gt;&#xA;&lt;p&gt;今は完治しているけど、数日前は、ここにブワッと発疹ができた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/covid_20220801_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は、今までの人生で2,3回ほど全身に発疹(蕁麻疹のようなもの)が出たことがあった。完治に数週間ほどかかった。&lt;/p&gt;&#xA;&lt;p&gt;関係ないけど数年前は、それとは別の手足口病に感染したことがある。ただ今回の症状では口内炎がでていないので、手足口病ではないと思う。&lt;/p&gt;&#xA;&lt;p&gt;昔、2,3回ほど発生したことがある発疹(アレルギー)症状そのものだった。チリチリした痒みに覚えがある。そして、発症するのは必ず夏だった。手足口病も夏。&lt;/p&gt;&#xA;&lt;p&gt;コロナとは関係ないけど、私は、コロナがおそらくこれを呼び起こしたんだと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;コロナに関しては、店から検査キット取り寄せてできるので、それをやった。軽症の場合、病院に行かず、自宅療養したほうがよさそう。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、結局、謎の発疹が出たので行ったけど。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ワクチンは打ったほうがいいのか&#34;&gt;ワクチンは打ったほうがいいのか&lt;/h3&gt;&#xA;&lt;p&gt;この際だから書いておく。&lt;/p&gt;&#xA;&lt;p&gt;前から言っていることだけど、私はワクチンは打っておいたほうがいいんじゃないだろうかと思っている。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、謎の発疹アレルギーが過去に2,3回ほど出たことがあるので打たないが、ワクチンは重症化を防ぐ効果があるというデータがあり、それは一定の信憑性があるものだと思われる。&lt;/p&gt;&#xA;&lt;p&gt;ただし、ワクチンに関してもわからないことは多いと思う。確実に言えることはなにもない。私の意見が正しいとは限らない。だからこそ、このことに関しては、各々が考え判断してほしい事柄だと思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、メガシンカのその後</title>
      <link>https://syui.github.io/blog/post/2022/08/06/pogo/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/06/pogo/</guid>
      <description>&lt;p&gt;できるだけ毎日、メガシンカできるポケモンがいないか検索して、いたら進化させてました。現在のメガ3(メガレベルMAX)はこんな感じです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これによってメダルもプラチナになりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0005.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;メガスピアーはエナジーが大量にあったので2匹をメガ3にして交互に進化させることで数を稼ぎました。このメダルは日付制限ないんで、1日で150-200くらいやったかな。最終日だけですが。&lt;/p&gt;&#xA;&lt;p&gt;個人的にメガシンカは早めにやったほうがいいと思います。これはポケモンGoでは非常に珍しいタイプの試みで、このゲームというのは、今までプレイすればするほど、強化すればするほど、使えば使うほど損をする、取り返しがつかなくなるゲームでした。&lt;/p&gt;&#xA;&lt;p&gt;ですから、多くの人はエナジーがあるならとっておこう、強化ポイントがあるならとっておこう、進化ポイントがあるなら進化させずにとっておこう、メガシンカがあるならメガシンカせずにとっておこう、となっていました。&lt;/p&gt;&#xA;&lt;p&gt;プレイヤーの行動原理がその方向に向かっており、なぜなら運営がその方向に誘導しているからでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、新しいメガシンカの仕組みはそうではありません。やればやるほど得ですし、早めにやったほうが得なのです。&lt;/p&gt;&#xA;&lt;p&gt;メガレベルがあがると、無料でメガシンカできる期間が短縮されます。最短で3日ごとになります。そして、XLアメの確率もアップします。&lt;/p&gt;&#xA;&lt;p&gt;例えば、メガシンカせずXLアメの確率が0の人とメガ3にして確率アップした人がいたとして、1ヶ月間プレイしてもらいます。この場合、1ヶ月でどれだけの差がでるかというと、早くにメガ3にした人はそれだけ無料のメガシンカを受け取れる期間が長くなります。また、XLアメを貰える機会も増えていきます。これは蓄積される結果であり、期間が長ければ長いほど大きな差になります。&lt;/p&gt;&#xA;&lt;p&gt;メガエナジーを使うのはもったいないからとっておくという選択は、結果的に大きな機会損失に繋がります。&lt;/p&gt;&#xA;&lt;p&gt;このゲームでは珍しい要素ですが、メガシンカはやればやるほどお得なのでやったほうがいいです。&lt;/p&gt;&#xA;&lt;p&gt;得かどうかを除いても、メガシンカは楽しい。ですから、個人的には毎日やることをおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;その他、最近の進捗です。イベントしかやってないので、イベントで取れた色違いしかいませんが、今後も持ってない色違いが取りやすいイベントがあれば、参加していく予定です(無課金)。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0007.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0008.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0009.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0010.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0011.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0012.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220806_0013.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>zigでcliを作る</title>
      <link>https://syui.github.io/blog/post/2022/08/03/zig-cli/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/03/zig-cli/</guid>
      <description>&lt;p&gt;zigは、現時点で外部パッケージを読み込む機能がありません。rustならCargo.toml、rubyならGemfile、goならgo.modがあります。&lt;/p&gt;&#xA;&lt;p&gt;zigには、いくつか有志が仕組みを作っていますが、決定的なものは存在しません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mattnite/gyro&#34;&gt;https://github.com/mattnite/gyro&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marler8997/zig-build-repos&#34;&gt;https://github.com/marler8997/zig-build-repos&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;したがって、build.zigにpathを書いていく必要があります。今回は、cli-toolを作ってみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zig:build.zig&#34; data-lang=&#34;zig:build.zig&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @import(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;std&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; build(b&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;std.build.Builder) &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b.standardReleaseOptions();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; lib &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b.addStaticLibrary(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zig-cli&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zig-cli/src/main.zig&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lib.setBuildMode(mode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lib.install();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; main_tests &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b.addTest(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zig-cli/src/tests.zig&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main_tests.setBuildMode(mode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; test_step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b.step(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Run library tests&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    test_step.dependOn(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;main_tests.step);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; origin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b.addExecutable(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;random&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example/random.zig&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    origin.addPackagePath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zig-cli&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zig-cli/src/main.zig&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    origin.setBuildMode(mode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    origin.install();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    b.default_step.dependOn(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;origin.step);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sam701/zig-cli&#34;&gt;https://github.com/sam701/zig-cli&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/sam701/zig-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p example&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim example/random.zig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zig:example/random.zig&#34; data-lang=&#34;zig:example/random.zig&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @import(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;std&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; cli &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @import(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zig-cli&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; RndGen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.rand.DefaultPrng;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; gpa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.heap.GeneralPurposeAllocator(.{}){};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; allocator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa.allocator();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;cli.Command{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;random&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .help &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;get random number&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .action &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; run_server,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; main() &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cli.run(app, allocator);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; run_server(_&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;u8&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; rnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RndGen.init(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; some_random_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rnd.random().int(&lt;span style=&#34;color:#66d9ef&#34;&gt;i32&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std.log.debug(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{d}&amp;#34;&lt;/span&gt;, .{some_random_num});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ zig build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./zig-out/bin/random&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ref : &lt;a href=&#34;https://www.reddit.com/r/Zig/comments/wc5rcb/hows_the_current_story_with_zig_in_terms_of/&#34;&gt;https://www.reddit.com/r/Zig/comments/wc5rcb/hows_the_current_story_with_zig_in_terms_of/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>zigをwasmにしてcloudflareにdeployする</title>
      <link>https://syui.github.io/blog/post/2022/08/02/zig-wasm-cloudflare/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/08/02/zig-wasm-cloudflare/</guid>
      <description>&lt;p&gt;&lt;code&gt;zig&lt;/code&gt;はprogramming-langの一つです。rustに似ていますが、c++寄りだと思います。&lt;/p&gt;&#xA;&lt;p&gt;zigの利点はなんといってもwasmへのbuildの手軽さだと思います。&lt;/p&gt;&#xA;&lt;p&gt;wasmはwebから実行できるbinaryです。&lt;/p&gt;&#xA;&lt;p&gt;今後、webなどでもzigが採用されるケースが増えてくるかもしれません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install zig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir zig-first-project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd zig-first-project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ zig init-exe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat src/main.zig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat build.zig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ zig build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./zig-out/bin/zig-first-project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;hello-worldしてみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zig:src/main.zig&#34; data-lang=&#34;zig:src/main.zig&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @import(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;std&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; main() &lt;span style=&#34;color:#66d9ef&#34;&gt;anyerror&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; stdout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.io.getStdOut().writer();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; stdout.print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello, world!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, .{});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここまでで&lt;a href=&#34;https://github.com/ziglang/zig.vim&#34;&gt;ziglang/zig.vim&lt;/a&gt;を入れておいたほうがいいでしょう。zigはコード内にある&lt;code&gt;\t&lt;/code&gt;の扱いが特殊です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Plug&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ziglang/zig.vim&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下はcloudflare &lt;a href=&#34;https://blog.cloudflare.com/running-zig-with-wasi-on-cloudflare-workers/&#34;&gt;blog&lt;/a&gt;にあるexampleです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zig:src/main.zig&#34; data-lang=&#34;zig:src/main.zig&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @import(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;std&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; main() &lt;span style=&#34;color:#66d9ef&#34;&gt;anyerror&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// setup allocator&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; gpa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.heap.GeneralPurposeAllocator(.{}){};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; std.debug.assert(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;gpa.deinit());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; allocator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa.allocator();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// setup streams&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; stdout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.io.getStdOut().writer();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.io.getStdIn();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; reader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.io.bufferedReader(in.reader()).reader();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; counter&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// read input line by line&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; reader.readUntilDelimiterOrEofAlloc(allocator, &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;, std.math.maxInt(&lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;line&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; allocator.free(line);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; stdout.print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{d}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{s}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, .{counter, line});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        counter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; counter &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;単純に文字を渡すと行番号を追加して返します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gnu-socialをherokuで立てる[2022年度版]</title>
      <link>https://syui.github.io/blog/post/2022/07/18/gnusocial/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/18/gnusocial/</guid>
      <description>&lt;p&gt;gnu-socialも触ってみました。今回もherokuでdeployするヒントを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;いろいろな変化があるものの、srcは相変わらず古い感じがします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;30&#34;&gt;3.0&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://code.undefinedhackers.net/GNUsocial/gnu-social&#34;&gt;https://code.undefinedhackers.net/GNUsocial/gnu-social&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;postgres + nginx&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;とりあえず、&lt;code&gt;bin/configure&lt;/code&gt;にdockerfileを作成するscriptがありますので実行するようです。Makefileにいろんなコマンドが定義されているようですが、項目を読めばだいたい分かるでしょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://code.undefinedhackers.net/GNUsocial/gnu-social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd gnu-social&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./bin/configure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo docker ps -a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ paru -S php-pear&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pecl install vips&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo vim /etc/php/php.ini&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;extension&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iconv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;extension&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;vips&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下を追記、または編集します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:composer.json&#34; data-lang=&#34;json:composer.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;require&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;php&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^8.1.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ext-vips&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;jcupitt/vips&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.9&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ composer update --ignore-platform-reqs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git add composer.*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku buildpacks:add --index &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; https://github.com/heroku/heroku-buildpack-apt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;Aptfile&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;php-pear&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;herokunの場合、残念ながら&lt;code&gt;php-vips&lt;/code&gt;が&lt;a href=&#34;https://devcenter.heroku.com/ja/articles/php-support#using-optional-extensions&#34;&gt;support&lt;/a&gt;されていません。&lt;/p&gt;&#xA;&lt;p&gt;したがって、buildpacksを自前で用意するしかないのですが、用意してやってみたところ、peclが動作しません。&lt;/p&gt;&#xA;&lt;p&gt;いくつか調整してみたものの、これでは実現できたとしても完全にやるべきことではないと判断し、途中でやめることにしました。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-sh:bin/compile&#34; data-lang=&#34;sh:bin/compile&#34;&gt;sed -i -e &amp;#34;s#/usr/bin/php#/app/.heroku/php-min/bin/php#g&amp;#34; $build_dir/.apt/usr/bin/pecl&#xA;pecl install vips&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:heroku.yml&#34; data-lang=&#34;yml:heroku.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;vendor/bin/heroku-php-nginx public/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ref : &lt;a href=&#34;https://devcenter.heroku.com/ja/articles/php-support#using-optional-extensions&#34;&gt;https://devcenter.heroku.com/ja/articles/php-support#using-optional-extensions&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた115</title>
      <link>https://syui.github.io/blog/post/2022/07/17/illust/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/17/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_115.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた6</title>
      <link>https://syui.github.io/blog/post/2022/07/16/card/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/16/card/</guid>
      <description>&lt;p&gt;上の方はザラザラした特別仕様、下はクリアカードの完成版です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0005.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0006.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、万葉を引いた</title>
      <link>https://syui.github.io/blog/post/2022/07/15/genshin/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/15/genshin/</guid>
      <description>&lt;p&gt;万葉を引きました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/games/genshin/genshin_chara_kazuha.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使ってみると「こ、こいつ&amp;hellip;つ、つよすぎる&amp;hellip;！！」みたいなキャラでした。&lt;/p&gt;&#xA;&lt;p&gt;ウェンティより圧倒的に強く、状況によって、例えば、元素が近くにあったり、敵にあったりする場合ですが、原神の中で一番強いのでは？&lt;/p&gt;&#xA;&lt;p&gt;今回のガチャは、余ってた運命を使い9連で出てしまいました！！&lt;/p&gt;&#xA;&lt;p&gt;原石を消費していません。&lt;/p&gt;&#xA;&lt;p&gt;早めに出るガチャ、そろそろ来ると思っていましたが、まさか、ここまでとは&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;万葉を引いたあと、即座に撤退しています。原石は、草神に温存する予定。&lt;/p&gt;&#xA;&lt;p&gt;ただ、ガチャというのは、早く出ることもあれば、遅く出ることもあるわけで。&lt;/p&gt;&#xA;&lt;p&gt;草神&amp;hellip;天井かもしれん。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いた114&#43;小説書いた7-9</title>
      <link>https://syui.github.io/blog/post/2022/07/10/illust/</link>
      <pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/10/illust/</guid>
      <description>&lt;p&gt;小説はこちら &lt;a href=&#34;https://syui.github.io/ai/novel/07&#34;&gt;/ai/novel/07&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>misskeyをherokuで立てる[2022年度版]</title>
      <link>https://syui.github.io/blog/post/2022/07/08/misskey/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/08/misskey/</guid>
      <description>&lt;p&gt;pleromaと同じくmisskeyをherokuで立てるのにも多少の苦労があるかもしれません。さらに運用するとなると様々な問題が絡んできます。&lt;/p&gt;&#xA;&lt;p&gt;今回もherokuでmisskeyのインスタンスを立ち上げるまでのヒントを書いていければと思います。&lt;/p&gt;&#xA;&lt;p&gt;ref : &lt;a href=&#34;https://misskey-hub.net/docs/install/manual.html&#34;&gt;https://misskey-hub.net/docs/install/manual.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/misskey-dev/misskey.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd misskey&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp .config/example.yml .config/default.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim .config/default.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.config/default.yml&#34; data-lang=&#34;yml:.config/default.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;db&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_HOST&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_PORT&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;db&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_NAME&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;user&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_USER&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pass&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_PASS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;extra&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ssl&lt;/span&gt;: { &lt;span style=&#34;color:#f92672&#34;&gt;rejectUnauthorized&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;redis&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$REDIS_HOST&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$REDIS_PORT&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pass&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$REDIS_PASS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずmisskeyと&lt;a href=&#34;https://devcenter.heroku.com/articles/connecting-heroku-postgres&#34;&gt;heroku-postgres&lt;/a&gt;を接続するポイントは、&lt;code&gt;ssl:true&lt;/code&gt;ではなく&lt;code&gt;ssl:{ rejectUnauthorized: false }&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;必要な情報は以下から得ましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create heroku-postgresql:hobby-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku pg:credentials:url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create heroku-redis:hobby-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku redis:credentials&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn run init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;redisへの接続に問題があります。heroku-redisの接続制限的に厳しいのかもしれません。&lt;code&gt;ioredis&lt;/code&gt;が使われるようになったみたいです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://devcenter.heroku.com/ja/articles/connecting-heroku-redis#connecting-in-node-js&#34;&gt;https://devcenter.heroku.com/ja/articles/connecting-heroku-redis#connecting-in-node-js&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>pleromaをherokuで立てる[2022年度版]</title>
      <link>https://syui.github.io/blog/post/2022/07/07/pleroma/</link>
      <pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/07/pleroma/</guid>
      <description>&lt;p&gt;この前、&lt;a href=&#34;https://twitter.com/StackOverflow/status/1539608579291971584&#34;&gt;#stackoverflow&lt;/a&gt;でelixirのphoenixが好きなフレームワーク1位に選ばれていました。&lt;/p&gt;&#xA;&lt;p&gt;ref : &lt;a href=&#34;https://www.publickey1.jp/blog/22/7itrustdbpostgresqlvscodeneovimstack_overflow_2022_developer_survey.html&#34;&gt;https://www.publickey1.jp/blog/22/7itrustdbpostgresqlvscodeneovimstack_overflow_2022_developer_survey.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;正直、驚きました。しかも、好きな言語ランキングでも1位のrustに続いてelixirが2位でした。elixir、そんな人気だったん&amp;hellip;?&lt;/p&gt;&#xA;&lt;p&gt;そんなelixirのphoenixですが、mastodonに似たblog(sns)サービスである&lt;a href=&#34;https://git.pleroma.social/pleroma/pleroma&#34;&gt;pleroma&lt;/a&gt;がphoenixで書かれています。pleromaを触ってると、phoenixのことも自然にわかってくると思います。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回は、herokuでpleromaを立ててみます。herokuのelixir, phoenix対応はstackやbuildpackの関係上、かなりつらい状況です。buildpackを自身で動くよう調整し公開する必要があるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;したがって、dockerで立てたほうがいいでしょう。もしcontainerを利用しない場合、現在のelixir対応では運用が行き詰まる可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/angristan/docker-pleroma&#34;&gt;https://github.com/angristan/docker-pleroma&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的には、&lt;code&gt;Dockerfile&lt;/code&gt;のENTRYPOINTを削除して、heroku.ymlを書きます。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#ENTRYPOINT [&amp;#34;/pleroma/docker-entrypoint.sh&amp;#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:heroku.yml&#34; data-lang=&#34;yml:heroku.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;docker&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Dockerfile&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;config&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;MIX_ENV&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;prod&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;SECRET_KEY_BASE&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$SECRET_KEY_BASE&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;DATABASE_URL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DATABASE_URL&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;DB_NAME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_NAME&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;DB_HOST&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_HOST&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;DB_USER&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_USER&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;DB_PASS&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DB_PASS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;DOMAIN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$DOMAIN&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ADMIN_EMAIL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$ADMIN_EMAIL&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NOTIFY_EMAIL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$NOTIFY_EMAIL&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$HOME/bin/pleroma_ctl migrate &amp;amp;&amp;amp; exec $HOME/bin/pleroma start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;それぞれの環境変数は、以下のコマンドで入れていけばいいでしょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create heroku-postgresql:hobby-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku pg:credentials:url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku config:set DB_USER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、&lt;code&gt;config.exs&lt;/code&gt;を書きますが、herokuに対応した書き方が必要です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-erlang&#34; data-lang=&#34;erlang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config :pleroma, Pleroma.Web.Endpoint,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  url: [scheme: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https&amp;#34;&lt;/span&gt;, host: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx.herokuapp.com&amp;#34;&lt;/span&gt;, port: {:system, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PORT&amp;#34;&lt;/span&gt;}],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  http: [ip: {&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}, port: {:system, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PORT&amp;#34;&lt;/span&gt;}]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config :pleroma, :instance,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  name: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSTANCE_NAME&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pleroma.syui.ai&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  email: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ADMIN_EMAIL&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  notify_email: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOTIFY_EMAIL&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  limit: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  registrations_open: false,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  federating: true,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  healthcheck: true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config :pleroma, :media_proxy,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  enabled: false,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  redirect_on_failure: true,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  base_url: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cache.domain.tld&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config :pleroma, Pleroma.Repo,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  adapter: Ecto.Adapters.Postgres,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  #url: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DATABASE_URL&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  username: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DB_USER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pleroma&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  password: System.fetch_env&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DB_PASS&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  database: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DB_NAME&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pleroma&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  hostname: System.get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DB_HOST&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  pool_size: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ssl: true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;インスタンスの新規登録を禁止するには&lt;code&gt;registrations_open&lt;/code&gt;を&lt;code&gt;false&lt;/code&gt;に変更します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた5</title>
      <link>https://syui.github.io/blog/post/2022/07/06/card/</link>
      <pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/06/card/</guid>
      <description>&lt;p&gt;カードに秘密鍵を刻印して認証する仕組みを作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_card_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl genrsa -out private.pem &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl rsa -in private.pem -pubout -out public.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl rsa -text -pubin &amp;lt; public.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl rsa -text &amp;lt; private.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;modulus           INTEGER,  -- n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p*q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;publicExponent    INTEGER,  -- e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65537&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(=&lt;/span&gt;0x10001&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;privateExponent   INTEGER,  -- d &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; e^&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; mod &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;p-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;q-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;prime1            INTEGER,  -- p&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;prime2            INTEGER,  -- q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;exponent1         INTEGER,  -- d mod &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;p-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;exponent2         INTEGER,  -- d mod &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;q-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;coefficient       INTEGER,  -- q^&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; mod p&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### gh-actions&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl rsa -in pull-private.pem -pubout -out pull-public.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;openssl md5 public.pem|cut -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; -f 2&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;openssl md5 pull-public.pem|cut -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; -f 2&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$a&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$b&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo verify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;いろんな問題はあるけど、簡易版はこんな感じになりました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、各国実装と同時の星5キャラは引いたほうがいい?</title>
      <link>https://syui.github.io/blog/post/2022/07/05/genshin/</link>
      <pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/05/genshin/</guid>
      <description>&lt;p&gt;各国実装と同時あるいは直後の星5キャラは、引いたほうがいいと予想しています。&lt;/p&gt;&#xA;&lt;p&gt;一言で言うと最強キャラが最初にピックアップされる傾向が高いと考えています。スタートダッシュが重要としそのような方針を採用しているのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、例えば、草国の実装同時にピックアップされる星5キャラは狙い目である可能性が高いと思っています。&lt;/p&gt;&#xA;&lt;p&gt;上記を基準に狙っていくキャラを確定すると、&lt;code&gt;神&lt;/code&gt;+&lt;code&gt;初キャラ&lt;/code&gt;ということになるのでしょうか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた4</title>
      <link>https://syui.github.io/blog/post/2022/07/03/card/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/03/card/</guid>
      <description>&lt;p&gt;カードを作ってみて、めちゃくちゃ満足感あったし、楽しかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0009.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;こっちのページでできる占いは実際にカードで持ってるやつだけにした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/card&#34;&gt;/ai/card&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;関係ないけど、過去絵を整理してみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/imgall&#34;&gt;/ai/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、武器がやばい</title>
      <link>https://syui.github.io/blog/post/2022/07/03/genshin/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/03/genshin/</guid>
      <description>&lt;p&gt;原神は無課金でプレイして1年が経ちました。ちょうど1年目に所持している武器は参考になるかもしれないので紹介します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220701_0003.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220701_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ぱっと見でわかりますが、武器もやばいです。&lt;/p&gt;&#xA;&lt;p&gt;一応、経歴を書きます。&lt;/p&gt;&#xA;&lt;p&gt;私が初めて武器ガチャをやったのは雷電1回目のときでした。草薙と無工がピックアップされていて、草薙を狙ったのですが、無工を引きました。ただし、この時点では星4武器を一つも持っていなかったので、流浪楽章、西風の槍、祭礼の剣などを引いたのがよかったし、それも狙いの一つでした。強化したい武器がないと初回はなかなかきつかったのを覚えています。ここで初めて強化できる武器が来ました。雷電にはこのときに引いた西風を今でも装備させています。&lt;/p&gt;&#xA;&lt;p&gt;次の武器ガチャは、胡桃2回目?のときでした。護摩と終焉がピックアップされていました。流浪楽章も入っていたので狙いました。このときは、護摩が当たり、流浪楽章も完凸しました。&lt;/p&gt;&#xA;&lt;p&gt;これ以外で武器ガチャは、やっていません。その結果が今の所持状況というわけです。&lt;/p&gt;&#xA;&lt;p&gt;現時点で最強だと思うのは以下の武器です。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;種類&lt;/th&gt;&#xA;          &lt;th&gt;名前&lt;/th&gt;&#xA;          &lt;th&gt;ステータス&lt;/th&gt;&#xA;          &lt;th&gt;星&lt;/th&gt;&#xA;          &lt;th&gt;保有&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;長柄武器&lt;/td&gt;&#xA;          &lt;td&gt;草薙の稲光&lt;/td&gt;&#xA;          &lt;td&gt;元素チャージ&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;片手剣&lt;/td&gt;&#xA;          &lt;td&gt;蒼古なる自由への誓い&lt;/td&gt;&#xA;          &lt;td&gt;元素熟知&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;長柄武器&lt;/td&gt;&#xA;          &lt;td&gt;護摩の杖&lt;/td&gt;&#xA;          &lt;td&gt;会心ダメ&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;弓&lt;/td&gt;&#xA;          &lt;td&gt;終焉を嘆く詩&lt;/td&gt;&#xA;          &lt;td&gt;元素チャージ&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;これらが同時にピックアップされている場合は、狙い目だと思います。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今後、武器ガチャをやるかどうかは、わかりませんが、おそらく、やらないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;スメールの情報が入ってきています。ここでは草神を絶対的に確保しなければならないので、そのための原石を確保しておく必要があります。&lt;/p&gt;&#xA;&lt;p&gt;ただ、西風槍くらいは凸したいし、西風剣の一つくらいは欲しい&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>squooshが壊れてた件</title>
      <link>https://syui.github.io/blog/post/2022/07/02/squoosh/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/02/squoosh/</guid>
      <description>&lt;p&gt;node v17で使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install nvm &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvm install &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nvm use &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g @squoosh/cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、通しで螺旋攻略</title>
      <link>https://syui.github.io/blog/post/2022/07/01/genshin/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/07/01/genshin/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220701_0001.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220701_0001.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220701_0002.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220701_0002.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた3</title>
      <link>https://syui.github.io/blog/post/2022/06/30/card/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/30/card/</guid>
      <description>&lt;p&gt;今回作ってみたのはクリアカードです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_card_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;使ったもの&#34;&gt;使ったもの&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;きらきらホログラムラベルシール(ガラスチップ) / クリアシール用紙A4&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;セルフラメシート&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;基本的にはシールに印刷して、それをクリアシートに貼り付けます。背面を用意しなくていいので一番楽だった。&lt;/p&gt;&#xA;&lt;p&gt;背面に枠だけ印刷してもいいかも。内側はカッターで切り取りとるとよさそう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた2</title>
      <link>https://syui.github.io/blog/post/2022/06/26/card/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/26/card/</guid>
      <description>&lt;p&gt;今回は前回からの失敗を踏まえ、本物のトレーディングカードっぽくなった気がする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_card_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ai_card_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;使ったもの&#34;&gt;使ったもの&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;きらきらホログラムラベルシール&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;クリアホログラムシート&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;きらきらホログラムラベルシール(オーロラ)&lt;/code&gt;がめちゃくちゃ良かった。&lt;/p&gt;&#xA;&lt;p&gt;これには&lt;code&gt;ガラスチップ&lt;/code&gt;というタイプがあるんだけど、こっちは必要ありません。ただ、これを貼って剥がせばガラスチップのキラがついた。難しかったけど。&lt;/p&gt;&#xA;&lt;p&gt;基本的に白トランプや既存カードに印刷したシールを貼り付けて、カッターで切るという手順です。気泡が入りやすいので注意。&lt;/p&gt;&#xA;&lt;p&gt;形式も統一しました。サイズ調整が難しかったです。wordで&lt;code&gt;68mmx92mm&lt;/code&gt;を指定して印刷しました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カードを作ってみた1</title>
      <link>https://syui.github.io/blog/post/2022/06/23/card/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/23/card/</guid>
      <description>&lt;h3 id=&#34;動機&#34;&gt;動機&lt;/h3&gt;&#xA;&lt;p&gt;最初は、ほんの出来心でした。ポケカが増えてきたので、ポケモンのレアカードを額縁に入れて飾ろうとしたのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、飾ってみると、どうもしっくり来ませんでした。&lt;/p&gt;&#xA;&lt;p&gt;そこで、フォトシールというやつが余っていたので、それをポケカの上に貼り、オリジナルカードっぽいものを作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/521/812/622/839/583/original/abed5d96df0cff2c.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここから、色々と気になりだして、例えば、裏面(ポケカになってる)とかコピーライトとか、ホログラムとか。&lt;/p&gt;&#xA;&lt;p&gt;最終的には、完全にイチからオリジナルカードを作ることになってしまいました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;必要なもの&#34;&gt;必要なもの&lt;/h3&gt;&#xA;&lt;p&gt;すべて100円ショップで揃いました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;フォトシールL判(印刷)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;分厚い紙(ベース)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ジュエリーラメホログラム(キラ)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;セルフラメシート(キラ固定)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/524/789/825/797/866/original/95ed02b658f30f69.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;まず、(1)画像をシールに印刷、(2)用紙を切り取り、(3)シールを貼ります。ここまででカードは完成しますが、キラカードを作るには、もうちょっと工夫が必要です。&lt;/p&gt;&#xA;&lt;p&gt;今回は、(4)カードの上にラメを撒く、(5)カードシートに挟む、(6)シートを切り取る、という方法で作りました。&lt;/p&gt;&#xA;&lt;p&gt;全部自分で考えただけなので、他にも色んな方法があると思います。&lt;/p&gt;&#xA;&lt;p&gt;最後にショップで売っていた写真立てにカード袋を引っ付けてカード入れました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/524/717/600/235/836/original/fbebb16356350e04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ポケカは66パックでやっとアバター出ました。ミスったなという感想。ほぼコンプしたので、とっときます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>楽天モバイルからの移行、日本通信sim</title>
      <link>https://syui.github.io/blog/post/2022/06/19/sim/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/19/sim/</guid>
      <description>&lt;p&gt;ちょっと前に楽天モバイルから日本通信simに移行しました。&lt;/p&gt;&#xA;&lt;p&gt;合理的プラン290、&lt;code&gt;1G/290円&lt;/code&gt;で運用しています。&lt;/p&gt;&#xA;&lt;p&gt;契約もスムーズでわかりやすかったです。手間取ることもなかったし、不満も全くありません。&lt;/p&gt;&#xA;&lt;p&gt;一応、初期費用に3000円程度かかりますが、初期費用は、個人的にあまり考慮しません。そのへんはどうでもいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;少しだけ使ってみた感じでは、回線は安定しています。問題ありません。&lt;/p&gt;&#xA;&lt;p&gt;個人的に&lt;code&gt;m/1G&lt;/code&gt;も使わない私のような人は、日本通信simが一番おすすめだと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモン・フィギュアのランキング</title>
      <link>https://syui.github.io/blog/post/2022/06/18/pokemon/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/18/pokemon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0005.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ことの経緯&#34;&gt;ことの経緯&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGoとコラボしてるポケカを買いに行ったら、すごくいい感じのポケモン・フィギュアが並んでいて、試しにアルセウスのフィギュアを買ってみたら、すごくよかったので集めてしまったのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;なぜポケモンなのか&#34;&gt;なぜポケモンなのか&lt;/h3&gt;&#xA;&lt;p&gt;いろいろな理由がありますが、ポケモンは古くならないと考えられるため、無駄になることが少ないと判断しました。&lt;/p&gt;&#xA;&lt;p&gt;実は今回購入したフィギュアは、私が子供の頃からよく知っているポケモンたちなのです。&lt;/p&gt;&#xA;&lt;p&gt;それが未だに人気で、最新フィギュアとして登場している。どの世代にも共通して認識されている。これはとてつもないことだと思われます。&lt;/p&gt;&#xA;&lt;p&gt;このことから予想されるのは、この先もこのポケモンたちは古くならないだろうということです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、私がフィギュアを欲しかっただけなんですけど、私はAR、つまり、現実とゲームが融合したポケモンGoというアプリを長くプレイしています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ゲーム内で私が捕まえた&amp;hellip;といっても、ポケモンを捕まえるには現実世界で歩いてその場所まで行かなければなりませんが、ようは、私のボックスにいる手持ちと同じフィギュアがあります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0006.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0007.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは、ゲームをプレイするモチベーションにもなりますし、例えば、次はフィギュアで持っているポケモンを集めようとか、逆にフィギュアを集めるモチベーションにもなります。&lt;/p&gt;&#xA;&lt;p&gt;次に思ったのは、フィギュアの出来の良さです。&lt;/p&gt;&#xA;&lt;p&gt;買ったアルセウスを見てみたのですが、とても出来が良いと思いました。&lt;/p&gt;&#xA;&lt;p&gt;出来が良ければずっと使えそうだなと思いました。ポケモンのフォルムからもこれ以上の変化はあまり望めなさそうにも思います。逆に出来が悪ければ、新しいのが出てきたりであまり長持ちしません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ランキング&#34;&gt;ランキング&lt;/h3&gt;&#xA;&lt;p&gt;それでもいくつかのフィギュアを買ってみて、おすすめできるやつとできないやつがあると思いました。今回はそれについて書いていこうと思います。&lt;/p&gt;&#xA;&lt;p&gt;ぱっと見で少しでも違和感があるなら、個人的にそのポケモンはおすすめしません。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンによっては、フィギュアでの再現が難しいという問題もあると思います。&lt;/p&gt;&#xA;&lt;p&gt;ですから、フィギュアとして作りやすそうで、安定してそうなポケモンのみ選び取ることが重要になると考えます。&lt;/p&gt;&#xA;&lt;p&gt;以上を踏まえて、私が購入したフィギュアの満足度ランキングです。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;順位&lt;/th&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;満足度&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;アルセウス&lt;/td&gt;&#xA;          &lt;td&gt;SS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;ネクロズマ(たそがれ)&lt;/td&gt;&#xA;          &lt;td&gt;SS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;リザードン(ダイマックス)&lt;/td&gt;&#xA;          &lt;td&gt;S&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;ディアルガ&lt;/td&gt;&#xA;          &lt;td&gt;S&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;レックウザ&lt;/td&gt;&#xA;          &lt;td&gt;S&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;イベルタル&lt;/td&gt;&#xA;          &lt;td&gt;A&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;ギラティナ&lt;/td&gt;&#xA;          &lt;td&gt;B&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;ホワイトキュレム&lt;/td&gt;&#xA;          &lt;td&gt;B&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;もし購入を考えている人は、&lt;code&gt;S&lt;/code&gt;までの購入をおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;B&lt;/code&gt;の理由について書きます。ギラティナは足が多いので安定していそうと購入したのですが、意外にもたくさんの小さな足が作りづらかったようで、操作もしづらいです。羽の表現も難しいところだったのではないかと思われます。つまり、ポケモンの特徴から耐久性、安定性が低いように感じました。これはしかたないところですが、ギラティナが好きな人以外にはあまりおすすめできる感じではないと思いました。&lt;/p&gt;&#xA;&lt;p&gt;ホワイトキュレムもほとんど同じ理由です。部位が多すぎたのか、それぞれが小さく迫力がありません。他と比べると耐久性、安定性が低いように感じます。&lt;/p&gt;&#xA;&lt;p&gt;同じようなブラックもおすすめできなさそうです。しかし、普通のキュレムなら見た感じSだったと思います。普通のキュレムが一番おすすめかも。&lt;/p&gt;&#xA;&lt;p&gt;ref : &lt;a href=&#34;https://www.takaratomy.co.jp/products/pokemon/moncolle_ex/lineup/&#34;&gt;https://www.takaratomy.co.jp/products/pokemon/moncolle_ex/lineup/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、ポケカを買った</title>
      <link>https://syui.github.io/blog/post/2022/06/18/pogo/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/18/pogo/</guid>
      <description>&lt;p&gt;現在、ポケカを買うとプロモーションコードがついてきて、低確率で限定衣装(ポケモンGoのアバター)が手に入るっぽいのでポケカを買うことにしました。&lt;/p&gt;&#xA;&lt;p&gt;以前からそんな予感はしていて、こういうコラボをされたら多分買うだろうなと思ってたんだけど、やっぱり買った。&lt;/p&gt;&#xA;&lt;p&gt;今回、10パック購入して、アバターは当たりませんでした。&lt;/p&gt;&#xA;&lt;p&gt;カードは博士とかメタモンが入ってた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;メタモンは、このマークがついてるらしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前面シールになってるので剥がすと出てくるっぽい。まだ剥がしてない、カードやらないので。&lt;/p&gt;&#xA;&lt;p&gt;近くにおいてあったフィギュアがよかったので買った。&lt;a href=&#34;https://www.takaratomy.co.jp/products/pokemon/moncolle_ex/lineup/&#34;&gt;モンコレ&lt;/a&gt;というらしいです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前からフィギュアは一つくらい欲しかったので、初めて買うの美少女フィギュアになりそう美少女フィギュアほしいって思ってたんだけど、まさか怪獣フィギュアになるとは思ってなかった。(ポケモンのアルセウスです&lt;/p&gt;&#xA;&lt;p&gt;フィギュア買ったらおまけでマスターボールもらえたので、とりあえずゴプラを入れてます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_card_20220618_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;もうちょっとカード買って狙ってみるつもり。アバターと新しいミュウツー来るといいな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mastodonが紫になった</title>
      <link>https://syui.github.io/blog/post/2022/06/11/mastodon/</link>
      <pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/11/mastodon/</guid>
      <description>&lt;p&gt;mastodonのアイコンが紫になった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mastodon/mastodon/pull/18592&#34;&gt;https://github.com/mastodon/mastodon/pull/18592&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;グラデーションがついてて、上の方が若干明るくなってる感じ。&lt;/p&gt;&#xA;&lt;p&gt;mastodonとtwitterの青色(系統)が同じなのは、例えば、並べてアイコン載せるときとかに視認性がよくないと思っていて、今回の変更は個人的に嬉しい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugoのhighlightjsがうまく動作していなかったので調べてみた結果</title>
      <link>https://syui.github.io/blog/post/2022/06/10/hugo/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/10/hugo/</guid>
      <description>&lt;p&gt;なぜかpreviewでは表示されるのに、webでは表示されないのに気づいて、調べてみたらhugo versionの問題だった。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、&lt;code&gt;hugo v0.8x&lt;/code&gt;まで&lt;code&gt;highlightjs v9.x&lt;/code&gt;のbash(prompt)は下記のコードに変換されてた。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;spac&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prompt&amp;#34;&lt;/span&gt;&amp;gt;$ &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この生成のおかげでpromotはcopy(web)から除外しやすかった。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ whoami&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが便利だったんだけど、それがなくなって個人的には不便な生成になってた。&lt;/p&gt;&#xA;&lt;p&gt;verの固定は好きじゃないんだけど、便利にhighlightを使える方法を見つけるまで固定することにした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:gh-pages.yml&#34; data-lang=&#34;yml:gh-pages.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.89.4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;hugoも&lt;a href=&#34;https://gohugo.io/content-management/syntax-highlighting/&#34;&gt;highlight&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/getting-started/configuration-markup/&#34;&gt;markup&lt;/a&gt;がかなり使えるようになってるので、移行するのもあり。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、今後の方針2</title>
      <link>https://syui.github.io/blog/post/2022/06/09/genshin/</link>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/09/genshin/</guid>
      <description>&lt;p&gt;前回、私は「原神では好きなキャラを狙っていく」と言いましたが、書き方がとても不明瞭だったので、今回は少し明確に方針を紹介します。&lt;/p&gt;&#xA;&lt;p&gt;まず、キャラに関して、当初の目標が達成できました。当初の目標は「各元素につき1体は強キャラを引く」というものでした。&lt;/p&gt;&#xA;&lt;p&gt;これが達成できたので、次の具体的な目標、方針を決めたわけですが、次の方針は「神と合わせて各元素につき強キャラ2体を狙っていく」ことになります。また、余裕があれば好きなキャラを狙っていくことにしました。余裕があればと言いましたが、以前よりは好きなキャラ優先でいきたいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;さて、今後の個人的な方針としてはそんな感じですが、理由はいくつかあります。&lt;/p&gt;&#xA;&lt;p&gt;一つは無制限に強いキャラを狙っていくと、無課金運用が破綻する可能性があることです。&lt;/p&gt;&#xA;&lt;p&gt;これ以上はキャラ過剰になり、せっかく引いて強化育成までしたのに使わなくなっていくキャラが増えてしまうことが予想されます。&lt;/p&gt;&#xA;&lt;p&gt;それを避けるため、ここで決めた方針に沿って攻略していく予定です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、風元素はウェンティ(神)と万葉で2体となり、それ以上は基本的に狙わないことにします。&lt;/p&gt;&#xA;&lt;p&gt;また、神が未実装の場合で、かつ残る一体にSS+ランクのキャラを確保できている場合も追加では狙わないことになります。この場合、未実装の神を狙うことが決定しているからです。&lt;/p&gt;&#xA;&lt;p&gt;以上を踏まえて、必要な原石数や空き領域を予測します。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;元素&lt;/th&gt;&#xA;          &lt;th&gt;神&lt;/th&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;保有&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;風&lt;/td&gt;&#xA;          &lt;td&gt;ウェンティ&lt;/td&gt;&#xA;          &lt;td&gt;万葉&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;岩&lt;/td&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷&lt;/td&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;無凸/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;草&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/&amp;ndash;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;水&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/完凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;炎&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ベネット&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;氷&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;???&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;綾華&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ndash;/無凸&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;神は草、水、炎、氷の4人を確保する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;各元素の空き領域に岩、雷、草の3人を確保する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;合計で7キャラ分の原石が必要です。&lt;/p&gt;&#xA;&lt;p&gt;7000x7=49,000(期待値)が最低でも必要になる計算です。&lt;/p&gt;&#xA;&lt;p&gt;天井分は14,400x7=100,800(上限値)となります。&lt;/p&gt;&#xA;&lt;p&gt;ここで万葉を引くための原石はすでに確保済みなので、それを除外して考えます。&lt;/p&gt;&#xA;&lt;p&gt;すると、2022/7から2026/7までの4年間で49,000(x2)の原石を貯めなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、1年間で25,000くらいの原石を貯めてやりくりする必要があると考えられます。&lt;/p&gt;&#xA;&lt;p&gt;これは、無課金の運用限界レベルであり、仮に当初の方針を逸れて、次々に実装される強いキャラを狙ってしまった場合、この目標は実現不可能となります。&lt;/p&gt;&#xA;&lt;p&gt;今後はこの表を見ながら、自分の空き領域を埋められることを条件に、狙っていくキャラを決めていくつもりです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;なぜイエランを狙わないのか&#34;&gt;なぜイエランを狙わないのか&lt;/h3&gt;&#xA;&lt;p&gt;以前書いた記事で、イエランを狙わない理由をいくつか書いたわけですが、内容が不明瞭だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;イエランを狙わない個人的な理由として、水元素の空き領域が&lt;code&gt;行秋&lt;/code&gt;と&lt;code&gt;水神&lt;/code&gt;で既に埋まっているからです。&lt;/p&gt;&#xA;&lt;p&gt;さらに万葉の原石でギリギリなので、イエランを狙っている余裕がありません。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;と、これについては少し嘘が含まれるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、「原石が無限にあるなら、イエランを引いていたか？」という質問があったと考えます。&lt;/p&gt;&#xA;&lt;p&gt;すると、私は2つの理由により「引いていなかった」と答えることになります。&lt;/p&gt;&#xA;&lt;p&gt;1つ目は、イエランは特別好きなキャラではないからです。&lt;/p&gt;&#xA;&lt;p&gt;2つ目は、どれだけの原石があろうと、どれだけのお金があろうと、私は無課金での攻略を楽しみ、そこに固執することが挙げられます。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今現在とは異なる状況にはなりえない。&lt;/p&gt;&#xA;&lt;p&gt;私の水元素の空き領域が&lt;code&gt;行秋&lt;/code&gt;と&lt;code&gt;水神&lt;/code&gt;で既に埋まっている限り、イエランは引いていなかったと思います。&lt;/p&gt;&#xA;&lt;p&gt;ただし、イエランは引くべきかという質問に対し、私は、yesと答えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;単純に個人方針や事情を全く考慮せず、性能だけで評価した場合、現時点でyesになるからです。&lt;/p&gt;&#xA;&lt;p&gt;というわけで、個人方針やイエランの話でした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>giteaのcleanとupdate</title>
      <link>https://syui.github.io/blog/post/2022/06/08/gitea/</link>
      <pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/08/gitea/</guid>
      <description>&lt;p&gt;現在、giteaをherokuで動かしてるんだけど、この前、postgres(pgsql)のメンテンナンスがあるとかで一時停止されて、メンテナンス後に動作しなくなってたので再度動かしてみたときの知見。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git.syui.ai/syui&#34;&gt;https://git.syui.ai/syui&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;まず、メンテナンス後にherokuのpgsqlがwebとcliで情報が違ってたので、cliを参考にすること。&lt;/p&gt;&#xA;&lt;p&gt;app.iniのdb情報を修正すれば動くと思う。&lt;/p&gt;&#xA;&lt;p&gt;ただ、db(record)がいっぱいになりかけてたし、updateもしたかったので、resetしてからdeployすることに。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/go-gitea/gitea&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd gitea&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim docker-compose.yml &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:docker-compose.yml&#34; data-lang=&#34;yml:docker-compose.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitea&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;external&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;server&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gitea/gitea:1.16.8&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;USER_UID=1000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;USER_GID=1000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;GITEA__database__DB_TYPE=postgres&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;GITEA__database__HOST=db:5432&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;GITEA__database__NAME=gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;GITEA__database__USER=gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;GITEA__database__PASSWD=gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./gitea:/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/timezone:/etc/timezone:ro&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/localtime:/etc/localtime:ro&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3000:3000&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;222:22&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;db&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres:14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;POSTGRES_USER=gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;POSTGRES_PASSWORD=gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;POSTGRES_DB=gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;gitea&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./postgres:/var/lib/postgresql/data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最小構成はこんな感じです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、イエランの評価</title>
      <link>https://syui.github.io/blog/post/2022/06/05/genshin/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/05/genshin/</guid>
      <description>&lt;p&gt;原神の記事書いてるので、イエランの評価とか適当に思ってることを書きます。&lt;/p&gt;&#xA;&lt;p&gt;FAQ&lt;/p&gt;&#xA;&lt;p&gt;Q イエランは引くべき&lt;/p&gt;&#xA;&lt;p&gt;A 引くべきだと思います&lt;/p&gt;&#xA;&lt;p&gt;Q イエランと万葉、どちらが強い&lt;/p&gt;&#xA;&lt;p&gt;A 万葉&lt;/p&gt;&#xA;&lt;p&gt;Q イエランと行秋、どちらが強い&lt;/p&gt;&#xA;&lt;p&gt;A 行秋&lt;/p&gt;&#xA;&lt;p&gt;Q あなたはイエランを引く&lt;/p&gt;&#xA;&lt;p&gt;A 狙っていない&lt;/p&gt;&#xA;&lt;p&gt;Q なぜ狙わないの&lt;/p&gt;&#xA;&lt;p&gt;A 特別好きなキャラではないから&lt;/p&gt;&#xA;&lt;h3 id=&#34;解説&#34;&gt;解説&lt;/h3&gt;&#xA;&lt;p&gt;まずイエランの評価は個々の状況によります。&lt;/p&gt;&#xA;&lt;p&gt;上記のすべての質問に明確な答えは存在しません。&lt;/p&gt;&#xA;&lt;p&gt;そのことを前提に、個人的な評価をしています。&lt;/p&gt;&#xA;&lt;p&gt;ここで、私の今後の方針ですが、私は、万葉を引いたあとは神と好きなキャラを狙っていく方針に移行する予定です。これ以上はキャラ過剰になるとそう判断しました。&lt;/p&gt;&#xA;&lt;p&gt;イエランの利点は、水元素付与とダメージバフにあります。&lt;/p&gt;&#xA;&lt;p&gt;これは、キャラの凸ができない、あまりプレイしていない無課金者の視点からは、なかなか最強とは言いづらい。&lt;/p&gt;&#xA;&lt;p&gt;例えば、行秋の利点は、回復やダメージ軽減を併せ持つことであり、これが結構でかいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;確かに、キャラ凸していて、死ぬことがない、あとはダメージを上げることだけ考えればいいような状況の場合、イエランの評価は高いです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私のようなキャラも武器もなく、凸もしていない状況だと、イエランはPTの隙間を埋めてくれるキャラにはなりません。&lt;/p&gt;&#xA;&lt;p&gt;というのも防御や回復の性能も併せ持つ行秋やベネットのほうが総合評価が高くなるからです。&lt;/p&gt;&#xA;&lt;p&gt;無課金攻略では、防御面、回復性能だったりダメージ軽減が決定的に重要になってきます。&lt;/p&gt;&#xA;&lt;p&gt;イエランは回復やダメージ軽減がなく耐久も低い弓キャラです。私は甘雨を使いこなせなかったので、今後も弓キャラは基本的に狙わないと思います。&lt;/p&gt;&#xA;&lt;p&gt;あくまで個人的ですが、イエランは今後使わなくなる可能性が非常に高いと予想しています。&lt;/p&gt;&#xA;&lt;p&gt;水神の性能がどのようなものになるのか未知数ですが、おそらく、スキルがループ可能で爆発が回りやすいものになると思います。これにより水元素付与は長時間または永続できる可能性があります。次に回復性能がつくと予想しています。同時にダメージとバフかデバフ効果が多少あるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;以上を踏まえて、PTを組む場合、水元素は回復性能を持っていないと厳しいという予測が自分の中にあります。&lt;/p&gt;&#xA;&lt;p&gt;他元素の役割から考え、例えば、炎や氷は攻撃が合っている。雷も攻撃。岩は防御。風はどっちでもよさそう。残る水は回復です。&lt;/p&gt;&#xA;&lt;p&gt;水(攻撃)+水(回復)で組ませてもいいのですが、私は、元素をバラけさせるほうがいいと思っていて、原神は元素の組み合わせでダメージを上げていくゲームだと思っているので、そう考えると、イエランは今後使わなくなる可能性が高いと予想します。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、イエランは間違いなく引いておくべきキャラです。&lt;/p&gt;&#xA;&lt;p&gt;性能としては、ちょっと強すぎるなあと感じていて、イレギュラーを感じました。&lt;/p&gt;&#xA;&lt;p&gt;では、このイレギュラー感についてちょっと私の考えを述べます。&lt;/p&gt;&#xA;&lt;p&gt;現在のイエランの性能は、当初予定されていたものだったのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、直前になって上方修正されたのではないかと考えています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、最近、開発元の減収が伝えられていました。それは、コロナ事件が発端の開発延期によるものでした。&lt;/p&gt;&#xA;&lt;p&gt;ですからそのような事態が開けた時に実装されたイエランの性能というのは、もしかすると、事情(減収)により上方修正されていてもおかしくないと、私は予想しました。&lt;/p&gt;&#xA;&lt;p&gt;これはキャラを引く人にとってはチャンスです。このような機会はめったにありません。&lt;/p&gt;&#xA;&lt;p&gt;事実として、イエランは破格すぎる性能を持ち、凸効果も信じられないほどすべてが強い。&lt;/p&gt;&#xA;&lt;p&gt;イエランは引いておくべきキャラだと思われます。&lt;/p&gt;&#xA;&lt;p&gt;私がイエランを狙わない主な理由は、個人的な方針によるものに過ぎません。&lt;/p&gt;&#xA;&lt;p&gt;それ以外の方は、これは普通に引いておいたほうがいいと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、クレーで螺旋攻略</title>
      <link>https://syui.github.io/blog/post/2022/06/01/genshin/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/06/01/genshin/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/403/538/072/869/295/small/22dbe5f5adfec559.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;実は並びが悪いことにあとから気づいたので、12-1を2回やってる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/403/537/161/444/276/small/8f8229d67f9d18d7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>プレイしてるゲームをまとめた</title>
      <link>https://syui.github.io/blog/post/2022/05/29/hugo/</link>
      <pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/29/hugo/</guid>
      <description>&lt;p&gt;以下のページにまとめてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/games&#34;&gt;/games&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;やったこと&#34;&gt;やったこと&lt;/h3&gt;&#xA;&lt;p&gt;更新順に表示することにしたのと、アイコンを表示することにした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:/games/genshin/index.md&#34; data-lang=&#34;html:/games/genshin/index.md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lastmod = &amp;#34;2022-05-29&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;header_image = &amp;#34;/games/genshin.png&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:layout/_default/games.html&#34; data-lang=&#34;html:layout/_default/games.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ range .Data.Pages.ByLastmod.Reverse }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Params.header_image }}&amp;#34;&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{{ .Lastmod.Format &amp;#34;2006-01-02&amp;#34; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{.Permalink}}&amp;#34;&lt;/span&gt;&amp;gt;{{.Title}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css:static/css/style.css&#34; data-lang=&#34;css:static/css/style.css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>原神、これから</title>
      <link>https://syui.github.io/blog/post/2022/05/28/genshin/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/28/genshin/</guid>
      <description>&lt;p&gt;自分のこれまでの原神とこれからの原神についてちょっと考えてみました。&lt;/p&gt;&#xA;&lt;p&gt;まず、自分のこれまでの原神のおさらいです。&lt;/p&gt;&#xA;&lt;p&gt;私は、twitterかどっかで目にした原神のクレーというキャラが「かわいい！」と思ったので、原神をはじめました。&lt;/p&gt;&#xA;&lt;p&gt;といってもそれまで原神のことは少しだけ知っていて、(1)switchのゼルダを参考にしたゲームであること、(2)なにかパソコンのwindows(.exe)関連の挙動で炎上したこと、(3)原神のアイコンにもなっているパイモンが気になったことがありました。また、中国企業のmihoyoが開発しているゲームというのも知っていました。&lt;/p&gt;&#xA;&lt;p&gt;原神がゼルダにインスパイアされたゲームであることについて個人的な考えを書きます。&lt;/p&gt;&#xA;&lt;p&gt;巷にはパクリと言われていますが、個人的には丸パクリでもない限り、全く問題と考えています。&lt;/p&gt;&#xA;&lt;p&gt;アニメでもゲームでも漫画でもそうですが、何かを作る際、既存のものを参考にすることはよくあることです。そして、それが認められない場合、文化の発展もありません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、mihoyoの開発スタイル、他のゲームの良いところを取り入れ独自の文化やゲームを作っていく姿勢は、むしろ誇るべき部分だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイスタイル&#34;&gt;プレイスタイル&lt;/h3&gt;&#xA;&lt;p&gt;次に、私のこれまでのプレイスタイルを少しだけ話します。&lt;/p&gt;&#xA;&lt;p&gt;ゲームで影響を及ぼす3つの要素から私のプレイスタイルを明示します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;無課金 : ゲームをプレイするにあたり、一切の課金は行わないと最初に決めました。今でもその方針に従っています。なので俗に言う無課金勢です。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;初見 : ここで言う初見は、主にアカウントのことです。最初に作ったアカウントのみでプレイしています。俗に言うサブ垢を持っていません。原神は未経験から始め、アカウントは一つのみです。ここで言う「初見」は主にこのことを指します。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;新規 : ここではサービス開始からプレイし始めたユーザーを「初期」や「初期勢」と呼びます。開始前から始めたユーザーを「ベータ」や「ベータテスター」といいます。途中から始めたユーザーを新規といいます。私の場合は、開始から1年後くらいに参加したので、新規ということになります。これについても様々な定義が存在しますが、ここではシンプルな条件でこのように分類します。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;つまり、私は、無課金+初見+新規に分類されるため、簡潔に表現すると原神の初心者です。&lt;/p&gt;&#xA;&lt;p&gt;原神のことは良くわかっていませんし、攻略もできていません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;これまでの方針&#34;&gt;これまでの方針&lt;/h3&gt;&#xA;&lt;p&gt;この前提で話をしますが、私のこれまでの方針は、強いキャラを引いて育てるという方針を採ってきました。&lt;/p&gt;&#xA;&lt;p&gt;現在、私が強いと思ったキャラは、必要最低限の範囲で確保することができました。&lt;/p&gt;&#xA;&lt;p&gt;必要最低限というのは、元素ごとに1体の確保を目指しました。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、クレー、雷電、鍾離、香菱、行秋、ベネット、甘雨、ウェンティ、綾華が現在の主な戦力となります。育成もこれらのキャラに限定しています。&lt;/p&gt;&#xA;&lt;p&gt;クレーについては、原神を始めたきっかけでもあるので、炎元素の枠にいれます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、炎元素では胡桃のほうが強いです。しかし、すでに育てているキャラがいるのに、貯めた原石を消費して胡桃を引くのは、必要最低限の範囲とは言えません。&lt;/p&gt;&#xA;&lt;p&gt;ただし、育成や強化に関しては、無課金勢の私がなにか出し惜しみして、このキャラは使い続ける気がするけど、でも素材がもったいないのでやめておこうという考え方はしません。&lt;/p&gt;&#xA;&lt;p&gt;可能な限り早く育成し、強化して使っていく方針でやってきました。育成に関しては、原神を回していくことを一番に考えています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220528_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220528_0002.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220528_0003.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220528_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;これからの方針&#34;&gt;これからの方針&lt;/h3&gt;&#xA;&lt;p&gt;これからの方針も基本的には同じです。&lt;/p&gt;&#xA;&lt;p&gt;原石を貯める、強いキャラを狙う、強いキャラを育てるという感じになると思われます。&lt;/p&gt;&#xA;&lt;p&gt;まず、次に狙っているのは万葉です。ここで当初予定していた強キャラが全員揃うことになります。&lt;/p&gt;&#xA;&lt;p&gt;そして、そこからは各国の神を狙っていく方針です。それ以外は基本的にスルーする方針です。&lt;/p&gt;&#xA;&lt;p&gt;武器に関しては、草薙を狙っていきたいと考えています。しかし、武器ガチャをやるタイミングは難しいでしょう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;クレーはどうすれば強くなるのか&#34;&gt;クレーはどうすれば強くなるのか&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211021_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここからは個人的な願望の話になるのですが、クレーについて思ってることを書きます。&lt;/p&gt;&#xA;&lt;p&gt;まず、現状のクレーは、一言で「たいへん厳しい」という評価です。&lt;/p&gt;&#xA;&lt;p&gt;クレーは初期キャラでもあり、初期のピックアップ星5キャラです。&lt;/p&gt;&#xA;&lt;p&gt;最近、インフレがとても進んでいる環境ではクレーは弱いし、あまり使えないという評価なのです。&lt;/p&gt;&#xA;&lt;p&gt;クレーが厳しい最も大きな理由の一つとして元素爆発が挙げられます。あのキャラを入れ替えると消えてしまう、元素爆発ですね。&lt;/p&gt;&#xA;&lt;p&gt;今やこのタイプの元素爆発を持つキャラは、とても少なく、キャラを変えても残るタイプのものが多い。特にクレーのような継続するタイプだとそうです。&lt;/p&gt;&#xA;&lt;p&gt;更にこの元素爆発、効果がない。バフ、デバフ等の効果が乗っていないのも辛いところだと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、クレーを強くする場合、あの元素爆発を変更するしかありません。武器や聖遺物では、ちょっと厳しいのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;あの元素爆発には以下の変更があると、少しは強くなると思います。現環境風になります。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;キャラを変えても残る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;クレーの攻撃力x同敵へのヒット数を基準に場に出ているキャラに爆発終了までバフ効果を与える(キャラの変更があった場合はリセットされ、そこからのヒット数となる。敵ターゲットが変わりヒットした場合も同様)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;このように考える理由として、現環境において、このタイプの元素爆発は残るのが一般的であることが挙げられます。&lt;/p&gt;&#xA;&lt;p&gt;効果については、クレーの性格からバフのほうが合っているようにに思います。&lt;/p&gt;&#xA;&lt;p&gt;これらは単なる願望ですが、クレーを使い続けるには現環境では非常に厳しいと思います。このような変更があると、クレーが使用されることも少しは増えるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;これで少し増える？本当にそうか？という疑問について解説します。&lt;/p&gt;&#xA;&lt;p&gt;まず、クレーというのは、基本的に元素爆発以外にも厳しいところが多い。&lt;/p&gt;&#xA;&lt;p&gt;攻撃が遅く、メインの重撃ではかなりのスタミナが持っていかれてしまいます。相手をふっとばしてしまうので連続ヒットしても2回目以降はほとんどダメージが通らないし、上がりません。元素スキルは使い方次第なところがありますが、弱点も多く、単体では使えません。設置型なので工夫が必要です。&lt;/p&gt;&#xA;&lt;p&gt;以上の理由から、数ある問題点の中で元素爆発だけが改善されても、残りの問題が存在し続けます。&lt;/p&gt;&#xA;&lt;p&gt;元素爆発が改善されても、残りの問題からクレーがメインアタッカーとして使われる機会は、それほど多くはならないと思います。&lt;/p&gt;&#xA;&lt;p&gt;しかし、逆に「全ての問題を解消してクレーを最強に」という意見にも私は反対です。&lt;/p&gt;&#xA;&lt;p&gt;要はバランスが重要で、キャラには弱点があって然るべき。クレーというキャラの立ち位置からは、最強はありえないし、似合わない。&lt;/p&gt;&#xA;&lt;p&gt;ただし、下から数えたほうが早いピックアップ星5キャラとしては、もう少し現代風に強化してほしさがあるというのが個人的に思っていることです。&lt;/p&gt;&#xA;&lt;p&gt;次の復刻でクレーの元素爆発の上方修正を個人的には期待しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;アタッカー&#34;&gt;アタッカー&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211021_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在、螺旋では雷電、綾華をメインアタッカーで使っています。マップ(秘境含む)では綾華かクレーですね。氷タイプが来たらクレーに切り替えますが、それ以外は綾華をメインに使っています。&lt;/p&gt;&#xA;&lt;p&gt;綾華の評価ですが、便利で強いし、使いやすいと思っていて、今後も使い続けるキャラになると思う。&lt;/p&gt;&#xA;&lt;p&gt;クレーの評価は上に書いたので、残るは雷電の評価ですが、雷電は最強です。&lt;/p&gt;&#xA;&lt;p&gt;純粋アタッカーとしての評価にあまり意味はないと思っているので、総合評価になりますが、雷電が一番だと思います。螺旋にもマップにも必ず入ってくるし、螺旋の場合はアタッカーとして入ってきます。&lt;/p&gt;&#xA;&lt;p&gt;ただ、通常攻撃の天賦9はやりすぎた&amp;hellip;。爆発に乗るかもしれないと思ったんだよね(乗らないらしい)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nftをやってみた</title>
      <link>https://syui.github.io/blog/post/2022/05/25/nft/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/25/nft/</guid>
      <description>&lt;h3 id=&#34;nftとは&#34;&gt;nftとは&lt;/h3&gt;&#xA;&lt;p&gt;nftを理解するには、まず仮想通貨から理解する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;あくまで仮想通貨の個人理解を説明します。&lt;/p&gt;&#xA;&lt;p&gt;あまり詳しくないので、間違っているところはあるかもしれませんが、気になる方は自分で調べるようにしてください。&lt;/p&gt;&#xA;&lt;h4 id=&#34;bitcoin&#34;&gt;bitcoin&lt;/h4&gt;&#xA;&lt;p&gt;仮想通貨には、bitcoin, ethereumなどがあります。nftでは主にeth(ethereum)が利用されているようです。&lt;/p&gt;&#xA;&lt;p&gt;仮想通貨の本質は、ブロックチェーンではありません。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、人々がブロックチェーンを求め、ブロックチェーンを欲しがったとは思えないからです。&lt;/p&gt;&#xA;&lt;p&gt;では人々は何を求めていたのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;人々が求めていたのは、自分で銀行口座を作ったり、口座から送金や振込みを自分で行えることだったのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;それを実現するのが仮想通貨でありブロックチェーンだったというわけです。ブロックチェーンが欲しかったわけではありません。&lt;/p&gt;&#xA;&lt;p&gt;今までは銀行に頼むことでしか、これらのことは行なえませんでした。銀行に書類を提出し、審査を通ることでしか口座を作ることはできなかったし、送ることも振り込まれることもできなかった。&lt;/p&gt;&#xA;&lt;p&gt;世界中の国々では政府や銀行が腐敗しているケースも多く、市民が手軽に口座を開設できないような場合も多く存在しています。&lt;/p&gt;&#xA;&lt;p&gt;そんな中、仮想通貨は、今まで銀行に頼むことでしか作れなかった口座や送金、振込を可能にしました。&lt;/p&gt;&#xA;&lt;p&gt;これを可能にした技術がブロックチェーンであり、ブロックチェーンというのは、簡単に言うと改竄が困難な台帳のことです。&lt;/p&gt;&#xA;&lt;p&gt;お金の流れは全て共有される台帳に刻まれます。これによって、銀行が行っていた業務を個人でも行えるようになりました。&lt;/p&gt;&#xA;&lt;h4 id=&#34;nft&#34;&gt;nft&lt;/h4&gt;&#xA;&lt;p&gt;nftとは、このブロックチェーンを何かしらのコンテンツ情報と紐付けることで、その所有や唯一性、検索性、履歴性を担保しようとしたのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;この仕組みが一般化するかはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、例えば、今までにあった美術品などの問題は一部で解消される余地があるかもしれないと個人的には思っています。&lt;/p&gt;&#xA;&lt;p&gt;美術品の価値、及び所有や作者の問題は、関係者を悩ませる問題でもありました。&lt;/p&gt;&#xA;&lt;p&gt;これは本当にゴッホの絵なのかどうなのか、あるいは、ゴッホの絵に数億の価値は本当にあるのだろうか、絵の真の所有者は誰なのだろう、ゴッホの絵は作者が死んでから価値が出たけど(それまでは無価値だった)なぜだろうとか。&lt;/p&gt;&#xA;&lt;p&gt;このへんの話をすると長くなるので割愛しますが、nftは、今までの美術品に取って代わるものとして期待されている側面があるのかもしれません。そんな風に感じています。&lt;/p&gt;&#xA;&lt;p&gt;次に、現在のnftを構成する要素をいくつか説明します。&lt;/p&gt;&#xA;&lt;h4 id=&#34;opensea&#34;&gt;opensea&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://opensea.io&#34;&gt;https://opensea.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;まずはマーケットです。&lt;/p&gt;&#xA;&lt;p&gt;openseaがそれにあたります。マーケットでは、主に、ブロックチェーンに書かれた特定のmetadataフォーマットからコンテンツを表示します。ここでは所有権を売買できるようです。&lt;/p&gt;&#xA;&lt;h4 id=&#34;metamask&#34;&gt;metamask&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://metamask.io&#34;&gt;https://metamask.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;次にウォレットです。metamaskが有名です。新しい認証の仕組みで公開鍵と秘密鍵を使った認証を行います。&lt;/p&gt;&#xA;&lt;p&gt;ethでの支払いやtestnetを使う際にもウォレットでの認証を経なければなりません。ウォレットは署名の役割も担います。&lt;/p&gt;&#xA;&lt;h4 id=&#34;eth&#34;&gt;eth&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ethereum.org&#34;&gt;https://ethereum.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;仮想通貨のethereumの略で、nftでは、ガス代などの支払いにethが使われます。マーケットに出品する場合は、mintしなければならず、その処理に必要です。&lt;/p&gt;&#xA;&lt;p&gt;ガス代を使わないようにする場合は、openseaのtestnet上で独自コントラクトを接続する方法があります。&lt;/p&gt;&#xA;&lt;p&gt;この際、metamask-rinkeby(testnet)でtest用のethを使います。&lt;/p&gt;&#xA;&lt;p&gt;test用のethは&lt;a href=&#34;https://faucet.rinkeby.io/&#34;&gt;こちら&lt;/a&gt;からもらえます。例えば、mintする際にrinkebyのtestnet(eth-address)を指定してください。&lt;/p&gt;&#xA;&lt;h4 id=&#34;openzeppelin&#34;&gt;openzeppelin&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wizard.openzeppelin.com&#34;&gt;https://wizard.openzeppelin.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;自分でブロックチェーンのネットワークにdeployすることを独自コントラクトといいます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、マーケットもコントラクトを持っていますが、それを使用すると、nftのowner(所有)はマーケットになり、口座もマーケットとの共有になります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、自身のowner権限で&lt;code&gt;metadata.json&lt;/code&gt;を発行し、自身の口座を指定したい場合は、独自コントラクトしたものを(接続)する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;この際にも当然、ウォレット認証や署名が必要になってきます。&lt;/p&gt;&#xA;&lt;p&gt;独自コントラクトを立ち上げるなら、openzeppelinが便利です。&lt;code&gt;trufflesuite&lt;/code&gt;もおすすめらしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://trufflesuite.com&#34;&gt;https://trufflesuite.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;実践nft&#34;&gt;実践nft&lt;/h3&gt;&#xA;&lt;p&gt;今回は、openseaのtestnetと独自コントラクトを接続し、画像をマーケットに置くまでをやってみます。&lt;/p&gt;&#xA;&lt;p&gt;まず、&lt;a href=&#34;https://wizard.openzeppelin.com&#34;&gt;openzeppelin&lt;/a&gt;でテンプレート(コード)を書きます。といっても、基本的に&lt;code&gt;openzeppelin&lt;/code&gt;で吐かれたコードをそのまま使用しても動作します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;erc721&lt;/code&gt;を選択して、baseuriを設定します。これは画像urlと同じドメインを指定するようにしてください。baseuriにはwebに置いたmetadata.jsonを指定します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;example.com/meta/0&lt;/code&gt;にjsonファイル、&lt;code&gt;example.com/test/0.jpg&lt;/code&gt;に画像ファイルを置きます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;baseuri : &lt;code&gt;https://example.com/meta/&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;metadata : &lt;code&gt;/meta/0&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tokenId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test 1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test NFT&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://example.com/test/0.jpg&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;file : &lt;code&gt;/test/0.jpg&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;Open in Remix&lt;/code&gt;ボタンをクリックして、&lt;code&gt;remix&lt;/code&gt;を起動します。&lt;code&gt;remix&lt;/code&gt;はIDE(web)です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、マジコスサカキ</title>
      <link>https://syui.github.io/blog/post/2022/05/20/pokemas/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/20/pokemas/</guid>
      <description>&lt;p&gt;マジコスサカキを引きました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220520_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回も引くべきと判断したので、回すことにしたのですが、今回は早めに出てくれてよかった。一発(11連)で出ました。ですが、ダイヤも尽きました。&lt;/p&gt;&#xA;&lt;p&gt;私は2凸(計3枚)をアメを貯めて狙うことにしますが、2凸するのがおすすめです。私が凸をすすめるのは珍しいですが、それくらいにおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;原因はこれです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220520_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;急所率上昇&lt;/code&gt;と&lt;code&gt;急所確定&lt;/code&gt;or&lt;code&gt;急所状態&lt;/code&gt;だとどちらが強いのかというと、後者の&lt;code&gt;急所確定&lt;/code&gt;or&lt;code&gt;急所状態&lt;/code&gt;です。なぜなら前者の率は下げられてしまう可能性があるからです。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、相手が急所無効や急所防御(状態)を持っている場合はどちらが優先されるのか知りません。しかし、もしかすると、急所確定(状態)が優先されるのかもしれません。どちらにせよ率だとこれらを突破することは不可能です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;無課金の保有バディーズ&#34;&gt;無課金の保有バディーズ&lt;/h3&gt;&#xA;&lt;p&gt;無課金でやっていて、最近やたらガチャばかり回している印象あるかもしれませんが、実はそれほどバディーズは持っていません。&lt;/p&gt;&#xA;&lt;p&gt;私はポケマスをサービス開始から始めたので、私のような初期勢からすると、あまり持っていないということです。&lt;/p&gt;&#xA;&lt;p&gt;今までガチャを回したのは全部でこんな感じで、この中で恒常キャラのハルカ、グラジオ、リーフは回していませんし、配布のフウロ、サカキ、アカギ、メイは除きます。つまり、全部で21回くらいのガチャを狙ってやったという感じになります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220520_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220520_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;狙ったのに最後まで出なかったキャラはいなかったんじゃないかな。それくらい今まではダイヤを貯めてから回すようにしていました。&lt;/p&gt;&#xA;&lt;p&gt;したがって、天井で引いたキャラも結構多くて、天井は5,6体くらいだったかな。&lt;/p&gt;&#xA;&lt;p&gt;ですが、最近はダイヤを貯める間もなくガチャを回してる。強いの多いから。&lt;/p&gt;&#xA;&lt;p&gt;このペースだと、そのうち狙ってたのに最後まで出なかったというパターンも出てきそうな気がする。&lt;/p&gt;&#xA;&lt;p&gt;まあいいや。自分が引くべきと判断したキャラを今後も狙っていきたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>楽天モバイルの総評と日本通信sim, povo2.0</title>
      <link>https://syui.github.io/blog/post/2022/05/19/sim/</link>
      <pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/19/sim/</guid>
      <description>&lt;p&gt;私は、去年から楽天モバイルを使っていました。&lt;/p&gt;&#xA;&lt;p&gt;今回、楽天モバイルが1GB/0円のプランを廃止するので、それに伴い楽天モバイルの総評と移行先のことなどを書きたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;楽天モバイルの評価&#34;&gt;楽天モバイルの評価&lt;/h3&gt;&#xA;&lt;p&gt;まず、私の環境では、とても快適に使用できていました。1,2度の回線障害があり、その1回は、電話を使用しようと思っていたタイミングと重なってしまったため、その時だけは実際不便でしたが、全く問題ありません。&lt;/p&gt;&#xA;&lt;p&gt;というのもサービス開始直後というのは、障害があっても仕方ありませんよね。発生して当たり前だと考えています。もちろん、障害が発生しないほうがいいです。しかし、別に障害がまれに発生したとしても、私はそれを特別に問題だとは思いませんでした。&lt;/p&gt;&#xA;&lt;p&gt;ですから、このことに関しては、楽天モバイルはうまくやっている方だと思います。基本的には、回線が途切れることなく、快適に使用できていたという評価になります。&lt;/p&gt;&#xA;&lt;p&gt;1GB/0円のプランは、個人的な使用とマッチしており、評価は高かったです。&lt;/p&gt;&#xA;&lt;p&gt;楽天モバイル以外でこのプランは存在しなかったと思います。&lt;/p&gt;&#xA;&lt;p&gt;私の月々の通信量は、普通に使っても1G以内に収まります。したがって、楽天モバイルを使用中に1年の中で1回だけ113円がかかりました。それ以外は0円でした。&lt;/p&gt;&#xA;&lt;p&gt;これは無理に通信量を抑えたとかではなく、iosにはそういった機能がありませんので無理です。androidには、通信量を制限する設定がありますが、ios(iphone)にはありません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回、楽天モバイルが私が最も評価しているプランを廃止するとのことなので、移行を検討することにしました。&lt;/p&gt;&#xA;&lt;p&gt;移行を検討する理由としては、第一にプラン廃止がありますが、実はそれだけでもありません。&lt;/p&gt;&#xA;&lt;p&gt;変更や廃止が早すぎたことも「できる限り早く移行したほうがいいのではないか」という考えに影響を与えたと思っています。&lt;/p&gt;&#xA;&lt;p&gt;やめるのが早すぎるとなると、この先、どうなるのかわかりません。&lt;/p&gt;&#xA;&lt;p&gt;数カ月後、あるいは1年後にまた変更や廃止が相次ぎ、解約したくてもできなくなるような事態も考えられます。&lt;/p&gt;&#xA;&lt;p&gt;そうなった場合、ユーザーとしてはどうしようもありません。逃げたくても逃げられないし、逃げ遅れてしまうと、取り返しがつかないことになります。&lt;/p&gt;&#xA;&lt;p&gt;ということで、できる限り早く移行したほうがいいのかもしれないという判断になりました。&lt;/p&gt;&#xA;&lt;p&gt;ただし、楽天モバイルは、私の環境では普通に快適に使えました。楽天が好きな人は、使うといいと思います。&lt;/p&gt;&#xA;&lt;p&gt;プラン自体もわかりやすくて、特段高いというわけではありません。アプリはわかりやすかったし、設定しやすかった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;日本通信sim&#34;&gt;日本通信sim&lt;/h3&gt;&#xA;&lt;p&gt;日本通信simが合理的プランという名で1GB/290円で提供しています。&lt;/p&gt;&#xA;&lt;p&gt;解説記事 : &lt;a href=&#34;https://ascii.jp/elem/000/004/084/4084000/&#34;&gt;https://ascii.jp/elem/000/004/084/4084000/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;povo20&#34;&gt;povo2.0&lt;/h3&gt;&#xA;&lt;p&gt;auがpovo2.0という名で基本使用料0のトッピングのプランを提供しています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、個人的にはちょっと複雑で面倒だと思っていて、期間制限付きでギガを買う方式になります。買わなければ0円ですが、一定期間内に使用がなければ解約されるとかだったと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですから、ギガは定期的に購入する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;そして、普通に使っていく分にもギガは買わなければならないわけですが、データ追加で&lt;code&gt;1GB/7日間/390円&lt;/code&gt;, &lt;code&gt;3GB/30日間/900円&lt;/code&gt;となっています。&lt;/p&gt;&#xA;&lt;p&gt;個人的な使用では、povo2.0に移行するのと、楽天モバイルを使い続けるのでは、値段的にあまり変わらないと思いました。&lt;/p&gt;&#xA;&lt;p&gt;解説記事 : &lt;a href=&#34;https://ascii.jp/elem/000/004/070/4070954/&#34;&gt;https://ascii.jp/elem/000/004/070/4070954/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;nuroモバイル&#34;&gt;nuroモバイル&lt;/h3&gt;&#xA;&lt;p&gt;私が以前使っていたnuroモバイルは、&lt;code&gt;0.2GB/495円&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;ただし、現時点ではあまりおすすめはしません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、無課金で螺旋36</title>
      <link>https://syui.github.io/blog/post/2022/05/17/genshin/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/17/genshin/</guid>
      <description>&lt;p&gt;前期も螺旋36でクリアで、今期も螺旋を星36でクリアできたので、感想とか書きます。そういえば書いてなかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220517_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;原神無課金初見新規螺旋36&#34;&gt;原神、無課金、初見、新規、螺旋36&lt;/h3&gt;&#xA;&lt;p&gt;原神、無課金で螺旋36を攻略しているブログを検索で探してみたのですが、見当たりませんでした。微課金では1,2個ありました。&lt;/p&gt;&#xA;&lt;p&gt;検索方法が悪いのかもしれませんし、わざわざブログに書いている人がいないのかもしれません。しかし、思った以上に無課金での螺旋クリアは数が少ない可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;まずはそのへんの話をしていきたいのですが、結論から言うと、無課金で螺旋は目指さなくていいよという話になります。&lt;/p&gt;&#xA;&lt;p&gt;人数自体が極めて少数だと考えられることもこの意見に寄与します。&lt;/p&gt;&#xA;&lt;p&gt;個人的に原神の難易度は、以下の要素が大きく影響すると考えています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;課金&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;初見&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;新規&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;微課金で螺旋36をクリアした人は少数ですが1,2個のブログを発見しました。ただし、微課金と無課金では、得られる原石の数が大きく違います。課金要素が難易度に最も大きな影響を及ぼします。無課金だと難易度がかなり上がっている印象です。&lt;/p&gt;&#xA;&lt;p&gt;次に、初見であるか否かも難易度に影響を及ぼします。例えば、サブ垢でやっているとなると、難易度は一気に下がります。すでに得た知識や経験の差が出てきます。これもかなり大きな違いが現れると思います。&lt;/p&gt;&#xA;&lt;p&gt;次に、新規であるか否かです。螺旋の難易度や敵の強さはずっと上昇傾向にあります。事実として上昇し続けています。例えば、サービス開始からプレイし続けている人と今から始める新規の人とでは、サービス開始からプレイしてる人のほうが、原神を簡単にプレイできる可能性が極めて高いと考えられます。逆に、今から始める場合は、相当苦労するかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、無課金、かつ初見(アカウント)、かつ新規(サービス途中から)で始めたので、この組み合わせだと、螺旋36でクリアした人は検索に出てきません。いるとは思いますが、想像以上に少ない可能性があります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;螺旋36最短最速&#34;&gt;螺旋36、最短最速&lt;/h3&gt;&#xA;&lt;p&gt;以上に述べた理由から、螺旋36クリアを目指すなら、課金するのが一番の近道だと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;次に、初見ではなく経験したあとにサブ垢でも作ってクリアを目指しましょう。そのほうが遥かに早く螺旋36できる可能性が高いです。&lt;/p&gt;&#xA;&lt;p&gt;次に、サービス開始当初からプレイしましょう。当初から始めている人は、螺旋をクリアできる可能性が非常に高いです。これは今現在は無理なので、狙うとしたら上記のどちらかが最も手っ取り早い方法だと考えられます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;それでも無課金で螺旋36を目指したい人へ&#34;&gt;それでも無課金で螺旋36を目指したい人へ&lt;/h3&gt;&#xA;&lt;p&gt;実際やってみて、無課金(新規、初見除く)要素だけでも、結構きついんじゃないかなあと思いました。&lt;/p&gt;&#xA;&lt;p&gt;それでも目指したい場合、原石を貯めて、強いキャラを確実に引いていき、それを育成するとよさそう。&lt;/p&gt;&#xA;&lt;p&gt;自分がクリアできたのも、たまたま(偶然)でしかないので、あまりこれといったアドバイスはありません。&lt;/p&gt;&#xA;&lt;p&gt;好きなようにやるのが一番だと思っています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;好きなようにプレイしよう&#34;&gt;好きなようにプレイしよう&lt;/h3&gt;&#xA;&lt;p&gt;なにかアドバイスがあるとすれば、好きなようにやろうってことくらいです。&lt;/p&gt;&#xA;&lt;p&gt;これについては、ちょっとだけ思っていることがあります。&lt;/p&gt;&#xA;&lt;p&gt;確かに、原神も面白いけど、他のことも楽しいよ、ということです。&lt;/p&gt;&#xA;&lt;p&gt;私は、原神をちょこちょこプレイしていますが、実際ほとんどプレイしていなかったと言うか、サボりまくっていたというのが現状でした。&lt;/p&gt;&#xA;&lt;p&gt;探索度とか見てもらえればわかるかもしれませんけど、全然進んでなくて、あまりプレイしていないという実情があります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、配信を見てみると、原神ばかり何時間もプレイしている人がたくさんいます。&lt;/p&gt;&#xA;&lt;p&gt;たしかに、ずっと原神をプレイしていれば、螺旋攻略も早いかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、個人的には、あまりおすすめしません。&lt;/p&gt;&#xA;&lt;p&gt;そもそも螺旋攻略自体をあまりおすすめしないのですが、私が最もおすすめなのは、好きなようにプレイしているうちに、螺旋36が届きそうなタイミングが来るかもしれないので、その時がきたら、そこで初めて手を伸ばしてみるみたいな、そんな方針が一番なんじゃないかということです。&lt;/p&gt;&#xA;&lt;p&gt;私はそのような方針でプレイしてきました。&lt;/p&gt;&#xA;&lt;p&gt;こういうやり方でしかやってこなかったので、こういうやり方しかアドバイスできませんが、こういうやり方もあるよということで。&lt;/p&gt;&#xA;&lt;p&gt;以上です。&lt;/p&gt;&#xA;&lt;p&gt;螺旋36、クリアできたので、うれしい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、色違いホウオウ</title>
      <link>https://syui.github.io/blog/post/2022/05/16/pokemas/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/16/pokemas/</guid>
      <description>&lt;p&gt;引くべきと判断したので回してたけど、今回も結構ギリギリで出た感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220516_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケマスの可能性&#34;&gt;ポケマスの可能性&lt;/h3&gt;&#xA;&lt;p&gt;今回は、ポケマスをプレイしていて思ったことを書きます。&lt;/p&gt;&#xA;&lt;p&gt;まず、このゲーム、長く続いていてすごいなって思います。&lt;/p&gt;&#xA;&lt;p&gt;すぐに終了するゲームをプレイしようとする人はいません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、サービスが続いている、続けられていることは何より重要です。それが土台であり基本です。&lt;/p&gt;&#xA;&lt;p&gt;よって、それができているだけで、ポケマスはすごいゲームだと思う。&lt;/p&gt;&#xA;&lt;p&gt;今現在、ポケマスでは、ストーリーも日々更新されていて、当初の遊び方からたくさんの進化を重ねてきました。&lt;/p&gt;&#xA;&lt;p&gt;私がこのゲームをプレイしている理由の一つとして、このゲームのプレイを通じて、いろんなことを考えることができるのもその理由の一つです。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスというゲームには、たくさんの可能性を感じることができます。&lt;/p&gt;&#xA;&lt;p&gt;こうすればもっとよくなるんじゃないかとか、そういったことを想像しやすいゲームでもあります。&lt;/p&gt;&#xA;&lt;p&gt;それを含めて、ゲーム自体も非常に楽しくプレイしています。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回は、ポケマスに感じている大いなる可能性について書いていこうかなって思います。簡潔に。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイヤーの個性&#34;&gt;プレイヤーの個性&lt;/h3&gt;&#xA;&lt;p&gt;このゲームは、もっとプレイヤーの個性が出るようになってくると、もっと楽しくなりそうと思っています。&lt;/p&gt;&#xA;&lt;p&gt;プレイヤーの個性が出ると、プレイヤーが愛着の持てるゲームに進化するからです。&lt;/p&gt;&#xA;&lt;p&gt;では、プレイヤーの個性というのは、どういった要素から生み出されるのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;具体的には(1)運要素、(2)取り返しのつかない要素、この2つを組み合わせることでプレイヤーの個性が出てくるようになります。&lt;/p&gt;&#xA;&lt;p&gt;これは、例えば、既存のシステムを使っても説明できます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ポテンシャルというものがあって、最近、希少なポテンシャルを得る機会がありました。あれ惜しいなって思っていて、変更ではなく、追加できるようになってれば、プレイヤーの個性が反映されてたと思います。&lt;/p&gt;&#xA;&lt;p&gt;ポテンシャル変更方式では、既存の&lt;code&gt;急所無効&lt;/code&gt;や&lt;code&gt;急所ダメ上昇&lt;/code&gt;のほうがいいとなってしまい、結局使わないという人が多かったし、私も結局使いませんでした。&lt;/p&gt;&#xA;&lt;p&gt;仮に新たなポテンシャル追加方式だったら、どのバディーズにつけようとなりますよね。そこでプレイヤーの個性が現れたと思います。&lt;/p&gt;&#xA;&lt;p&gt;好きなキャラに付ける人や最強バディーズもいまやたくさんいますし、そのどれが強いかは人によって評価は異なるからです。&lt;/p&gt;&#xA;&lt;p&gt;現在のポケマスでは、強化できる上限が決まっていて、自分が選択したキャラを強化していく要素が欠けていると思います。これは、ゲームにおいてすごく面白みを感じるところなので、これがないのは、非常にもったいない。&lt;/p&gt;&#xA;&lt;p&gt;もしポケマスに「自分が選択したキャラを強化していく要素」が追加されたなら、そこにプレイヤーの個性が現れ、このゲームをもっと愛着の持てるゲームに進化すると私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;では「自分が選択したキャラを強化していく要素」を追加するには、なにをどのように実行するのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは、(1)運要素、(2)取り返しのつかない要素を組合わることで実現します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、プレイヤーの個性、それに伴う愛着は、この取り返しのつかなさと個人の選択によってもたらされるからです。&lt;/p&gt;&#xA;&lt;p&gt;いくらでも変更できるなら、そこにはプレイヤーの個性が現れにくい。攻略サイトの答え通りにすればいいだけです。それでは面白くなく、飽きられやすく、愛着も湧きにくい。&lt;/p&gt;&#xA;&lt;p&gt;よって、変更はできるけど、その困難さやコストの大きさから、取り返しがつかない要素として認識されるように誘導する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;これは、例えば、アイテムの入手機会を非常に限定的にしたりそういった取り組みから実現できると思われます。&lt;/p&gt;&#xA;&lt;p&gt;運要素も長く遊ばれ続けるには必要不可欠な要素です。組み合わせの数を圧倒的に増やしてくれると同時に、ここにも選択とは違ったプレイヤーの個性が現れます。&lt;/p&gt;&#xA;&lt;p&gt;もし今後プレイヤーの個性が現れる方向に調整されていけば、このゲーム、もっともっと面白くなると思います。ですから、ポケマスにはまだまだ可能性がたくさんあると思っていて、このゲーム、続けることができていて、進化し続けているので、見ていてとても楽しいです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>壁紙作った</title>
      <link>https://syui.github.io/blog/post/2022/05/11/illust/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/11/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/wall/01.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/wall/02.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/wall/03.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/wall/04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画描いた2</title>
      <link>https://syui.github.io/blog/post/2022/05/07/manga/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/07/manga/</guid>
      <description>&lt;p&gt;この前、漫画に新しい話を追加したい気分だったので、書いてると、ストーリーが進むに連れ、どんどん絵が雑になっていき、最終的には下書きみたいになってしまったので、これはまずいと思い、過去コマの修正からやり直すことにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/258/586/466/983/571/original/3d9e1b4781eac1c7.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;なぜ最初から書き直しているのか&#34;&gt;なぜ最初から書き直しているのか&lt;/h3&gt;&#xA;&lt;p&gt;絵が雑になっていく理由はいくつかあります。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、さっさとストーリーを進めて、早く自分が思い描いているコマ(ゴール)にたどり着きたいからです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、雑になりすぎたので、今まで作った漫画の過去コマ全部を書き直すことにしました。&lt;/p&gt;&#xA;&lt;p&gt;今読み直すと、納得できないコマがたくさんあります。&lt;/p&gt;&#xA;&lt;p&gt;この作業を通して、漫画の描き方がわかってくればと思います。(物語の変更はありません)&lt;/p&gt;&#xA;&lt;p&gt;ページ数が少ない段階でこの作業に取り組めてよかったと今は思います。&lt;/p&gt;&#xA;&lt;p&gt;しばらく修正が続きます&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/manga/&#34;&gt;/ai/manga/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGO、メガシンカが楽しい</title>
      <link>https://syui.github.io/blog/post/2022/05/03/%E3%83%9D%E3%82%B1%E3%83%A2%E3%83%B3go%E3%83%A1%E3%82%AC%E3%82%B7%E3%83%B3%E3%82%AB%E3%81%8C%E6%A5%BD%E3%81%97%E3%81%84/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/03/%E3%83%9D%E3%82%B1%E3%83%A2%E3%83%B3go%E3%83%A1%E3%82%AC%E3%82%B7%E3%83%B3%E3%82%AB%E3%81%8C%E6%A5%BD%E3%81%97%E3%81%84/</guid>
      <description>&lt;p&gt;ポケモンGOのメガシンカが楽しすぎて、毎日メガシンカしてます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220503_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;無料のメガシンカが実装目指すべきところ&#34;&gt;無料のメガシンカが実装。目指すべきところ&lt;/h3&gt;&#xA;&lt;p&gt;人によって目指すべきところは異なりますが、一般的には、以下のようになると思います。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;メガシンカできる同種ポケモンを3体用意する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;各個体のメガレベルをMAXに上げる、休憩時間が3日間になる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1日目~3日目用の個体を用意することで継続的な運用が可能になる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220503_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;個人的な育成方針&#34;&gt;個人的な育成方針&lt;/h3&gt;&#xA;&lt;p&gt;上記はあくまでメガエナジーを豊富に貯蓄してきた人向けの運用になります。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、メガシンカできるポケモンを各1体だけ用意し、メガレベルを最短で上げることを目標にプレイしています。私は、1日おきにメガエナジーを消費して、各ポケモンをメガシンカさせています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220503_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;こうすることで、メガレベルを早く上げることが可能です。メガレベルを早く上げると、ボーナスや無料のメガシンカを早くに回せるようになります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;1日の限界到達&lt;/code&gt;という表示がなければ、メガシンカすることでレベル(経験値)を上げられます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220503_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;おすすめするのは、そのポケモンのメガエナジーが尽きるまでは毎日1回メガシンカすることです。これはメダル(メガシンカ回数)の獲得にも寄与します。&lt;/p&gt;&#xA;&lt;p&gt;メガエナジーは、最短でメガレベルを上げられるくらいまで集めることをおすすめします。例えば、伝説の場合は1,200くらいメガエナジーを貯めておくと、その後のメガレベルを順調にあげられると思います。&lt;/p&gt;&#xA;&lt;p&gt;また、相棒にして歩くとメガエナジーが得られます。伝説の場合は20kmで100のメガエナジー獲得できます。&lt;/p&gt;&#xA;&lt;p&gt;ref : &lt;a href=&#34;https://pokemongo-get.com/pokego03882/&#34;&gt;https://pokemongo-get.com/pokego03882/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋に再チャレンジしてみた</title>
      <link>https://syui.github.io/blog/post/2022/05/03/genshin/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/05/03/genshin/</guid>
      <description>&lt;p&gt;ウェンティが思った以上に強いと思った。綾華をメインで使うようになった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220503_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220503_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220424_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、向いてない真君</title>
      <link>https://syui.github.io/blog/post/2022/04/24/genshin/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/04/24/genshin/</guid>
      <description>&lt;p&gt;この前、原神のyoutube動画をちょっと見たのですが、そこで「原神、向いてない真君(しんくん)」の動画がすごく面白くて「ああ、これは自分のプレイ歴そのものだ」と思ったので、今回、記事にしてみようと思いました。私がこれまで原神でやらかしたことの数々をね&amp;hellip;紹介しますよ。&lt;/p&gt;&#xA;&lt;p&gt;また、各キャラについて、引いてよかった、引かなくてよかった等も書く予定なので、これから原神を始める人には参考になるかもしれません。よかったら読んでいってください。&lt;/p&gt;&#xA;&lt;p&gt;あと、記事の内容に関わらず、原神はとても楽しくて素晴らしいゲームです。ゲーム自体はすごくおすすめ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;これまでの数々のやらかし&#34;&gt;これまでの数々のやらかし&lt;/h3&gt;&#xA;&lt;p&gt;原神は、今までなんとなくプレイしてきましたが、どうやら私、原神、向いてなかった！&lt;/p&gt;&#xA;&lt;p&gt;あのキャラを引いたほうがいいと聞けば、ガチャを回して爆死、あのキャラが強いと言われれば何も考えず強化して爆死。&lt;/p&gt;&#xA;&lt;p&gt;ガチャを回すときもキャラを育成するときも、特に何も考えていなかったし、計画も目標もなかった。&lt;/p&gt;&#xA;&lt;p&gt;気がつけばゲーム内のお金であるモラも、ガチャを回すための原石も尽きていました。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;私、もしかして原神、向いてないのではなかろうか。&lt;/p&gt;&#xA;&lt;p&gt;うん、向いてない。どう考えても向いていない。&lt;/p&gt;&#xA;&lt;p&gt;ふふっ、面白い！&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガチャ歴と手持ちキャラの評価&#34;&gt;ガチャ歴と手持ちキャラの評価&lt;/h3&gt;&#xA;&lt;p&gt;そんな「原神、向いてない真君(しんくん)」の私が、これまで回してきたガチャや本当に引くべきだったかどうか、強化すべきだったかどうか、強化するとしてもどのように強化すべきだったかなど、あるいは、各キャラの優先度について考えます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、あてになるはずありません！なぜなら、原神、向いてない私が考えたことだからです。そのことを前提に読んでもらえればと思います。&lt;/p&gt;&#xA;&lt;p&gt;私の手持ちキャラ、及び強化してきたキャラは、以下のとおりです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;クレー、雷電、鍾離、甘雨、香菱、行秋、ベネット、ウェンティ、綾華&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220424_0002.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220424_0002.jpg&#34;/&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;初期の頃はノエルとバーバラを少し強化して使っていた時期がありました。&lt;/p&gt;&#xA;&lt;p&gt;ガチャ自体は、以下の順に回しています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;クレー&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;雷電&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;鍾離&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;甘雨&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;ウェンティ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;綾華&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;それぞれにおいて、実は、甘雨以外のキャラは、引いてよかったと考えています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、甘雨は、私には使いこなせなかったし、PTに入れること自体、ほとんどありませんでした。結局の所、あまり使っていないのです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、甘雨は、引かなくてよかったキャラだったのかもと思っており、その代わり万葉に原石を割けばよかったと思っています。&lt;/p&gt;&#xA;&lt;p&gt;まとめます。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;引いてよかった&lt;/th&gt;&#xA;          &lt;th&gt;持ってないけど引くべき&lt;/th&gt;&#xA;          &lt;th&gt;引かなくてよかった&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷電、鍾離、ウェンティ、綾華&lt;/td&gt;&#xA;          &lt;td&gt;万葉、綾人&lt;/td&gt;&#xA;          &lt;td&gt;甘雨&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;好きなので引いてよかったけど、一般的には引かなくていい&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;クレー&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;なお、すべて無凸を前提に考えています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;育成について&#34;&gt;育成について&lt;/h3&gt;&#xA;&lt;p&gt;原神、全く向いていない私ですが、強化に関して、特に天賦レベルに関して、少しだけ思うところがありますので、それについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;継続して長く使うキャラというのは、できる限り早く天賦レベルを上げたほうがいい。具体的には、天賦レベルMAXや天賦レベル9まで上げてもいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;確かに、天賦レベルの最終段階は、消費が著しいことがあります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、例えば、半年、あるいは1年もの長い間、そのキャラを使い続けていると、それに伴ってダメージの総量というのは、蓄積していきます。&lt;/p&gt;&#xA;&lt;p&gt;その積み重ねは、消費以上に利益を受けている可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;今後のためモラや素材を貯めるタイプの人もいて、それはそれで正しいと思う反面、回すことを考えることも正しいと思います。正しいというか、間違いではないと思っているのです。&lt;/p&gt;&#xA;&lt;p&gt;何度も何度も敵と戦い、プレイを継続し、ゲームを回していく以上、キャラの強化というものは、積もり積もって大きな力になります。時間短縮にもつながる可能性がある。&lt;/p&gt;&#xA;&lt;p&gt;ですから、無駄に思えるような強化も、それを回していく以上、無駄になることは少ない。そんなふうに考えています。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、アタッカー以外で使うキャラの「通常攻撃」は上げる必要ないと思います。それ以外であれば、好きに上げても構わない。そのように考えます。&lt;/p&gt;&#xA;&lt;p&gt;LVに関しても同じことが言えます。もちろん、経験値が無駄になるという要素がデメリットとしてあげられますが、LV90にしても、ほぼ問題はないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ゲームのストーリーが最終を迎える際、素材やモラが余っていても仕方ありません。それなら早いうちに使い、強化したほうが、最終的に受けられる利益のほうが大きくなる可能性が高いと思います。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、これらは好みの問題に過ぎない。どっちでもいいのです。そんなふうに思います。&lt;/p&gt;&#xA;&lt;p&gt;一応、おすすめを書いておくと、キャラLV80/90で、天賦はアタッカーなら全LV8、それ以外なら通常以外を全LV8がおすすめです。将来的にも使っていく予定のキャラに限ります。武器に関しては汎用性のある複数キャラに使える武器LV90がおすすめです。無課金でやる人は&lt;code&gt;天目影打&lt;/code&gt;、&lt;code&gt;鉄蜂の刺し&lt;/code&gt;を強化するのがおすすめです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;螺旋について&#34;&gt;螺旋について&lt;/h3&gt;&#xA;&lt;p&gt;螺旋についても好みが分かれると思います。&lt;/p&gt;&#xA;&lt;p&gt;螺旋は攻略を目指してもいいし、目指さなくてもいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私のおすすめでは、螺旋攻略は無視して構わないし、特に私のように無課金でやる人は、無視したほうがいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;というのも螺旋のコンテンツは、敵の配置などを見てみいくと、あきらかに課金者向け販促コンテンツだと考えられるためです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、無課金で螺旋の突破を無理やり目指してしまうことで、本来育成したいキャラに育成リソースを割けなくなったり、あるいは、時間ばかり消費してしまい、成果がなかったりといったことが考えられます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、100回チャレンジしてやっと星36でクリアできたとします。しかし、時間をかけたからと言って、報酬が増えるわけではありません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、キャラを育成していくうちに自然にクリアできるようになるまでは、あまり参加せず、自然クリアできるようになってから参加するのが最も効率的だと私は思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、無課金で最短で目指すというのも悪くない考えだと思います。そういった目標を立て、楽しめるのなら、それをやるのが一番です。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私の場合は、自然クリアできるようになるまで、あるいはその期待が感じられるようになるまで、参加したり、チャレンジしたりすることを控えていて、通しでプレイし、それで得られる報酬だけ受け取るようにしています。&lt;/p&gt;&#xA;&lt;p&gt;最後に、こんなふうになってはいけない。以上です。&lt;/p&gt;&#xA;&lt;p&gt;それ以外の原神まとめの記事。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/games/genshin/&#34;&gt;https://syui.ai/games/genshin/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGO、ヌイコグマのコミュデイ</title>
      <link>https://syui.github.io/blog/post/2022/04/23/pogo/</link>
      <pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/04/23/pogo/</guid>
      <description>&lt;p&gt;今回は、PL50までのXLアメがギリギリ貯められるくらいの調整だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前回のコミュデイではPL50まで無理でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;イベント中は、パイルよりナナでエクセレントを狙ってました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;それ以外の進捗について。&lt;/p&gt;&#xA;&lt;h3 id=&#34;花飾り進化&#34;&gt;花飾り進化&lt;/h3&gt;&#xA;&lt;p&gt;やっと進化できた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0007.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0008.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0009.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;夕暮れ&#34;&gt;夕暮れ&lt;/h3&gt;&#xA;&lt;p&gt;夕暮れ時の実装(進化条件としての)、まだまだ先だと思うので、とりあえず夜で進化させといた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0005.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ルギアapex&#34;&gt;ルギアapex&lt;/h3&gt;&#xA;&lt;p&gt;まさか自分がルギアまでリトレーンすることになるとは思っていませんでした。ルギアはシャドウのほうが似合っていたらそっち使おうと思っていたのですが、気づいたらリトレーンしていました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220423_0006.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;このことに関して、いくつか自分なりの考えがあるので、それについてちょっとだけ書きます。&lt;/p&gt;&#xA;&lt;p&gt;apex(リトレーン)ですが、このように光り輝くポケモンは今までに例がありません。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンには、色違いがありますが、色違いの演出は初動のみです。継続的に光り輝く演出はこれが初めてだと思います。&lt;/p&gt;&#xA;&lt;p&gt;演出を含め、今回のapex(リトレーン)は、個人的には、色違いより希少だと感じています。&lt;/p&gt;&#xA;&lt;p&gt;その性質も色違いとは大きく異なり、色違いは運に由来しますが、apex(リトレーン)は選択に由来するようです。&lt;/p&gt;&#xA;&lt;p&gt;現在、多くの人がシャドウをボックスに眠らせています。&lt;/p&gt;&#xA;&lt;p&gt;それ故、この光り輝くポケモンを使えるかどうかは、単なる「選択」の問題にも関わらず、それを選択する人はほとんどいません。&lt;/p&gt;&#xA;&lt;p&gt;ほとんどいないのが現状なので、相対的にそれを持つ人が非常に限定的になっており、それ故、希少になっていると感じます。&lt;/p&gt;&#xA;&lt;p&gt;これが運営の意図したものかどうかはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、個人的には、なぜ多くの人がこの選択を取らないのかも必然的だとは思います。&lt;/p&gt;&#xA;&lt;p&gt;それは、一言でいうと損をするからです。&lt;/p&gt;&#xA;&lt;p&gt;リトレーンするとポケモンは弱くなり、もとに戻せない。個体値100がシャドウの個体値0より弱く設定されていたと思います。&lt;/p&gt;&#xA;&lt;p&gt;このような理由でイベント参加者なら誰でも手に入れられるのに、誰も持っていないみたいな現象が発生しているように思います。&lt;/p&gt;&#xA;&lt;p&gt;私は、今回のapexリトレーンは、使っていて気分がいいので、レイドやジムなどで積極的に使うようにしています。&lt;/p&gt;&#xA;&lt;p&gt;ここからが本題ですが、このような選択は、本当に損なのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;一般的に見ると明らかに損なのですが、私は、あまりそんな風には考えていません。&lt;/p&gt;&#xA;&lt;p&gt;私が思うのは、せっかくapexを手に入れたのに、ボックスに眠らせたままにしておくのはもったいないということ。そして、運営が決めた設定やパラメータ、強さを気にして、自分の好きなようにできないこと、好きなように楽しめないこと。それが一番、自分にとって損だなあと思ったのです。&lt;/p&gt;&#xA;&lt;p&gt;前回、書くのを忘れていましたが、好きなように楽しもう。&lt;/p&gt;&#xA;&lt;p&gt;実はルギアはシャドウもかっこいいな、似合ってるなと思っていたので、公式にダークルギアがあったりするので、シャドウのまま使おうと思ってたのですが、目が赤いのが気になったのと、リトレーン後を見てみたい気持ちがあったので、リトレーンすることにしました。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、リトレーンして満足です。こっちのほうがかっこいいって思いました。&lt;/p&gt;&#xA;&lt;p&gt;感想は以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、神里綾華を引いた</title>
      <link>https://syui.github.io/blog/post/2022/04/19/genshin/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/04/19/genshin/</guid>
      <description>&lt;p&gt;神里綾華、引きました。昔は神里と言ってたんですが、兄妹出てきたので、そこから綾華と呼ぶようにしています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220419_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回も無事、爆死しました。でも、なんとか最後の最後に出てくれたことは感謝しかありません。ありがとう！&lt;/p&gt;&#xA;&lt;p&gt;綾華は移動が最高です。&lt;/p&gt;&#xA;&lt;p&gt;今後、綾華が今まで使ってきたクレーに置き換わると思います。&lt;/p&gt;&#xA;&lt;p&gt;甘雨を引いたときに置き換わるかなと思っていたのですが、実現しませんでした。&lt;/p&gt;&#xA;&lt;p&gt;クレーはデイリーや日常使用感が思いのほか良くて。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今回は置き換わると思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;爆死と方針&#34;&gt;爆死と方針&lt;/h3&gt;&#xA;&lt;p&gt;私は無課金でやってるんですが、今回予想を遥かに超える消費をしてしまい、今後のガチャのピックアップは引いていける可能性がとても低い感じになりました。&lt;/p&gt;&#xA;&lt;p&gt;今回は、原石をすべて消費しても出なくて、ハズレのアイテム、キャラと交換できるやつを全部変換してやっと出ました。&lt;/p&gt;&#xA;&lt;p&gt;したがって、今後の選択肢について非常に悩んでいます。&lt;/p&gt;&#xA;&lt;p&gt;通常のガチャの場合、ある程度ピックアップを引けるまで貯めておかないと、ずっとピックアップを引けないような事態も十分に考えられるからです。&lt;/p&gt;&#xA;&lt;p&gt;どういうことかというと、例えば、少量の原石をゲット、すぐに消費、やっぱり出ない、ピックアップ終了という繰り返し、そのような事態に陥る可能性が非常に高い。&lt;/p&gt;&#xA;&lt;p&gt;ですから、通常は原石は貯めてからガチャを回すようにしたほうがいいのです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、今後、負のスパイラルに陥るリスクを負っても少ない原石で狙うべきか、あるいはスルーして原石を貯めるべきか、非常に悩ましい。&lt;/p&gt;&#xA;&lt;p&gt;しかし、原神のガチャはちょっと特殊で、回すたびに貯まる一種のボーナスがあって、そのボーナスは次のガチャにも引き継がれるというような話も聞いています。&lt;/p&gt;&#xA;&lt;p&gt;そのような場合は、ガチャをいつ回しても構わないということになります。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、その時に引けなくても次のガチャを引ける確率が高くなるからです。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、先のことを考えるのはやめにして、綾華の育成をがんばります！&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ウェンティを引いた</title>
      <link>https://syui.github.io/blog/post/2022/04/15/genshin/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/04/15/genshin/</guid>
      <description>&lt;p&gt;本当は万葉を狙ってたんですが、今回、ウェンティを引くことにしました。&lt;/p&gt;&#xA;&lt;p&gt;ウェンティは実は原神で2番目に好きなキャラなので、それをスルーするのもあれ。よくない。&lt;/p&gt;&#xA;&lt;p&gt;私が1番好きなキャラはクレーで、2番目がウェンティなんですよね。で、一番気になってるのがパイモンです。&lt;/p&gt;&#xA;&lt;p&gt;ウェンティは性格がとても気に入っててね、好きなんです。&lt;/p&gt;&#xA;&lt;p&gt;ただし、ウェンティを引いた理由はそれだけではなく、風元素キャラが不足していたこと、暴風の目の効果が強いと思ったことです。&lt;/p&gt;&#xA;&lt;p&gt;今回のガチャは、若干、爆死する結果になってしまい、今後、引く予定だったキャラを引けなくなるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;現在は綾華と万葉を狙っていて、この二人を引けるかどうかは原石がギリギリな感じです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、原神のガチャは爆死続きなので、近々早めに出てくれるんじゃないかって期待してたりします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、マジコスセレナを引いた</title>
      <link>https://syui.github.io/blog/post/2022/04/14/pokemas/</link>
      <pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/04/14/pokemas/</guid>
      <description>&lt;p&gt;今回は、ほんとにギリギリでした。マジコスセレナは4/14まで。&lt;/p&gt;&#xA;&lt;p&gt;私はアニメを見てたこともあって、今回のマジコスセレナは本当に欲しかったので、よかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220414_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;状況としては、ダイヤ不足のときにガチャが来たので、ダイヤ貯まったら回すというのをやってて、それでも最終日まで出なくて、これはやばいと思い、そこで一気にバトルヴィラ、謎解きイベントを進め、ダイヤを貯めてやっと1つゲットできました。&lt;/p&gt;&#xA;&lt;p&gt;アメを使って1凸しています。アメが確保できたら2凸する予定。&lt;/p&gt;&#xA;&lt;p&gt;今回、謎解きイベントをやってみて、今回の形式は初めてなので、できる限り余裕を持ってやったほうがいいですね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemonmasters.pokemongo-raku.com/posts/13437&#34;&gt;https://pokemonmasters.pokemongo-raku.com/posts/13437&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;エンブレムも欲しいので、色々と同時に進めていると、クリアできていないミッションがあって、調べてみると、それも謎解きでした。&lt;/p&gt;&#xA;&lt;p&gt;この辺、見落としすプレイヤーいそうな気がする。こういうのが4つありますので、がんばろう。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ミクリの謎に答えよう！&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;チームスキル「マフラー」を持つバディーズを1組&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wikiwiki.jp/touko_hip/%E8%AC%8E%E8%A7%A3%E3%81%8D%E3%83%86%E3%82%A3%E3%83%BC%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3%E3%83%BC&#34;&gt;https://wikiwiki.jp/touko_hip/%E8%AC%8E%E8%A7%A3%E3%81%8D%E3%83%86%E3%82%A3%E3%83%BC%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3%E3%83%BC&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;関係ない話なんですが、ちょっと前にセレナのエンブレムで一個欠けていたやつをゲットできました。これもよかった。&lt;/p&gt;&#xA;&lt;p&gt;私のように雑にプレイしてると、見落としそうな気がする。(今できるかはわからない&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220414_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;こちらにポケマス関連の情報をまとめています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/games/pokemas/&#34;&gt;https://syui.ai/games/pokemas/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>nexus7にandroid12を入れる</title>
      <link>https://syui.github.io/blog/post/2022/03/24/nexus7/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/03/24/nexus7/</guid>
      <description>&lt;p&gt;nexus7にlineage-19.1(android12)を入れてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-19-1-2022-03-18.3569067/&#34;&gt;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-19-1-2022-03-18.3569067/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ほとんどが&lt;a href=&#34;https://syui.ai/blog/post/2021/07/07/android/&#34;&gt;前回&lt;/a&gt;と変わらずです。&lt;/p&gt;&#xA;&lt;p&gt;gapps : &lt;a href=&#34;https://drive.google.com/drive/folders/1O-I01LDvno57ztnxIW_bSnVWEk8-6Ics&#34;&gt;https://drive.google.com/drive/folders/1O-I01LDvno57ztnxIW_bSnVWEk8-6Ics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;bitgapps : &lt;a href=&#34;https://github.com/BiTGApps&#34;&gt;https://github.com/BiTGApps&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;magisk : &lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;https://github.com/topjohnwu/Magisk&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;sysrepart_1380_20.zip&lt;/code&gt;のパーティションの処理が失敗する場合は、公式factory-imgで初期化するといいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;flo : &lt;a href=&#34;https://developers.google.com/android/images&#34;&gt;https://developers.google.com/android/images&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/011/205/665/512/442/original/1437498dc8534263.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;nexus7が文鎮化した&#34;&gt;nexus7が文鎮化した&lt;/h3&gt;&#xA;&lt;p&gt;今回、nexus7が文鎮化しました。&lt;/p&gt;&#xA;&lt;p&gt;lineage 19.1を入れて、うまく動作していたのですが、gappsが入らなくて、gappsが入らないと、gmsが使えません。gmsが使えないと、google-storeなどが使えませんので不便です。&lt;/p&gt;&#xA;&lt;p&gt;gappsが入らないのは、sysrepartのscriptが失敗しているからなんですが、それを修正しようと、公式のfactory-imgで初期化したのが失敗でした。&lt;/p&gt;&#xA;&lt;p&gt;私のnexus7は以前からfastboot(bootloader)に入る際、電源ボタン+volume下ボタンでは入れなくなっていたため、usb接続からの&lt;code&gt;adb reboot bootloader&lt;/code&gt;で入っていました。&lt;/p&gt;&#xA;&lt;p&gt;で、初期化後に起動しなくなったのですが、当然ながら、fastbootに入れない。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;まあ、いわゆる文鎮化です。&lt;/p&gt;&#xA;&lt;p&gt;googleロゴが繰り返し出てきてandroidが起動せず、fastbootにも入れない。&lt;/p&gt;&#xA;&lt;p&gt;この場合、ボタンを押して入るしかないからです。これが文鎮化につながりました。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、起動後はちゃんとボタン、つまり、ボリュームダウン等は機能してたんですよ。ただ起動時のみ、なぜかボタンを押してもfastbootに入れない。以前はボタンで入れたのですけど、いつの間にかボタンで入れなくなっていました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;nexus7の文鎮化を修理した&#34;&gt;nexus7の文鎮化を修理した&lt;/h3&gt;&#xA;&lt;p&gt;分解してボタン周りをいじったら、なんとかfastbootに入ってくれました。&lt;/p&gt;&#xA;&lt;p&gt;このチャンスを逃す手はありません。&lt;/p&gt;&#xA;&lt;p&gt;ここで様々な処理を施し、最低限、androidが正常に起動するようにしました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;android12-app-list&#34;&gt;android12 app list&lt;/h3&gt;&#xA;&lt;p&gt;使ってるアプリのリストです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Terminal Emulator for Android&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;BusyBox&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hacker&amp;rsquo;s Keyboard&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;AFWall+&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Clipper - Clipboard Manager&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;AdAway&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Perfect Viewer&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;chrootしたarch.imgにもsshできたのでよかった。この辺もちょっとしたhackは必要だった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/011/206/558/360/931/small/9d34e56d3a9a274d.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/011/207/561/914/072/small/05ff90505543c524.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>niantic profile web</title>
      <link>https://syui.github.io/blog/post/2022/03/24/niantic-profile/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/03/24/niantic-profile/</guid>
      <description>&lt;p&gt;niantic profile(web)がreleasesされました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://my.nianticlabs.com&#34;&gt;https://my.nianticlabs.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/108/008/754/283/265/057/original/78115cb936e54c29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;niantic idを登録(予約)している人は少なく、体感だと2/100くらいでした。niantic profileの役割は今後、徐々に拡大される可能性があるので、今のうちにidをとっておくのがおすすめです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;nianticのゲームは、大半が位置情報ゲームであるため、idの選択には注意してください。例えば、network上のcodename(username), handlename類を現実の社会関係性に適用、または認知を望まない場合、idの選択には注意が必要です。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;ref : &lt;a href=&#34;https://nianticlabs.com/blog/niantic-profile&#34;&gt;https://nianticlabs.com/blog/niantic-profile&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、神里綾人は引くべきか</title>
      <link>https://syui.github.io/blog/post/2022/03/23/genshin/</link>
      <pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/03/23/genshin/</guid>
      <description>&lt;p&gt;課金だと引くべきと考えます。無課金だと引くべきではないと考えています。&lt;/p&gt;&#xA;&lt;p&gt;この微妙な結論の理由を自分なりの考えをまとめます。&lt;/p&gt;&#xA;&lt;p&gt;神里綾人は、おそらく、俗に言う「強いキャラ」となります。これに関してはただの推測ですが、水元素という点と元素爆発が継続範囲ダメージの交代可能なものなので、その点で非常に高い評価ができます。&lt;/p&gt;&#xA;&lt;p&gt;私が考える最も強い元素は、今の所、水元素です。&lt;/p&gt;&#xA;&lt;p&gt;これをランキング形式にわかりやすくまとめると以下のとおりです。なお、草に関してはただの推測ですが敵の行動制限に関わるものが多いらしいので、そこからの評価です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;水 &amp;gt; 風 &amp;gt; 氷 &amp;gt; 炎 &amp;gt; 雷 &amp;gt; 岩 &amp;gt; 草&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これらは、聖遺物や環境によっても変動します。例えば、風元素は、聖遺物の評価も相まってのランキングとなっています。&lt;/p&gt;&#xA;&lt;p&gt;水元素を最も評価する理由については、各元素にダメージ、サポートの両面で作用しやすい点が大きいです。&lt;/p&gt;&#xA;&lt;p&gt;原神は、元素反応でダメージを倍々に上げていくゲームであり、それが最も効率の良いダメージの出し方でもあります。&lt;/p&gt;&#xA;&lt;p&gt;つまり、原神では、元素の組み合わせが最も重要なので、その組み合わせが一番やりやすいと考えられる水元素が今のところ自分の中では、一番強い元素になります。&lt;/p&gt;&#xA;&lt;p&gt;そして、一番強い元素を持つアタッカーの神里綾人は、評価も高くなります。その点で、神里綾人は、おそらく、強いキャラになり、引いておいたほうがいいキャラになるだろうと予想できます。&lt;/p&gt;&#xA;&lt;p&gt;ただし、無課金で引くべきかどうかに関しては、おそらく、引くべきではない状況のほうが多いと考えます。&lt;/p&gt;&#xA;&lt;p&gt;私の現在の状況を説明すると、期待値で2キャラを引く程度にしか原石が貯まっていません。そして、持っていない強キャラが多い。ですが、水元素は行秋を持っています。&lt;/p&gt;&#xA;&lt;p&gt;このような状況下では、引くべきでないと判断します。&lt;/p&gt;&#xA;&lt;p&gt;では、無課金でも引くべき状況は、どのようなパターンが存在するか、解説します。&lt;/p&gt;&#xA;&lt;p&gt;無課金でプレイする上で絶対に引いておきたいキャラは3人います。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;鍾離&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;雷電&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;万葉&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ちなみに、行秋、ベネットは含みません。あくまでピックアップ星5に限定しています。星4キャラは、無課金だとすり抜けやイベントで狙うのが最も効果的だと思います。ハズレのアイテム交換なども可能です。&lt;/p&gt;&#xA;&lt;p&gt;話をすすめると、仮に鍾離、雷電、万葉、行秋、ベネットを保持しているとして、ここで足りないのは、氷元素です。&lt;/p&gt;&#xA;&lt;p&gt;この場合は、元素優先順位が高い氷キャラを狙ったほうがいいということになります。氷元素のアタッカーである綾華を狙ったほうがいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;逆に言うと、鍾離、雷電、万葉を持っており、それ以外の各元素で使うキャラも保持しており、かつ行秋を持っていない場合は、原石に余裕がある限りにおいて、綾人を狙っていくのも悪くない選択だと考えます。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、このパターンに当てはまらない。&lt;/p&gt;&#xA;&lt;p&gt;行秋を持っており、原石に余裕はなく、風元素が不足しており、絶対に引くべき「万葉」を狙わなければならないので、天井分までの原石は確保しておかなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;このように無課金で綾人を引くべき状況は、あまり多くないと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;無課金で綾人を引くべき人の特徴をまとめます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;原石に余裕がある&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;鍾離、雷電、万葉を持っている&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;行秋を持っていない、または各元素で強いキャラを一人は確保している&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;このような条件に当てはまる場合、綾人は引いておくべきなのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ただし、水元素キャラには、不確定要素もあります。&lt;/p&gt;&#xA;&lt;p&gt;現在は、草国、水国、炎国、氷国が未実装で、当該元素の神の性能がわかりません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、水神は綾人より高性能な可能性があるため、未実装国の元素を持つキャラの優先度は、若干、下がります。神が出たときに判断すればいいということになるので。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGOのジョウトツアー</title>
      <link>https://syui.github.io/blog/post/2022/03/21/pogo/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/03/21/pogo/</guid>
      <description>&lt;p&gt;今回は久しぶりにポケモンGOの記事です。&lt;/p&gt;&#xA;&lt;p&gt;2022/2/26にジョウトツアーというイベントがあって、私がどのようにイベントを体験したのかを記録します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゴールドとシルバー&#34;&gt;ゴールドとシルバー&lt;/h3&gt;&#xA;&lt;p&gt;イベントでは色を選択して参加することになっています。&lt;/p&gt;&#xA;&lt;p&gt;色はゴールドとシルバーを選択できます。私はゴールドを選択しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/107/991/789/383/495/166/original/9cfbdb53da0581f9.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;なぜゴールドを選択したのかというと、私は原作をゴールドでプレイしているからです。&lt;/p&gt;&#xA;&lt;p&gt;なぜポケモンGOでも原作を引き継いだのかというと、ポケモンGOにも原作をプレイしたときの思い出を受け継ぎたかったからです。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンでは、私は赤系の色を選択する傾向にありました。最初のポケモンも炎タイプを選択し続けてきました。ほとんどのバージョンでそのような選択をしてきた。これは偶然を含みます。&lt;/p&gt;&#xA;&lt;p&gt;では、金色が好きかと聞かれると、実は銀色が一番好きな色です。&lt;/p&gt;&#xA;&lt;p&gt;また、赤系より青系のほうが好きですね。そのため、ジムカラーは青を選択しています。&lt;/p&gt;&#xA;&lt;p&gt;はじめて原作をプレイしたときのことですが、確か販売店にゴールドしか売ってなかったので、本来はシルバーを選ぼうと思ってたんだけど、ゴールドを買ってプレイしました。このような偶然が重なり、私はなぜか赤系を選択することが多かった。&lt;/p&gt;&#xA;&lt;p&gt;また、個人的には、ホウオウよりルギアのほうが好きなのに、今回もゴールドを選択しています。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOでは、私は、原作でプレイした色を選択し続けると思われます。&lt;/p&gt;&#xA;&lt;p&gt;原作の思い出を受け継ぐことができるから。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ヒノアラシ&#34;&gt;ヒノアラシ&lt;/h3&gt;&#xA;&lt;p&gt;イベントでは朝に1時間くらいプレイしましたが、他にやることがあったので、その日は、そこで終了しています。色違いは、2匹ほどしか出ませんでした。しかも全部持ってるやつ。&lt;/p&gt;&#xA;&lt;p&gt;で、後日、タスクを進めると「マグマアラシを進化させる」というタスクがあって、ボックスを見てみると、すでに進化させたあとだったんです。&lt;/p&gt;&#xA;&lt;p&gt;そこで詰まってしまって、しばらく放置しながらフィールドタスクでヒノアラシのタスクを合間に探してたんですが、見つからず、結局、ロケット団でヒノアラシをゲットして進化させるという方法でタスクをクリアしました。&lt;/p&gt;&#xA;&lt;p&gt;この間は、ほぼプレイせず、たまに開いては「ヒノアラシでないなあ」とぼやいていた記憶。&lt;/p&gt;&#xA;&lt;p&gt;ヒノアラシ進化タスクをクリアしたあとは、半日くらいプレイして、次のタスクを進めました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/107/989/495/943/431/694/small/e1d0408ac194fc35.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ホウオウ&#34;&gt;ホウオウ&lt;/h3&gt;&#xA;&lt;p&gt;やったー！シャドウ・ホウオウ・apexをゲットした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/107/989/495/081/376/880/small/b72935c203029eea.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;個体値も高くてすごい。運が良かった。実は、シャドウの高個体は珍しいので、とても貴重なのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;リトレーン&#34;&gt;リトレーン&lt;/h3&gt;&#xA;&lt;p&gt;&amp;hellip;ですが、私はそのホウホウをリトレーンすることにしました。&lt;/p&gt;&#xA;&lt;p&gt;リトレーンすることは、最初から決めていました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://files.mastodon.social/media_attachments/files/107/989/512/401/137/301/small/25e7646fa503baff.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;絶対に真似してリトレーンしないように！このゲームでは、リトレーンでポケモンを救う選択は、ゲーム内で取り返しがつかない損を被ることになります。ポケモンも弱くなります。仮にリトレーンしてしまうと、あなたはバトルを含めたあらゆる要素で不利に扱われることになります。したがって、絶対にリトレーンしないようにしてください。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;なぜリトレーンしてはいけないのか、その理由については説明しましたので、あとは数字で語ることにしますが、youtubeや攻略サイトでは、絶対にリトレーンしてはいけないと書かれています。&lt;/p&gt;&#xA;&lt;p&gt;そのため、多くの人がこのことを知っていると思われます。&lt;/p&gt;&#xA;&lt;p&gt;実際、youtubeやtwitterを検索してみたところ、ホウオウapexをリトレーンしている人は、ほぼ0でした。&lt;/p&gt;&#xA;&lt;p&gt;私が視聴したことのあるyoutuberの15人を見てみましたが、15/15の割合でシャドウのままでした。つまり、リトレーンした人の数は0です。&lt;/p&gt;&#xA;&lt;p&gt;twitterの当日画像から判断しても、リトレーンした人は、1000/1にも満たないと推測されます。twitterに画像を上げる人も全体の割合から言うと少ないので、実際はもっと少ないかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;なぜでしょう。なぜみんなポケモンを救うと設定されたリトレーンを選択しないのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;それは、みんなリトレーンすると確実に「損」をするということを理解しているからです。&lt;/p&gt;&#xA;&lt;p&gt;仮に「得」であれば、リトレーンする人の割合は多くなります。&lt;/p&gt;&#xA;&lt;p&gt;このことは、データからも数字からも明らかです。&lt;/p&gt;&#xA;&lt;p&gt;再度書きますが、もし今回のホウオウapexをリトレーンしてしまうと、ゲーム内では取り返しのつかない損を被ります。ポケモンが弱くなり、あなたは対戦でも負けることになるでしょう。ですから、その選択は絶対に取らないようにしてください。多くの人がこのことを理解しているのでリトレーンしていません。決して私の真似をしないようにしてください。&lt;/p&gt;&#xA;&lt;p&gt;なぜ私がリトレーンしたのか。ちょっとだけ書くことにします。&lt;/p&gt;&#xA;&lt;p&gt;率直にいうと、私がリトレーンしたのに理由なんてありません。&lt;/p&gt;&#xA;&lt;p&gt;ただやりたかったからやった。それだけです。&lt;/p&gt;&#xA;&lt;p&gt;実は、決定的に損をする、取り返しがつかない、ポケモンが圧倒的に弱くなる。このことは知っていました。&lt;/p&gt;&#xA;&lt;p&gt;ですが私は、ホウオウにはリトレーンしたあとの姿のほうが似合うなって、そう思ったのです。&lt;/p&gt;&#xA;&lt;p&gt;私は、私がやりたいことしかやらないので、今回のリトレーンも同じです。&lt;/p&gt;&#xA;&lt;p&gt;私はあまり個体値を気にしませんし、ゲーム内の損得についてもあまり気にしていません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私を含めた多くの人は、それが間違った選択であり、損をすることを知っています。ですから、実際にリトレーンするような人はほとんどいません。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOは、ARゲームとして、現実に近いところに位置するゲームです。今回の選択を含め、最初に色を選ばせたりだとか、リトレーンするかしないかだったりとか、それらの選択、多くのプレイヤーの個性が現れるところでもあり、とても面白いと感じました。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これは好みの問題に過ぎない。そういった側面も大きいと思います。&lt;/p&gt;&#xA;&lt;p&gt;シャドウ・ホウオウ・apexもかっこいい！&lt;/p&gt;&#xA;&lt;p&gt;でも私は、リトレーン後のほうが好き！&lt;/p&gt;&#xA;&lt;p&gt;今回、ホウオウというポケモンには、リトレーン後のほうが似合ってると、私はそう思ったのでした。&lt;/p&gt;&#xA;&lt;p&gt;私のジョウトツアーは以上です。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意 : 絶対、真似しないようにっ！&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた112</title>
      <link>https://syui.github.io/blog/post/2022/03/10/illust/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/03/10/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_112.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた111</title>
      <link>https://syui.github.io/blog/post/2022/03/09/illust/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/03/09/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_111.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>cardをcliから引けるようにした</title>
      <link>https://syui.github.io/blog/post/2022/02/27/golang-api-ent/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/27/golang-api-ent/</guid>
      <description>&lt;p&gt;こんな感じでカードを引けます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# user create&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# username : [a-z] 7 characters, lower-case letter&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;user&amp;#34;:&amp;#34;${USER}&amp;#34;}&amp;#39;&lt;/span&gt; api.syui.ai/users&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# user info&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl api.syui.ai/users/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# card draw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -X PUT api.syui.ai/users/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/d&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl api.syui.ai/users/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; | jq .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ページは &lt;a href=&#34;https://syui.github.io/api&#34;&gt;/api&lt;/a&gt; に作りました。ここでは自分で引いたやつだけ表示させています。&lt;/p&gt;&#xA;&lt;p&gt;apiからデータを取得する際、cros-originのerrが出ますが、proxy-serverを立てることで無理やり回避。&lt;/p&gt;&#xA;&lt;p&gt;なお、heroku webは一定時間アクセスしないとsleepしますので、表示までに時間がかかることがあります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>goのentでapi serverを作ってみた</title>
      <link>https://syui.github.io/blog/post/2022/02/23/golang/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/23/golang/</guid>
      <description>&lt;p&gt;最初は、&lt;a href=&#34;https://github.com/go-gorm/gorm&#34;&gt;gorm&lt;/a&gt;を使っていました。&lt;/p&gt;&#xA;&lt;p&gt;gormは非常に見通しがよく、わかりやすかったです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go:main.go&#34; data-lang=&#34;go:main.go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aicard/database&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/labstack/echo/v4&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gorm.io/gorm&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Id&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;`json:&amp;#34;id&amp;#34; param:&amp;#34;id&amp;#34; gorm:&amp;#34;primary_key&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`json:&amp;#34;name&amp;#34; gorm:&amp;#34;unique,collate:utf8,length:7`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;CreatedAt&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;UpdatedAt&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;DeletedAt&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gorm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DeletedAt&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`gorm:&amp;#34;index&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusOK&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getUsers&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;{}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Find&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusOK&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;{}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Bind&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Take&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusOK&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;{}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Param&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Bind&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Where&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id = ?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;First&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Save&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusOK&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;{}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Bind&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Create&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusCreated&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Param&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Delete&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;{}, &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NoContent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusNoContent&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Connect&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;sqlDB&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;database&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DB&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sqlDB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Close&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;getUsers&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users/:id&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;getUser&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PUT&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users/:id&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;updateUser&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;createUser&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DELETE&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users/:id&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteUser&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PORT&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1323&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Start&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;しかし、&lt;code&gt;ent@0.9.0&lt;/code&gt;に追加されたような&lt;code&gt;onconflict&lt;/code&gt;の仕組みがなかったので、&lt;a href=&#34;https://entgo.io/ja/docs/code-gen/&#34;&gt;ent&lt;/a&gt;を使いはじめました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>usbのarchもswayにしてみた</title>
      <link>https://syui.github.io/blog/post/2022/02/19/usb/</link>
      <pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/19/usb/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cfdisk /dev/sdb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /dev/sdb1 : 200M, EFI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /dev/sdb2 : 26G, linux&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfs.ext4 /dev/sdb2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfs.vfat /dev/sdb1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount /dev/sdb2 /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacstrap /mnt base base-devel linux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# paru(rust)のbuildは時間がかかりすぎるし、usbには読み書き負担が大きすぎるのでbinaryを持ってきたほうがいいです&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ which paru&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp /bin/paru /mnt/bin/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ arch-chroot /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ useradd -m -G wheel -s /bin/zsh syui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd syui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Defaults env_keep += &amp;#34;HOME&amp;#34;\n%wheel ALL=(ALL) ALL&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /mnt/etc/sudoers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%wheel ALL=(ALL) NOPASSWD: /usr/bin/pacman -Syu --noconfirm, /usr/bin/reboot, /usr/bin/poweroff&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /mnt/etc/sudoers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S grub dhcpcd vim zsh tmux git go openssh net-tools sway xorg-xwayland waybar lightdm lightdm-gtk-greeter networkmanager network-manager-applet blueman pulseaudio pavucontrol udevil pcmanfm chromium  fcitx5 fcitx5-mozc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# grubは様々なマシンをbootできるimgからもってきてcfgを再構築するといいです&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf /boot/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;efi,boot&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; /mnt/boot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ arch-chroot /mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# macbook-air特有の問題に対処&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S broadcom-wl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/mkinitcpio.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HOOKS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;base udev block autodetect modconf filesystems keyboard fsck&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkinitcpio -p linux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ln -s /dev/null /etc/udev/rules.d/80-net-setup-link.rules&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/systemd/network/eth.network&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Match&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;eth0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Network&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#DHCP=ipv4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Address&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.xx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Gateway&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.xx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DNS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl enable NetworkManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl enable systemd-networkd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/lightdm/lightdm.conf &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Seat:*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;autologin-user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;syui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;autologin-user-timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;autologin-session&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sway&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ groupadd -r autologin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gpasswd -a USERNAME autologin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl enable lightdm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/locale.gen&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ locale-gen&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ touch .xprofile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# paru -S numix-gtk-theme numix-icon-theme-git&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ paru -S arc-icon-theme arc-gtk-theme ttf-font-awesome&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls /usr/share/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;icon*,theme*,font*&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp /usr/share/gtk-2.0/gtkrc ~/.gtkrc-2.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim ~/.gitrc-2.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gtk-icon-theme-name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Arc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gtk-theme-name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Arc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gtk-font-name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awesome-terminal-fonts&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl restart lightdm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pcmanfm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ pacman -S powerline zsh-syntax-highlighting&#xA;$ source /usr/share/powerline/bindings/zsh/powerline.zsh&#xA;$ source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;vpnに接続する方法&#34;&gt;vpnに接続する方法&lt;/h3&gt;&#xA;&lt;p&gt;まずは、pritunl-serverを立ち上げて、profileをdownload(or rewirte)します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>archのwmをi3からswayに移行してみた</title>
      <link>https://syui.github.io/blog/post/2022/02/13/sway/</link>
      <pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/13/sway/</guid>
      <description>&lt;p&gt;移行自体はwm(window manager)のi3を使っていたこともあり簡単でした。&lt;/p&gt;&#xA;&lt;p&gt;基本的には、dm(display manager)をwayland対応のものにすることと、swayを呼び出すことくらいです。slimから呼び出すと問題が発生します。&lt;/p&gt;&#xA;&lt;p&gt;今回はdmをlightdmにしました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S sway xorg-xwayland qt5-wayland&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S lightdm lightdm-gtk-greeter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl disable slim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl enable lightdm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf ~/.config/i3 ~/.config/sway&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf ~/.xinitr ~/.xprofile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# groupadd -r autologin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# gpasswd -a USERNAME autologin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;/etc/lightdm/lightdm.conf&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Seat:*]&#xA;autologin-user=syui&#xA;autologin-user-timeout=0&#xA;autologin-session=sway&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;~/.xprofile&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GTK_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export QT_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export XMODIFIERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@im=fcitx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;~/.config/sway/config&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exec fcitx5 &amp;amp;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;status-bar&#34;&gt;status bar&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S waybar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat .config/sway/config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bar &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;swaybar_command waybar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今回は、こちらをもとに設定しました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた110</title>
      <link>https://syui.github.io/blog/post/2022/02/12/illust/</link>
      <pubDate>Sat, 12 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/12/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_110.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>windowsでのsixel</title>
      <link>https://syui.github.io/blog/post/2022/02/11/sixel/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/11/sixel/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/syui/msr&#34;&gt;msr&lt;/a&gt;というmastodon clientでは、macはiterm2の&lt;code&gt;imgcat&lt;/code&gt;を使い、linuxはmltermなどで&lt;code&gt;img2sixel&lt;/code&gt;を使って画像アイコンを表示します。&lt;/p&gt;&#xA;&lt;p&gt;windowsの場合は、msys2でsixelをcompileし、minttyで表示できます。&lt;/p&gt;&#xA;&lt;video controls=&#34;controls&#34; width=&#34;100%&#34; height=&#34;350&#34;&gt;&#xA;  &lt;source src=&#34;https://raw.githubusercontent.com/syui/img/master/movie/dev_msr_sixel_20220211_0000.mov&#34;&gt;&#xA;&lt;/video&gt;&#xA;&lt;p&gt;msys2をscoopでinstallする場合のpathは&lt;code&gt;~/scoop/apps/msys2/current&lt;/code&gt;になります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ scoop install msys2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ msys2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/saitoha/libsixel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd libsixel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S make gcc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./configure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mintty&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ img2sixel test.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/saitoha/libsixel&#34;&gt;https://github.com/saitoha/libsixel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;windows terminalもsixelに対応してくれるといいんですけどね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/terminal&#34;&gt;https://github.com/microsoft/terminal&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/issues/448&#34;&gt;https://github.com/microsoft/terminal/issues/448&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>github actionsでrustのcross compile</title>
      <link>https://syui.github.io/blog/post/2022/02/10/github/</link>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/10/github/</guid>
      <description>&lt;p&gt;opensslのerrorが出る場合は&lt;code&gt;sudo apt-get install -y -qq pkg-config libssl-dev&lt;/code&gt;するといいらしい。&lt;/p&gt;&#xA;&lt;p&gt;windowsのbuildやuploadは、同じ内容でも、うまく行ったり行かなかったりしたので、そのうち動かなくなりそう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.github/workflows/releases.yml&#34; data-lang=&#34;yml:.github/workflows/releases.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release binary&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;strategy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;matrix&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;include&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;os&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;macos-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;artifact_prefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;macos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;x86_64-apple-darwin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;artifact_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;msr&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;asset_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;msr-x86_64-apple-darwin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;os&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;artifact_prefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;linux&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;x86_64-unknown-linux-gnu&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;artifact_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;msr&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;asset_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;msr-x86_64-unknown-linux-gnu&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;os&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;windows-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;artifact_prefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;windows &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;target&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;x86_64-pc-windows-msvc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;artifact_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;msr.exe&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;asset_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;msr-x86_64-pc-windows-msvc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ matrix.os }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;installing rust toolchain&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions-rs/toolchain@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;profile&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;minimal&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;toolchain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;stable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;override&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;components&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;rustfmt, clippy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;installing needed macos dependencies&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;if&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;matrix.os == &amp;#39;macos-latest&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;brew install openssl@1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;installing needed ubuntu dependencies&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;if&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;matrix.os == &amp;#39;ubuntu-latest&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo apt-get update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo apt-get install -y -qq pkg-config libssl-dev libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          sudo apt-get install -y -qq mingw-w64&lt;/span&gt;          &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;running cargo build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions-rs/cargo@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;toolchain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ matrix.rust }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;args&lt;/span&gt;: --&lt;span style=&#34;color:#ae81ff&#34;&gt;release --target ${{ matrix.target }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;upload binaries to release&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;svenstaro/upload-release-action@2.1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;repo_token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.github_token }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;target/${{ matrix.target }}/release/${{ matrix.artifact_name }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;asset_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ matrix.asset_name }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;tag&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.ref }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;overwrite&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>tarot-cardを追加した</title>
      <link>https://syui.github.io/blog/post/2022/02/09/vue/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/09/vue/</guid>
      <description>&lt;p&gt;この前、イラストを描いたやつをtarot-cardに追加したいなって思って、現在の仕組は、以下のようなscriptでcardを生成し、その情報を記述したjsonをvueでimportしてたんですが、毎回buildするのが面倒だと思ったので、jsonの更新のみで対応することにしました。&lt;/p&gt;&#xA;&lt;p&gt;この程度のことはブログに書こうか迷いましたが、どんな些細なことでも、できる限り書いてく方針なので。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:convert.zsh&#34; data-lang=&#34;sh:convert.zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/zsh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0:a:h&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0:a:h:h&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $d/static/json/tarot.json|jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;length&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;expr $n - 1&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dd/static/img/tarot_bg.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;br&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dd/static/img/tarot_br.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;font&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/System/Library/Font/ToppanBunkyuGothicPr6N.ttc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0;i&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$n;i++&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;p&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $d/static/json/tarot.json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].p&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;h&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $d/static/json/tarot.json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $d/static/json/tarot.json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].src&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dd/static/img/yui_$s.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dd/content&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $d/static/json/tarot.json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].file&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$s&lt;span style=&#34;color:#e6db74&#34;&gt; -&amp;gt; &lt;/span&gt;$o&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;composite -gravity north  -geometry +0+160 -compose over $s $bg $o.back&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;composite -gravity north  -geometry +0+0 -compose over $br $o.back $o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;rm $o.back&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $h|wc -m&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;mogrify -font &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$font&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -fill white -pointsize &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; -annotate +930+2570 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$h&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;mogrify -font &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$font&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -fill white -pointsize &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; -annotate +830+2570 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$h&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;squoosh-cli --webp &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;quality&amp;#34;:100}&amp;#39;&lt;/span&gt; -d $dd/content/ai/tarot/ --resize &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{width:400,height:550}&amp;#39;&lt;/span&gt; $o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dd/static/img/tarot.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dd/content/ai/tarot/tarot_00.webp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;composite -gravity north  -geometry +0+160 -compose over $s $bg $o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:static/json/tarot.json&#34; data-lang=&#34;json:static/json/tarot.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;h&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/ai/tarot/tarot_01&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tarot-card-list&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Loading&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-show&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loading&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;vue-loading&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;barsCylon&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#99892b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{ width: &amp;#39;50px&amp;#39;, height: &amp;#39;50px&amp;#39; }&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;vue-loading&lt;/span&gt;&amp;gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Loading&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@click&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;picker&amp;#34;&lt;/span&gt; &amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;far fa-play-circle&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;START&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cName.file&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-show&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;!loading&amp;#34; :src=&amp;#34;cName.file + &amp;#39;.webp&amp;#39;&amp;#34; /&amp;gt;   &amp;lt;img :src=&amp;#34;cnt.file + &amp;#39;.webp&amp;#39;&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-else&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tarotz&amp;#34;&lt;/span&gt; /&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;blockquote&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cName.p&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;cName.p&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-else&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;strong&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;タロットカード&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;strong&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;cnt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;blockquote&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//import items from &amp;#39;/static/json/tarot.json&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VueLoading&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-loading-template&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;cName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;cnt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loading&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;tarotz&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/ai/tarot/tarot_00.webp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;mounted&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/json/tarot.json&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;.&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt; =&amp;gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VueLoading&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;methods&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;picker&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loading&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cNumber&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;random&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;random&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;cNumber&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;cNumber&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;cn&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;random&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cnt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;cn&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list_element&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;list_element&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;remove&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loading&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}, &lt;span style=&#34;color:#ae81ff&#34;&gt;1200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;axiosでpreviewする際は、&lt;code&gt;public/json&lt;/code&gt;に同ファイルをおいてやるとできると思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mammutのexampleをまとめてみる</title>
      <link>https://syui.github.io/blog/post/2022/02/06/rust-mammut/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/06/rust-mammut/</guid>
      <description>&lt;p&gt;mastodon apiのrust libである&lt;a href=&#34;https://docs.rs/mammut/latest/mammut/&#34;&gt;mammut&lt;/a&gt;ですが、exampleがあるとわかりやすいと思ったので、作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;まず、mastodonへのrequestはこんな感じになります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -X POST -Ss https://$host/oauth/token &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;-d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;\&amp;#34;client_id\&amp;#34;: \&amp;#34;&lt;/span&gt;$client_id&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;\&amp;#34;client_secret\&amp;#34;: \&amp;#34;&lt;/span&gt;$client_secret&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;\&amp;#34;grant_type\&amp;#34;: \&amp;#34;password\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;\&amp;#34;username\&amp;#34;: \&amp;#34;&lt;/span&gt;$username&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;\&amp;#34;password\&amp;#34;: \&amp;#34;&lt;/span&gt;$password&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;&#x9;\&amp;#34;scope\&amp;#34;: \&amp;#34;&lt;/span&gt;$scope&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mammutでは&lt;code&gt;Data&lt;/code&gt;として認証に必要な要素がまとめられてますので、各種要素を入れて&lt;code&gt;Mastodon::from_data(data)&lt;/code&gt;すると認証できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:Cargo.toml&#34; data-lang=&#34;toml:Cargo.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;package&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;dependencies&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dotenv&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.15&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mammut&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.13.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/main.rs&#34; data-lang=&#34;rust:src/main.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;crate&lt;/span&gt; mammut;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;crate&lt;/span&gt; dotenv;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::env;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; mammut::{Data, Mastodon};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mammut&lt;/span&gt;::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Data {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        base: &lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;::var(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BASE&amp;#34;&lt;/span&gt;).unwrap().into(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        client_id: &lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;::var(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CLIENT_ID&amp;#34;&lt;/span&gt;).unwrap().into(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        client_secret: &lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;::var(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CLIENT_SECRET&amp;#34;&lt;/span&gt;).unwrap().into(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        redirect: &lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;::var(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REDIRECT&amp;#34;&lt;/span&gt;).unwrap().into(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        token: &lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;::var(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TOKEN&amp;#34;&lt;/span&gt;).unwrap().into(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; mastodon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mastodon::from_data(data);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mastodon.verify_credentials();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{:?}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, t);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:.env&#34; data-lang=&#34;sh:.env&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export CLIENT_ID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export CLIENT_SECRET&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export REDIRECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export BASE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://mstdn.syui.ai&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cargo run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./target/debug/test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Data : &lt;a href=&#34;https://docs.rs/mammut/latest/mammut/struct.Data.html&#34;&gt;https://docs.rs/mammut/latest/mammut/struct.Data.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rustでmastodon clientをはじめてみた</title>
      <link>https://syui.github.io/blog/post/2022/02/05/rust/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/05/rust/</guid>
      <description>&lt;p&gt;今までmastodonはzshでapi叩いてやってたんですが、他言語でもclientを作ろうかなと前々から思ってて、今回はrustではじめてみた。&lt;/p&gt;&#xA;&lt;p&gt;大抵の場合、本人が使うときにしか機能追加されない模様。&lt;/p&gt;&#xA;&lt;p&gt;使ってるうち便利にしていければと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/msr&#34;&gt;https://github.com/syui/msr&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた109</title>
      <link>https://syui.github.io/blog/post/2022/02/04/illust/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/04/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_109.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた108</title>
      <link>https://syui.github.io/blog/post/2022/02/03/illust/</link>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/03/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_108.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、v2.5以降の戦略</title>
      <link>https://syui.github.io/blog/post/2022/02/02/genshin/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/02/genshin/</guid>
      <description>&lt;p&gt;v2.5では八重と雷電がピックアップされる可能性が高いらしいので、それを前提にどんな感じでプレイしていくのかをちょっとだけ考えてみました。&lt;/p&gt;&#xA;&lt;p&gt;まず、八重を狙うかについてですが、個人的には狙わない可能性が非常に高いと思っています。様々な理由がありますが、主に八重が雷元素だからです。&lt;/p&gt;&#xA;&lt;p&gt;雷電がいるので、雷元素は足りていて、なおかつ、風元素が不足しているため、八重を引いている余裕がありません。&lt;/p&gt;&#xA;&lt;p&gt;現在、螺旋12-1,2,3の前半はこんな感じのPTでクリアできました。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/MabontjMw2Q&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;しかし、後半のPTでは、星3でのクリアが難しいと思っていて、この解決には2通りの方法が考えられます。&lt;/p&gt;&#xA;&lt;p&gt;1つは、手持ちキャラを育成することです。現在不足している風元素キャラを育成し、PTに組み込めばギリ行けるかもしれないと考えています。&lt;/p&gt;&#xA;&lt;p&gt;もう1つは、新しいキャラを引いてPTに組み込む方法です。&lt;/p&gt;&#xA;&lt;p&gt;私は、ここで無理やり育成したくないキャラを育成して攻略を目指すより、育成したいキャラが来るまで待って、それを引きクリアを目指すほうがよさそうだと思いました。&lt;/p&gt;&#xA;&lt;p&gt;いろいろな理由はありますが、一つは、無理な育成はリソースの無駄遣いにつながる危険が高いと考えるからです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、不足している風元素は誰を狙えばいいのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは、v2.5あるいはv2.6で復刻される可能性が高い&lt;code&gt;万葉&lt;/code&gt;を狙っていきたいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;現在は、針刺しを強化している最中です。仮に万葉が来たら、それを渡して、ベネット用の武器を確保しなくてはいけません。&lt;/p&gt;&#xA;&lt;p&gt;まとめると、以下のような感じになりそうです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;万葉を狙う&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ベネット1凸できればラッキー&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ベネット、万葉、綾華に使えそうな武器を一つ確保する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;原神、ちょっとずつだけど強くなってきた気がするので楽しい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、甘雨の所感</title>
      <link>https://syui.github.io/blog/post/2022/02/01/genshin/</link>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/02/01/genshin/</guid>
      <description>&lt;p&gt;今までアタッカーはクレーしかいない状態だったのですが、甘雨が来たので、甘雨をアタッカーとして使ってみた所感です。&lt;/p&gt;&#xA;&lt;p&gt;甘雨には、破魔の弓5凸を装備し、聖遺物は楽団です。会心率50%, 会心ダメージ120%なので厳選はできていません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220201_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220201_0002.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220201_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;この状態で7,000+15,000くらいのダメージを出します。おそらく、会心ダメが200%~300%なら2発目では20,000以上のダメージが出せると思われます。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/J1mKi8uFb90&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;甘雨は爆発が強いと思って引きましたが、重撃運用もできたほうが良いと思い重撃ビルドを採用することにしました。アタッカーが不足していることもあります。&lt;/p&gt;&#xA;&lt;p&gt;が、甘雨の重撃、正直、つらいという感想。&lt;/p&gt;&#xA;&lt;p&gt;たしかに強いんですが、外れたときのデメリットが大きすぎるし、狙うのは疲れるし、対応できない敵や状況が多すぎると思っていて、無課金でリソースが限られた上で育成するのは、正解だったかどうかわかりません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今回の甘雨を引いたこと、破魔の弓を使っていくことに関しては、非常に微妙な選択だったのかもしれません。もしかしたら、神里のほうがよかったかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;今回の強化育成でモラや鉱石等が無くなりました。したがって、武器や聖遺物はそのまま使っていくしかなく、一度計画し、実行したら修正不可能なところは、無課金の面白いところでもあり、難しいところでもあります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、甘雨は強い。他キャラと比べても、その強さは際立ちます。&lt;/p&gt;&#xA;&lt;p&gt;扱いづらさはありますが、他キャラでは対応できない敵に対応できるのも事実ですし、爆発が強すぎる。&lt;/p&gt;&#xA;&lt;p&gt;せっかく育成した2体目のアタッカー、甘雨の性能を最大限引き出せるようがんばります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;クレー強くない&#34;&gt;クレー、強くない?&lt;/h3&gt;&#xA;&lt;p&gt;話は変わりますが、クレー、使ってる人少ないですよね。&lt;/p&gt;&#xA;&lt;p&gt;使ってる人が少ないということは弱いということでもあると思っていて、だから、クレーはずっと弱いキャラだと思ってたんです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、最近、クレー強くない?と思い始めています。&lt;/p&gt;&#xA;&lt;p&gt;あらゆる場面で使えて、弱点は炎スライムくらい。なんだろう、クレーって実はかなり色々できるんですよね。&lt;/p&gt;&#xA;&lt;p&gt;現在は、最大で40,000から80,000ダメージを出せる感じ。80,000はなんかのはずみで出る感じ。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/9pJPXPyuJmc&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;もちろん、行秋、雷電、鍾離が強すぎるってのはあるんですが、今でもアタッカーで頼れるのはクレーしかいなくて、普通に使ってます。&lt;/p&gt;&#xA;&lt;p&gt;正直、クレーがいないと、火力がきつい。&lt;/p&gt;&#xA;&lt;p&gt;アタッカーを持ってないからなのか、あるいは、クレーって意外と強いのか。&lt;/p&gt;&#xA;&lt;p&gt;クレーは重撃で会心出ると仲間の元素エネルギー回復できるので、クレーの会心ビルドを試したいと思ってるけど、炎魔女、冠の会心率がなかなか出ない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、甘雨とアモス</title>
      <link>https://syui.github.io/blog/post/2022/01/27/genshin/</link>
      <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/27/genshin/</guid>
      <description>&lt;p&gt;現在、武器ガチャは&lt;code&gt;アモスの弓/破天の槍&lt;/code&gt;をやっています。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、武器が不足している状況や甘雨を引いたことでアモスを狙いたい気持ちもありますが、今回の武器ガチャは回すべきではないと思ったので、そのことについて書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;武器ガチャの基準&#34;&gt;武器ガチャの基準&lt;/h3&gt;&#xA;&lt;p&gt;理由はいくつかありますが、そもそもアモスが他の弓キャラで使いまわしができない点が挙げられます。&lt;/p&gt;&#xA;&lt;p&gt;無課金でやっている人は「使い回しできるか否か」は特に重要な判断基準となります。&lt;/p&gt;&#xA;&lt;p&gt;今回は、無課金ユーザーの視点から甘雨をどのように使っていくかや、武器不足にどう対処するかを考えてみたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;まずは、回すべき武器ガチャの基準についてです。これは以下のすべての条件が満たされたときのみ、回すことをおすすめします。現に私もこの基準を使って判断しています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(1) ピックアップされた2つがともに魅力的であること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(2) ピックアップされた武器が汎用的なものであること(複数のキャラに使える)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(3) 星4武器が魅力的であること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;なお、初期ユーザーのみは例外で、星4武器が未所持だと強化して使えないので(無駄になるため)、早めに回し、強化して使っていくほうが効率的だと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;今回の武器ガチャに当てはめると、破天の槍、アモスの弓、ともに汎用性がありません。なので、回すべきではないということになります。&lt;/p&gt;&#xA;&lt;p&gt;また、星4も厳しいラインナップだというのが個人的な感想です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;甘雨とアモス&#34;&gt;甘雨とアモス&lt;/h3&gt;&#xA;&lt;p&gt;では、アモスを持たない甘雨は使えるのかという話ですけど、私は、甘雨の魅力は他のところにあると考えるので、甘雨を引くことにしました。&lt;/p&gt;&#xA;&lt;p&gt;今回はちょっと無課金でプレイする上で、当たり前のことをお話します。&lt;/p&gt;&#xA;&lt;p&gt;世間一般で言う最強解(最適解)に囚われてはなりません。&lt;/p&gt;&#xA;&lt;p&gt;それにとらわれてしまうと、課金してしまったり、あるいは原石を無駄にしてしまったりということになりかねないからです。&lt;/p&gt;&#xA;&lt;p&gt;無課金プレイヤーが目指すべきなのは、最強ではなく、快適な旅だったり、好きなキャラだったり、あるいは、課金せず以下に工夫して攻略するかだったり、そういったところだと思います。&lt;/p&gt;&#xA;&lt;p&gt;原神界で言われている常識、つまり、最強(最適)を目指すべきではありません。&lt;/p&gt;&#xA;&lt;p&gt;甘雨には特に、非常にはっきりとした答えがあります。それがアモスです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、どの情報を見ても「甘雨にはアモス」と教えられます。&lt;/p&gt;&#xA;&lt;p&gt;それはそうでしょう。間違いなく正しい。&lt;/p&gt;&#xA;&lt;p&gt;ですが、無課金でやる人にとっては、アモスを狙うべきか否かは、非常に難しい問題です。&lt;/p&gt;&#xA;&lt;p&gt;そして、私の回答では「狙うべきではない」ということになります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、すり抜けで狙うか、あるいは、他キャラにもつけられる&lt;code&gt;終焉&lt;/code&gt;や&lt;code&gt;冬極&lt;/code&gt;を回し、それを甘雨に装備させるほうがよほどいい選択だと思います。&lt;/p&gt;&#xA;&lt;p&gt;この場合、仮に甘雨を使わなくなっても他キャラが使ってくれることでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ですから、私の中では、アモスを狙ったり、アモスを強化したりする選択は今のところは考えていません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;武器不足への対処&#34;&gt;武器不足への対処&lt;/h3&gt;&#xA;&lt;p&gt;とはいえ、私は現在、圧倒的な武器不足です。強化すべきこれといった武器がない状態。しかも、使用キャラに装備させる武器すら用意がない。&lt;/p&gt;&#xA;&lt;p&gt;甘雨とベネットには何を装備させたらいいのか、非常に迷っています。&lt;/p&gt;&#xA;&lt;p&gt;なので、まずは甘雨に&lt;code&gt;破魔の弓&lt;/code&gt;を装備させ、ベネットには&lt;code&gt;鉄蜂の刺し&lt;/code&gt;を装備させて様子を見ようと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ベネバフを考えれば攻撃力高い武器のほうがいいので、&lt;code&gt;鉄蜂の刺し&lt;/code&gt;というのは不思議な選択ですよね。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これって万葉にも普通に使える武器なのです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、これを作り強化しておくのも悪くないと、そう考えました。&lt;/p&gt;&#xA;&lt;p&gt;本当は祭礼があればいいんですけど、ないんですよね。&lt;/p&gt;&#xA;&lt;p&gt;仮に祭礼が来ても行秋のために祭礼3凸したいので、どちらにせよ不足しちゃいます。&lt;/p&gt;&#xA;&lt;p&gt;ということで、&lt;code&gt;鉄蜂の刺し&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;こんな感じで武器不足への対処を考えていて、決して完璧ではないし、最適でもないけど、自分なりに工夫してやっていけたらと思っています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後の武器ガチャ&#34;&gt;今後の武器ガチャ&lt;/h3&gt;&#xA;&lt;p&gt;今後の武器ガチャについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;現状、キャラが増えたので、武器が必要になりました。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、キャラ優先ではありますが、余裕があれば、武器ガチャも回すべき時が来るかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;今のところ&lt;code&gt;磐岩結緑&lt;/code&gt;を狙っていて、この武器は腐らない可能性が高いと考えているからです。&lt;/p&gt;&#xA;&lt;p&gt;また、雷電用に&lt;code&gt;草薙&lt;/code&gt;が欲しいですけど、これは優先順位が低めかな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、螺旋12-3</title>
      <link>https://syui.github.io/blog/post/2022/01/26/genshin/</link>
      <pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/26/genshin/</guid>
      <description>&lt;p&gt;やっとキャラが集まってきたので螺旋に再挑戦してみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220126_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220126_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;鍾離と行秋をPTに加えました。レベルや天賦、聖遺物はまだ素材が集まっていないため、育成されていない状態で使ってる感じです。&lt;/p&gt;&#xA;&lt;p&gt;直近では鍾離と行秋を育成していく予定です。&lt;/p&gt;&#xA;&lt;p&gt;まだタイムとか全然だけど、甘雨とベネットを育成して、ノエルとバーバラを入れ替えれば、ちょっとはタイムが早くなるかもと考えています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、鍾離を引いた</title>
      <link>https://syui.github.io/blog/post/2022/01/25/genshin/</link>
      <pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/25/genshin/</guid>
      <description>&lt;p&gt;ずっと欲しかった鍾離を引きました、うれしい！&lt;/p&gt;&#xA;&lt;p&gt;今回は3回目となる無課金者のガチャ内容を紹介していきたいと思います。同じく無課金でやってる人は参考になるかも。&lt;/p&gt;&#xA;&lt;p&gt;結果として、今回のガチャでは、28,000あった原石が5,000(-23,000)になるという&amp;hellip;大爆死でした。&lt;/p&gt;&#xA;&lt;p&gt;見通しが甘かったのと、天井すら調べてなかったのと、計画性がなさすぎたのが敗因だったと思われます。&lt;/p&gt;&#xA;&lt;p&gt;鍾離は早めに出てくれてよかったんですが、次に回した甘雨があまりに出ないので流石に天井を調べたわけですが、天井は28,000とあったので、これはやばいって思いました(今更)。&lt;/p&gt;&#xA;&lt;p&gt;今回引いたキャラは、鍾離, 甘雨, ベネット, 行秋(完凸)という感じでした。すべて未所持のキャラです。&lt;/p&gt;&#xA;&lt;p&gt;あと、ハズレ交換で香菱を4凸にしました。3凸でした。&lt;/p&gt;&#xA;&lt;p&gt;3回目ガチャの感想ですが、鍾離が割と早めに出てくれて、この時点では-6,000くらいだったと思います。しかし、甘雨は、なかなかでなくて-17,000くらいになってしまったという感じだった。&lt;/p&gt;&#xA;&lt;p&gt;ただ、行秋は未所持から完凸できたので、その点では良かったです。そういえば、行秋が初めての完凸キャラだ。仮に甘雨が早々出てたら行秋は完凸していませんでした。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、今回のガチャで予想以上に原石を消費してしまったので、今後の見通しは立ちません。&lt;/p&gt;&#xA;&lt;p&gt;アモスがどっかで出てくれることを祈りつつ、ベネットはハズレ交換やすり抜けで1凸を目指し、風元素のウェンティか万葉が来れば、狙っていくという感じでしょうか。新実装の草神が来れば、それも狙わざるを得えないなあと、そんなようなことをぼんやりと考えてます。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;そんなことは置いといて、今は原神を楽しもうって思います。&lt;/p&gt;&#xA;&lt;p&gt;ようやく増えてきたキャラの育成でいそがしくなるぞー！&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガチャ履歴&#34;&gt;ガチャ履歴&lt;/h3&gt;&#xA;&lt;p&gt;参考までに無課金でのガチャ履歴をまとめました。&lt;/p&gt;&#xA;&lt;p&gt;今回で3回目のガチャになり、今までずっとキャラ不足でしたが、3回目でようやくキャラが増えはじめてきた感じだと思われます。&lt;/p&gt;&#xA;&lt;h4 id=&#34;第一回202106&#34;&gt;第一回(2021.06)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;原石 : -3,000&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;キャラ : クレー&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210617_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;第二回202109&#34;&gt;第二回(2021.09)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;原石 : -7,000&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;キャラ : 雷電&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210901_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;第三回202201&#34;&gt;第三回(2022.01)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;原石 : -23,000&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;キャラ : 鍾離, 甘雨, ベネット, 行秋(完凸)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20220125_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>cloudflare mailとmailgun</title>
      <link>https://syui.github.io/blog/post/2022/01/22/mail/</link>
      <pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/22/mail/</guid>
      <description>&lt;p&gt;mailは全く使ってなくて、spam-mailに分類されてそのまま見ないこともあるため、個人的に、やり取りするには不確実性が高いものになってます。&lt;/p&gt;&#xA;&lt;p&gt;私は、gmailをベースにmailgunで&lt;code&gt;address(syui@syui.ai)&lt;/code&gt;に転送していました。&lt;/p&gt;&#xA;&lt;p&gt;ただ、2022.1.16あたりからroutingが動いてないことに気づき、mailgun-logを見る限りでは単なるmailgun側の障害だったようですが、その時に送信ができなくなってることに気づきました。(送信自体は全くしないので)&lt;/p&gt;&#xA;&lt;p&gt;具体的には、gmailにmailgunのsmtp serverを適用していました。これによって指定のaddressを送信元と表示することができます。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、mailgunが&lt;code&gt;plan:free -&amp;gt; plan:flex&lt;/code&gt;に移行し、昔からのユーザーは、発行しているsmtp serverが裏で動かない状態でした。&lt;/p&gt;&#xA;&lt;p&gt;何度か再発行して、UIでは正常に動いているように見えるけど、実は動いてなくて、新たに必要になった登録情報を更新しないとsmtp serverは正常に動作しないようです。&lt;/p&gt;&#xA;&lt;p&gt;そんな感じの変化がmailgunにあって、今更気づいたという話です。ちなみに、移行は2020だったらしい。&lt;/p&gt;&#xA;&lt;p&gt;で、色々と試している際、cloudflare mailがβ版で登場しており、これは予約制ですが、たまたま通ったので使ってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.cloudflare.com/ja-jp/introducing-email-routing-ja-jp/&#34;&gt;https://blog.cloudflare.com/ja-jp/introducing-email-routing-ja-jp/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これはmailgunでも簡単にできるrouting(受信)を可能にするものです。ただし、smtpなどは今のところなく、送信元にすることはできません。&lt;/p&gt;&#xA;&lt;p&gt;なので、しばらくはcloudflare-mailで受信、mailgunで送信を設定していこうかなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;なお、gmailでmailgunのsmtpを設定する方法は、&lt;code&gt;gmail mailgun  smtp&lt;/code&gt;とかで検索すれば良さそう。この設定に関するgoogle(gmail)の公式docsがどこにあるのかちょっとわからなかった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>バッジ作ってみた1</title>
      <link>https://syui.github.io/blog/post/2022/01/21/badge/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/21/badge/</guid>
      <description>&lt;p&gt;このまえバッジを作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0008.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;全部で4つ作って、2つは人に送り、2つは自分の手元に残った感じ。&lt;/p&gt;&#xA;&lt;p&gt;たまにデスクの写真載せるので、気になる人はどうぞ(自分も他人のデスク見るの好き&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/photo&#34;&gt;/photo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>vueでloadingを作る</title>
      <link>https://syui.github.io/blog/post/2022/01/14/vue/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/14/vue/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn add vue-loading-template&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/jkchao/vue-loading&#34;&gt;https://github.com/jkchao/vue-loading&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;demo : &lt;a href=&#34;https://jkchao.github.io/vue-loading/&#34;&gt;https://jkchao.github.io/vue-loading/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ローディング処理は&lt;code&gt;v-show&lt;/code&gt;で変数を指定すればOKです。&lt;/p&gt;&#xA;&lt;p&gt;今回はボタンをクリックすると&lt;code&gt;name&lt;/code&gt;に文字列を入れる処理が入るのですが、その処理まで&lt;code&gt;1.2s&lt;/code&gt;待機するようにしています。その間、ローディングが表示される仕組み。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/App.vue&#34; data-lang=&#34;js:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Loading&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-show&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loading&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;vue-loading&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;barsCylon&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#99892b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{ width: &amp;#39;50px&amp;#39;, height: &amp;#39;50px&amp;#39; }&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;vue-loading&lt;/span&gt;&amp;gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Loading&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@click&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;picker&amp;#34;&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-show&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;!loading&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;VueLoading&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-loading-template&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;loading&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;VueLoading&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;methods&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;picker&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loading&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// ここに処理&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loading&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}, &lt;span style=&#34;color:#ae81ff&#34;&gt;1200&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/main.js&#34; data-lang=&#34;js:src/main.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;productionTip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;$mount&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>雰囲気タロット占い</title>
      <link>https://syui.github.io/blog/post/2022/01/13/illust/</link>
      <pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/13/illust/</guid>
      <description>&lt;p&gt;雰囲気タロット占い作りました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai/tarot&#34;&gt;/ai/tarot&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;解釈やルールは皆様におまかせします。1日1回占ってみてはどうでしょう(適当)。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私は占いをやったことも、してもらったことも一度もなくて、タロットカードも全然知りませんが、雰囲気で作りました。&lt;/p&gt;&#xA;&lt;p&gt;あと、この前から気になってたこのサイトのディレクトリ問題を一部解消しました(ついでに)。&lt;/p&gt;&#xA;&lt;p&gt;前はroot下においてたgame, manga関連をすべて/ai直下に変更しました。hugoでは&lt;code&gt;index.md&lt;/code&gt;と&lt;code&gt;_index.md&lt;/code&gt;の挙動が異なります。&lt;code&gt;index.md&lt;/code&gt;はディレクトリが作れませんが&lt;code&gt;_index.md&lt;/code&gt;は作れますので。&lt;/p&gt;&#xA;&lt;p&gt;ただ、リンクが変わったので、どこかでリンク切れを起こしてる危険があり、aliasを設定しといたほうがいいかも(やってない)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>過去絵を修正してみた</title>
      <link>https://syui.github.io/blog/post/2022/01/12/illust/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/12/illust/</guid>
      <description>&lt;p&gt;過去のイラストを見ていて、あまりうまく描けなかったやつを修正しました。&lt;/p&gt;&#xA;&lt;p&gt;何度かお絵かきをしていると、うまくかけたやつと、うまくかけなかったやつが出てきます。&lt;/p&gt;&#xA;&lt;p&gt;修正においては、過去にうまくかけたやつを参考にすると、比較的、楽にできます。&lt;/p&gt;&#xA;&lt;p&gt;参考になりそうなポーズ(構図)もいくつか追加できたので良かった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_101.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_102.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_106.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_107.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_36.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_71.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_73.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_75.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_78.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_79.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_82.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_83.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_92.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_93.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>vueで過去絵の修正を1週間単位で表示してみた</title>
      <link>https://syui.github.io/blog/post/2022/01/10/vue%E3%81%A7%E9%81%8E%E5%8E%BB%E7%B5%B5%E3%81%AE%E4%BF%AE%E6%AD%A3%E3%82%921%E9%80%B1%E9%96%93%E5%8D%98%E4%BD%8D%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/10/vue%E3%81%A7%E9%81%8E%E5%8E%BB%E7%B5%B5%E3%81%AE%E4%BF%AE%E6%AD%A3%E3%82%921%E9%80%B1%E9%96%93%E5%8D%98%E4%BD%8D%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>&lt;p&gt;前々から修正した絵の一覧があれば便利だなあと思ってたことから、色々と追加。&lt;/p&gt;&#xA;&lt;p&gt;最近修正した絵をcommit logから拾うようにしました。&lt;code&gt;terminal&lt;/code&gt;の&lt;code&gt;$ ai c&lt;/code&gt;コマンド(オプション)から飛べるようにしました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ai c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;jsonからimg pathを取ってきてvueで表示する方針でやります。以下は、簡単なexmapleです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/main.js&#34; data-lang=&#34;js:src/main.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;productionTip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;$mount&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;week&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;commit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item in items&amp;#34; :key=&amp;#34;item.id&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item.file&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item.file&amp;#34;&lt;/span&gt; /&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/static/json/img.json&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/static/json/img.json&lt;/code&gt;はこんな感じで作成。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git --no-pager log --since&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1.weeks --name-status |grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\.png&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:test.sh&#34; data-lang=&#34;sh:test.sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mkdir -p ./static/json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[]&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ./static/json/img.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;git --no-pager log --since&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1.weeks --name-status |grep -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A\t&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M\t&amp;#34;&lt;/span&gt; |grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static/img/&amp;#34;&lt;/span&gt;|grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\.png&amp;#34;&lt;/span&gt;|cut -d / -f 3|sort|uniq&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;i&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$n;i++&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NR==&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat ./static/json/img.json|jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.+[{\&amp;#34;id\&amp;#34;:\&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,\&amp;#34;file\&amp;#34;: \&amp;#34;/img/&lt;/span&gt;$t&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}]&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ./static/json/img.tmp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv ./static/json/img.tmp ./static/json/img.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを&lt;code&gt;$ yarn build&lt;/code&gt;とかすればOKです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ドラゴン装備</title>
      <link>https://syui.github.io/blog/post/2022/01/09/pokemas/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/09/pokemas/</guid>
      <description>&lt;p&gt;ドラゴン装備集め終わった。久々にマルチやって、賑わってたので楽しかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20220108_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、鍾離復刻</title>
      <link>https://syui.github.io/blog/post/2022/01/08/genshin/</link>
      <pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/08/genshin/</guid>
      <description>&lt;p&gt;原神では、v2.4で1/25から鍾離の復刻ガチャが来ます。この時を待ってました&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;ということで、個人的に3回目のガチャになりそう。&lt;/p&gt;&#xA;&lt;p&gt;これでキャラガチャは1回目がクレー、2回目が雷電、3回目が鍾離になる感じ。&lt;/p&gt;&#xA;&lt;p&gt;なお、甘雨は迷ってる模様。&lt;/p&gt;&#xA;&lt;p&gt;神里と甘雨なら神里を引きたいと思っていて、ですが、樽を爆破する赤い試練あるじゃないですか。あれ、全くやってないんですよね。育成してる弓キャラいないので、やる気でなくて。甘雨がいればやると思う。使用キャラでやりたいってのがある。&lt;/p&gt;&#xA;&lt;p&gt;話は変わりますが、現在の個人的な戦略は、各元素で最強のキャラを一人ずつ引いていくことと、余裕があれば凸を狙っていくことを考えています。&lt;/p&gt;&#xA;&lt;p&gt;凸に関しては、私が最も優先すべきと考えるのが雷電と鍾離です。この二人なら雷電が優先です。&lt;/p&gt;&#xA;&lt;p&gt;雷電はもちろんのこと、鍾離も完凸がおすすめだと個人的には思っていて、鍾離の完凸(HP回復)は後々必要になってくるのではと考えています。&lt;/p&gt;&#xA;&lt;p&gt;この2名に関しては、今後、PTから外れることがあまり考えられないため、PTから外れる可能性のある各キャラを2凸するより、今後も使い続けるキャラの完凸を目指したほうがいいという考えです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これはあくまで強いキャラが各元素で揃ってる場合の話であり、まず最優先すべきは、強キャラを無凸で揃えることだと思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、鍾離完凸と鍾離+雷電+万葉+神里+甘雨+胡桃の無凸では、どちらが攻略に有利でしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは圧倒的に後者だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;しかし、鍾離完凸と万葉+神里+胡桃の各2凸ずつはどうでしょう。&lt;/p&gt;&#xA;&lt;p&gt;難しいですが、現時点では後者だと思います。ですが、将来的には前者になりうる可能性があります。使わなくなると、凸の意味はなくなるからです。&lt;/p&gt;&#xA;&lt;p&gt;したがって、せっかく凸するなら使い続けるキャラにしたほうがいい。&lt;/p&gt;&#xA;&lt;p&gt;それが現時点での雷電と鍾離ということになると思います。&lt;/p&gt;&#xA;&lt;p&gt;これは武器に関しても同じです。他キャラは無凸、この2名だけ集中投資するのが一番いいと思う。&lt;/p&gt;&#xA;&lt;p&gt;私は無課金なので、強いキャラは雷電しか持っておらず、キャラを集めるところからですけどね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;クレーを引いてよかった&#34;&gt;クレーを引いてよかった&lt;/h3&gt;&#xA;&lt;p&gt;私が原神を始めたきっかけはクレーが可愛いかったからなんです。&lt;/p&gt;&#xA;&lt;p&gt;未だにフィールドはクレーです。&lt;/p&gt;&#xA;&lt;p&gt;足が速い高身長キャラやモナのほうが効率はいいのですが、ずっとクレーを使ってる。&lt;/p&gt;&#xA;&lt;p&gt;好きなキャラで好きなように冒険するのが一番。&lt;/p&gt;&#xA;&lt;p&gt;クレーを最初に引いてよかった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、キュレム</title>
      <link>https://syui.github.io/blog/post/2022/01/07/pogo/</link>
      <pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/07/pogo/</guid>
      <description>&lt;p&gt;キュレムは前半に全然出なかったけど、後半すごかった。色違い、交換キラ、個体値100という結果。キュレムは原作では合体(融合)できて、個体値とか色違いはキュレムベースになるので、レシラム、ゼクロムと合わせてとっておきましょう。&lt;/p&gt;&#xA;&lt;p&gt;5年やってて伝説100が3体になりました。ユクシーも100いた気がするんだけど、間違えて逃しちゃったんだろうか。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220105_0054.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220105_0055.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20220105_0056.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>blogのlayoutを変更した</title>
      <link>https://syui.github.io/blog/post/2022/01/03/hugo/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/03/hugo/</guid>
      <description>&lt;p&gt;blogのlayoutをちょっとだけ変更しました。&lt;/p&gt;&#xA;&lt;p&gt;変更点を簡単に説明します。&lt;/p&gt;&#xA;&lt;p&gt;まず上のメニューですが、項目が多すぎたので減らしました。&lt;/p&gt;&#xA;&lt;p&gt;全部を&lt;a href=&#34;https://syui.github.io/ai&#34;&gt;/ai&lt;/a&gt;に放り投げました。&lt;/p&gt;&#xA;&lt;p&gt;できる限りシンプルな見た目にしようと思っていたため、かつてこのサイトはテーマカラーの朱色のみでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、snsアイコンの追加により少しだけカラフルになりました。また、緑が足りないので、githubの芝を追加しました。&lt;/p&gt;&#xA;&lt;p&gt;本当はmastodonのアイコンも追加したかったけど、twitterと青色がかぶるのでやめました。色もそうですが、アイコンも多すぎると分かりづらいと思ったので、数は限定していく方向で。&lt;/p&gt;&#xA;&lt;p&gt;自己紹介やサイトマップ、ヒントの文字数も減らしました。&lt;/p&gt;&#xA;&lt;p&gt;以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>archlinuxの&#39;could not fully load metadata for package&#39;のerror</title>
      <link>https://syui.github.io/blog/post/2022/01/02/arch/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/02/arch/</guid>
      <description>&lt;p&gt;archlinux-armの方なんだけど、goが&lt;code&gt;could not fully load metadata for package&lt;/code&gt;のerrorでupdateできなかった。&lt;/p&gt;&#xA;&lt;p&gt;packageのdesc, filesあたりを消して破損したmetadataは削除後にインストールしました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ touch /var/lib/pacman/local/go-xxx/desc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ touch /var/lib/pacman/local/go-xxx/files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S go --overwrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修正する過程で面白そうなブログ見つけた&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jeffreytse.net/&#34;&gt;https://jeffreytse.net/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>blogにgithubの芝を生やした</title>
      <link>https://syui.github.io/blog/post/2022/01/02/github/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/02/github/</guid>
      <description>&lt;p&gt;昔、gitlabのを表示していたことがありましたが、apiの変更があったので、今回はgithubの芝を生やしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/github_contribution.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在、githubでは以下のurlにて芝の情報を取得できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL https://github.com/users/$USER/contributions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;しかし、データは加工されていない状態で使いづらいので、以下のapiを使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github-contributions-api.deno.dev/&#34;&gt;https://github-contributions-api.deno.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;開発者 : &lt;a href=&#34;https://zenn.dev/kawarimidoll/articles/b573f617a51c0b&#34;&gt;https://zenn.dev/kawarimidoll/articles/b573f617a51c0b&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL https://github-contributions-api.deno.dev/$USER.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを&lt;a href=&#34;https://cal-heatmap.com/&#34;&gt;cal-heatmap&lt;/a&gt;で表示します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sample date&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL https://cal-heatmap.com/datas-years.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ bower install cal-heatmap&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使い方は見ての通りですが、exampleを紹介します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//d3js.org/d3.v3.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//cdn.jsdelivr.net/cal-heatmap/3.3.10/cal-heatmap.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//cdn.jsdelivr.net/cal-heatmap/3.3.10/cal-heatmap.css&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example-b&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cal&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CalHeatMap&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;cal&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;itemSelector&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#example-b&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;month&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/datas-years.json&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date(&lt;span style=&#34;color:#ae81ff&#34;&gt;2021&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;cellSize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;previousSelector&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#example-b-PreviousDomain-selector&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;nextSelector&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#example-b-NextDomain-selector&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;legend&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;#example-b{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;margin-right&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;margin-left&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cal-heatmap-container&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ただし、表示速度などの問題からbowerなどで同web-server上にインストールしたほうがいいでしょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bower_components/d3/d3.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bower_components/cal-heatmap/cal-heatmap.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bower_components/cal-heatmap/cal-heatmap.css&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;jsonは以下のように形成すればよさそう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sL https://github-contributions-api.deno.dev/$USER.json|jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.|del(.totalContributions)|.[]|.[]|.[]|{(.date+\&amp;#34;T00:00:00Z\&amp;#34;|fromdate|tostring):(.contributionCount)}&amp;#34;&lt;/span&gt;|jq -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[inputs] | add&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1640822400&amp;#34;&lt;/span&gt;: 18,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1640908800&amp;#34;&lt;/span&gt;: 5,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1640995200&amp;#34;&lt;/span&gt;: 8,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1641081600&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これは&lt;code&gt;cal-heatmap&lt;/code&gt;の仕様だと思いますが、dateがunixtimeなのと、keyにdateを入れるフォーマットに注意。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた107</title>
      <link>https://syui.github.io/blog/post/2022/01/01/illust/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/01/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_107.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた106</title>
      <link>https://syui.github.io/blog/post/2021/12/30/illust/</link>
      <pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/30/illust/</guid>
      <description>&lt;p&gt;お絵描きしてました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_106.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;新年も近いので新年のイラスト、ということにしておこう。&lt;/p&gt;&#xA;&lt;p&gt;今年はどんな年だったか、あまり覚えてないので、特に何もやってなかった気がする。&lt;/p&gt;&#xA;&lt;p&gt;来年はいろんなことをやっていきたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>くいなちゃん描いた2</title>
      <link>https://syui.github.io/blog/post/2021/12/26/illust/</link>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/26/illust/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://kuina.ch/others/license&#34;&gt;kuina-chan&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/kuina_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ff7fs、モーグリコレクター</title>
      <link>https://syui.github.io/blog/post/2021/12/19/ff7fs/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/19/ff7fs/</guid>
      <description>&lt;p&gt;やっと取れた。シーズン1は、ちょっとだけ頑張れたと思う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211219_0002.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211219_0001.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211215_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、ブラック・ホワイト</title>
      <link>https://syui.github.io/blog/post/2021/12/14/pogo/</link>
      <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/14/pogo/</guid>
      <description>&lt;p&gt;ポケモンGoでは、ブラック・ホワイト世代(gen5)の色違いポケモンが実装され始めました。&lt;/p&gt;&#xA;&lt;p&gt;私は、ポケモンGoを基本的に無課金で楽しんでいます。&lt;/p&gt;&#xA;&lt;p&gt;今回は、ポケモンGoの事情を知らない人向けに、このゲームが現在どんな感じなのかを紹介していければと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;個人的な課金事情&#34;&gt;個人的な課金事情&lt;/h3&gt;&#xA;&lt;p&gt;無課金と言いつつ、早速、課金した時の話をします。&lt;/p&gt;&#xA;&lt;p&gt;矛盾していますし、これを無課金と言っていいのかわかりませんが、ポケモンGoは重課金ゲームへと変貌を遂げているので、今の自分は無課金ユーザーの部類だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、覚えている限りでは、ポケモンGoに課金したのは、以下のイベントのみでした。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;巨大ポケモンの謎を解け！(2019) / 980円&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;限定ポーズ、メダル、レジギガスが配布されたイベント。このイベントを境に課金が必要なゲームになってしまった印象。ですが、後にレジギガスはEXレイドで復刻したので、個人的には課金しなくても良かったかなと思っている。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pokemon GO Fest 2020 / 1,840円&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ビクティニとシャドウ・ミュウツーが配布されたイベント。なお、ビクティニとシャドウ・ミュウツーは後に復刻。これも課金しなくてよかったかなと思ってる。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pokemon GO Tour:カントー地方 (2021) / 1,480円&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;色違いミュウ、色違いメタモンが配布された。赤と緑を選んで、当該メダルが貰えたので、主にメダルを目当てに課金しました。これは課金してよかったと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;したがって、2016~2021の合計で&lt;code&gt;4,300円&lt;/code&gt;ということになります。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私が課金したゲームはポケモンGoのみ。&lt;/p&gt;&#xA;&lt;p&gt;ここで、私が課金してよかったと思うのは、&lt;code&gt;Pokemon GO Tour:カントー地方&lt;/code&gt;だけです。&lt;/p&gt;&#xA;&lt;p&gt;なので、必要最小の出費を目指すなら費用はもっと抑えられたはず。&lt;code&gt;1,480円&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;xlアメやpvpの実装&#34;&gt;XLアメやPvPの実装&lt;/h3&gt;&#xA;&lt;p&gt;XLアメというのは、平たく言えば、課金要素です。簡単に言うと、課金すればレベルが上げられると考えてもらえればわかりやすい。&lt;/p&gt;&#xA;&lt;p&gt;私は、原神というゲームをプレイしていますが、ポケモンGoのほうが課金要素は強いと思います。&lt;/p&gt;&#xA;&lt;p&gt;理由はいくつかありますが、一つは、ポケモンGoでは対人戦(PvP)が実装されているからです。&lt;/p&gt;&#xA;&lt;p&gt;もう一つは、ポケモンGoは、課金しないと実質的にレベルをMAXに上げられないから。&lt;/p&gt;&#xA;&lt;p&gt;原神では課金すると、凸効果が付与されます。これも強力ですが、ポケモンGoでは、基本レベルに差が出てきて、基本レベルというのは、すべてのステータスに影響を及ぼします。&lt;/p&gt;&#xA;&lt;p&gt;ですから、現在のポケモンGoは、原神にPvPが実装されたと考えるとわかりやすい。現在のポケモンGoの環境、状況を理解しやすいと思います。&lt;/p&gt;&#xA;&lt;p&gt;原神も課金者と無課金者の間には圧倒的な差が生まれますが、ポケモンGoほどではありません。ポケモンGoのほうが課金者有利になりやすいと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、無課金でも工夫すればいいと考える人もいます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、課金すればするほど有利になるというのは事実であり、そこは変わりません。&lt;/p&gt;&#xA;&lt;p&gt;この記事は、良い悪いについて書いているわけではありませんし、問題について議論するつもりもありません。ただの事実を書き、その事実を前に、どうすればいいのかを模索していけたらと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;この世界を楽しもう&#34;&gt;この世界を楽しもう&lt;/h3&gt;&#xA;&lt;p&gt;確かに、無課金勢が重課金者に張り合うのは無理がありますよね。あらゆる要素で。&lt;/p&gt;&#xA;&lt;p&gt;そこには圧倒的な差が生まれますし、仮にそのような差が生まれなければ、課金ゲームは成り立たない。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ゲームの楽しみ方はそれぞれの人が模索していくことができるものです。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoでは、PvPが最も大きい要素ですが、それ以外の楽しみ方もできます。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、色違いのポケモンになります。&lt;/p&gt;&#xA;&lt;p&gt;色違いを強化して使おうって人はなかなかいませんが、個体値とかありますし。ですが、私は色違いを強化して使うようにしています。&lt;/p&gt;&#xA;&lt;p&gt;現在、ゼクロム、レシラム、キュレムの色違いが実装されていて、これらの色違いを捕まえることを目指してプレイしています。実は、無課金が伝説の色違いを捕まえるのって結構難しいんです。&lt;/p&gt;&#xA;&lt;p&gt;確率は1/20ですから、1週間プレイしても捕まらない可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;ここで少し工夫が必要になり、前日のパスを取っておいたり、リモートパスをストックしておくなどしながらやっています。&lt;/p&gt;&#xA;&lt;p&gt;今回は、運良く早めに色違いが出たのでよかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20211214_0002.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20211214_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ですが、ハマりだすと、ほんとに出ないので、無課金者には、なかなか難しい。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoで捕まえたポケモン達は、ポケモンホームを通して原作に送れたりしますので、この機会に色違いを狙ってみるのもいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;最初は無課金で頑張ってみるのがおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20211214_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;pokemon-go-tourジョウト地方-2022--1480円&#34;&gt;Pokemon GO Tour：ジョウト地方 (2022) / 1,480円&lt;/h3&gt;&#xA;&lt;p&gt;これメダルが欲しいので、課金するかも。今後も続いていくと仮定すると、やっぱりgenのパッケージになってる各種バージョンのメダルは欲しいと思っていて、欠けるとやる気なくす。どちらか一方しか選べないため個性が出るところだと思う。でも、総課金額も増加していくことが予想されます。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私は、実際にプレイしたバージョンを選んでいく予定。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;gen&lt;/th&gt;&#xA;          &lt;th&gt;色&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;赤&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;金&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;ルビー&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;ダイヤモンド&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;ホワイト&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;Y&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;サン&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;ソード&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ただ、赤系に統一するのも悪くないと思っていて、私の場合は、ダイヤをパールに、ソードをシールドに変更すると、赤系統一できそうな気がしてる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ff7fs、モーグリコレクターまであと少し</title>
      <link>https://syui.github.io/blog/post/2021/12/13/ff7fs/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/13/ff7fs/</guid>
      <description>&lt;h3 id=&#34;目標まであと少し&#34;&gt;目標まであと少し&lt;/h3&gt;&#xA;&lt;p&gt;あと少しでモーグリコレクターのメダルが取れます。メダルが取れれば、シーズン1はちょっとだけ頑張ったという証になります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211213_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後の休止は確定&#34;&gt;今後の休止は確定&lt;/h3&gt;&#xA;&lt;p&gt;ちょっとずつではありますが、勝てるようになってきた気がする。楽しい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211213_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ff7fsは楽しく面白いゲームですし、流行ってほしいなって思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今回の目標を達成したあとは、プレイを休止します。&lt;/p&gt;&#xA;&lt;p&gt;理由はいくつかありますが、このゲームは中毒性が高いと、そう判断したからです。&lt;/p&gt;&#xA;&lt;p&gt;中毒性について少し書くと、その時、その瞬間は楽しい、面白いってなるんですけど、その後に、なにも残らない&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ポケモンの原作をプレイしていると、思い出に残るんです。あの街並み好きだったな、もう一度やりたいなって。また、ポケモンGoは、現実に捕まえたポケモンたちが残りますよね。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ff7fsは、その瞬間の快楽はありますが、私は、勝った試合も負けた試合も全く覚えてないんです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、このゲームを何年も何十年も続けるのは、ちょっともったいないって思うんです。時間とか色々と。&lt;/p&gt;&#xA;&lt;p&gt;人と競い合うゲームというのはこのような傾向にある気がする。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、それよりも他のこと(創作とか)に時間を使っていきたいという思いがあったりで。(できるとは言ってない&lt;/p&gt;&#xA;&lt;p&gt;ff7fsをプレイし始めてから、つい熱中してしまって寝不足になったり、他のことをしなくなったりしてしまったことがありました。&lt;/p&gt;&#xA;&lt;p&gt;今回の目標は「シーズン1はちょっとだけ頑張った」という証になり、それがあればいいかと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;以前までは休止予定でしたが、今回は強制的に休止に持っていくつもり。&lt;/p&gt;&#xA;&lt;p&gt;そうしないと、なかなかやめられそうにないので。&lt;/p&gt;&#xA;&lt;p&gt;最後の記事になりそうなので、感想を書いておくと、すごく面白かった。バトロワやfpsを初プレイできたのも良かった。ff7じゃなきゃプレイしてなかったと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ff7fsのチョコボ育成</title>
      <link>https://syui.github.io/blog/post/2021/12/12/ff7fs/</link>
      <pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/12/ff7fs/</guid>
      <description>&lt;p&gt;ff7fsは、シーズン1のモーグリ全種のメダルを取ることを新たな目標に、プレイを続けています。&lt;/p&gt;&#xA;&lt;p&gt;バトロワやfpsをプレイするの初めてなので、全く勝てないけど、面白い。&lt;/p&gt;&#xA;&lt;p&gt;戦歴はこんな感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211212_0025.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は、ff7fsの中で唯一の癒やしであるチョコボについて書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;私はチョコちゃんと呼んでいるので、チョコちゃんと表記しますが、主に育成の話になります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;チョコボ育成&#34;&gt;チョコボ育成&lt;/h3&gt;&#xA;&lt;p&gt;私は、初めてお迎えしたチョコちゃんのchokoを、はじめてカップリングしたときに生まれたやつを使っています。名前はchoです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211212_0020.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;初めてカップリングしてみて、初めて育成素材を投入してみてわかったことを書いていきたい。&lt;/p&gt;&#xA;&lt;p&gt;なお、攻略サイトは一切読んでいないのでわかりません。&lt;/p&gt;&#xA;&lt;p&gt;まず、スキルですね。これは、2つ付いている状態が望ましく、カップリングによって決まります。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、初めてのチョコちゃん、chokoがチョコケアル、そして、次のbがチョコガードを持っていたため、そこから生まれたたchoは、この2つを持ちます。&lt;/p&gt;&#xA;&lt;p&gt;次に、強化素材について。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、攻撃、スタミナ、HPの順にMAXまで上げる素材を投入しています。&lt;/p&gt;&#xA;&lt;p&gt;そこでわかったのは、初期ステータスが重要で、初期ステータスより下には下がらないので、そのことを考慮して素材を投入するのがおすすめ。強化ステータスだけ素材で下がるんだと思う。&lt;/p&gt;&#xA;&lt;p&gt;つまり、初期ステータスでは特化型が望ましく、何かに突き抜けたチョコボが理想的です。なぜならそのステータスを無視して強化できるから。&lt;/p&gt;&#xA;&lt;p&gt;私の場合でいうと、初期ステータスはスピードとジャンプがMAXなら完璧なチョコボを育成できるということになります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、おそらく、2つのステータスがMAXなチョコボは生まれない。あるいは非常に低確率だと考えられ、現実的には、1つのステータスがMAXで、ついで無視できるステータスが2番目に高いって状態かなと思います。&lt;/p&gt;&#xA;&lt;p&gt;なお、強化したステータスは、カップリングに引き継がれません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、投入するチョコボは慎重に選びたいところです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私は、その意見に賛成しません。&lt;/p&gt;&#xA;&lt;p&gt;チョコボ育成での優先順位は、スキル、攻撃、スタミナ、HPとなっています。&lt;/p&gt;&#xA;&lt;p&gt;完璧なチョコボを作るというのに時間をかけすぎて、強化チョコボを連れていく機会を逸してしまうと、そっちのほうが良くないと思います。&lt;/p&gt;&#xA;&lt;p&gt;今後、時間が立つに連れ完璧なチョコボを育成した人が増えていきます。&lt;/p&gt;&#xA;&lt;p&gt;つまり、状態が硬直化していく可能性が高い。&lt;/p&gt;&#xA;&lt;p&gt;こうなってしまうと、みんなが平均して同じ強さのチョコボを使うため、差が生まれず、運要素が強い勝負になっていまい、勝率も下がってしまうのではないかと推測しています。&lt;/p&gt;&#xA;&lt;p&gt;したがって、できる限り早い段階で強化したチョコボを実戦投入するほうがいいという考えです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、理想のチョコボが来たら、カップリングして、スキルを厳選し、ステータス的に望ましいなら強化素材を使ってあげましょう。&lt;/p&gt;&#xA;&lt;p&gt;ステータスは、基本的には突き抜け型が望ましく、スピード、ジャンプが突き抜けていることが理想的だと思います。&lt;/p&gt;&#xA;&lt;p&gt;スキルは、チョコケアル、チョコガード、ヒソヒソ歩き、あたりがいいと思ってる。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;スキル : (1)チョコケアル, (2)チョコガード, ヒソヒソ歩き&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ステータス : スピード, ジャンプのどちらかがMAX&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;強化 : 攻撃, スタミナ, HPの順にMAXにしていく(HPとスタミナは前後逆でもOKだったと思う)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211212_0022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その他の戦略的なことを少し書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;チョコちゃんは離脱する前に帰してあげよう&#34;&gt;チョコちゃんは離脱する前に帰してあげよう&lt;/h3&gt;&#xA;&lt;p&gt;チョコちゃんは、ダメージを受け離脱する前に帰してあげるようにしましょう。&lt;/p&gt;&#xA;&lt;p&gt;時間が経てばまた呼び出してあげるといいですよ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;乗り物には乗ろう&#34;&gt;乗り物には乗ろう&lt;/h3&gt;&#xA;&lt;p&gt;一度乗るとマッピングされますので。&lt;/p&gt;&#xA;&lt;h3 id=&#34;草むらに隠れよう&#34;&gt;草むらに隠れよう&lt;/h3&gt;&#xA;&lt;p&gt;相手の動きを見極めたり、相手がどこにいるのかを調べるためには、草むらに入って、姿勢を低くするといいですよ。&lt;/p&gt;&#xA;&lt;p&gt;チョコボ亭の近くには、草むらがあることが多いのですが、待ち時間は突っ立ってないで、草むらに身を潜めるのが良さそう。&lt;/p&gt;&#xA;&lt;p&gt;関係ないですが、最近、14キルしたのと、プレゼントのスキン取りました。やたー^^&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211212_0016.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211212_0015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、10000ptチャレンジ</title>
      <link>https://syui.github.io/blog/post/2021/12/07/pokemas/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/07/pokemas/</guid>
      <description>&lt;p&gt;チャンピオンバトルで10000ptチャレンジやってみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211207_0029.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211207_0030.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mastodonをruby-3.0.3で動かしてみた</title>
      <link>https://syui.github.io/blog/post/2021/12/05/mastodon/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/05/mastodon/</guid>
      <description>&lt;p&gt;今までrbenvでversion管理してたんだけど、archlinuxにruby-3.0.3が来ていたので、これがmastodonのgemfileと合いそうだったので上げてみた。heroku-runtimeも3.0.3ですし、今だとrbenvは必要ありません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd mastodon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv local system&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ruby -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.0.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo gem i bundler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/.gem/ruby/3.0.0/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rm Gemfile.lock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ bundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;あとは&lt;code&gt;Gemfile.lock&lt;/code&gt;をherokuにcommit, deployすればいいです。&lt;/p&gt;&#xA;&lt;p&gt;また、nodeのnpm(yarn)でerrが出てたので、package.jsonも変更してます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;engines&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12.13.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最新のmastodonではkeybaseのリンクが消滅しています。下記の事情があったみたいです。したがって、当該commitをrevertすることでリンク(認証)を残すことができます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mastodon/mastodon/issues/13670&#34;&gt;https://github.com/mastodon/mastodon/issues/13670&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git revert 7de0ee7ab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;iframe src=&#34;https://mastodon.zunda.ninja/@zundan/107345100219354734/embed&#34; class=&#34;mastodon-embed&#34; style=&#34;max-width: 100%; border: 0&#34; width=&#34;400&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h3 id=&#34;その他のリンク&#34;&gt;その他のリンク&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://devcenter.heroku.com/ja/articles/ruby-support&#34;&gt;https://devcenter.heroku.com/ja/articles/ruby-support&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://devcenter.heroku.com/ja/articles/nodejs-support&#34;&gt;https://devcenter.heroku.com/ja/articles/nodejs-support&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.joinmastodon.org/user/contacts/&#34;&gt;https://docs.joinmastodon.org/user/contacts/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ff7fsでモーグリのスキンを集めた</title>
      <link>https://syui.github.io/blog/post/2021/12/03/ff7fs/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/12/03/ff7fs/</guid>
      <description>&lt;p&gt;ちょこちょこプレイしてて、モーグリのスキンを集めることができました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211203_0006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;でもやっぱり忍者スキンしか使ってない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211203_0007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;プレイしてて気づいたこととか書きます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211203_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;忍者は弱い&#34;&gt;忍者は弱い&lt;/h3&gt;&#xA;&lt;p&gt;私は忍者しか使ってませんけど、忍者、弱いです。&lt;/p&gt;&#xA;&lt;p&gt;ジョブの中では一番弱いんじゃないかな。&lt;/p&gt;&#xA;&lt;p&gt;ただ、この弱さに基づくスキルが、初心者の私にとって非常に扱いやすかった。&lt;/p&gt;&#xA;&lt;p&gt;順をおって説明します。&lt;/p&gt;&#xA;&lt;p&gt;まず、忍者が一番弱い理由について。&lt;/p&gt;&#xA;&lt;p&gt;例えば、魔法使いや剣士のスキルは敵を攻撃するものです。反対に、忍者のスキルは、身を隠したりするもの。&lt;/p&gt;&#xA;&lt;p&gt;したがって、降り立った地点で即戦闘になろうものなら、忍者は死にますね。&lt;/p&gt;&#xA;&lt;p&gt;実際、即キルされた経験ある人も多いのでは。&lt;/p&gt;&#xA;&lt;p&gt;これは、スキルの優位性によるもので、同じレベルの使い手がタイマンしたら、間違いなく忍者は負けるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;では、忍者はどうやって勝てばいいのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;忍者の戦い方は、というか、これは単に私の戦い方にもなると思うんですけど、あくまで忍者のスキルから推測される忍者の戦い方というのは「圧倒的に有利な場面を作る」ことだと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;つまり、忍者は、圧倒的に有利な場を作り、その上でしか戦わない。これが忍者の戦い方です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、敵が近くにいるとき、部屋の中に入り、少し後退してファイアを準備するとか(こちらは足音を立てないように)、瞬間移動で高台を取るとか、2段ジャンプして魔法を打つ、銃を切り替えるなど。とにかく、有利な場を作って戦うようにしてます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他に思ったことなど&#34;&gt;その他に思ったことなど&lt;/h3&gt;&#xA;&lt;p&gt;それ以外では、例えば、頭を狙えばクリティカルで一撃で仕留められます。&lt;/p&gt;&#xA;&lt;p&gt;できる限り一撃を狙い、それ以外はあまり狙っても意味はありません。&lt;/p&gt;&#xA;&lt;p&gt;狙撃に関しては、むやみにダメージを与えてはいけません。それでは逃げられてしまう可能性があり、逃げられてしまっては意味がないからです。&lt;/p&gt;&#xA;&lt;p&gt;仕留められないなら、銃弾の消費、居場所が察知される危険が高くなる等のデメリットしかありません。&lt;/p&gt;&#xA;&lt;p&gt;したがって、狙撃では、狙えるけど狙わないことも重要で、できる限り一撃で仕留めるような工夫が必要だと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、相手に沿うように、しかし、標準は合わせず、スーッと移動させ、そして、頭が狙えると思ったら、こう横にヒュッと移動させるようにするといいのでは、と思いました。まあ、やり方は人それぞれ。&lt;/p&gt;&#xA;&lt;p&gt;あと、初回ルート決めというか、私の場合、いつもの探索ルートを決めてたりします。ここは降りた直後から宝箱が連続で取れ(密集はしていない)、しかも、敵やられる危険、人が知っている可能性が少ないところで、地理的には忍者が逃げやすく、かつ敵を仕留めやすい場所なので、その初回は当該ルートをできる限り通るようにしています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;コントローラーの使い方&#34;&gt;コントローラーの使い方&lt;/h3&gt;&#xA;&lt;p&gt;最近までコントローラーの使い方がわかっていなかったので、魔法とか戦闘で使っていませんでした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、魔法使えれば便利だなーと思ったことがきっかけで、コントローラーの使い方を把握しました。&lt;/p&gt;&#xA;&lt;p&gt;私が当初わからなかった操作は下記になります。&lt;/p&gt;&#xA;&lt;h4 id=&#34;魔法&#34;&gt;魔法&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;L1&lt;/code&gt;を押しながら、3つの魔法のどれかのボタンを押します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(1) R1&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(2) R2&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(3) L2&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;キャンセル&#34;&gt;キャンセル&lt;/h4&gt;&#xA;&lt;p&gt;魔法やスキルは&lt;code&gt;L2&lt;/code&gt;でキャンセルできます。&lt;/p&gt;&#xA;&lt;p&gt;ただし、スキルや3番魔法の場合、2回押したりしなきゃダメかも。&lt;/p&gt;&#xA;&lt;h4 id=&#34;走りながら地図&#34;&gt;走りながら地図&lt;/h4&gt;&#xA;&lt;p&gt;左上メニューで地図です。&lt;/p&gt;&#xA;&lt;p&gt;左スティックを押すことで自動で走れますので、その際に表示することが多いかな。&lt;/p&gt;&#xA;&lt;h4 id=&#34;魔法の入れ替え&#34;&gt;魔法の入れ替え&lt;/h4&gt;&#xA;&lt;p&gt;右上メニューでバッグの中身。&lt;/p&gt;&#xA;&lt;p&gt;タッチ操作ですが、魔法を入れ替えることができます。主にそれで使ってる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最後に&#34;&gt;最後に&lt;/h3&gt;&#xA;&lt;p&gt;シーズン1のモーグリのスキンが手に入ったので満足。&lt;/p&gt;&#xA;&lt;p&gt;あと、バトロワ、fpsというジャンルをはじめてプレイできたのもよかった。&lt;/p&gt;&#xA;&lt;p&gt;あくまで訓練という設定も好きでした。あまり過激な設定は好みません。&lt;/p&gt;&#xA;&lt;p&gt;ただ、中毒性が高そうなゲームだと思うので、しばらく休止予定。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ルザミーネ</title>
      <link>https://syui.github.io/blog/post/2021/11/30/pokemas/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/30/pokemas/</guid>
      <description>&lt;p&gt;ポケマス、マジコスのルザミーネは強いと思ったので、引きました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211130_0025.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;30連くらいで2凸できたんだけど、運がとてつもなかった。ここまで引きがよかったの初めてじゃないだろうか。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211130_0026.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下記はポケマス関連で良さそうなサイトで、ここのランク、かなり信憑性あると思ってる(自分の意見とほぼ一致してた&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemonmasters.pokemongo-raku.com/posts/4602&#34;&gt;https://pokemonmasters.pokemongo-raku.com/posts/4602&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここにあえてSS+を追加するなら、個人的には以下の3組になります。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;マジコスレッド : 初代ポケマスから未だ最強を誇る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;N(21アニバーサリー) : 最近のトレンド、レッド超えの可能性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;マジコスルザミーネ : また超えてきた可能性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;現在のEXはこんな感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211130_0024.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>アイのアイコンを作った</title>
      <link>https://syui.github.io/blog/post/2021/11/28/icon/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/28/icon/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/ai&#34;&gt;/ai&lt;/a&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/ai_circle.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;こっちはinkscapeでsvgを作ったんだけど、このアプリ、毎度触るたびによくわからんってなってる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/icon/ai.svg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>qiitaバッジもらった</title>
      <link>https://syui.github.io/blog/post/2021/11/22/qiita/</link>
      <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/22/qiita/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://qiita.com/qiita-award/users&#34;&gt;qiita表彰プログラム&lt;/a&gt;なるものに載ってるよって公式から連絡が来て、qiitaバッジもらった。うれしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0007.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;qiita、10thおめでとう！&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;h3 id=&#34;qiitaとは&#34;&gt;qiitaとは&lt;/h3&gt;&#xA;&lt;p&gt;エンジニアのコミュニティサイト。主に技術情報が共有されている。月間600万を超えるユーザーが訪問し、会員数は70万人以上。日本最大級のエンジニア・コミュニティ。&lt;/p&gt;&#xA;&lt;p&gt;参照 : &lt;a href=&#34;https://qiita.com/about&#34;&gt;https://qiita.com/about&lt;/a&gt; , &lt;a href=&#34;https://qiita.com/qiita10th&#34;&gt;https://qiita.com/qiita10th&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>ff7fsでモーグリの翼をゲットした</title>
      <link>https://syui.github.io/blog/post/2021/11/20/ff7fs/</link>
      <pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/20/ff7fs/</guid>
      <description>&lt;p&gt;昨日言ってたモーグリの翼がゲットできました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211120_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;この画面の詳細のところ見たらドロップするモンスターとか表示されてた。&lt;/p&gt;&#xA;&lt;p&gt;で、サボテンダー倒したらドロップした。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、このアイテムの&lt;code&gt;I&lt;/code&gt;は、シーズン1の1だと思います。&lt;/p&gt;&#xA;&lt;p&gt;シーズン1のスキン、一つくらい欲しかったので満足。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ff7fsをプレイしてみた</title>
      <link>https://syui.github.io/blog/post/2021/11/19/ff7fs/</link>
      <pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/19/ff7fs/</guid>
      <description>&lt;h3 id=&#34;はじめてのfps&#34;&gt;はじめてのfps&lt;/h3&gt;&#xA;&lt;p&gt;実は、fpsというジャンルのゲームをプレイするのは、はじめてです。&lt;/p&gt;&#xA;&lt;p&gt;正直、fpsというゲームにあまり良い印象を持っておらず、個人的には苦手なジャンル。&lt;/p&gt;&#xA;&lt;p&gt;一応、学生の頃に友達の家で1,2回プレイした経験があります。当時はすぐに酔ってしまい、プレイするどころじゃなかった記憶。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ff7fsでの立ち回り&#34;&gt;ff7fsでの立ち回り&lt;/h3&gt;&#xA;&lt;p&gt;私は、忍者を選択しました。&lt;/p&gt;&#xA;&lt;p&gt;初心者が動き回るのもよくないだろうと思い、私は戦闘を避けつつ、初回はアイテムを回収するよう心がけ、遠距離から敵を狙う戦法です。&lt;/p&gt;&#xA;&lt;p&gt;私が好んで使う武器は、遠距離用の銃で、遠くから標準を合わせると大きく拡大されるやつ。&lt;/p&gt;&#xA;&lt;p&gt;基本的に、岩場が大好きで、時間経過とともに狭まるエリアを考慮しながら、その中心辺りにある岩場を登り、ときにエアロなどの魔法を使って最上まで行くことを目指します。&lt;/p&gt;&#xA;&lt;p&gt;そこで敵を待ち構えながら、のんびりします。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211119_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;チョコボで走り回るのも好きで、チョコボ亭があったら即座にチョコボに乗ってます。&lt;/p&gt;&#xA;&lt;p&gt;なぜこういう立ち回りをするのかというと、それは、たまたまです。&lt;/p&gt;&#xA;&lt;p&gt;ゲーム開始直後から自然とこんな感じで動いてるので、なにか深い考えがあるわけでもありません。このゲームについてもよくわかっていません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;自分の立ち回りの弱点&#34;&gt;自分の立ち回りの弱点&lt;/h3&gt;&#xA;&lt;p&gt;私の立ち回りでは、終盤まで生き残ることはできますが、終盤には弱いと思います。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、接近戦が苦手だからです。&lt;/p&gt;&#xA;&lt;p&gt;最終的な勝利(1位)を目指すなら、接近戦は必要不可欠だと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですから、接近戦もある程度、練習しておいたほうが良さそう。&lt;/p&gt;&#xA;&lt;p&gt;ここで、終盤を見据えた動き方みたいなものは、初回ロード時の訓練場で練習しました。&lt;/p&gt;&#xA;&lt;p&gt;接近戦での忍者の動き方ですが、基本的には、小型の銃を使います。中距離なら相手に標準を合わせます。最初は中距離がいいかな。中距離というのは、相手の物理攻撃が当たらないくらいの距離を言います。標準を合わせて打つと、そこから自動で射撃してくれるようになると思うので、画面を通常に切り替え、カーソルを相手に合わせつつ、自身は上下左右に動くようにします。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、相手が逃げ腰なら追いかけるように、攻めならバックです。&lt;/p&gt;&#xA;&lt;p&gt;ここで、相手との距離を徐々に近づけるようにするのがおすすめかなって思います。&lt;/p&gt;&#xA;&lt;p&gt;相手との距離が一定以上に近づいたら、ジャンプしながら物理攻撃に移行します。これは、単純にジャンプしながら攻撃ってのがポイントかなって思います。ジャンプ物理攻撃を駆使しながら戦うと、様々な状況に対応できる気がするので。&lt;/p&gt;&#xA;&lt;p&gt;最後の物理攻撃、3段目が当たると、相手は吹っ飛びます。これはむやみに追いかけるのではなく、中距離を目指して移動し、銃を構えるようにします。で、銃で撃ちつつ、次にジャンプ攻撃を繰り出すという流れ、その繰り返しになります。&lt;/p&gt;&#xA;&lt;p&gt;私は、魔法が苦手なので、使いません。別に使ってもいいと思いますが、正直、魔法に関しては全くわかっておらず、どのような動きをするのかも把握していません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、私が好んで所持する魔法は、エアロ、ケアルくらいです。&lt;/p&gt;&#xA;&lt;p&gt;画像は運良く1位をとった時のもの。うれしい！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211119_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;今の所目指しているもの&#34;&gt;今の所、目指しているもの&lt;/h3&gt;&#xA;&lt;p&gt;今の所、私がこのゲームで目指しているのは、ギルをためて、モーグルの鈴(戦場でまれにドロップする希少アイテム)を呼び出し、13,600Gくらいのアイテムを購入して、モーグリの翼(スキン)を手に入れることかな。シーズン後に入手不可能になるものを優先的に取っていきたい無課金勢。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;【&lt;a href=&#34;https://twitter.com/hashtag/FF7FStips?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#FF7FStips&lt;/a&gt;：モーグリショップ】&lt;br&gt;&lt;br&gt;マッチゲームで1位を取るか、モグ鈴を獲得すると&lt;br&gt;リザルト後にモーグリショップが出現！&lt;br&gt;&lt;br&gt;マッチ中、ある条件が適用される特殊なアイテムが並ぶことも・・？&lt;a href=&#34;https://twitter.com/hashtag/FF7FS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#FF7FS&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%8A%E3%83%AB%E3%83%95%E3%82%A1%E3%83%B3%E3%82%BF%E3%82%B8%E3%83%BC?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ファイナルファンタジー&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/FF7R?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#FF7R&lt;/a&gt; &lt;a href=&#34;https://t.co/lsL1CeeVyO&#34;&gt;pic.twitter.com/lsL1CeeVyO&lt;/a&gt;&lt;/p&gt;&amp;mdash; FINAL FANTASY VII THE FIRST SOLDIER_JP｜FF7FS (@FFVII_FS_JP) &lt;a href=&#34;https://twitter.com/FFVII_FS_JP/status/1461648754939887618?ref_src=twsrc%5Etfw&#34;&gt;November 19, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;【&lt;a href=&#34;https://twitter.com/hashtag/FF7FStips?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#FF7FStips&lt;/a&gt;：コレクション】&lt;br&gt;&lt;br&gt;集めたデータピースとスキンを交換しよう✨&lt;br&gt;&lt;br&gt;ホーム左下のシーズンパスページからコレクションボタンをタップで交換画面へ！&lt;a href=&#34;https://twitter.com/hashtag/FF7FS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#FF7FS&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%8A%E3%83%AB%E3%83%95%E3%82%A1%E3%83%B3%E3%82%BF%E3%82%B8%E3%83%BC?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ファイナルファンタジー&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/FF7R?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#FF7R&lt;/a&gt; &lt;a href=&#34;https://t.co/tNAIfHGPoP&#34;&gt;pic.twitter.com/tNAIfHGPoP&lt;/a&gt;&lt;/p&gt;&amp;mdash; FINAL FANTASY VII THE FIRST SOLDIER_JP｜FF7FS (@FFVII_FS_JP) &lt;a href=&#34;https://twitter.com/FFVII_FS_JP/status/1461893995911651331?ref_src=twsrc%5Etfw&#34;&gt;November 20, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;h3 id=&#34;中毒性&#34;&gt;中毒性&lt;/h3&gt;&#xA;&lt;p&gt;このゲームをプレイしていて、気づいたことがあります。&lt;/p&gt;&#xA;&lt;p&gt;それは、このゲームの中毒性です。&lt;/p&gt;&#xA;&lt;p&gt;プレイしてたら、いつの間にか時間が経ってて、でも、あと一回ってやりたくなるんですね。&lt;/p&gt;&#xA;&lt;p&gt;これはちょっとまずいと思ったので、シーズン1で&lt;code&gt;モーグリの翼スキン&lt;/code&gt;を取ったら、しばらく距離を置いてみる予定。あくまで予定ですが。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ff7fsをはじめてみた</title>
      <link>https://syui.github.io/blog/post/2021/11/17/ff7fs/</link>
      <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/17/ff7fs/</guid>
      <description>&lt;p&gt;ff7fsとは、ff7のキャラや世界観を使ったapexやフォーナイトのようなバトルロイヤル式のゲームです。2021/11/17の17:00からサービス開始らしい。&lt;/p&gt;&#xA;&lt;p&gt;ということで、17:00から起動して、チュートリアル(基本訓練)まで進めましたが、そこでロードから進まない状況。&lt;/p&gt;&#xA;&lt;p&gt;こういうのはサービス開始直後によくあることらしく、チュートリアルでは一応、名前だけ入力送信を完了してるので、確保されてるっぽい？(ネット知識&lt;/p&gt;&#xA;&lt;p&gt;正直、ゲームはプレイするかどうかは分かりません。&lt;/p&gt;&#xA;&lt;p&gt;今回の起動は名前確保だけが目的だったので、確保されてればそれでいいのです。&lt;/p&gt;&#xA;&lt;p&gt;画面下の方にIDが表示されてますが、それが取得されたようでしたら、あとは名前入力できる画面までたどり着いて、入力が完了し、それが通ったら確保されてそうではあります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ff7fs_20211119_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;apexとフォーナイト&#34;&gt;apexとフォーナイト&lt;/h3&gt;&#xA;&lt;p&gt;apexとフォーナイト、めちゃくちゃ流行ってますよね。&lt;/p&gt;&#xA;&lt;p&gt;今、最も流行っているゲームじゃないかな。&lt;/p&gt;&#xA;&lt;p&gt;私は銃を打ち合うゲームをやると、昔から酔っちゃうので、プレイしていませんでした。&lt;/p&gt;&#xA;&lt;p&gt;今回のff7fsは、世界観やキャラに馴染みがあるし、ファンタジー要素があると、あまり酔わずに済む事が多いので、今回、プレイを始めてみようかなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;すごく流行りそうなアプリなので、とりあえず名前だけでも確保しておくとよさそう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>goodreaderからopenssh(fstp)にpublic-keyでアクセスする</title>
      <link>https://syui.github.io/blog/post/2021/11/11/goodreader/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/11/goodreader/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;goodreader(latest)がopenssh 8.7に対応&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;iosには昔からgoodreaderという便利なアプリがあります。&lt;/p&gt;&#xA;&lt;p&gt;これがずっと便利で(遥か昔から今日に至るまでiosには他に便利なアプリがあまりなかったとも言う)、このアプリ、すごく基本的なことができるのです。&lt;/p&gt;&#xA;&lt;p&gt;androidでは普通にできるようなことができ、例えば、ssh(sftp) serverにpublic-key方式でアクセスしたりできるんですけど、一時期からupdateが滞り、openssh verによっては、public-keyなどによるアクセスが使えなくなっていました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ここ最近のgoodreaderのupdateで&lt;code&gt;openssh 8.7(openssl 1.1.1)&lt;/code&gt;ならpublic-keyでも接続可能になりました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、武器と育成方針</title>
      <link>https://syui.github.io/blog/post/2021/11/07/genshin/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/07/genshin/</guid>
      <description>&lt;p&gt;どのキャラにどれを付けたらいいのか、迷ってきたので、まとめます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211107_0001.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211107_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;武器&lt;/th&gt;&#xA;          &lt;th&gt;聖遺物&lt;/th&gt;&#xA;          &lt;th&gt;メイン&lt;/th&gt;&#xA;          &lt;th&gt;補足&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;クレー&lt;/td&gt;&#xA;          &lt;td&gt;流浪楽章/ドドコ&lt;/td&gt;&#xA;          &lt;td&gt;炎魔女&lt;/td&gt;&#xA;          &lt;td&gt;攻撃%, 元素バフ, 会心ダメ&lt;/td&gt;&#xA;          &lt;td&gt;ドドコでも相当の火力が出る&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;雷電&lt;/td&gt;&#xA;          &lt;td&gt;西風&lt;/td&gt;&#xA;          &lt;td&gt;絶縁&lt;/td&gt;&#xA;          &lt;td&gt;チャージ効率, 元素バフ, 会心ダメ&lt;/td&gt;&#xA;          &lt;td&gt;雷電以外の全員に絶縁、チャージ効率を上げて爆発を連発するビルドが使える&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ノエル&lt;/td&gt;&#xA;          &lt;td&gt;無工&lt;/td&gt;&#xA;          &lt;td&gt;旧貴族&lt;/td&gt;&#xA;          &lt;td&gt;防御x3&lt;/td&gt;&#xA;          &lt;td&gt;無工は他キャラが貼ったバリアでも効果を発揮する&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;バーバラ&lt;/td&gt;&#xA;          &lt;td&gt;金珀&lt;/td&gt;&#xA;          &lt;td&gt;愛され&lt;/td&gt;&#xA;          &lt;td&gt;HPx2, 治療バフ&lt;/td&gt;&#xA;          &lt;td&gt;HPより治癒バフのほうが回復量が上がった&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;香菱&lt;/td&gt;&#xA;          &lt;td&gt;ひれ長/漁獲&lt;/td&gt;&#xA;          &lt;td&gt;絶縁&lt;/td&gt;&#xA;          &lt;td&gt;チャージ効率, 攻撃%, 攻撃%&lt;/td&gt;&#xA;          &lt;td&gt;雷電と組ませてチャージ効率を重視&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;持ってない以下のキャラを想定し、とりあえず聖遺物と武器だけは集めたり強化したりしてる。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;キャラ&lt;/th&gt;&#xA;          &lt;th&gt;武器&lt;/th&gt;&#xA;          &lt;th&gt;聖遺物&lt;/th&gt;&#xA;          &lt;th&gt;メイン&lt;/th&gt;&#xA;          &lt;th&gt;補足&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;鍾離&lt;/td&gt;&#xA;          &lt;td&gt;護摩&lt;/td&gt;&#xA;          &lt;td&gt;千岩&lt;/td&gt;&#xA;          &lt;td&gt;HPx3&lt;/td&gt;&#xA;          &lt;td&gt;シールド要因として割り切る。HPを上げるとシールドが強化される。また、護摩によってHPで攻撃力も伸びる&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ウェンティ&lt;/td&gt;&#xA;          &lt;td&gt;終焉(持ってない)&lt;/td&gt;&#xA;          &lt;td&gt;翠緑&lt;/td&gt;&#xA;          &lt;td&gt;熟知x2, 会心率&lt;/td&gt;&#xA;          &lt;td&gt;拡散要因として割り切る&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;甘雨&lt;/td&gt;&#xA;          &lt;td&gt;西風&lt;/td&gt;&#xA;          &lt;td&gt;大地&lt;/td&gt;&#xA;          &lt;td&gt;攻撃%, 元素バフ, 会心ダメ&lt;/td&gt;&#xA;          &lt;td&gt;雷電と組む場合、絶縁でもいいかもしれない&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;行秋&lt;/td&gt;&#xA;          &lt;td&gt;祭礼&lt;/td&gt;&#xA;          &lt;td&gt;絶縁&lt;/td&gt;&#xA;          &lt;td&gt;チャージ効率, 元素バフ, 会心率&lt;/td&gt;&#xA;          &lt;td&gt;雷電と組ませてチャージ効率を重視&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ベネット&lt;/td&gt;&#xA;          &lt;td&gt;祭礼&lt;/td&gt;&#xA;          &lt;td&gt;旧貴族&lt;/td&gt;&#xA;          &lt;td&gt;HPx2, 治癒バフ&lt;/td&gt;&#xA;          &lt;td&gt;バフ要因として割り切る。サブに基礎攻撃力&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;雷電と組ませる場合、鍾離とかウェンティとか甘雨も絶縁でチャージ効率と爆発を上げたほうが強いかもしれない。どのキャラも爆発が強いので。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた104</title>
      <link>https://syui.github.io/blog/post/2021/11/06/illust/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/06/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_104.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>niantic idを予約してみた</title>
      <link>https://syui.github.io/blog/post/2021/11/05/niantic/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/05/niantic/</guid>
      <description>&lt;p&gt;現在、nianticがこれまでにリリースした3つのゲームをプレイしていたユーザーに対して、&lt;a href=&#34;https://nianticlabs.com/reserve-nianticid&#34;&gt;niantic id&lt;/a&gt;への予約が招待されています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ingress&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;pokemongo&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;harrypotter(wizardsunite)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;この招待は2021/11/05のAMにmailで届きました。私は、AM 9:00~10:00頃に予約しましたが、その際は、登録しづらい状況でした。ですが、何度かトライすると通りました。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、googleアカウントでのログインエラーが3回ほどやり直し、その後もユーザー名を選択して送信する際の送信ボタンを4回ほど押しました。ページが切り替わらなかったので何度か送信ボタンぽいものを押すと、ページが切り替わり「登録が完了した」という趣旨のメッセージが表示されたような状況でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20211105_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;画像は、PMに再確認したときのもの。idはプライバシー保護のため&lt;code&gt;syui&lt;/code&gt;に書き換えています。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;id予約制の趣旨&#34;&gt;id予約制の趣旨&lt;/h3&gt;&#xA;&lt;p&gt;予約制の趣旨は、「既存のアカウントを持っているプレイヤーがNiantic IDを優先するようにするため」だと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nianticlabs.com/reserve-nianticid/faq&#34;&gt;https://nianticlabs.com/reserve-nianticid/faq&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;通常、プラットフォーム誕生におけるidの取得は早いもの勝ちになります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回のケースでは、ゲームをプレイしていたユーザーが優先的にidを確保する珍しいタイプになります。&lt;/p&gt;&#xA;&lt;p&gt;ゲームをプレイしていないとidの予約はできないので、その点でidを確保する難易度が上がります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これまで長くプレイしてきたユーザーにとっては納得の行くものだったと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;新規登録へのハードルは高くなりますが、今後、このような形でidを取得する形態が増えてくるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、そのプラットフォームが流行るか流行らないかは誰にもわかりません。nianticのそれについても、今後の戦略次第だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;なお、新規登録は今後可能になりますし、予約できるのは既存のユーザー名のみに限定されます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;niantic-profile一種のプラットフォームは流行るのか&#34;&gt;niantic profile(一種のプラットフォーム)は流行るのか&lt;/h3&gt;&#xA;&lt;p&gt;これまでniantic profile, niantic socialと呼ばれるものは、それぞれのゲームにおいて少しずつ実装されてきました。&lt;/p&gt;&#xA;&lt;p&gt;ですが、現時点で、それを気にしている人はいません。使っている人もいません。話題にもなっていません。&lt;/p&gt;&#xA;&lt;p&gt;現時点では、そもそも機能がないし、あったとしても使われるかどうかは微妙なところだと思います。&lt;/p&gt;&#xA;&lt;p&gt;理由としては、ゲームをプレイしている人は、基本的に、そのゲームがやりたいだけなので、nianticには興味がないし、そのprofileやidなど、どうでもいいのです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、それを定着させようと思ったら、やはり、ゲーム内に強く影響を及ぼすものでなければいけません。&lt;/p&gt;&#xA;&lt;p&gt;影響を強く及ぼせる要素としては、やはり、名前が一番強いということになると思います。&lt;/p&gt;&#xA;&lt;p&gt;個人的に実装してほしいオプションは以下の3つです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ゲーム内のユーザー名をniantic idで表示(選択)するオプション&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これは、当該ゲームをプレイするユーザーがどちらを使うかを選択できるようにするというものです。識別しづらいという問題があるなら、色を変えたり、(N)アイコンを付けたりなどすることで回避できると思われますが、同一表記でも個人的には構いません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;当該ユーザー名が使われていない場合に上書き変更するオプション&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;niantic idで取得したものがゲーム内でユーザーに使われていない場合、それに変更できるオプションがあるとうれしい。つまり、退会や凍結されているユーザー名を開放してほしい。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;niantic profileをゲームみたいにしてほしい&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;niantic profile自体にミニゲームや特典みたいな思想を実装してほしい。例えば、niantic profileに独自通貨を発行し、コミュニケーション特典として発行するなど。発行される通貨は、各ゲーム内で使えるようにすることで、niantic profileがゲームに影響を与えるものとして認識されるようになると思います。報酬があり、継続する価値があるのなら、プラットフォームとして繁栄していく可能性は高いとみています。&lt;/p&gt;&#xA;&lt;p&gt;niantic profile自体を楽しいものにして、流行らせてほしいなって、個人的には思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;個人的な事情&#34;&gt;個人的な事情&lt;/h3&gt;&#xA;&lt;p&gt;私がpokemongoをやり始めたのは、リリースからちょっと遅れた時期でした。&lt;/p&gt;&#xA;&lt;p&gt;その時期は、「ユーザー名は個人と関わりのない推測されないようなものにしてください」と注意があり、私もそれに従いました。&lt;/p&gt;&#xA;&lt;p&gt;そのときはそれで良かったのですが、予想外に長く付き合うゲームになり、変更オプションが実装されたときにはすでに手遅れでした。こんなことなら最初にとっておくべきでした。&lt;/p&gt;&#xA;&lt;p&gt;その後、ingress, harrypotterをプレイしましたが、ingressは取れず、harrypotterでは取れました。&lt;/p&gt;&#xA;&lt;p&gt;ingressのmentionで確かめてみると、私が欲しかったユーザー名は現在使われないことがわかりました。おそらく、当該ユーザーは退会、もしくは凍結されているのだろうと思います。&lt;/p&gt;&#xA;&lt;p&gt;そんなことなので、pokemongoも使われているのかわかりません。おそらく、使われていないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、niantic idでゲーム内のユーザー名を統一できるようになるといいなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ユーザー名が入ったスクショは、プライバシー保護のためユーザー名のところだけ&lt;code&gt;syui&lt;/code&gt;と書き換えて投稿するようにしています(実際のユーザー名は異なります)。&lt;/p&gt;&#xA;&lt;p&gt;実際のユーザー名は、本名にちなんだものとなっておりますが、なるべく公開しないほうがよいでしょう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;pikminbloomが除かれている理由&#34;&gt;pikmin(bloom)が除かれている理由&lt;/h3&gt;&#xA;&lt;p&gt;今回、pikminのユーザー名は予約できません。予約対象ではないのです。&lt;/p&gt;&#xA;&lt;p&gt;pikminは、この前リリースされたばかりのゲームであり、実装が間に合わなかったという理由も十分に考えられますが、予約制の趣旨から考えると、今回、pikminが除かれていることは説明できます。&lt;/p&gt;&#xA;&lt;p&gt;今回の予約制は、長らくプレイしてきたユーザーに対して優先権を確保する、というものなので、プレイを始めたばかりのユーザー名を優先確保する必要性はあまりないのです。&lt;/p&gt;&#xA;&lt;p&gt;公式サイトの文言には以下の文章があります。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ユーザー名は、ゲームをプレイすることでできたフレンドや、参加するコミュニティのアイデンティティを表わす大切な要素のひとつです。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今回の措置は、あくまで、これまでユーザーが培ってきたアイデンティティを継承できるようにしたという例外的な措置だと考えられます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;小文字への統一&#34;&gt;小文字への統一&lt;/h3&gt;&#xA;&lt;p&gt;これまでゲーム内のユーザー名は、大文字と小文字を区別していました。&lt;/p&gt;&#xA;&lt;p&gt;つまり、aiという文字列には、最大で4人のプレイヤーがいます。具体的には、ai, aI, Ai, AIです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>miiで輪っかを再現してみた</title>
      <link>https://syui.github.io/blog/post/2021/11/04/pikmin/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/04/pikmin/</guid>
      <description>&lt;p&gt;miiでアイの輪っかを再現してみた。金髪である以上、輪があるか輪(剣)を持つかしないといけないので。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0002.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0003.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0004.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0009.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;色んなパターンを作ってみたものの、最終的には、これに落ち着きました。pikminbloomで見たとき比較的違和感が少ないものを選択。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0005.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0007.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_bloom_20211104_0008.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>pikmin bloomとmii</title>
      <link>https://syui.github.io/blog/post/2021/11/03/pikmin/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/03/pikmin/</guid>
      <description>&lt;p&gt;nianticのharrypotter(wizardsunite)が終了するようです。wizardsuniteはどういった契約だったのかわからないので、今回の終了はnianticが決めたのかはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、harrypotterの映画を出してるワーナー・ブラザーズがnianticに開発を依頼してたのか、nianticがharrypotterのIPを借りて運営してたのかによって異なってくると思われます。pokemongoはpokemonのIPをお金を出して買ってたと思う。新しいpokemonを追加するにも大金がかかってるんじゃないだろうかと予想してる。&lt;/p&gt;&#xA;&lt;p&gt;そのnianticから今度はpikminbloomがリリースされました。pikminbloomはnintendoと共同開発らしい。&lt;/p&gt;&#xA;&lt;p&gt;今回、pikminbloomではじめてmiiを触ってるんだけど、よくわからなかった。miitopiaってのがあるらしいんだけど、これで作ったものをニンテンドーアカウントに設定できるのだろうかとか。&lt;/p&gt;&#xA;&lt;p&gt;miiの選択肢を増やしてほしいのと、miiの等身がpikminbloomに反映されるようにしてほしいかな。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_20211103_0001.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pikmin_20211103_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、世界ランク8</title>
      <link>https://syui.github.io/blog/post/2021/11/02/genshin/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/11/02/genshin/</guid>
      <description>&lt;p&gt;ようやく冒険者ランク55になり、世界ランク8になりました。&lt;/p&gt;&#xA;&lt;p&gt;世界ランクは、秘境とか螺旋とかに影響を及ぼさなかった気がするので、野生の敵の強さが変わってくる感じなのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;ちょっと戦ってみました。が、よくわからなかった(何が起こってるのかもよくわからなかった)。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/7Cck3dd-yDo&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;現在、胡桃のキャラと武器ガチャが熱いので、その話題について書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;胡桃は引くべきか&#34;&gt;胡桃は引くべきか&lt;/h3&gt;&#xA;&lt;p&gt;胡桃は、現時点では、引くべきキャラだと思います。炎元素で最も強いと言われているのが胡桃です。&lt;/p&gt;&#xA;&lt;p&gt;実際、お試しで使ってみましたが、こいつは強い。&lt;/p&gt;&#xA;&lt;p&gt;胡桃の強さは、元素爆発でのHP回復とHPを上げることが火力につながる特性にあると思います。HPは耐久値でもあり、耐久と同時に火力も上げることができます。元素爆発も攻撃と回復が働くため無駄がありません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、胡桃は強い。クレーよりも圧倒的に強いでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私にはクレーという炎元素アタッカーがいるため、胡桃を引いて、かつ育てるのは、コストはかかるが、効果は少ないと考えます。したがって、今回、胡桃はスルーする予定。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回のガチャは、やっても損はないと思います。&lt;/p&gt;&#xA;&lt;p&gt;今回、私がスルーする最大の理由は「将来への期待」があるからです。これがなければ、炎元素最強キャラは回していた可能性が高い。&lt;/p&gt;&#xA;&lt;p&gt;つまり、将来、もっと良い武器、良いキャラが来たとき回せなかったら困るので、原石を貯めるという選択を取ります。&lt;/p&gt;&#xA;&lt;p&gt;そのような期待は不確実なものであり、将来への期待が当たるかどうかはわかりません。例えば、今後、火の神が実装されたとして、胡桃のほうが結局は強いという評価なら、胡桃を引いておかなかったのは失敗、ということになります。&lt;/p&gt;&#xA;&lt;p&gt;基本的には、私のように無課金に対して強いこだわりでもなければ、普通に回したほうがいいガチャだと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;武器ガチャは何を狙うべきか&#34;&gt;武器ガチャは何を狙うべきか&lt;/h3&gt;&#xA;&lt;p&gt;現時点では、雷電か鍾離に装備できる武器が最もおすすめだと考えています。つまり、長柄武器です。&lt;/p&gt;&#xA;&lt;p&gt;長柄武器では、特に&lt;code&gt;護摩の杖&lt;/code&gt;、&lt;code&gt;草薙の稲光&lt;/code&gt;の2つがいいと私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;今回、武器ガチャを回すことにしました。&lt;/p&gt;&#xA;&lt;p&gt;前回は「もう武器ガチャは回さない」と言いましたが、まさか、早速回す羽目になるとは思わなかった&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;結果として、7,000くらいの原石を使い、辛うじて&lt;code&gt;護摩の杖&lt;/code&gt;をゲット。うれしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211102_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;実は、今回の武器ガチャは、鍾離(用)の&lt;code&gt;護摩の杖&lt;/code&gt;を狙う以上に、香菱の&lt;code&gt;斬波のひれ長&lt;/code&gt;, クレーの&lt;code&gt;流浪楽章凸&lt;/code&gt;, 行秋(用)の&lt;code&gt;祭礼の剣凸&lt;/code&gt;, 甘雨(用)の&lt;code&gt;終焉を嘆く詩&lt;/code&gt; or &lt;code&gt;曚雲の月&lt;/code&gt;を狙う意図がありました。&lt;/p&gt;&#xA;&lt;p&gt;(用)は持っていないキャラです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今回の武器ガチャはハズレがなかった。だからこそ、回してしまったわけですが&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;しかし、これ以上、武器ガチャに原石を消費するのは非常にまずい！&lt;/p&gt;&#xA;&lt;p&gt;私は現時点で相当のキャラ不足。キャラガチャは、クレーと雷電の2回のみですから、本当にまずい。&lt;/p&gt;&#xA;&lt;p&gt;今後、原神の攻略自体ができなくなる可能性が大いにあると思います。&lt;/p&gt;&#xA;&lt;p&gt;原神の攻略ができなくなり、沈んでいった人達って、もしかして、武器ガチャにやられちゃった可能性あるのでは？&lt;/p&gt;&#xA;&lt;p&gt;確かに、無課金で武器ガチャばかりやっちまったら、そりゃ、攻略できなくなる可能性あると思いました。&lt;/p&gt;&#xA;&lt;p&gt;今回は半分理性を失い、武器ガチャをやっちまったわけですが、改めてキャラ最優先に考えていきたい。&lt;/p&gt;&#xA;&lt;p&gt;現在、キャラガチャと武器ガチャは&lt;code&gt;2:2&lt;/code&gt;でやっていて、無課金でプレイするには&lt;code&gt;4:0&lt;/code&gt;が望ましいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;そう考えると、原神の攻略、半分失敗してる気がする。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;もう武器ガチャはやらない！！(n回目&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた103</title>
      <link>https://syui.github.io/blog/post/2021/10/30/illust/</link>
      <pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/30/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_103.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>iosの写真ウィジェット</title>
      <link>https://syui.github.io/blog/post/2021/10/28/ios/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/28/ios/</guid>
      <description>&lt;p&gt;結論から言うと、手動で設定するには&lt;code&gt;googleフォト&lt;/code&gt;がいいです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ios_20211028_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;デフォルトの写真アプリでやっても「コンテンツがありません」と表示され続けるので。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ios_20211028_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、からておう</title>
      <link>https://syui.github.io/blog/post/2021/10/27/pokemas/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/27/pokemas/</guid>
      <description>&lt;p&gt;グリーン&amp;amp;プテラを引いたので、からておうに「はかいこうせん」を当てるエンブレム、やっと取れた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211027_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;よく使う編成はN&amp;amp;レシラム、マツブサ&amp;amp;グラードン、レッド&amp;amp;カビゴンかな。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211027_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211027_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugoのresourceを使ってみた</title>
      <link>https://syui.github.io/blog/post/2021/10/24/hugo/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/24/hugo/</guid>
      <description>&lt;p&gt;今回、写真が増えてきたので、ページを作ったのですが、その際、hugoのresourceを使ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/photo&#34;&gt;/photo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;dir構造は以下の通り。&lt;code&gt;content/photo/&lt;/code&gt;以下に画像を置きます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;content/photo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── figure.jpg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── illust.jpg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── index.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── pokecard.jpg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── sticker.jpg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:/content/photo/index.md&#34; data-lang=&#34;html:/content/photo/index.md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;photo | syui.ai&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;resources:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; src: &amp;#39;*.jpg&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type: &amp;#34;photo&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;それを&lt;code&gt;layout/photo/single.html&lt;/code&gt;でresourceを使って取得。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:layout/photo/single.html&#34; data-lang=&#34;html:layout/photo/single.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with .Resources.Match &amp;#34;*.jpg&amp;#34; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Carousel__slide&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ range . }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .RelPermalink }}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .RelPermalink }}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;480&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下のような感じで取得してもいいらしい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Resources.ByType &amp;#34;image&amp;#34; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Page.Resources.ByType &amp;#34;image&amp;#34; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でも、正直、分かりづらかったり、思ったように動かなかったりするかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/content-management/page-resources/&#34;&gt;https://gohugo.io/content-management/page-resources/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた102</title>
      <link>https://syui.github.io/blog/post/2021/10/23/illust/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/23/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_102.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、聖遺物の厳選なし</title>
      <link>https://syui.github.io/blog/post/2021/10/21/genshin/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/21/genshin/</guid>
      <description>&lt;p&gt;やっとクレーと雷電の天賦が当初の目標まで到達しました。クレーの天賦(攻撃、スキル、爆発)がLV9で、雷電の天賦(スキル、爆発)がLV10です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211021_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;雷電の通常攻撃の天賦は、LV9まで上げる予定ですが、現状でも問題ありません。余裕があればやるつもり。ただし、さすがに雷電でも通常攻撃の天賦に王冠を使うのはやめとく。他のキャラに使ったほうがよさそう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211021_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近やっと全員に聖遺物+20を付けられました。長かった。&lt;/p&gt;&#xA;&lt;p&gt;現PTはクレー、雷電、ノエル、バーバラです。キャラ持ってないんで。&lt;/p&gt;&#xA;&lt;p&gt;次は何をしていくのかというと、狙っていくキャラにつける予定の聖遺物のレベルを上げようと考えています。&lt;/p&gt;&#xA;&lt;p&gt;具体的には、ウェンティに翠緑の影、鍾離に旧貴族(HP)、ベネットに旧貴族(攻撃)、香菱に絶縁です。これらは、他のキャラに付けることもできるので、使い回しができます。&lt;/p&gt;&#xA;&lt;p&gt;聖遺物は通常、&lt;code&gt;時=攻撃%、杯=元素バフ、冠=会心&lt;/code&gt;を目指すらしい。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これは最低限やるべきことらしいので、本来の厳選を意味しません。&lt;/p&gt;&#xA;&lt;p&gt;本来の厳選は、メインだけでなく、サブステータスも含め厳選していくことを指します。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、聖遺物の厳選はやらないつもり。&lt;/p&gt;&#xA;&lt;p&gt;したがって、聖遺物レベルを上げていく過程で得られたもので妥協する考えです。主にメインステータスは気にしますが、サブステータスは無視する方向で。&lt;/p&gt;&#xA;&lt;p&gt;なぜかというと、例えば、聖遺物8つ(前半PT、後半PT)のレベルがMAXに達しているのに、それ以上に厳選するため樹脂を消費するのはもったいないからです。&lt;/p&gt;&#xA;&lt;p&gt;無課金なので、育成スピードが段違いに遅いし、割けるリソースも限られる。&lt;/p&gt;&#xA;&lt;p&gt;その分の樹脂は、モラやレベルアップ素材などに変換したほうがいいと思いました。&lt;/p&gt;&#xA;&lt;p&gt;現PTのステータスを記録しておきます。原神は6月頃からはじめたので、期間は4ヶ月くらいかな。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ST&lt;/th&gt;&#xA;          &lt;th&gt;クレー&lt;/th&gt;&#xA;          &lt;th&gt;雷電&lt;/th&gt;&#xA;          &lt;th&gt;ノエル&lt;/th&gt;&#xA;          &lt;th&gt;バーバラ&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;HP&lt;/td&gt;&#xA;          &lt;td&gt;+6307&lt;/td&gt;&#xA;          &lt;td&gt;+8926&lt;/td&gt;&#xA;          &lt;td&gt;+8621&lt;/td&gt;&#xA;          &lt;td&gt;&lt;em&gt;&lt;strong&gt;+16160&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;攻撃&lt;/td&gt;&#xA;          &lt;td&gt;+831&lt;/td&gt;&#xA;          &lt;td&gt;&lt;em&gt;&lt;strong&gt;+1332&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;+847&lt;/td&gt;&#xA;          &lt;td&gt;+440&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;防御&lt;/td&gt;&#xA;          &lt;td&gt;+69&lt;/td&gt;&#xA;          &lt;td&gt;+258&lt;/td&gt;&#xA;          &lt;td&gt;&lt;em&gt;&lt;strong&gt;+1381&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;+187&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;会心率&lt;/td&gt;&#xA;          &lt;td&gt;21%&lt;/td&gt;&#xA;          &lt;td&gt;20%&lt;/td&gt;&#xA;          &lt;td&gt;5%&lt;/td&gt;&#xA;          &lt;td&gt;17%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;会心ダメ&lt;/td&gt;&#xA;          &lt;td&gt;&lt;em&gt;&lt;strong&gt;198%&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;88%&lt;/td&gt;&#xA;          &lt;td&gt;69%&lt;/td&gt;&#xA;          &lt;td&gt;78%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;元素バフ&lt;/td&gt;&#xA;          &lt;td&gt;90%&lt;/td&gt;&#xA;          &lt;td&gt;99%&lt;/td&gt;&#xA;          &lt;td&gt;15%&lt;/td&gt;&#xA;          &lt;td&gt;15%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;チャージ&lt;/td&gt;&#xA;          &lt;td&gt;144%&lt;/td&gt;&#xA;          &lt;td&gt;&lt;em&gt;&lt;strong&gt;231%&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;157%&lt;/td&gt;&#xA;          &lt;td&gt;135%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;クレーはサブで会心率上げると強くなる感じがする。雷電はチャージ効率をもう少し上げたい。時と冠のメインが攻撃%なので。&lt;/p&gt;&#xA;&lt;p&gt;実際の強さは、動画で見てもらったほうがわかりやすい。現状、こんな感じです。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/VdVBoFiC0JI&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;クレーは重撃で3万ほどのダメージ、雷電の爆発で6万ほどを見たことがあります。&lt;/p&gt;&#xA;&lt;p&gt;週ボス(全)も安定してクリアできるけど、螺旋11層からは時間不足で星が取れず、12層に進めません。螺旋は手持ちキャラが増えていく過程で達成できたらと思っていますが、後半PTにつける聖遺物レベルを全員+20にできたら、再チャレンジする予定。&lt;/p&gt;&#xA;&lt;p&gt;しかし、現在の手持ちでは厳しいでしょう。レベルや天賦は上げるつもりないですし。&lt;/p&gt;&#xA;&lt;h3 id=&#34;課金するならどのキャラか&#34;&gt;課金するならどのキャラか&lt;/h3&gt;&#xA;&lt;p&gt;その他の話題として、課金について考えてみます。&lt;/p&gt;&#xA;&lt;p&gt;原神は面白いし、課金してもいいんじゃないって思えるゲームですね。&lt;/p&gt;&#xA;&lt;p&gt;仮に私が課金するとしたら、どのキャラに課金(武器、凸)するのか、考えてみました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;雷電&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;鍾離&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;現在はこの二人ですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた101</title>
      <link>https://syui.github.io/blog/post/2021/10/14/illust/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/14/illust/</guid>
      <description>&lt;p&gt;100枚目から個別記事にするのやめようか迷ったんだけど、とりあえず101枚目のイラストです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_101.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;なぜ個別記事にするのか&#34;&gt;なぜ個別記事にするのか&lt;/h3&gt;&#xA;&lt;p&gt;私があえて個別記事にする理由は、私自身がそういうのを読むのが好きだからです。&lt;/p&gt;&#xA;&lt;p&gt;私は、うまい人が書いた絵を見るのも好きなんですが、自分と同じような初心者の人が書いた絵を見るのも好きです。&lt;/p&gt;&#xA;&lt;p&gt;そういう人がブログに上げているのを見るのが好きで、よく読ませてもらっています。&lt;/p&gt;&#xA;&lt;p&gt;実は、絵があまり得意ではない人(本人がそう言っている)の絵が載せられているブログなんかも、私はよく見に行くのです。&lt;/p&gt;&#xA;&lt;p&gt;そして、そういうのを楽しませてもらっているため、自分もイラストを書いたら記事にしています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;初心者の絵を見ること&#34;&gt;初心者の絵を見ること&lt;/h3&gt;&#xA;&lt;p&gt;初心者が書いた、一般的にはヘタ、あるいは、うまくないと言われている絵を見ることについて、このような意見を持つ人がいるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;「そんな初心者が書いた下手くそな絵ばっかり見てるからダメなんだ。もっと、上手い人の絵を見なさい」と。&lt;/p&gt;&#xA;&lt;p&gt;では、うまい絵を見れば、うまくなるのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、うまくなりません。&lt;/p&gt;&#xA;&lt;p&gt;うまい絵をたくさん見ている人の多くは、実は絵がかけなかったりします。&lt;/p&gt;&#xA;&lt;p&gt;私も、ドラゴンボールのような、うまい絵をたくさん見てきているはずなのに、あまりうまくありませんよね。&lt;/p&gt;&#xA;&lt;p&gt;ですから、うまい絵を見れば、うまい絵がかけるようになるとは限らない。&lt;/p&gt;&#xA;&lt;p&gt;世間一般には、一流に触れれば云々と言われますが、そんなことは知ったことではありません。&lt;/p&gt;&#xA;&lt;p&gt;私は、色んな人が描いた様々な絵を見るのが好きなだけで、一般的にうまいかどうかは気にしません。一般的にヘタと言われる絵を見るのも、うまい絵を見るのと同じくらい好きなのです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、沢山の人が絵を書き、ブログやtwitterに載せてくれるとうれしいねー。&lt;/p&gt;&#xA;&lt;p&gt;そんな風に思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ステッカーを貼ってみた</title>
      <link>https://syui.github.io/blog/post/2021/10/13/icon/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/13/icon/</guid>
      <description>&lt;p&gt;ノートパソコンにステッカーを貼ってる人を見て、かっこええなーと思ったので、自分も貼ってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;100円ショップでシール買ってきて印刷するとできます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/macbook_sticker_arch_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回使ったのは、L判の光沢紙シールで、印刷設定もそんな感じで。&lt;/p&gt;&#xA;&lt;p&gt;でも透明シールのほうがよかったかも。&lt;/p&gt;&#xA;&lt;p&gt;パソコンには、arch linuxベースのai linuxがインストールされています(嘘です&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、天賦レベル10</title>
      <link>https://syui.github.io/blog/post/2021/10/06/genshin/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/06/genshin/</guid>
      <description>&lt;p&gt;月逐い祭をクリアしました。月逐い祭は、めちゃくちゃ楽しめたと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211006_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最初の天賦MAXは雷電の元素爆発でした。天賦レベルMAXは雷電からやっていく予定。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20211006_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;雷電を優先する理由&#34;&gt;雷電を優先する理由&lt;/h3&gt;&#xA;&lt;p&gt;雷電は、私が初めて本気で課金しようか真剣に考えたキャラでもあります。&lt;/p&gt;&#xA;&lt;p&gt;というのも、雷電は今後も活躍し続ける可能性が高く、ここに注ぎ込むのも悪くないと考えたからです。&lt;/p&gt;&#xA;&lt;p&gt;雷電が強い理由は、PTの元素爆発を連続して回せるところにあります。&lt;/p&gt;&#xA;&lt;p&gt;したがって、雷電の天賦は全強化しても全く無駄がありません。&lt;/p&gt;&#xA;&lt;p&gt;雷電は、元素スキルを放つ、通常攻撃して元素エネルギーを貯める、元素爆発する、という一連の流れが必要になります。&lt;/p&gt;&#xA;&lt;p&gt;PTの元素爆発が自身の爆発を強化するという特性を持つため、PTの元素爆発も無駄になりません。&lt;/p&gt;&#xA;&lt;p&gt;元素爆発自体が、そのキャラ特有の一番強力なものですから、使っておいて損はありません。&lt;/p&gt;&#xA;&lt;p&gt;また、爆発はキャラごとに様々な特性を備えるため、適応力があります。雷電を残してPTを変えるだけで、どのような状況にも対処できる可能性が高い。それに、爆発は回避(防御)にも使えます。&lt;/p&gt;&#xA;&lt;p&gt;つまり、爆発が唯一無二の効力を持ち、それを回せる雷電もまた、唯一無二の性能を持ちます。&lt;/p&gt;&#xA;&lt;p&gt;すべてにおいて隙がなく、雷電を一言で言い表すなら、無駄がないキャラです。&lt;/p&gt;&#xA;&lt;p&gt;雷電は、私が全キャラ中で一番凸したいキャラでした。どうせならモチーフ武器も完凸するのがいいとすら思いました。ずっと使えると思うキャラなので。&lt;/p&gt;&#xA;&lt;p&gt;ですが、なんとか踏みとどまりました。このときが一番、危なかった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;無課金でも楽しめる&#34;&gt;無課金でも楽しめる&lt;/h3&gt;&#xA;&lt;p&gt;原神は無課金でも楽しめるゲームです。&lt;/p&gt;&#xA;&lt;p&gt;無課金じゃ楽しめないという人もいるみたいですが、そういう人は課金したほうがいい。すぐに強くなって無双しなきゃ楽しめない、最強じゃなきゃ楽しめないと考える人は、原神は課金すればするほど強くなる、有利になるゲームですから、当然、無課金で楽しむことはできません。&lt;/p&gt;&#xA;&lt;p&gt;なので、そういった価値観を持つ人は、課金したほうがいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;私自身、キャラを強くしたいという願望はありますが、しかし、ゲームを楽しむという基準においては、私には課金は必要ないと思いました。&lt;/p&gt;&#xA;&lt;p&gt;むしろ、課金で強くしたらすぐに飽きちゃう可能性すらあるので、課金するのやめました。&lt;/p&gt;&#xA;&lt;p&gt;一度、課金してしまうと、リミッターが外れちゃうと思うので、やはり、最初に決めた無課金でやってくほうが自分には合ってると思う。無課金であることも、実は楽しんでる。&lt;/p&gt;&#xA;&lt;p&gt;でも、課金するなら、雷電を最強にしたかったなって思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後の方針&#34;&gt;今後の方針&lt;/h3&gt;&#xA;&lt;p&gt;現在、螺旋11-3で止まってて、おそらく、私の手持ちでは厳しいと思います。&lt;/p&gt;&#xA;&lt;p&gt;まあ、PT全員のレベル上げ、聖遺物を厳選し、武器を強化して、凍結パーティーを採用すればいけなくはないと思うんですが、そこは目指しません。&lt;/p&gt;&#xA;&lt;p&gt;計画的に強いキャラを引きつつ、強いキャラを育成しているうちに、自然とクリアできるようになればいいと思ってて、現在は、その方向性で考えています。&lt;/p&gt;&#xA;&lt;p&gt;無課金では、強いキャラを狙う、育てるというのは、とても大変なことです。なので、当初計画していた方向性がブレたり、間違ったりすると、さらに大変なことになりそうだと思うので。&lt;/p&gt;&#xA;&lt;p&gt;現在、私が優先して狙うキャラは、鍾離とウェンティです。&lt;/p&gt;&#xA;&lt;p&gt;理由は2つあって、一つは元素、もう一つは神属性です。&lt;/p&gt;&#xA;&lt;p&gt;現在、岩と風は足りておらず、育成していないので、必要な元素です。また、二人のシールドと拡散という役割からも必要なキャラです。さらに、神属性を持っているため、同元素中でそれを超えるキャラはなかなか出てこないという予測を立てており、その予測に基づき、優先して狙っていきたいキャラです。&lt;/p&gt;&#xA;&lt;p&gt;他の元素、例えば、行秋が水元素使いとして強力ですが、後に実装される水の神は、行秋の性能を超えてくる可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;ここで、行秋を強化してしまうと、リソース(モラ、樹脂、素材)がもったいないことになってしまう。無課金でやる以上は、リソースの無駄は避けるべきであり、リソースを無駄にしてしまうと、攻略死に直結する可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、バーバラが好きだと言って、そこにリソースをつぎ込むと、攻略がやばくなる可能性が出てきてしまう。課金ユーザーの場合は、この問題は発生しません。&lt;/p&gt;&#xA;&lt;p&gt;リソース自体が大きくなるので、バーバラを完全強化してもお釣りが来ます。&lt;/p&gt;&#xA;&lt;p&gt;無課金だとリソースが限られており、少ないため、その使い所によっては、攻略が厳しいことになりうると考えています。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、例に出した行秋は、たとえそれ以上のキャラが実装されたとしても、強化して損はないキャラだと思います。また、プレイ時期によってもリソースは異なるので、この考えが絶対的に正しいとは思いません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私の状況だと、リソースは無駄にしないほうがいい、攻略できなくなるから、と考えています。&lt;/p&gt;&#xA;&lt;p&gt;さて、次に私が狙っていきたいキャラは、神里or甘雨です。&lt;/p&gt;&#xA;&lt;p&gt;氷が不足してること、また、神が実装されるとしても、氷の国(スネージナヤ)は7国のうちの最後なので、時間的に余裕があり、原石を貯められる可能性が高いからです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;風 -&amp;gt; 岩 -&amp;gt; 雷 -&amp;gt; 草 -&amp;gt; 水 -&amp;gt; 炎 -&amp;gt; 氷&lt;/code&gt;の順で今後4年間で7国すべてを実装予定らしい。なお、風、岩、雷はすでに実装済み。&lt;/p&gt;&#xA;&lt;p&gt;ですから、鍾離、ウェンティの次に優先すべきなのは、個人的には、氷元素の神里or甘雨ということになります。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、遠距離で攻撃できるキャラは育てていないので、甘雨を優先すべきとは思いますが、しかし、神里のほうが使いやすそうでいいなとは思っていて、悩ましい。&lt;/p&gt;&#xA;&lt;p&gt;次は、カズハを狙いたいと思ってるのですが、ウェンティを持った場合はスルーしてもいいかもしれません。ですが、風の神のウェンティが実装されている上でのカズハの評価ですから、引いておいて損はないと思っていて、余裕があれば狙っていきたい。&lt;/p&gt;&#xA;&lt;p&gt;最後に、星4キャラである行秋とベネットです。これは狙うというより、ガチャのすり抜けで来る可能性があるので、他の星5キャラのガチャを回すことを優先したいと思っています。現在、行秋がピックアップされていますが、個人的にはスルーしています。同時にピックアップされている星5キャラには、あまり魅力を感じないので、原石は貯めてる。&lt;/p&gt;&#xA;&lt;p&gt;なお、無課金なので1体引きで撤退という方針です。仮に凸を狙うとしたら、7神を引いたあとになります。その7神のうちどれかで狙うことになると思います。また、武器ガチャはやらないことに決めました(変更がなければ)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>お気に入りのイラスト</title>
      <link>https://syui.github.io/blog/post/2021/10/05/illust/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/05/illust/</guid>
      <description>&lt;p&gt;この前、100枚目のイラストを描いたんですけど、今回は、その中で個人的にお気に入りのイラストを挙げていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1位&#34;&gt;1位&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.ai/img/yui_89.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これが一番気に入ってるかも。この絵は、部屋に飾るために、いつもより丁寧に描いたやつです。&lt;/p&gt;&#xA;&lt;p&gt;あるyoutuberさんの動画を見ていて、部屋に絵が飾ってあったんですよ。&lt;/p&gt;&#xA;&lt;p&gt;誰かからもらった絵だと思うんですが、右下にサインがあって、それ自体は読めなかったんですが、その時、絵が飾ってある部屋って素敵だなあと思ったので、自分で描いて飾ってみたときのやつ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2位&#34;&gt;2位&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.ai/img/yui_100.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;100枚目のイラストということもあり、ちょっとだけ丁寧に書いたやつ。&lt;/p&gt;&#xA;&lt;p&gt;テーマは「願い」ですが、どうでもいいですね、そんなこと。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3位&#34;&gt;3位&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.ai/img/yui_88.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;躍動感があって、うまく描けたと思ったやつ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4位&#34;&gt;4位&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.ai/img/yui_85.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;背景とかが気分いい絵です。この視点は難しかったと思うんだけど、なぜか一発でうまい具合に描けた記憶。&lt;/p&gt;&#xA;&lt;p&gt;他のお気に入りは、&lt;a href=&#34;https://syui.github.io/img&#34;&gt;/img/&lt;/a&gt;に載せてますので、よかったら見ていってください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、メガミュウツーY</title>
      <link>https://syui.github.io/blog/post/2021/10/04/pogo/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/04/pogo/</guid>
      <description>&lt;p&gt;現在、ポケマスでは、メガミュウツーYが実質配布されています。10/16までらしい。めちゃくちゃ強いので、もらっといたほうがいいかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211003_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは、個人的に好きなポケモンが出てくる。メガリザードンXとかメガミュウツーYとか。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、メガリザードンX(リザードン)が一番好きなポケモンで、あとは、ミミッキュ、ミュウ、メガミュウツーY、アルセウス、あたりが好き。&lt;/p&gt;&#xA;&lt;p&gt;現在のバディーズ一覧、レベル上げしてる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20211003_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、タスク消化</title>
      <link>https://syui.github.io/blog/post/2021/10/03/pogo/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/03/pogo/</guid>
      <description>&lt;p&gt;最近、あまりプレイしてなかったのでイベントタスクが山積みになってて、それを消化しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_2021002_0003.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回、映画ココとメロエッタ、ロケット団サカキ(シャドウ・ホウオウ)、カードコラボ(メルタン)のタスクを全部こなしました。ちょっとは進んでたものも含みます。3時間くらい外をうろちょろしてたら終わりました。クリア条件などが重なってるものも多く、割と効率良く進められたと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_2021002_0004.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_2021002_0005.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;クリア条件が重なるというのは、例えば、ロケット団下っ端と戦うというタスクがあったとして、それが複数のイベントタスクのクリア条件に指定されてる場合、複数のイベントタスクを進めることができました。ということで、イベントが来てすぐにこなすのもいいけど、定期にこなすのも悪くないって思いました。まあ、あまり山積みにしちゃうと、消化できる気がしなくなり、やる気もなくなるので、貯めるのもほどほどがいいと思いますが。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、サカキは9/2までだったみたいで、現れませんでした。これ放置してて見逃したみたい。でもサカキレーダー取れたので次が楽。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_2021002_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた100</title>
      <link>https://syui.github.io/blog/post/2021/10/02/illust/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/02/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_100.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた99</title>
      <link>https://syui.github.io/blog/post/2021/10/01/illust/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/10/01/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_99.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた98</title>
      <link>https://syui.github.io/blog/post/2021/09/30/illust/</link>
      <pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/30/illust/</guid>
      <description>&lt;p&gt;そういやもうすぐ100枚目。98枚も絵を描くとは思ってなかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_98.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ランニングに必要なもの</title>
      <link>https://syui.github.io/blog/post/2021/09/29/running/</link>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/29/running/</guid>
      <description>&lt;p&gt;ちょっと前にランニング関連の記事がバーっと出てて、自分もいくつか読ませてもらって面白いなーと思ったので、なにか書こうと思ったんだけど、書くことが特になにもなく、つまり、アドバイスできることは何もないので、とりあえず、自分の考えでも書いてみようかなという記事になっています。役に立つとか、そういうのではないと思う。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私はちょっとだけですが、ランニングやります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ランニングはなんのため&#34;&gt;ランニングはなんのため&lt;/h3&gt;&#xA;&lt;p&gt;メリットばかりが叫ばれるランニングですが、特に意味はありません。&lt;/p&gt;&#xA;&lt;p&gt;なので、やりたくない人がやるものではないし、例えば、体を鍛えたいとか、そういった理由でやるものでもないというのが私の考えです。&lt;/p&gt;&#xA;&lt;p&gt;というのも体を鍛えるなら他にもっと効率的な方法がいくらでもあります。プロティンだって飲みまくればよいのでは。&lt;/p&gt;&#xA;&lt;p&gt;つまり、私がなぜやっているのかというと、体を鍛えるためでもなければ、痩せるためでもありません。特に理由もなく、なぜはじめたのかも忘れました。&lt;/p&gt;&#xA;&lt;p&gt;そんな私でもちょっと思うところはあって、世間的には、ランニングの少しばかりのメリットということになるのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;数ヶ月前から毎日走ってる人をお見かけしています。&lt;/p&gt;&#xA;&lt;p&gt;これは、とても珍しいこと。なぜなら、毎日走ることは決して楽なことではないから。雨の日も、風の日もというやつで、大変な日もあることでしょう。体調だって悪いこともあるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;そんな中、それらを乗り越えて、毎日走ることで得られたものは、おそらく、少しの高揚感と、そして、心の強さだけだったのではないかと。&lt;/p&gt;&#xA;&lt;p&gt;心を鍛えるつもりではじめたわけではないけど、結果として、精神が鍛えられるのではないかと思っています。&lt;/p&gt;&#xA;&lt;p&gt;また、ランニング、つらいこともあるけど、楽しいことも少しあります。私の場合、走ってると気分がいい。&lt;/p&gt;&#xA;&lt;p&gt;ただ、それだけです。&lt;/p&gt;&#xA;&lt;p&gt;多くの人は、これを聞いて、無駄だな、意味ないな、コスパ悪いな、とそう思うでしょう。それは、たしかにそのとおり。&lt;/p&gt;&#xA;&lt;p&gt;ですから、個人的には、そこまでおすすめしない、というのが本音です。&lt;/p&gt;&#xA;&lt;p&gt;続けるのも大変でしょうし、続けられる人は圧倒的に数が少ないと思います。それなら他のことをやったほうがいいというのが持論です。&lt;/p&gt;&#xA;&lt;p&gt;続いて、ランニングやってる人向けになにか書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最高の靴&#34;&gt;最高の靴&lt;/h3&gt;&#xA;&lt;p&gt;結論から申し上げると、ランニングに必要なものはなにもありません。もちろん、常識的な範囲でという話になりますが、例えば高い靴は、ランニングをする上では必要ありません。&lt;/p&gt;&#xA;&lt;p&gt;私も高い靴(1万5000円以上)と安い靴(3000円くらい)で走っていたことがありました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、特に違いは何も感じませんでした。&lt;/p&gt;&#xA;&lt;p&gt;高い靴のほうが走りやすくなったとか、長持ちしたとか、そういった実感は全くなく、あったとしても誤差の範囲だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;では、最高の靴とはなんでしょう。&lt;/p&gt;&#xA;&lt;p&gt;それは「履きなれた靴」です。&lt;/p&gt;&#xA;&lt;p&gt;高いか安いかに関わらず、その人が履きなれたものであれば、それは、その人にとって最高のものです。&lt;/p&gt;&#xA;&lt;p&gt;まあ、ランニングしてると、定期的に、寿命でそれが失われていくので、そのことに関しては、ちょっとだけ寂しい気分になるかな&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;靴の価値も他人に決めさせてはいけません。自分で決めましょう。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、高い靴を買ってモチベを上げ、形から入っていく人もいて、それはそれでいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、靴の値段ではなく、履き心地で決めたほうがいいと思います。例えば、高かったけど合わない靴は、もったいないけど、売るか捨てるかしたほうがいい。あなたの足と靴、どちらが大切かという話でもあります。本当に大切なものを見失わないように。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、自分はいつもナイキの靴を使ってます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;42kmを走った時の話&#34;&gt;42kmを走った時の話&lt;/h3&gt;&#xA;&lt;p&gt;実はこのまえ、はじめて42kmを走りました。その時の話を少しだけします。42kmに挑戦するのは、これがはじめてだったこともあり、走っている最中には色々考えて、その結果、走りきることができたと思います。&lt;/p&gt;&#xA;&lt;p&gt;事前に21kmを走っていたので感覚はつかめていました。一言でいうと、21kmまでは大丈夫、それ+7kmくらいは走れそうだけど、それ以降は未知数だと考えていました。&lt;/p&gt;&#xA;&lt;p&gt;また、事前に21kmを走ったコースの中で特に走りやすそうな道を知っていましたから、そこを周回することで距離を稼ごうと戦略を立てました。&lt;/p&gt;&#xA;&lt;p&gt;いよいよ21kmを超え、未知の領域に突入します。走りやすそうな道の周回に入り、そこは特に歩道が大きく、だだっ広い道で、車も走らないので、「精神」が消耗することもありません。&lt;/p&gt;&#xA;&lt;p&gt;実はランニングにおいて、人や車、その他の物事に注意力を持っていかれると、余裕がないときは、特に辛かったりすることがあります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、そういった事はできる限り避けたほうがいい。&lt;/p&gt;&#xA;&lt;p&gt;また、知らない道も精神の消耗が激しく、私の場合は、事前に21kmを走っていたコースということもあって、精神的な消耗を抑えることができたと思います。&lt;/p&gt;&#xA;&lt;p&gt;で、良さそうなコースを周回しながら、このまま順調なら、ここを周回することで42kmを走りきりたいと思っていたのですが、予想以上につらくなってきました。&lt;/p&gt;&#xA;&lt;p&gt;ただただ静かで真っ暗で真っ直ぐな歩道をずーっと走っていると、それが原因か、あるいは体力的に辛くなってきただけなのか知りませんけど、これは、やばいと思い始めました。&lt;/p&gt;&#xA;&lt;p&gt;42kmまでまだ10km以上もあり、このコースをあと4,5回以上も回るのは無理だと、そう感じ始めていました。&lt;/p&gt;&#xA;&lt;p&gt;そこで私は、そのコースの周回を抜け、元来た道に戻ります。なぜなら、ラストの7kmはいつものコースを走ろうと計画したからです。&lt;/p&gt;&#xA;&lt;p&gt;大体、4,5kmでいつものコースに入ることができます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、正直、体力は限界でした。にも関わらず、わずかながら勝算を見いだせたのは「毎日走っているコースにたどり着けたなら、どれだけつらくても最後まで走りきれる」と思ったからです。&lt;/p&gt;&#xA;&lt;p&gt;ここまで来ると、もはや、体力勝負なんかではありません。精神だけが物を言います。&lt;/p&gt;&#xA;&lt;p&gt;結果、死にそうになりながらも、なんとか、いつものコースに入ることができました。&lt;/p&gt;&#xA;&lt;p&gt;そこで、足が棒になるような感覚に襲われたりしたんですが、いつものコースの7kmを走り終え、無事、42km走り切ることができました。(死ぬかと思った&lt;/p&gt;&#xA;&lt;p&gt;このときのこと、特にきつかったので、よく覚えています。&lt;/p&gt;&#xA;&lt;p&gt;この話がなんの役に立つかわかりませんが、一応、ランニング中にあった思い出話を書きました。&lt;/p&gt;&#xA;&lt;p&gt;ランニングは、体力というより、精神力の部分が大きい。&lt;/p&gt;&#xA;&lt;p&gt;なので、皆様は、私より遥かに簡単に42kmくらいを走れるんじゃないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私も1回目はギリギリでしたが、2回目はどうでしょう。もしかしたら人並みくらいになっている可能性も。(甘すぎる希望的観測&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGO、ガラル地方</title>
      <link>https://syui.github.io/blog/post/2021/09/28/pokemas/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/28/pokemas/</guid>
      <description>&lt;p&gt;ポケモン界の最新であるガラル地方のポケモン達が追加され始めました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210929_0015.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;そういえば、ポケモンGOは5周年です。おめでとう！&lt;/p&gt;&#xA;&lt;p&gt;自分は、このゲームが長く続きそうと思ったので、続けてきましたが、今や本家(原作)を超えそうな勢いで成長しているように見えます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210929_0016.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;理由はいくつかあって、このゲームが常時ネット接続が必要なネットゲームだからです。&lt;/p&gt;&#xA;&lt;p&gt;従来のポケモンでは、チートツールでポケモンを作ったり、あるいは個体値を操作したりといったことが比較的簡単に実行可能でした。しかし、ポケモンGOでは、そういったことが難しくなりました。&lt;/p&gt;&#xA;&lt;p&gt;また、ポケモンGOでは従来のゲームよりポケモンを捕まえるのが難しくなりました。&lt;/p&gt;&#xA;&lt;p&gt;従来のゲームは家の中でプレイしていればよかったのですが、ポケモンGOでは、外に出てポケモンを探すところからはじめなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;その点で、ポケモンGOで捕まえたポケモンの価値のほうが高くなりました。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、通常はそういう事を考えてゲームをプレイするわけではありませんが、しかし、ゲームというものも、自然と価値が高い方に人は流れるのではないだろうかと私は思います。したがって、このこともポケモンGOのユーザー数が増え続けている一つの要因なのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOが面白いかというと、そうではありません。つまり、通常の感覚では面白くも楽しくもないと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、不思議と満足感は常にある、そういうゲームです。&lt;/p&gt;&#xA;&lt;p&gt;このゲームは、面白いだけ、楽しいだけ、瞬間的な高揚感が得られるだけ、そういったゲームとは一線を画してると思います。つまり、そういうところを目指しているわけではないと思います。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOは、現実にリンクした形でポケモンを捕まえたり、育てたり、そういうところが、他のゲームとは少し違うところであり、それが満足感につながっている部分だと私は思います。&lt;/p&gt;&#xA;&lt;p&gt;ポケモントレーナーの日常が、常に面白くて楽しくて興奮するものだと思いません。ですが、それでいいのだと、私は思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、レッド</title>
      <link>https://syui.github.io/blog/post/2021/09/27/pokemas/</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/27/pokemas/</guid>
      <description>&lt;p&gt;&amp;hellip; &amp;hellip; &amp;hellip; !!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210926_0010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;レッド、引きました。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスも無課金で続けていますが、前回は貯めてたダイヤ全部使った爆死だったこともあり、今回は早めに出そうだなあということで、単発で回してました。すると、40/400くらいで出ました、よかった。&lt;/p&gt;&#xA;&lt;p&gt;アメ使って凸しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210926_0014.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210926_0015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、深境螺旋11に到達</title>
      <link>https://syui.github.io/blog/post/2021/09/26/genshin/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/26/genshin/</guid>
      <description>&lt;p&gt;深境螺旋11に到達しました。&lt;/p&gt;&#xA;&lt;div style=&#34;position:relative;height:0;padding-bottom:56.25%&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/xD24AtAZxUc?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&amp;amp;ecver=2&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; style=&#34;position:absolute;width:100%;height:100%;left:0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;p&gt;PTは以下の通り。育成は進んでいませんし、進む予定もありません。(主にモラとレベル本不足で&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PT1 : 雷電 LV90(聖遺物+20), ノエル LV60(+15), モナ LV50(+0), 香菱 LV50(+0)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PT2 : クレー LV90(聖遺物+20), バーバラ LV60(+15),  ガイヤ LV40(+0), スクロース LV40(+0)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;雷電強すぎる&#34;&gt;雷電、強すぎる&lt;/h3&gt;&#xA;&lt;p&gt;雷電は、現状、無凸、聖遺物厳選なし、武器も無凸ですが、かなりの強さを発揮しているように見えます。&lt;/p&gt;&#xA;&lt;p&gt;逆に、クレーのPTは敵を倒すのに時間がかかりすぎてる。あるいは死にすぎる。&lt;/p&gt;&#xA;&lt;p&gt;よって、現在の手持ちとレベルでは螺旋11の攻略は難しいと判断し、ここで終了しています。&lt;/p&gt;&#xA;&lt;p&gt;今の所、無課金を継続しつつ、以下のPTを目指したいと考えています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PT1 : クレー, 雷電, &lt;code&gt;鍾離&lt;/code&gt;, &lt;code&gt;ウェンティ&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PT2 : &lt;code&gt;甘雨(or神里)&lt;/code&gt;, ベネット, 行秋, &lt;code&gt;カズハ&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;甘雨と神里はどちらも氷枠なので、どちらか一人なんですが、遠距離の甘雨がいいかもしれません。しかし、個人的には神里のほうが使いやすそうと思ってて、武器とか時期の状況によるかも。&lt;/p&gt;&#xA;&lt;p&gt;ベネットと行秋は星4なので、まだ持っていませんが、すり抜けで狙いつつ、残る4キャラである&lt;code&gt;鍾離&lt;/code&gt;, &lt;code&gt;ウェンティ&lt;/code&gt;,&lt;code&gt;甘雨(or神里)&lt;/code&gt;, &lt;code&gt;カズハ&lt;/code&gt;をガチャで回していくという感じになると思います。&lt;/p&gt;&#xA;&lt;p&gt;で、4キャラを狙うとして、一人あたり原石7,000(期待値)以上が必要になります。つまり、合計で28,000ですね。&lt;/p&gt;&#xA;&lt;p&gt;それくらいを貯めながら新実装が来たときに、上記の4キャラに代替可能かどうかを判断しつつ、代替可能なら新キャラのほうを狙っていきたい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ios15とiphone se1</title>
      <link>https://syui.github.io/blog/post/2021/09/22/ios/</link>
      <pubDate>Wed, 22 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/22/ios/</guid>
      <description>&lt;p&gt;ios15 : &lt;a href=&#34;https://www.apple.com/jp/ios/ios-15/&#34;&gt;https://www.apple.com/jp/ios/ios-15/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;iphone se1がios15に対応するということでupgradeしてみました。&lt;/p&gt;&#xA;&lt;p&gt;この端末、思った以上に長生きするかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;というのも、appleがiosについて、古いverのsecurity patch(update)を継続していく方針を発表したからです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、来年にios16が来て、それがse1非対応だったとしても、ios15のままで問題は生じません。&lt;/p&gt;&#xA;&lt;p&gt;今回、iphone se1をios15にしてみましたが、動作に全く問題はありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;新しい機能にあまり興味がありませんし、個人的には、pokemongoが起動し、そこそこに動作するなら、新しい端末に乗り換える必要性を感じません。&lt;/p&gt;&#xA;&lt;p&gt;ということで、この端末は予想以上に長生きする可能性があると思いました。&lt;/p&gt;&#xA;&lt;p&gt;これはとてもいいことです。私が持っている端末は全部お気に入りなので。&lt;/p&gt;&#xA;&lt;p&gt;そういえば、自分が使ってる端末、意外と長生きする傾向にあるのでは、と思ったので、ちょっと整理してみることに。&lt;/p&gt;&#xA;&lt;h3 id=&#34;iphone-se1st-gen&#34;&gt;iphone se(1st gen)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;os : ios 15 (最新)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;cpu : A9&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;memory : 2G&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;iphone5の形や大きさが好きで、それを系譜しているiphone se1を使っています。iphone5sからハードを分解して内部をいじっているうち内部構造に詳しくなりました。seが故障しても修理できるので、このタイプの端末には安心感があります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/os_update_20210922_ios_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ipad-7th&#34;&gt;ipad 7th&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;os : ios 15 (最新)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;cpu : A10&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;memory : 3G&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;原神とかも普通にプレイできてる。ただ、自作フィギュアから3Dモデルを作ってみたいなあと思っており、&lt;code&gt;scaniverse&lt;/code&gt;というアプリに非対応なので、ipadは買い替え時かもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;nexus72013&#34;&gt;nexus7(2013)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;os : android 11 (最新)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;cpu : Krait 1.50GHz&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;memory : 2G&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;nexus7(2013)を調べてみるとmemoryが2Gもあったので驚いてます。それにしては動作がちょっと重くて、アプリもゲーム系は動かない気がしてるけど、そのへんはcpu, gpuなのかな。まあ、memory足りてないと落ちるようになるんだけど。&lt;/p&gt;&#xA;&lt;p&gt;この端末はrootを取り、公式imgを焼いてましたが、最新のandroidを入れるにあたって、非公式imgを使うようになりました。&lt;/p&gt;&#xA;&lt;p&gt;ipadを買ってからは、あまり用途がなくなっていた端末ですが、色々と遊べるので、たまに使ってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/os_update_20210922_android_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;macbook-airmid2013&#34;&gt;macbook air(mid2013)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;os : mac bigsur 11.6 (最新)&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた97</title>
      <link>https://syui.github.io/blog/post/2021/09/20/illust/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/20/illust/</guid>
      <description>&lt;p&gt;久しぶりに描いた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_97.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui.aiの歩き方</title>
      <link>https://syui.github.io/blog/post/2021/09/19/blog/</link>
      <pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/19/blog/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/&#34;&gt;syui.ai&lt;/a&gt;は、このサイト(ブログ)のタイトルです。&lt;/p&gt;&#xA;&lt;p&gt;このサイトには、いくつかの隠し機能があり、今回はそれらを使って、このサイトを便利に閲覧しちゃおうという内容です。&lt;/p&gt;&#xA;&lt;p&gt;といっても、ほとんどが遊び機能。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;環境 : &lt;code&gt;safari&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;動作するには、browserの&lt;code&gt;cookie&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;をenableに、&lt;code&gt;adblock&lt;/code&gt;などpluginをdisableにする必要があるかもしれません&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;j-kで移動&#34;&gt;j, kで移動&lt;/h3&gt;&#xA;&lt;p&gt;ブログ記事へのリンク間を&lt;code&gt;shift + j&lt;/code&gt;, &lt;code&gt;shift + k&lt;/code&gt;で移動できるようになっています。&lt;/p&gt;&#xA;&lt;p&gt;shiftを選択している理由は、このような設定はkeybindを奪うことにもなり、不便が生じるかもしれないので、あまり使われなさそうなshiftにしています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141757.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;terminalの呼び出し&#34;&gt;terminalの呼び出し&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;ctrl + enter&lt;/code&gt;でterminalを呼び出すことができます。主に&lt;code&gt;/&lt;/code&gt;と2階層目くらいまでは呼び出せるようなってることが多いかな。&lt;/p&gt;&#xA;&lt;p&gt;このterminalにより、サイト上の色々な機能にアクセスしやすくなってます。&lt;/p&gt;&#xA;&lt;p&gt;現在使える便利機能をいくつか紹介します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141637.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ただし、個別記事である&lt;code&gt;/blog/foo&lt;/code&gt;上ではterminalは呼び出せず、代わりに&lt;code&gt;/blog&lt;/code&gt;に移動するようになっています。&lt;code&gt;/blog&lt;/code&gt;からは従来通りterminalを呼び出すことができます。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;-コマンドで個別記事に飛ぶ&#34;&gt;/ コマンドで個別記事に飛ぶ&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/&lt;/code&gt;コマンドを使うと最新記事の中から個別記事に飛ぶことができます。飛びたい番号を入力します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141530.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;search-コマンドでタグを検索する&#34;&gt;search コマンドでタグを検索する&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ search -t hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;search -t $tag&lt;/code&gt;でタグを検索することができます。オプションなしだと通常検索です。補完機能があるので&lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt;でタグ補完できます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;login-コマンドで自分の名前を表示する&#34;&gt;login コマンドで自分の名前を表示する&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;login : test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;password : test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;適当な遊びコマンドですが、自分の&lt;code&gt;username&lt;/code&gt;と&lt;code&gt;ip address&lt;/code&gt;をこのサイト上に表示することができます。ちなみに、個人情報がこのサイトの管理人に送信されることはありません。あと、&lt;code&gt;password&lt;/code&gt;は何でもいいです。&lt;/p&gt;&#xA;&lt;p&gt;また、遊びの一環として&lt;code&gt;root login&lt;/code&gt;に挑戦してみるのも面白いかもしれません。ちゃんと&lt;code&gt;password&lt;/code&gt;が設定されてますので、ぜひ、突破してみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141510.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;&#xA;&lt;p&gt;その他にも面白おかしいコマンドがいくつかあります。是非、遊んでみてください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンカード</title>
      <link>https://syui.github.io/blog/post/2021/09/18/pogo/</link>
      <pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/18/pogo/</guid>
      <description>&lt;p&gt;この前、スシローとポケモンのコラボがあり、ポケモンカードを手に入れました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210918_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ポケ盛り&lt;/code&gt;のフィギュアとかも良さそう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.yoshinoya.com/special/pokemori202108/&#34;&gt;https://www.yoshinoya.com/special/pokemori202108/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、2周年ガチャで爆死</title>
      <link>https://syui.github.io/blog/post/2021/09/17/pokemas/</link>
      <pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/17/pokemas/</guid>
      <description>&lt;p&gt;ポケマス、2周年ガチャで爆死しました。1周年でも爆死してなかった？ということで、今回はそのことについて書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスの2周年、リーリエ、エヌ、ダイゴのどれを回そうという話を以前に書きましたよね。そこで私は「ダイゴを回す」と言いましたが&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;すみません、あれは嘘です！嘘でした。&lt;/p&gt;&#xA;&lt;p&gt;実は、ダイゴを回す前にエヌを10連で回したんですよ。&lt;/p&gt;&#xA;&lt;p&gt;こんだけダイヤがあればどちらも手に入れられると思うから、どっちからやろうが同じだろうと高をくくっていたのです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、結果、出ませんでした！&lt;/p&gt;&#xA;&lt;p&gt;エヌは絶対に一体は確保しておきたいバディーズなので、その後も回し続け、それでも出なかった。そして、気づけば天井です。しかもダイヤは空っぽ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210917_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;おまけにレッド(マジコスではない)が実装されたので、無課金で得られるダイヤをレッドにつぎ込むことに。&lt;/p&gt;&#xA;&lt;p&gt;レッドまで実装されるとは予想外です。&lt;/p&gt;&#xA;&lt;p&gt;完全にダイヤの使い所をミスりました。おそらく、フーパーとムゲンダイナあたりをスルーして貯めておくことができなかったのが敗因だったと思われます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210917_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在の進捗ですが、チャンピオンは7500でクリアすることもあれば、しないこともありますが、一度クリアすると、なぜかハードルが下がり(難易度ではなく心理的)、簡単にクリアできるようになりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210917_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、レジェンドバトルとダイヤもらえるやつはこんな感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210917_0004.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210917_0005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210917_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;引くべきバディーズのランキング、更新しときます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;レッド&amp;amp;リザードン&lt;/code&gt;, &lt;code&gt;エヌ&amp;amp;レシラム&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;レッド&amp;amp;カビゴン&lt;/code&gt;, &lt;code&gt;グリーン&amp;amp;プテラ&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;リーフ&amp;amp;フシギバナ&lt;/code&gt;, &lt;code&gt;グリーン&amp;amp;カメックス&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;リーリエ&amp;amp;ルナアーラ&lt;/code&gt;, &lt;code&gt;ダイゴ＆レックウザ&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;特におすすめなのは以下の2キャラかな。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;エヌ&amp;amp;レシラム&lt;/code&gt;, &lt;code&gt;レッド&amp;amp;カビゴン&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、冒険者ランク50</title>
      <link>https://syui.github.io/blog/post/2021/09/15/genshin/</link>
      <pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/15/genshin/</guid>
      <description>&lt;p&gt;冒険者ランク50になりました。世界ランク7です。&lt;/p&gt;&#xA;&lt;p&gt;モラ不足で、レベル、武器、天賦、全部モラが必要なので、4キャラ分もモラを集めるの無理では。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210915_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、失敗から学ぶ</title>
      <link>https://syui.github.io/blog/post/2021/09/14/genshin/</link>
      <pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/14/genshin/</guid>
      <description>&lt;p&gt;現在、冒険者ランク49です。50になったときに開放されるレベルアップ素材、突破素材も無事集められました。&lt;/p&gt;&#xA;&lt;p&gt;これも雷電を引いたおかげかな。雷電いなかったら攻略止まってたと思う。ということで、今回は、雷電の評価と履歴から攻略に必要な情報をまとめていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;まずはプレイ履歴、つまり、「失敗から学ぼう」という初心者向けの記事になります。原神を始めたばかりの人は参考にしてみてください。&lt;/p&gt;&#xA;&lt;p&gt;以下、私の大体の原神歴です。今年の6月頃からはじめました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;クレーというキャラがいるらしく、クレー可愛いなと思って原神をはじめる&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;原石1,000を使いクレーを引く&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;限定配布の武器、&lt;code&gt;ドドコの物語&lt;/code&gt;をゲットする&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;素材集めとかは冒険者ランクが上がってからやればいいやと、ストーリーとデイリーのみやってた(クレーのみ育成し、聖遺物も適当にあるのをつける&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;稲妻が解禁された時点で最新のストーリーにおいつく(クレーだけが頼りなので敵の討伐がつらくなってくる&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;稲妻の物語最終章が来る(ここで雷電将軍を原石7,000を使って引いた&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;武器ガチャを回してハズレである&lt;code&gt;無工の剣&lt;/code&gt;を引く(星4武器の&lt;code&gt;祭礼の剣&lt;/code&gt;, &lt;code&gt;西風長槍&lt;/code&gt;, &lt;code&gt;西風猟弓&lt;/code&gt;, &lt;code&gt;流浪楽章&lt;/code&gt;などを手に入れる&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;冒険者ランク45になり素材集めを開始する(クレー、雷電、バーバラ、ノエルを育成する&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;ここでようやくボスや遺跡を一人で回れるようになった&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;このような履歴となっています。&lt;/p&gt;&#xA;&lt;p&gt;仮に今から原神を始めるとしたら、どのようなやり方がいいのか。私が失敗した点などを踏まえ解説します。&lt;/p&gt;&#xA;&lt;p&gt;原神で最も重要だと思うのは「強キャラを引く」ことです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、原神をはじめるにあたって、そのことを最優先に意識したほうがいいです。&lt;/p&gt;&#xA;&lt;p&gt;次に星4武器の&lt;code&gt;祭礼の剣&lt;/code&gt;, &lt;code&gt;西風長槍&lt;/code&gt;, &lt;code&gt;西風猟弓&lt;/code&gt;, &lt;code&gt;流浪楽章&lt;/code&gt;は強化しておいて損はないと思います。逆に言うと、それ以外の武器というのは、使いたいキャラにもよりますが、使う予定がない武器やキャラは強化すべきではありません。私も何個かミスって強化してしまったことがありました。&lt;/p&gt;&#xA;&lt;p&gt;天賦レベルをMAXに上げるには週ボスの報酬が必要となります。ですから、マルチでもなんでもいいので、週ボスと遺跡ボスなどを無駄なくこなし、天然樹脂を消費しておきましょう。天然樹脂は1日120くらい回復するとかそういった仕組みであり、デイリーと合わせてここの消費をやっておくといいです。私は育成はじめた最近まで知りませんでした。育成は強いキャラを引いてからでいいやと思ってたので。&lt;/p&gt;&#xA;&lt;p&gt;以上です。要約すると、以下のようになります。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;強キャラを引く&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;武器の強化は使うものだけ、キャラの育成も同じ(無課金の場合、バーバラとノエルは育てないと詰むことがあります。それまでにベネットとかを引いてれば別ですが、持ってるキャラによります&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;天然樹脂の消費は初期の頃からやっておく(マルチ活用&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;原神とガチャ&#34;&gt;原神とガチャ&lt;/h3&gt;&#xA;&lt;p&gt;原神というのは、課金すればするほど強くなるゲームです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、課金を考えている人は、すぐにでも課金したほうがいい。それだけ効率も良くなり、お気に入りのキャラを強くすることで楽しめるということもあるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;実際、私も雷電に課金しそうになりました(踏みとどまりましたが)。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、課金を考えている人には、雷電将軍がピックアップされている今の時期、課金するのはおすすめかもしれません。雷電はここでいう強キャラ認定されるようなキャラだからです。そういうキャラに集中投資するのは、とても合理的。&lt;/p&gt;&#xA;&lt;p&gt;ただし、キャラの強化、凸といいますが、凸するとどうなるのかについても少し書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;原神では、凸すればするほど他キャラとの差は縮まります。つまり、どのキャラも課金すればある程度強くなり、他キャラとの差は縮まると思っておけばよいでしょう。そういった傾向にあります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、好きなキャラ、使いたいキャラに課金するのも全然ありだと思います。&lt;/p&gt;&#xA;&lt;p&gt;決定的な差がでるのは、あくまで初期の無凸段階などであり、ここでいう強キャラも無凸の状態を指しています。どのキャラも凸すれば強い。&lt;/p&gt;&#xA;&lt;h3 id=&#34;雷電の評価&#34;&gt;雷電の評価&lt;/h3&gt;&#xA;&lt;p&gt;雷電も課金すれば圧倒的に強くなるキャラの一人です。無凸でも相当強いですけどね。&lt;/p&gt;&#xA;&lt;p&gt;元素チャージ効率は、戦闘力に直結します。必殺技(元素爆発)が弱いキャラはいませんし、それが連発できるというのは、必要ない場面を想定できない。&lt;/p&gt;&#xA;&lt;p&gt;どのような場面にも必要になりますし、元素爆発は回避にも使えます。&lt;/p&gt;&#xA;&lt;p&gt;もし雷電を引いてなかったら、おそらく、私の攻略は終わってました(攻略できなかった)。&lt;/p&gt;&#xA;&lt;h3 id=&#34;武器ガチャ&#34;&gt;武器ガチャ&lt;/h3&gt;&#xA;&lt;p&gt;初回では武器ガチャは良い結果をもたらしました。強化素材を投入できる武器が手に入ったので。それまでは星4武器を一つも持っていませんでした(ドドコ以外)。&lt;/p&gt;&#xA;&lt;p&gt;しかし、武器ガチャはもう二度とやらないと思います。&lt;/p&gt;&#xA;&lt;p&gt;様々な動画とかを見て、これはやるべきではないなとそう思いました。&lt;/p&gt;&#xA;&lt;p&gt;ですから、欲しいキャラが来たときにキャラガチャだけ回すのがいいかな。武器も出るし。&lt;/p&gt;&#xA;&lt;p&gt;無課金でやる以上は、もはや武器は無視すべきかと。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、育成とか</title>
      <link>https://syui.github.io/blog/post/2021/09/06/genshin/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/06/genshin/</guid>
      <description>&lt;p&gt;最近の原神のプレイ状況を紹介です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5756.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近、キャラの育成を始めて、そこからやっと原神でやることが見えてきました。&lt;/p&gt;&#xA;&lt;p&gt;やることって具体的には素材集めなんですが、天賦レベル7以上にするにはボスを倒さないとドロップしない素材があるので、ボスを倒さないといけないみたい。知らなかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5754.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在、世界ランク6なのですが、ボスの雷電が強すぎたので、ノエルとバーバラを育成することにしました。そうしないと勝てなかった。&lt;/p&gt;&#xA;&lt;p&gt;この二人は最終的なPTに入ってこない気がするので、育てる意味ってあまりないんですが、無課金勢は次にガチャを回すのいつになるんだろうって考えたら、今育てても問題なさそうと思ったので。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ここでモラと脆弱樹脂、レベル本が不足するという事態が発生。まさかあれだけあったものが枯渇するとは思ってなかった。&lt;/p&gt;&#xA;&lt;p&gt;育成に関しては、現在、聖遺物の厳選はなし(というか資源もない)。ノエルに&lt;code&gt;旧貴族のしつけ&lt;/code&gt;で防御を優先し、バーバラに&lt;code&gt;愛される少女&lt;/code&gt;でHPを優先してます。クレーは火魔女の攻撃、雷電は絶縁の攻撃です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5757.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5758.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5759.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5760.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;武器に関しては雷電に西風をもたせています。これは鍾離が来ても使い回せるので強化しました。あと、釣りで&lt;code&gt;漁獲&lt;/code&gt;という武器もそのうち手に入れたいと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5761.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ノエルは無工の剣を持たせて強化。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210906_5755.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これ武器ガチャでハズレを引いてしまったのですけど、武器ガチャはハズレを引いた時点で撤退しています。武器ガチャは最初の星5が出たときにあたりを引かないと厳しそう。&lt;/p&gt;&#xA;&lt;p&gt;これ自体は残念だったのですが(本当は雷電のモチーフ武器が欲しかった)、実は武器の星4も全然持っていなかったので、結果的に武器ガチャを回して良かったと思っています。強化したい武器が一つもない状態だったので。&lt;/p&gt;&#xA;&lt;p&gt;ダメージは最大で2万くらいが出るようになりました。(これでも相当に無理してる&lt;/p&gt;&#xA;&lt;div style=&#34;position:relative;height:0;padding-bottom:56.25%&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/P11BtaOmr_Y?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&amp;amp;ecver=2&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; style=&#34;position:absolute;width:100%;height:100%;left:0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;p&gt;今後の育成方針については、キャラを育成すると資源が枯渇しがちなことがわかったので、無課金でやる以上、育てるキャラを本当に限定しないといけません。&lt;/p&gt;&#xA;&lt;p&gt;ということで、最大で5人くらいかな。クレー、雷電、鍾離、ベネット、ウェンティを考えてて、それ以外の魅力的なキャラに手を出さないようにしないと。&lt;/p&gt;&#xA;&lt;p&gt;スクロースとかモナとか、すごく魅力的で強いと思うんですが、育てないという選択を取ることにしました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、雷電を引いた</title>
      <link>https://syui.github.io/blog/post/2021/09/01/genshin/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/01/genshin/</guid>
      <description>&lt;p&gt;雷電はお試しプレイしてみて、戦闘がカッコよくなるので使ってて楽しそうだと思ったので、1周年情報を待たずに回すことにしました。(辛抱できない短気さん&lt;/p&gt;&#xA;&lt;p&gt;あと冒険者ランクは45になりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210901_0004.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;雷電が来るというので、ちょっと頑張っちゃった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;無課金者のガチャについて&#34;&gt;無課金者のガチャについて&lt;/h3&gt;&#xA;&lt;p&gt;今回は、クレー以来となる2回目のガチャです。無課金者の原石がどうなったのかを記録します。履歴では前回が6月なので3ヶ月ぶり。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210901_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;原石は&lt;code&gt;15,000&lt;/code&gt;ありました。雷電を引いた時点で&lt;code&gt;8,000&lt;/code&gt;になりました。つまり、7,000ほどの原石を消費したことになります。その間、スターダスト交換なども最大限活用してガチャを回しています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210901_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;引いたキャラは雷電, モナ, スクロース, ロザリア, 九条x2, 香菱x2でした。原神ガチャのことはよくわかりませんが、かなり上々なのではと思いました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210901_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;原神ガチャで参考になった記事はこちらです。&lt;/p&gt;&#xA;&lt;p&gt;(1枚目を引くとして&amp;hellip;)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;結論から申し上げますと、キャラガチャ（ピックアップ）であれば、期待値は『原石：15,000個（22,313円相当）』となります。&#xA;また、運が悪いと最大値として『原石：28,800個（42,840円相当）』が必要となります。&lt;/p&gt;&#xA;&lt;p&gt;一方、完凸（７枚）を目指すのであれば、期待値は『原石：105,000個（156,188円相当）』となり、最大値は『原石：201,600個（299,800円相当）』が必要となります。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://chara.ge/genshin-impact/rough-pieces-pickup/&#34;&gt;https://chara.ge/genshin-impact/rough-pieces-pickup/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;勝ってるときに退く。無課金の鉄則なので、私は無理に凸を狙わず、ここらで撤退することにします。&lt;/p&gt;&#xA;&lt;p&gt;本当は雷電を6凸したいんですけど&amp;hellip;無課金で目指すのは最強ではないので、できる範囲でプレイを楽しんでいければと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後のキャラ育成方針について&#34;&gt;今後のキャラ育成、方針について&lt;/h3&gt;&#xA;&lt;p&gt;次に、キャラ性能について。&lt;/p&gt;&#xA;&lt;p&gt;tier rankで信頼のおけるところは、ggだと思います。それによると、モナは無凸でもS+でかなり使えるみたい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://genshin.gg/tier-list&#34;&gt;https://genshin.gg/tier-list&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;また、香菱は4凸でS+なので使えるようになるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;行秋は6凸でSS+でした。ですが無課金で6凸は正直難しい。&lt;/p&gt;&#xA;&lt;p&gt;現状ではモナを育て、水国が実装されたとき神を狙うのが良いかも。&lt;/p&gt;&#xA;&lt;p&gt;スクロースも6凸が前提なので、ちときつい。それならウェンティの無凸を狙ったほうがいいですね。&lt;/p&gt;&#xA;&lt;p&gt;したがって、現状ではモナと雷電を育てつつ、鍾離やウェンティを待つという感じで。&lt;/p&gt;&#xA;&lt;p&gt;雷電を早めに引けたの、すごくうれしい！&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、1日にやること</title>
      <link>https://syui.github.io/blog/post/2021/08/31/genshin/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/31/genshin/</guid>
      <description>&lt;p&gt;やっと冒険者ランクが40になりました。これ前にも言いましたが。&lt;/p&gt;&#xA;&lt;p&gt;冒険者ランク40になって、1日にやることが見えてきたので、今回はそれについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;今まではデイリーをやって、ストーリーを進めるだけでした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ランク40以上になると遺跡みたいな場所で聖遺物の星5が取れたり、その他にも良い素材が手に入ったりします。&lt;/p&gt;&#xA;&lt;p&gt;そのため天然樹脂を消費して、これらの素材を集めるということをやりはじめました。&lt;/p&gt;&#xA;&lt;p&gt;最大160で回復は約21時間半です。なので、1日のうちにデイリーをやって、天然樹脂を全部使うということをやっています。&lt;/p&gt;&#xA;&lt;p&gt;また、ヒルチャールなどと戦います。ドロップアイテムは天賦レベルを上げるため必要になります。効率良く回れる場所をマップ上に記録しておきます。&lt;/p&gt;&#xA;&lt;p&gt;ここまでがだいたい1日にやることです。他にも増えるかもしれませんが、今のところは。&lt;/p&gt;&#xA;&lt;p&gt;最後に雷電を引くべきかについて、個人的な考えを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;正直、雷電を引くべきかはよくわかりません。なぜかというと、後でもっと強いのが出てくる可能性もあるからです。これは物語の展開によっても変わってきます。&lt;/p&gt;&#xA;&lt;p&gt;また、雷電が本当に神属性持ちかどうかもわかりません。ただ、おそらく神属性持ちの可能性が高いと今の所は考えられます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、物語の展開によってはそのへん変わってくるかもしれませんので、なんともいえません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、日本の殿様なんかはたくさんの影武者を使ってたりします。彼女は影武者であり、実は本物ではなかったなんてことも可能性として考えられる。様々な可能性が考えられます。また、先代が強かっただけであり、その子孫は巫女のほうだったみたいなことがあるかもしれません。とすれば、次に登場するキャラのほうが強いということもありうると思われます。&lt;/p&gt;&#xA;&lt;p&gt;ということで、雷電を引くべきかは、正直、わかりません。&lt;/p&gt;&#xA;&lt;p&gt;また、1周年に復刻があるかもしれません。そこでショウリがピックアップされる可能性もあります。&lt;/p&gt;&#xA;&lt;p&gt;その場合、私が引くべきなのは、現状では、雷電よりショウリのほうでしょう。&lt;/p&gt;&#xA;&lt;p&gt;現在のPTはクレーのみが頼りです。使えるのが現状はクレーのみって話ですが、他のキャラの強化もレベル上げもほとんどやってなくて、また、手持ちのキャラが少ない。このような状況下での選択は、非常に重要かつ決定的になってくると思われます。そして、私のPTに最も必要なのは、ショウリということになります。&lt;/p&gt;&#xA;&lt;p&gt;したがって、雷電を回そうかはかなり迷ってる。色んな意味で。できれば1周年の情報、あるいは復刻の情報が来てから判断したいです。できればですが。&lt;/p&gt;&#xA;&lt;p&gt;現在ほしいキャラは、優先順にショウリ、雷電、ウェンティ、甘雨、行秋、ベネットかな。甘雨はアーロイが来るのでスルーしてもいいかもしれませんが、わかりません(キャラ知識や使用感がないのでわからない)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、2周年でどれを引くべきか</title>
      <link>https://syui.github.io/blog/post/2021/08/30/pokemas/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/30/pokemas/</guid>
      <description>&lt;p&gt;リーリエ、N、ダイゴがありますが、私は、ダイゴから回していこうかなと思ってます。次にNで、余裕があればリーリエですね。&lt;/p&gt;&#xA;&lt;p&gt;理由としては、色違いレックウザ、しかもメガシンカ付きときたら、これはもう引くしかないからです。&lt;/p&gt;&#xA;&lt;p&gt;あと、役割として考えた場合、現状ではデバフを連発してくる敵は苦手なんですよね。対応できない可能性があるし、バトルが長引く。今回のダイゴはそれを解消してくれそうだという点です。&lt;/p&gt;&#xA;&lt;p&gt;それぞれの役割としてみていくと、リーリエは最速アタック、Nは高火力全体技+全体デバフ+高火力一撃B技、ダイゴはデバフ無力化(プラス変換)となっています。&lt;/p&gt;&#xA;&lt;p&gt;先程も言ったように、私が持っていない役割は、デバフ無力化です。他の役割は組み合わせでなんとかなりそう。&lt;/p&gt;&#xA;&lt;p&gt;ただし、最初に述べたように色違いレックウザが使えるというのが一番の理由ですね。使ってて気持ちいいのでやりたいという思いがあるので、私はダイゴを優先して回すことにします。&lt;/p&gt;&#xA;&lt;p&gt;ですが、一番のおすすめは全部2凸(同キャラ3枚引き)することです。どれも本当に強い。&lt;/p&gt;&#xA;&lt;p&gt;どれを優先すべきかという話なら個人的におすすめなのはNを2凸することだと思います。特に始めたばかりの人はNが一番だと思います。&lt;/p&gt;&#xA;&lt;p&gt;Nがいい理由は、複数の役割を担うことができるからです。例えば、全体攻撃、B技による一撃(テクニカルなので)、全体デバフなど。また、2凸で攻撃時に素早さバフを全体にかけられるようになります。&lt;/p&gt;&#xA;&lt;p&gt;つまり、&lt;code&gt;N&amp;amp;レシラム&lt;/code&gt;は今までに例を見ないほど完璧なバディーズと言っていい。&lt;/p&gt;&#xA;&lt;p&gt;したがって、今回のNを2凸して他の盾役と回復役は配布キャラを使い攻略していくのが始めたばかりの人にはおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、凸に関してもポケマスを続けているとメダルをもらえるので凸を増やせます。よって、2凸は無理でも1凸でOKだと思います。ただ、無凸から2凸にするのは結構きついというか、時間がかかると思います。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;私はダイゴを回します&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一番のおすすめはNの2凸です(1凸でも可)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;最後に、始めたばかりの人がもう一つ疑問に思いそうなことについて書きます。&lt;/p&gt;&#xA;&lt;p&gt;それは、マジコスリーフやマジコスグリーンの性能についてです。&lt;/p&gt;&#xA;&lt;p&gt;今回、魅力的なキャラが沢山登場しましたが、個人的に、アタッカーに強いのを持っているなら、マジコスリーフやマジコスグリーンを優先したほうがいい。私はマジコスリーフを使ってチャンピオンバトルをクリアしていますが、マジコスリーフがいれば毒殺によって比較的簡単にクリアできます。回復役もできます。&lt;/p&gt;&#xA;&lt;p&gt;また、マジコスグリーンがいないとアタッカーは苦労することになります。盾役として一番優秀です。&lt;/p&gt;&#xA;&lt;p&gt;したがって、始めたばかりの人には以下の順番におすすめ。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;N or マジコスレッド&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;マジコスリーフ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;マジコスグリーン&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;リーリエ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;ダイゴ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた96</title>
      <link>https://syui.github.io/blog/post/2021/08/29/illust/</link>
      <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/29/illust/</guid>
      <description>&lt;p&gt;色んな方向から描くようにしてるんだけど、横顔がいちばん苦手。後ろからもあんまり描かないや。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_96.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた95</title>
      <link>https://syui.github.io/blog/post/2021/08/28/illust/</link>
      <pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/28/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、起死回生の手はあるのか？</title>
      <link>https://syui.github.io/blog/post/2021/08/27/pokemas/</link>
      <pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/27/pokemas/</guid>
      <description>&lt;p&gt;ポケマス、2周年ですごいの来たし、めちゃくちゃ頑張ってると思います。ダイゴと組んだ色違いレックウザが欲しい。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは私もプレイしてて、楽しませてもらってます。&lt;/p&gt;&#xA;&lt;p&gt;今回は、ポケマスについて、急成長ってわけにはいかなかったポケマスについて、色々と考えていることがあるので、それについて書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;運営について&#34;&gt;運営について&lt;/h3&gt;&#xA;&lt;p&gt;ゲーム業界は本当に大変というか、難しい部分があると思っていて、儲けられるのがほんの一部に限られており、二極化しているので、運要素も大きいと思われます。&lt;/p&gt;&#xA;&lt;p&gt;コンテンツ産業って、1割の成功が9割の多様なコンテンツを支えるっていう構図で、博打に近い側面があります。つまり、出してみなければわからない。確実に成功すると言われてるものがポシャったり、あるいは絶対に駄目だろうと思われてたものがあたったり、そういった要素が大きいので難しいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ポケマスは自分がプレイしているだけに、これだけは絶対にやりたい、やってほしいと考えている機能が2つあって、今回は、その実装について具体的に考えていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、IP契約などの内容によって制約なども多々あるでしょうし、現実的には難しい部分があるかもしれません。ですが、なるべく具体的に戦略について語っていきたいなと思います。よろしくおねがいします。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ポケマスは、日本企業のDeNAが開発しており、ポケモンのコンテンツ、つまり、IPは株式会社ポケモンから提供されています。株式会社ポケモンは原作を作ったゲームフリークという会社から派生し、ゲームフリークに出資していたのが任天堂という認識ですが、実はあまり詳しくないので間違ってるかもしれません。また、ポケモン=任天堂と言われる所以も、任天堂が株式会社ポケモンの株主だからだと思っていて、ポケモン=任天堂という認識も間違いではないと思います。というより、面倒なので私もポケモン=任天堂という認識かな。&lt;/p&gt;&#xA;&lt;p&gt;そんなどうでもいい話は置いといて、少しIPについて触れると、IPというのは、実は、直接の利益をもたらさないところから成長するところがあると思っています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、アニメの影響力なんかすごいですよね。&lt;/p&gt;&#xA;&lt;p&gt;ですが、アニメ自体は、そこまで利益をもたらさなかったり、あるいは赤字だったりするわけですが、文化浸透力については過去のデータを見る限りでは圧倒的だと考えています。正直、アニメが担った役割というのは、価値に換算すると、とてつもなく大きかった。&lt;/p&gt;&#xA;&lt;p&gt;ですが、当時はあまり評価されず、評価していた人も少なかったように思います。そもそも目先の利益のみ、お金のみで物事を考える人からすると、なんでこんな儲からないアニメなんかやるんだよって感じだったと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、その儲からないアニメがIPを急成長させ、あるいは、ポケモンを文化浸透レベルにまで持っていったところがあったのだと私は思っています。&lt;/p&gt;&#xA;&lt;p&gt;したがって、儲からない、あるいは儲かっていないことがイコールで失敗であるかどうかは、なかなかに判断が難しいところがあります。それはあとになってみなければわからない。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスもそういった視点を含めて続けられているのかもしれません。あと、トレーナーの設定や素材を拡大する方向でも後々に役立つと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;直接的には売上が出なくても、ポケモンという世界を広げていくことは、IP戦略的には正しいと個人的には思っています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ユーザーの主体性&#34;&gt;ユーザーの主体性&lt;/h3&gt;&#xA;&lt;p&gt;ゲームって色々ありますけど、ユーザーの主体性っていうのは、とても大切だと私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンの原作では、最初に自分の名前を決めさせ、物語をスタートさせます。ここで、ユーザーは、登場する主人公になりきってプレイすることを想定しています。&lt;/p&gt;&#xA;&lt;p&gt;ですが、それはあくまでなりきりであって、ユーザー自身ではないので、主体性は少し下がります。&lt;/p&gt;&#xA;&lt;p&gt;ARの登場によって、ポケモンGOでは、ユーザーが主人公になって物語をスタートさせることに成功しました。意外に思われるかもしれませんが、これはとてつもなく大きかったと考えます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、原作では、知らない街の知らない家から主人公を操作して他人の物語を進めていくゲームです。しかし、ポケモンGOは、自分の住んでいる街の自分の家からゲームがはじまります。主人公を操作して歩くのか、あるいは自分が本当に歩くのかでは、その主体性に大きな違いがあります。&lt;/p&gt;&#xA;&lt;p&gt;ゲームにおいて、この主体性が重要なのは言うまでもありません。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、多くの人は、主人公になりきりたいのではなく、自分自身が主人公でありたいと、そう願うからです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これはあくまで傾向であり、自分を操作するよりゲーム内の主人公を操作したほうが楽しいって人もたくさんいると思います。&lt;/p&gt;&#xA;&lt;p&gt;個人的にはどちらも好きで、どちらも楽しいと思いながらプレイしています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、主人公になりきってプレイする原作のほうがのんびりできて、たとえそれが2Dであっても、知らない街の雰囲気を楽しみながら、思い出深いのは、やはり原作の風景だったりすることもあります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ユーザーの主体性を考えたとき、あくまで主人公のなりきりで他人の物語をやっていく原作より、自分自身が主人公になってプレイするポケモンGOのほうが主体性の点では上だと思います。&lt;/p&gt;&#xA;&lt;p&gt;したがって、ポケモンGOのコンセプトは、とんでもなかったというか、すごかった。ですから、未だに成長し続けており、その規模もめちゃくちゃ大きいのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;ここまでで、ユーザーに主体性をもたせることが、どれほど重要か、おわかりいただけたと思います。&lt;/p&gt;&#xA;&lt;p&gt;では、ポケマスでユーザーに主体性をもたせるにはどうすればいいのでしょう。具体的な方法を考えていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスでも原作と同じように、ユーザーに名前を決めさせ、かつ操作できるようにしなければなりません。そうしない限り、主体性というのは生まれにくいと考えます。&lt;/p&gt;&#xA;&lt;h4 id=&#34;変更できない名前を決めさせる&#34;&gt;変更できない名前を決めさせる&lt;/h4&gt;&#xA;&lt;p&gt;ここで、ユーザー名については、ネットゲームにおいて、重複不可能なもの、唯一無二なものにしなければならない。私はそう考えています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、現在の数字のみのIDにalias(エイリアス)でもなんでもいいので設定して、再度、英数(プログラム的には英数が最適)のみからなる、ユーザーID、名前をつけてもらうようにしたほうがいい。そして、数字のみのIDはプログラムの裏側、あるいは設定からのみ確認できるようにして、表側のプロフィールには、aliasした英数のIDを表示するようにします。&lt;/p&gt;&#xA;&lt;p&gt;もし私がポケマスを作り変えていけるなら、まず最初にやることはこれですね。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;数字IDにaliasを設定する&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;aliasは英数からなる唯一無二で重複不可能なIDを設定してもらう&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;数字IDは裏側のみで表示し、表側はユーザー自身が決めた名前を表示する&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;自身となるトレーナーを一人だけ選択させる&#34;&gt;自身となるトレーナーを一人だけ選択させる&lt;/h4&gt;&#xA;&lt;p&gt;名前はこれでOKとして、つぎに、操作に関してです。つまり、自らが主人公になりきって、ユーザーがその主人公を歩かせること、これを実現しなければならないと考えます。&lt;/p&gt;&#xA;&lt;p&gt;ですから、あの最初に出てくる空間、フロアですが、自分が一人選んだ主人公、つまり、トレーナーですね。そのトレーナーを操作できるよう、歩かせられるようにして、話しかけられるようにします。今は簡易化され、タップして話しかける形式ですが、起動時の空間、フロアのみはトレーナーをユーザーが操作できるようにします。&lt;/p&gt;&#xA;&lt;p&gt;なぜ、既存のトレーナーでなければならないのかというと、これはポケマスだからとしか言いようがありません。ポケマスをプレイしている人たちというのは、好きなトレーナー、推しがいる人がほとんどで、ポケマスのプレイヤーの本当の望みはそこだと考えています。&lt;/p&gt;&#xA;&lt;p&gt;つまり、ポケマスをプレイすれば、推しのトレーナーになれる、推しを主人公にできる、推しを操作できる、あるいはそんなことがやってみたいなあと思って、プレイを始めた人が大半だと思っています。私もそうです。ですから、これをポケマスで実現することはすごく重要だと考えます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、現実問題、この実装は、正直、難しいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、今までと形式が異なるので、プログラムを組むにしても、そう簡単ではないかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これはなんとしてでも実装したいところです。もちろん、私がやるとしたらの話ですけど。&lt;/p&gt;&#xA;&lt;p&gt;また、このようにするとして、様々な問題が出てきます。その解決策をいくつか述べることにします。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ユーザーは一人のトレーナーを選べるとして、それを変更可能にするか否かです。&lt;/p&gt;&#xA;&lt;p&gt;ここで、ポケマスは、ポケモンGOより原作を重視すべきだと思います。&lt;/p&gt;&#xA;&lt;p&gt;特にユーザーに主体性をもたせる点に関してはそうです。今更、ポケマスをARゲームにしようってのは、それは無理です。ですが、ネットゲームなので、ポケモンGOで実装されているいくつかの視点は必要になってくるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;さて、原作では最初に決めた主人公を変更可能ですか？例えば、性別とか見た目とか。&lt;/p&gt;&#xA;&lt;p&gt;原作において、主人公の属性は変更不可能です。これは、ユーザーに主体性をもたせる上で必要なことだと考えています。&lt;/p&gt;&#xA;&lt;p&gt;つまり、できる限り最初の選択を変更できないようにしたほうがいい。すぐに変更できるようだと主体性が定着しにくいからです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ポケマスはネットゲームです。変えたくなるときもありますよね。例えば、後から欲かったトレーナーが手に入ったような場合です。&lt;/p&gt;&#xA;&lt;p&gt;ここで参考にするのは、ポケモンGOにある一つのシステムです。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOでは、最初に3つの色のうち一つを決めるようになっています。これはジムと言われるシステムで、ゲーム内では極めて重要な選択になります。ポケモンGOでは主人公である自身がジムリーダーになってジム防衛をすることになっています。ジムリーダーはそのジムに行って、実際に行って、戦って勝つとジムリーダーになれます。ジムリーダーになるとポケモンをそのジムに配置できます。で、その配置したポケモンでジム防衛します。基本的にはその繰り返しです。そして、ジムにはカラーが3つあって、自分のチームカラーのジムリーダーにしかなれませんし、自分のチームカラーでジム攻撃、ジム防衛することになります。つまり、3つの陣営があって、自分はどこに所属するのかを最初に決められるようになっており、変更できないというシステムと考えてもらえればわかりやすい。&lt;/p&gt;&#xA;&lt;p&gt;ですが、基本的には変更できなかった陣営ですが、1000円(レイド10回分)くらいの課金アイテムによって、1年単位の期間制限で変更できるようになりました。&lt;/p&gt;&#xA;&lt;p&gt;ここで、ポケマスのトレーナー選択においては、基本的に、ポケモンGOのジム(チーム、陣営)のシステムを参考に構築することになります。つまり、ポケマスでは一人のトレーナーを選択した時点でトレーナーを操作し、ポケモンセンター、つまり、起動時のフロアを自由に移動できるようになる。また、話しかけられるようになる。トレーナー(自身)は基本的には変更できないが、3000円(10連分)の特殊アイテムを使うと、半年とか1年ごとに変更可能になる。&lt;/p&gt;&#xA;&lt;p&gt;要約すると、以下の要素を実装します。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;手持ちから一人のトレーナーを選択できるようにする&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;トレーナーを選択した時点で、そのトレーナーを操作し、ポケモンセンター、つまり、起動時のフロアを自由に移動したり話しかけられるようにする&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;選択したトレーナー(自身)は基本的には変更できないが、3000円の特殊な課金アイテムを使うと、半年あるいは1年ごとに変更可能にする&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ちなみに、最初は自由に歩き回れる場所を限定していますが、そのうち広げてもいいと思います。ですが、最初の一歩を踏み出すことが重要で、かつプロトタイプとなると、これで十分だと考えます&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケモンgoとのコラボ&#34;&gt;ポケモンGOとのコラボ&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGOはすごいです。バグだらけでとんでもないんですけど、コンセプトだけはいいっていう、あれなんですけど、でも、ポケモンGOには本当に熱心な課金ユーザーが多くて、様々な企業とコラボして、現実の洋服メーカーとかとコラボして、アバター(自身)の服に設定できたりします。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOに熱心な課金ユーザーがいる理由も個人的にはわかります。&lt;/p&gt;&#xA;&lt;p&gt;それは自分自身が主人公になってポケモンを捕まえたり、あるいは、アバターも自分の分身みたいなところがあったりするからです。&lt;/p&gt;&#xA;&lt;p&gt;ARなので、現実とゲームが融合しているからこそ、実現できた世界観だと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、少しわかってきた</title>
      <link>https://syui.github.io/blog/post/2021/08/25/genshin/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/25/genshin/</guid>
      <description>&lt;p&gt;今まではストーリを進めることを優先してプレイしてきましたが、ストーリーを最新まで進められたので、強化のほうをやってみました。&lt;/p&gt;&#xA;&lt;p&gt;で、少し原神のことがわかってきたので、ポイントだけ書いていこうかなと思います。&lt;/p&gt;&#xA;&lt;p&gt;原神のポイントは一つで、それは「火力」です。&lt;/p&gt;&#xA;&lt;p&gt;火力があれば周回も早くなりますし、敵に攻撃される前にやっつけられるので合理的。&lt;/p&gt;&#xA;&lt;p&gt;ですから、原神で考察される多くは「いかに火力を上げるか」なのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;火力を上げるポイントは2つあって、一つはステータス、もう一つは元素(パーティー属性)の組み合わせです。&lt;/p&gt;&#xA;&lt;p&gt;後者は各キャラの役割で考える必要もありますが、役割というのは、例えば、回復役だったり、盾役だったり。&lt;/p&gt;&#xA;&lt;p&gt;ステータスで火力を上げるには、まずは、聖遺物を優先すれば効率がいいと思います。使いまわしもできますし。&lt;/p&gt;&#xA;&lt;p&gt;ただし、聖遺物は、各キャラの特性に応じて、火力をあげられる組み合わせは異なります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、重撃が強いキャラには、重撃を上げる聖遺物を、元素が強いキャラには、元素ダメージ、元素効率を上げる聖遺物を、という感じです。&lt;/p&gt;&#xA;&lt;p&gt;また、聖遺物に付くステータスは、ランダムと固定があり、優先すべきは基本的に会心と攻撃です。冒険者ランクが45以上になったら厳選(周回)するとよいでしょう。ただ、私の場合は、そこそこのものが出ればOKにしています。育成もありますし、無課金かつ初見での厳選はほどほどにしておいたほうがいい思います。報酬を得るためにはアイテムが必要になりますが、それを育成素材の周回に使ったほうがいいです。&lt;/p&gt;&#xA;&lt;p&gt;次に、基礎レベルや武器レベル、天賦レベルがあります。これは優先順に並べています。&lt;/p&gt;&#xA;&lt;p&gt;最近まで天賦レベルをあげられるの知らなかった。課金要素だと思ってスルーしてました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210825_0008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は現在、クレーにドドコ物語(武器)をもたせて、ドドコは配布なので精錬がMAXにできました。実は、無課金で精錬は難しく、同武器の重複、つまり、凸と呼ばれるものでしか精錬できません。&lt;/p&gt;&#xA;&lt;p&gt;キャラも凸によって様々な追加効果が付与されます。原神ではこれを命ノ星座と呼ぶようです。最大6凸ですね。&lt;/p&gt;&#xA;&lt;p&gt;話は変わりますが、最新のストーリーでは、雷電将軍が神の目と呼ばれる元素(魔法)が使える個人固有のアイテムを没収していますが、なぜそんなことをするのかについては、理由があるのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、神の目を持つ者に何らかのデメリットがあったりするのではという仮説。命ノ星座という命名についても、それらを感じ取れる要素があったりするのかも。あくまで可能性の一つとしてですが。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、雷電将軍の実装は1周年の9月らしい。&lt;/p&gt;&#xA;&lt;p&gt;9といえば、思い浮かぶのはドラゴン(龍)ですね。中国で9という数字、なんとなくドラゴンのイメージがあったりします。&lt;/p&gt;&#xA;&lt;p&gt;そして、原神でもドラゴンというのは馴染み深いもので、例えば、最初に出てきたボスのトワリンとか&amp;hellip;あるいは&amp;hellip;ドラゴンスパイン(地名)です。&lt;/p&gt;&#xA;&lt;p&gt;個人的に考えていることがいくつかあって、その一つに、原神のすべてはドラゴンスパインからはじまったんじゃないかという仮説を立てています。&lt;/p&gt;&#xA;&lt;p&gt;はるか昔にあり今は滅ぼされたとされている機械王国の王子と王女、つまり、双子主人公のことですが、その国は今のドラゴンスパインにあったんじゃないかなと。あそこ、機械兵がたくさんいますので。もちろん、あくまで可能性の一つですが、そういった可能性もありそうという程度。現時点では、ストーリーを飛ばしながら見た程度なので、情報不足ですが。&lt;/p&gt;&#xA;&lt;p&gt;さて、話を戻して、原神をどう進めていけばいいのか、あるいは楽しんでいけばいいのかという話でした。ポイントとしては「火力をあげればいいんじゃない」ってことでした。&lt;/p&gt;&#xA;&lt;p&gt;私が考えている方向性としては、強キャラを引きたいってことですね。&lt;/p&gt;&#xA;&lt;p&gt;自分は無課金で、かつ始めたばかりということもあり、無駄に育成する余裕がありません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、まずは強キャラを引くことが重要かと思われます。現在、私はクレーは強化することにしていて、といっても、クレーってそんな強くないんですが&amp;hellip;お気に入りキャラですし、現状、クレーがいないと、ストーリーや素材集めすら進められない状況に陥ってるので。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210810_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在の手持ち状況、ほぼこのまま。現在、クレー、主人公、香菱は、育ててもいいかもしれないと思っています。聖遺物集めだけは使い回せるのでやりました。冒険者ランク45以下なので、星5を集めるの、苦労した。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210825_0006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210825_0007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;次に、星4で無課金でも引きやすいと考えられているのが行秋やベネットで、この二人は育てていいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;最後に、個人的願望を述べますが、一言でいうと「ショウリが&amp;hellip;ほしい」。&lt;/p&gt;&#xA;&lt;p&gt;ショウリを持っているかいないかで攻略難易度が圧倒的に変わってくると思います。&lt;/p&gt;&#xA;&lt;p&gt;ということで、1周年で神ガチャでも来ないかなあと思っています。神属性のショウリ、ウェンティ、雷電があたるやつ。&lt;/p&gt;&#xA;&lt;p&gt;今思っている理想のパーティーはクレー、ショウリ、ウェンティ、雷電、です。&lt;/p&gt;&#xA;&lt;p&gt;でも、雷電が弱そうなんだよなあ。というか、多分、弱いと思う。炎上しない限り、めちゃくちゃ弱いと思う。でも今回は炎上で強くなるってことも流石に起きないんじゃないかな。ショウリのときはそういうことが起こったらしいけど、こういうイレギュラーも発生して1度くらいなのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;雷電、強かったらいいのですが、ここらへんでキャラを引かないと、攻略きつい。深境螺旋も後半パーティーが必要な5層1で詰みました。&lt;/p&gt;&#xA;&lt;p&gt;ともあれ、原神はストーリーが面白いし、演出(FFっぽさを感じた)もかっこいいし、すごく楽しめてるので、おすすめ！&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた94</title>
      <link>https://syui.github.io/blog/post/2021/08/23/illust/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/23/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_94.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた93</title>
      <link>https://syui.github.io/blog/post/2021/08/22/illust/</link>
      <pubDate>Sun, 22 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/22/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_93.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>gh-actionsでpushしたとき指定のworkflowを実行する</title>
      <link>https://syui.github.io/blog/post/2021/08/21/github-workflow/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/21/github-workflow/</guid>
      <description>&lt;p&gt;この前、画像を圧縮してpushするaction(workflow)を作ったんだけど、workflowでpushしても、gh-actionsのon:pushが動作しなかったので、どうやらworkflowでpushしたやつには反応したいみたい。&lt;/p&gt;&#xA;&lt;p&gt;このブログの場合、画像を圧縮してpushしてもhugo-buildを通さないとweb server(gh-pages)にdeployされないので、build+deployのworkflowに以下を追加すると、ちゃんと動いてくれるので便利になります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;workflow_run&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;workflows&lt;/span&gt;: &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;push webp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;src&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;types&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;completed&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こんな感じで書いて、pushするworkflowはnameを設定します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;push webp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた92</title>
      <link>https://syui.github.io/blog/post/2021/08/20/illust/</link>
      <pubDate>Fri, 20 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/20/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_92.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>デスクトップ写真3</title>
      <link>https://syui.github.io/blog/post/2021/08/19/desk/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/19/desk/</guid>
      <description>&lt;p&gt;萌えフィギュアがあると、デスクトップの写真を撮りたくなるのでおすすめ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_14.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_14.jpg&#34;/&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_15.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_15.jpg&#34;/&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>squoosh-cliとgh-actionsで画像表示を高速化してみる</title>
      <link>https://syui.github.io/blog/post/2021/08/18/github/</link>
      <pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/18/github/</guid>
      <description>&lt;p&gt;squoosh-cliは、google製の画像圧縮ツールらしい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g @squoosh/cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ squoosh-cli --webp &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;quality&amp;#34;:75,&amp;#34;target_size&amp;#34;:0,&amp;#34;target_PSNR&amp;#34;:0,&amp;#34;method&amp;#34;:0,&amp;#34;sns_strength&amp;#34;:50,&amp;#34;filter_strength&amp;#34;:60,&amp;#34;filter_sharpness&amp;#34;:0,&amp;#34;filter_type&amp;#34;:1,&amp;#34;partitions&amp;#34;:0,&amp;#34;segments&amp;#34;:4,&amp;#34;pass&amp;#34;:1,&amp;#34;show_compressed&amp;#34;:0,&amp;#34;preprocessing&amp;#34;:0,&amp;#34;autofilter&amp;#34;:0,&amp;#34;partition_limit&amp;#34;:0,&amp;#34;alpha_compression&amp;#34;:1,&amp;#34;alpha_filtering&amp;#34;:1,&amp;#34;alpha_quality&amp;#34;:100,&amp;#34;lossless&amp;#34;:0,&amp;#34;exact&amp;#34;:0,&amp;#34;image_hint&amp;#34;:0,&amp;#34;emulate_jpeg_size&amp;#34;:0,&amp;#34;thread_level&amp;#34;:0,&amp;#34;low_memory&amp;#34;:0,&amp;#34;near_lossless&amp;#34;:100,&amp;#34;use_delta_palette&amp;#34;:0,&amp;#34;use_sharp_yuv&amp;#34;:0}&amp;#39;&lt;/span&gt; -d out-dir img.jpg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;size的にはjpgのほうがいいのですが、webpじゃないとpng透過が保存されないので、webpを使います。&lt;/p&gt;&#xA;&lt;p&gt;resizeは300x400だとスマホで見たとき粗くなってしまうため、600x800にしました。&lt;/p&gt;&#xA;&lt;p&gt;git-diffにcommit-hashを指定し、更新ファイルがあれば、squooshを実行します。gh-actionsはpush:pathsからトリガーできます。&lt;/p&gt;&#xA;&lt;p&gt;パラメータ、特に&lt;code&gt;quality&lt;/code&gt;は適時、調整してください。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.github/workflows/push-webp.yml&#34; data-lang=&#34;yml:.github/workflows/push-webp.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;paths&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;static/img/*.png&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;comment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;install squoosh&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;WORKFLOW_FILE_PATH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.workflow }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_REPOSITORY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.repository }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        npm i -g @squoosh/cli&lt;/span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;convert webp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        s=`git diff-tree --no-commit-id --name-only -r $GITHUB_SHA|grep &amp;#34;static/img/&amp;#34;|grep &amp;#34;\.png&amp;#34;`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        echo $s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        if [ -z &amp;#34;$s&amp;#34; ];then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        for i in $s &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        do&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        squoosh-cli --webp &amp;#39;{&amp;#34;quality&amp;#34;:100}&amp;#39; -d ./static/img/min --resize &amp;#39;{width:600,height:800}&amp;#39; $i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        git config --local user.email &amp;#34;action@github.com&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        git config --local user.name &amp;#34;GitHub Action&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        if [ -z &amp;#34;`git status -s`&amp;#34; ];then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        git add ./static/img/min&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        git commit -m &amp;#34;push webp&amp;#34;&lt;/span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Push changes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ad-m/github-push-action@master&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;github_token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;branch&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;src&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>bitwardenをself-hostで試してみた</title>
      <link>https://syui.github.io/blog/post/2021/08/14/bitwarden/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/14/bitwarden/</guid>
      <description>&lt;p&gt;password managerの&lt;code&gt;bitwarden&lt;/code&gt;を試してみました。self-hostしますので、herokuを使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bitwarden.com&#34;&gt;https://bitwarden.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;bitwardenはossのcloud pass managerみたいなものだと思われます。web domainを使ってdbにアクセスし、そっから情報を読み込みます。&lt;/p&gt;&#xA;&lt;p&gt;つまり、passwordにアクセスするには、networkにつながっていなければなりません。また、自分のserverからdbを管理する場合、updateなどの手間がかかります。ですが、その手段が採れるというのはいいですね。&lt;/p&gt;&#xA;&lt;p&gt;self-hostの利点として挙げられるのは、例えば、「bitwardenがhackされてもpasswordが流出しない」と公式では言われています。ですが、様々な可能性が考えられるため、本当のところはわかりませんが。&lt;/p&gt;&#xA;&lt;p&gt;私が使ったのは、非公式clientであるvaultwardenのdocker-imageです。それをheroku deployする便利なrepoがありましたので、それを使いました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/davidjameshowell/vaultwarden_heroku&#34;&gt;https://github.com/davidjameshowell/vaultwarden_heroku&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的には、readmeにあるとおりですね。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:vaultwarden_heroku/.github/workflows/deploy.yml&#34; data-lang=&#34;sh:vaultwarden_heroku/.github/workflows/deploy.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;AUTOBUS_ENABLE&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;CREATE_APP_NAME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.HEROKU_APP_NAME }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;DUO_ENABLE&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;GIT_HASH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;HEROKU_API_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.HEROKU_API_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;USE_PSQL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;HEROKU_VERIFIED&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;OFFSITE_HEROKU_DB&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.OFFSITE_HEROKU_DB }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;HEROKU_CREATE_OPTIONS&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.HEROKU_CREATE_OPTIONS }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bitwarden-serverを立ち上げたあとは、webからアクセスし、管理者アカウントを作成します。&lt;/p&gt;&#xA;&lt;p&gt;そのserver(address)を使って、bitwarden-clientからpass管理や自動入力を行います。もちろん、pass管理はwebからもできます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、多くの人がやりたいのは自動入力だと思うので、やはり、bitwarden-clientは必要になると思われます。&lt;/p&gt;&#xA;&lt;p&gt;bitwarden-clientでは、初期画面に設定アイコンみたいなものがあると思うので、そこから先程立ち上げたserverのaddressを設定します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/bitwarden_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;例えば、chromeからtwitterに自動入力したい場合は、&lt;code&gt;twitter.com/login&lt;/code&gt;にアクセスして、chrome addonのbitwardenのアイコンをクリックします(あらかじめtwitterのpassを登録しておく必要があります)。&lt;/p&gt;&#xA;&lt;p&gt;使ってみた感想ですが、自動入力も便利ですが、登録とかも便利でした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、そのためにcloudに情報を置くのはちょっとオーバーだなと思いました。self-hostする場合、bitwarden-serverの運用や管理、維持も必要になってきます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;現在の運用段階&#34;&gt;現在の運用段階&lt;/h3&gt;&#xA;&lt;p&gt;現在の運用では、dbに保存するpassを制限し、つまり、流出してもあまり問題なさそうなアカウントのみで登録を行い、運用テストしています。&lt;/p&gt;&#xA;&lt;p&gt;また、当該repoは、dbに&lt;code&gt;heroku-postgresql&lt;/code&gt;ではなく、&lt;code&gt;autobus&lt;/code&gt;, &lt;code&gt;jawsdb&lt;/code&gt;などのaddonを使いますが、個人的には、これらのaddonを使用するのは不安要素も大きいです。&lt;/p&gt;&#xA;&lt;p&gt;このようなsecure要請が高い事柄においては、herokuでhostする場合、herokuが提供するaddonに限定したほうがいいと思ったので、&lt;code&gt;heroku-postgresql&lt;/code&gt;を使用するようにしました。option:envに項目はありましたが、あまり有効に機能してないような気もしましたので。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# yes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create heroku-postgresql -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$APP_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# no&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create autobus -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$APP_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create jawsdb -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$APP_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;backupも基本的には、herokuが提供するcmdで足りると思います。ただし、plan:hobby(free)の場合、backup数は限りがありますので注意です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# backup&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku pg:backups:capture -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$APP_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# restore&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku pg:backups -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$APP_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x001&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku pg:backups:restore x001 -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$APP_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;herokuはfreeの場合、30minでsleepしますので、以下のaddonは必要になるかもです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2021/08/11/pokemas/</link>
      <pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/11/pokemas/</guid>
      <description>&lt;p&gt;原神の進捗です。一応、ストーリーは最新まで進めた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210810_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ライヤー引いた</title>
      <link>https://syui.github.io/blog/post/2021/08/10/pokemas/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/10/pokemas/</guid>
      <description>&lt;p&gt;役割が明確なキャラ引いてる気がする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210810_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>twg v0.4.5 [twitter clinet on go]</title>
      <link>https://syui.github.io/blog/post/2021/08/09/twitter/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/09/twitter/</guid>
      <description>&lt;p&gt;twitter上でのやり取りが不便だったので、自分で使ってるtwgというclientをupdateしました。あと、imageをtweetする機能もつけました。&lt;/p&gt;&#xA;&lt;p&gt;app keyが入れてあるので、releaseからdlしてください。twitter apiの&lt;code&gt;consumer_key, consumer_secret_key&lt;/code&gt;を持っている人は、srcをbuildして使えます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/twg/releases&#34;&gt;https://github.com/syui/twg/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ciはtravisからgh-actionsに移行しましたが、またハマりました。&lt;/p&gt;&#xA;&lt;p&gt;goxでbuildする際に、darwin/386はunsuportのerrが出るので、optionで出力を指定してやらなければなりません。goは1.14からdarwin/386がunsuportされ、1.16では戻ったみたいですけど、errが出ます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&amp;gt; darwin/386 error: exit status &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stderr: cmd/go: unsupported GOOS/GOARCH pair darwin/386&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make: *** &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;build&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Error &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;その他、tagからverを抜き出すのは、&lt;code&gt;env: REF=${{ github.ref }}&lt;/code&gt;, &lt;code&gt;${REF##*/}&lt;/code&gt;がいいです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.github/workflows/releases.yml&#34; data-lang=&#34;yml:.github/workflows/releases.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;create&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;v*.*.*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# job_id&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Set up Go 1.16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/setup-go@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;go&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Check out code into the Go module directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@master&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GO111MODULE&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GOPATH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/runner/work/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_TOKEN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_REPOSITORY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.repository }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;C_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.C_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;REF&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.ref }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;CS_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.CS_KEY }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        export CREATE_EVENT_REF_TYPE=$(jq --raw-output .ref_type &amp;#34;$GITHUB_EVENT_PATH&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        go get -t -v ./...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        go get -u github.com/mitchellh/gox&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        go get -u github.com/tcnksm/ghr&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        $GOPATH/bin/gox -osarch &amp;#34;freebsd/arm linux/386 linux/amd64 linux/arm linux/mips64le linux/mips64 linux/mipsle linux/mips linux/s390x netbsd/386 netbsd/amd64 netbsd/arm openbsd/386 openbsd/amd64 windows/386 windows/amd64 darwin/amd64&amp;#34; -output &amp;#34;dist/{{.OS}}_{{.Arch}}_{{.Dir}}&amp;#34; -ldflags=&amp;#34;-X github.com/syui/twg/oauth.ckey=${C_KEY} -X github.com/syui/twg/oauth.cskey=${CS_KEY}&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        $GOPATH/bin/ghr --username syui --token ${GITHUB_TOKEN} --replace --debug ${REF##*/} dist/&lt;/span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ポケモンボックスのスライドを作ってみた</title>
      <link>https://syui.github.io/blog/post/2021/08/01/pogo/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/08/01/pogo/</guid>
      <description>&lt;p&gt;ボックスにお気に入りのポケモンが増えてきたので、以下のページでスクショをスライドできるようにしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/syui&#34;&gt;/syui&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近、全然プレイできてない。図鑑の分類とかフィールドとかアップデートがありました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210731_4.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210731_2.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210731_3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ピザを作ってみる</title>
      <link>https://syui.github.io/blog/post/2021/07/31/food/</link>
      <pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/31/food/</guid>
      <description>&lt;p&gt;私は、テリヤキチキンピザが大好きなので、自分でよく作る簡単レシピを紹介します。といっても、今回は材料がなかったので普通のピザです(正確にはピザですらない)。&lt;/p&gt;&#xA;&lt;p&gt;ポイントは食パンの端を2角切って、それを4つ合わせ、レンジします。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/private_food_20210731_02.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;更に分割したい場合はお好みで。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/private_food_20210731_03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;材料は、何でもいいですけど、今回はケチャップ、チーズ、ベーコンを基本とします。テリヤキチキンにする場合は、たこ焼きソース、チーズ、冷凍チキンとか使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/private_food_20210731_01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;電子レンジは750wで4分ほどかな。あと、端にマヨネーズとソースかけてます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/private_food_20210731_04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;余ったパンの耳は、バター付けて、砂糖ふりかけて4分くらい焼きます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/private_food_20210731_05.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;個人的には、手軽で美味しいのが好きです。なので、ハンバーガーとかピザとか大好きです。&lt;/p&gt;&#xA;&lt;p&gt;手軽さの基準は、材料がどこでも手に入ること、短時間で完成すること、面倒な作業がないことの3つを条件とします。&lt;/p&gt;&#xA;&lt;p&gt;美味しさの基準は、完全に個人的な好みですね。このレシピはピザっぽい味を簡単にできるので、好きです。(一応、自分で考えたやつだけど、探せばどこかにありそう)&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた91</title>
      <link>https://syui.github.io/blog/post/2021/07/28/illust/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/28/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_91.png&#34; alt=&#34;/img/yui_91.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、八重神子</title>
      <link>https://syui.github.io/blog/post/2021/07/24/genshin/</link>
      <pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/24/genshin/</guid>
      <description>&lt;p&gt;原神では、ストーリーが第二章まで進みました。あれ、これって最新じゃ&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;ストーリーを進めてて思ったんですけど、これはまずいです。間違いなく攻略がきつくなっていて、全滅しかける場面が何度かありました。&lt;/p&gt;&#xA;&lt;p&gt;というわけで、ここらへんで強キャラを引くしかないという状況です。&lt;/p&gt;&#xA;&lt;p&gt;まあ、配布キャラ育てればいいんですけど、後々、強化とかレベル上げ無駄になっちゃう気がするので。&lt;/p&gt;&#xA;&lt;p&gt;さて、今回、強キャラを引くしかない状況に前回よりさらに陥ってるため、どれを引くべきか。考察というか予測していきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;現時点で候補に挙がっているのが、雷電と八重神子です。&lt;/p&gt;&#xA;&lt;p&gt;もしかしたら、八重神子のほうが強キャラってこともあり得るじゃないかと思ってます。見た目も雷電より好みなので、同じくらいなら八重神子のほうを引くと思う。&lt;/p&gt;&#xA;&lt;p&gt;ということで、もし八重神子がtier1、SSと呼ばれる強さだったら、個人的にはうれしいです。&lt;/p&gt;&#xA;&lt;p&gt;以上&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、パイモン</title>
      <link>https://syui.github.io/blog/post/2021/07/23/genshin/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/23/genshin/</guid>
      <description>&lt;p&gt;今回は、原神ってなんだろうという考察になります。&lt;/p&gt;&#xA;&lt;p&gt;といっても、そこまで大掛かりな考察をするわけでもなく、色々と思ってるところはあるものの、簡潔にポイントだけ述べたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;原神、ゲームのタイトルですよね。&lt;/p&gt;&#xA;&lt;p&gt;では、この原神ってなんだろうってことですけど、私は、パイモンなんじゃないかと思っています。&lt;/p&gt;&#xA;&lt;p&gt;これは、このゲームを見て最初に思ったことなんですが、アイコンがパイモンですよね。原神という名のゲーム、そして、アイコンがパイモン。&lt;/p&gt;&#xA;&lt;p&gt;とすれば、原神ってパイモンなんじゃないかなって思いました。&lt;/p&gt;&#xA;&lt;p&gt;では、原神ってなんだろうって話なんですが、原神の世界では、7つの元素があり、7つの国があり、七神がいるような世界です。&lt;/p&gt;&#xA;&lt;p&gt;このような世界で原神といったら、それら7つの元素を生み出したのが原神なんじゃないかと私は予想してます。&lt;/p&gt;&#xA;&lt;p&gt;以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ランク35</title>
      <link>https://syui.github.io/blog/post/2021/07/22/genshin/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/22/genshin/</guid>
      <description>&lt;p&gt;やっと冒険者ランク35になりました。これでストーリーが進められます。&lt;/p&gt;&#xA;&lt;p&gt;で、現在、どんな感じなのかというと、ほぼデイリーミッションしかやっておらず、かつクレーしか使ってません。というより、クレーしか頼れない&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;まずデイリーがつらい。忙しい日もあり、最後のほう、デイリーすらできない日もありました。&lt;/p&gt;&#xA;&lt;p&gt;それでもなんとか、デイリーやってたらランク上がりました。&lt;/p&gt;&#xA;&lt;p&gt;次にクレーしか使ってない理由ですが、現状、クレーしか強いキャラ、強化しているキャラがいないのです。ガチャ回してないんで。&lt;/p&gt;&#xA;&lt;p&gt;ですから、クレーしか使ってないし、言い換えれば、クレーしか使えないのです。クレーしか頼れるキャラがおらず、クレーでしか攻略できない状態です。&lt;/p&gt;&#xA;&lt;p&gt;確かに、私は「クレーを使いたい」って、最初にそう言いましたけど&amp;hellip;でも、ここまで使いたかったわけじゃないよっ！&lt;/p&gt;&#xA;&lt;p&gt;他のキャラも強化すればいいって話ですけど、やっぱり最終的に使うキャラを強化したいじゃないですか。そんな理由から、クレー以外のキャラは強化してないです。強化するのも大変ですから、強化するなら好きなキャラか、あるいは強キャラにしよう決めています。&lt;/p&gt;&#xA;&lt;p&gt;そんなこともあり、攻略がちょっとつらくなってきてる感じする。&lt;/p&gt;&#xA;&lt;p&gt;例えば、クレーは炎スライム、戦えないんですよね。なので、炎スライムが出てきたときなんか、戦闘時間が半端なく長くなってしまいます。&lt;/p&gt;&#xA;&lt;p&gt;クレーは好きなキャラですけど、でも、このままでは攻略がつらくなってくるだろうし(現在はそこまでではないけど)、早く強キャラが&amp;hellip;ほしい！&lt;/p&gt;&#xA;&lt;p&gt;で、強キャラの話に移るんですけど、原神のお話は大抵、飛ばしてみてるので、あまり詳しくもないですけど、でも、私が認識してる部分を少しだけお話しします。&lt;/p&gt;&#xA;&lt;p&gt;原神の世界には7つの元素があり、それぞれに国があります。&lt;/p&gt;&#xA;&lt;p&gt;そして、各国には神と呼ばれる「神の心」を持った人(キャラ)がいます。&lt;/p&gt;&#xA;&lt;p&gt;「神の心」は「神の目」の上位互換みたいなものなのかな。この世界では「神の目」を持つと元素の力を扱えるようになるみたい。&lt;/p&gt;&#xA;&lt;p&gt;元素の力というのは、魔法みたいなものですね。&lt;/p&gt;&#xA;&lt;p&gt;「神の目」は生まれ持つものらしく、しかし、旅人という名の主人公は例外だったと思う。なぜ「神の目」を持たず元素の力を使えるのか、みんなに不思議がられてた感じだったと思います。その理由については今後のストーリーで明らかになってくるのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、原神の世界では、魔法である元素の力を扱える人がいて、それは生まれながらに「神の目」と呼ばれる器官を持っているからです。そして、元素は7つあり、それぞれに国があります。そして、その国を治めていた人が神と呼ばれ、その神は「神の目」の上位互換である「神の心」を持っている、そんな感じの設定だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、「神の心」は、他人に渡したり、あるいは奪われたりすることがあるらしい。そのため、「神の心」を集める集団が登場し、物語的には、そいつらをやっつけるみたいな話ですかね。&lt;/p&gt;&#xA;&lt;p&gt;長くなりましたが、強キャラの話です。&lt;/p&gt;&#xA;&lt;p&gt;原神では、どうやらこの神、あるいは元神が強キャラに設定されているようで、ガチャでピックアップされたときは狙い目だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、それ以外にも強いキャラはいますけど、基本的には、神を狙っとけばハズレは少ないはず。&lt;/p&gt;&#xA;&lt;p&gt;現在、実装済みなのは、風のウェンティと岩のショウリです。この二人は強キャラ認定されてる。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、今、私がほしいのは、ショウリ、カンウですね。&lt;/p&gt;&#xA;&lt;p&gt;ガチャというのはピックアップされないと引けないので、ピックアップされるまで待つ必要があります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、次に来るのが雷の神、ライデンと予想されており、タイミング的に私がガチャをやるのはこの辺になりそう。&lt;/p&gt;&#xA;&lt;p&gt;なので、ライデンが最強キャラとかだったらうれしい。&lt;/p&gt;&#xA;&lt;p&gt;以上、原神の進捗報告でした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>デスクトップ写真2</title>
      <link>https://syui.github.io/blog/post/2021/07/21/desk/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/21/desk/</guid>
      <description>&lt;p&gt;デスク周りの様子を記録しておきます。オタクグッズがちょっとずつ増えてきた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_10.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_10.jpg&#34; alt=&#34;desk-figure-ai&#34;/&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_11.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_11.jpg&#34; alt=&#34;desk-figure-ai&#34;/&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>windows 11にupgradeしてみた</title>
      <link>https://syui.github.io/blog/post/2021/07/16/windows/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/16/windows/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/windows_11_preview_ver_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;UIメニューはwindows 10よりカチッとしててよいと思いました。&lt;/p&gt;&#xA;&lt;p&gt;おわり。&lt;/p&gt;&#xA;&lt;p&gt;windowsはpowershellが来たvista以降、内部的にはあまり変わってないらしいです。&lt;/p&gt;&#xA;&lt;p&gt;参照 : &lt;a href=&#34;https://japanese.engadget.com/windows-103000902.html&#34;&gt;https://japanese.engadget.com/windows-103000902.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた90</title>
      <link>https://syui.github.io/blog/post/2021/07/14/illust/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/14/illust/</guid>
      <description>&lt;p&gt;最近、「最初から丁寧に描いたほうがよくない?」と思い始めてるので、最初から丁寧に描く絵が増えてる気がする。&lt;/p&gt;&#xA;&lt;p&gt;丁寧に描くと素材にも使える可能性が出てくるので、一石二鳥。&lt;/p&gt;&#xA;&lt;p&gt;雑に描いては修正するの、もう懲り懲りです&amp;hellip;。(n回目&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_90.png&#34; alt=&#34;/img/yui_90.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を飾ってみた</title>
      <link>https://syui.github.io/blog/post/2021/07/13/illust/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/13/illust/</guid>
      <description>&lt;p&gt;以前、額縁が余ってるので絵を飾ろうとしたんだけど、失敗して、なぜかアイコンを飾る羽目になったんだけど、再挑戦してみることにした。&lt;/p&gt;&#xA;&lt;p&gt;前回はしっくりくる飾りたい絵がなかったので、今回はそれ用に作って飾ることに。&lt;/p&gt;&#xA;&lt;p&gt;なにやってんだという感じだけど、一応、満足。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/private_room_illust_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;src : &lt;a href=&#34;https://syui.github.io/img/yui_89.png&#34;&gt;/img/yui_89.png&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画描いた1</title>
      <link>https://syui.github.io/blog/post/2021/07/11/manga/</link>
      <pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/11/manga/</guid>
      <description>&lt;p&gt;漫画、描いてみました。以前のナンバリングを忘れてしまったので、これが1ってことにします。近々、続き書くかはわかりませんが。&lt;/p&gt;&#xA;&lt;p&gt;一応、スライドで読みやすくしてるやつはこっち(だけど、最初のページ探さないといけない)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/manga/45.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/46.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/47.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/48.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/49.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/50.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/51.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/52.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/53.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/54.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/55.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;漫画、一度経験しておきたかった戦闘シーンを以前書いたので、これからは普通に、日常とギャグ中心のストーリー展開をしていければとは思ってます。&lt;/p&gt;&#xA;&lt;p&gt;これ2日くらいで書き上げたため、どうも下書きっぽくて、気が向けば後々修正入れるかもしれません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>androidでlocal terminalを使ってみる</title>
      <link>https://syui.github.io/blog/post/2021/07/08/android/</link>
      <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/08/android/</guid>
      <description>&lt;p&gt;aospではdev modeでterminalが含まれるようになっており、local terminalという名前でterm appが使えるっぽいので試してみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nexus7_android11_lineageos_04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;アイコンは公式なのでかっこいいんですけど、設定できないので使いづらかった。&lt;/p&gt;&#xA;&lt;p&gt;私はrootで使うことが多く、androidはrootの$HOMEを&lt;code&gt;/&lt;/code&gt;に設定されており、これだとrootfsでinitramfsを採用することから、例えば、&lt;code&gt;/.bashrc&lt;/code&gt;というファイルをtwrpとかremountとかして置いたとしても、再起動後に消えてしまうので、事実上、root shellの設定ファイルが使えないようになってます。&lt;/p&gt;&#xA;&lt;p&gt;したがって、仮にroot shellをcustomするとなると、imgをbuildして、fastboot flash systemするしかありません。&lt;/p&gt;&#xA;&lt;p&gt;今まではandroid terminal emulatorの設定で色々と工夫して、aliasみたいなものを設定して使ってました。&lt;/p&gt;&#xA;&lt;p&gt;archlinuxのbootは、magiskでbusyboxのmoduleをinstallしたあと、&lt;code&gt;/data/adb/magisk/busybox&lt;/code&gt;から起動することにしました。busyboxを&lt;code&gt;/system/bin&lt;/code&gt;に入れても、そのうち消えるので。&lt;/p&gt;&#xA;&lt;p&gt;このへん、もう忘れてしまってるんですが、supersuでは/system/bin/がrwでmountされてた気がする。magiskは一時的にpath解決するだけなのではないかと。&lt;/p&gt;&#xA;&lt;p&gt;この回避策として思い浮かぶのは、chainfire氏のcf-auto-rootでexploitする際、imgにbusyboxを含めることで/system/binに書き込めそうだと思いましたが、magiskで管理したほうがbusyboxのupdateに対応しやすいので、こちらを採用しました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nexus7をandroid 11にupgradeしてみた</title>
      <link>https://syui.github.io/blog/post/2021/07/07/android/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/07/android/</guid>
      <description>&lt;p&gt;nexus7はかなり長く使っていて、はじめて体験するandroidとしては、とてもよい体験だったと思います。公式romはandroid 6.xがlatestで、私もそれを使用していました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、nexus7は、custom romがandroid 10までありますし、lineage(android 11)もインストールが可能なので、最新のandroidを試してみることにします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;lineageandroid-11-base&#34;&gt;lineage(android 11 base)&lt;/h3&gt;&#xA;&lt;p&gt;今回は、android 11ベースのlineageをインストールします。&lt;/p&gt;&#xA;&lt;p&gt;twrp : &lt;a href=&#34;https://twrp.me/asus/asusnexus72013wifi.html&#34;&gt;https://twrp.me/asus/asusnexus72013wifi.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;lineage os 18.1 : &lt;a href=&#34;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-18-1-2021-06-10.3569067/&#34;&gt;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-18-1-2021-06-10.3569067/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;sysrepart_1280_120.zip : &lt;a href=&#34;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-18-1-2021-06-10.3569067/&#34;&gt;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-18-1-2021-06-10.3569067/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;opengapps(android 11) : &lt;a href=&#34;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-18-1-2021-06-10.3569067/&#34;&gt;https://forum.xda-developers.com/t/rom-flo-deb-unofficial-lineageos-18-1-2021-06-10.3569067/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb reboot-bootloader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fastboot flash recovery twrp.img&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fastboot boot twrp.img&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb push sysrepart.zip /sdcard/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# twrp -&amp;gt; install -&amp;gt; sysrepart&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb push lineageos.zip /sdcard/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb push opengaaps.zip /sdcard/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# twrp -&amp;gt; install -&amp;gt; lineage, opengaaps&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nexus7_android11_lineageos_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;magisk-root&#34;&gt;magisk root&lt;/h3&gt;&#xA;&lt;p&gt;root化は現在、magiskが一般的らしい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb install magisk.apk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# magiskでlineageのboot.imgにpatchを当てる&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb pull /sdcard/Downloads/magisk_patched.img&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb reboot-bootloader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ fastboot flash boot magisk_patched.img&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;firewallとterminalがroot化されてる図。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた88</title>
      <link>https://syui.github.io/blog/post/2021/07/06/illust/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/06/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_88.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jquery.terminalで検索機能とか付けてみた</title>
      <link>https://syui.github.io/blog/post/2021/07/05/jquery-terminal/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/05/jquery-terminal/</guid>
      <description>&lt;p&gt;追加した機能とかを簡単に紹介します。これくらい設定したら自分でも使うかも。こういうのは楽しければいいって思ってたんですが、まあまあ便利そうになってしまった気がする。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 通常検索、contentから&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ search arch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ / arch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# タグ検索、shellの&amp;lt;tab&amp;gt;補完も付けてみた(タグ補完&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ search -t &amp;lt;tab&amp;gt;hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 最新記事&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ search -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# user ipでloginします(promptをipに変えてるだけ&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl ipapi.co&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:term.js&#34; data-lang=&#34;js:term.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://syui.ai/index.json&amp;#39;&lt;/span&gt;, { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt; })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;index_json&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stringify&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\t&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;origin_index_json&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;index_json&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;origin_index_json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;indexOf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;)};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;indexOf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;user_ip&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;curl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipapi.co&amp;#39;&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ajaxSetup&lt;/span&gt;({&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getJSON&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://ipapi.co/json/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stringify&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\t&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;user_ip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stringify&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ip&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\t&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;/\&amp;#34;/g&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;});&lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ajaxSetup&lt;/span&gt;({&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set_prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[[b;#d33682;]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;user_ip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]@[[b;#6c71c4;]syui.ai] ~$ &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;search&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-l&amp;#39;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;origin_index_json&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;utc_time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;origin_index_json&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;origin_index_json&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;search&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;indexOf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tag : https://syui.ai/tags/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none tag!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;origin_index_json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;indexOf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;inputs&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;command&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;login&amp;#39;&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;login&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;password&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;callback&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;callback&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SECRET TOKEN&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set_prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[[b;#d33682;]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]@[[b;#6c71c4;]syui.ai] ~# &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;callback&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//} else if (term.token()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//&#x9;term.echo(&amp;#34;token&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>hugoで画像表示を自動化する</title>
      <link>https://syui.github.io/blog/post/2021/07/04/hugo/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/04/hugo/</guid>
      <description>&lt;p&gt;昨日紹介したvueを使った方法は、browserでjavascriptをdisableにしているuserには表示できないので、本来的にはhugoで解決したほうがいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;vueは基本的にjsで出力されるのに対して、hugoはhtmlで出力されるますので。&lt;/p&gt;&#xA;&lt;p&gt;したがって、hugoでの解決法も書いておきます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ export IMG_YUI&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls ./static/img/yui_*.png|wc -l|tr -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:layout/img/single.html&#34; data-lang=&#34;html:layout/img/single.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $yuin := getenv &amp;#34;IMG_YUI&amp;#34; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $yuil := int $yuin }} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $yuil := sub $yuil 1 }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/yui_{{ $yuil }}.png&amp;#34;&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ range $index, $val := seq $yuin }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{{ if lt $index 10 }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/yui_0{{ $index }}.png&amp;#34;&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{{ else }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/yui_{{ $index }}.png&amp;#34;&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;getenvで環境変数を取得後、最新の画像をトップに表示して、それ以降は順番通りに表示しています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>お絵かきの枚数が増えてきたので自動表示してみた</title>
      <link>https://syui.github.io/blog/post/2021/07/03/vue-img/</link>
      <pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/03/vue-img/</guid>
      <description>&lt;p&gt;今まで新しい絵を追加するたびに、手動でhtmlを書き換えてたんですが、面倒だなあと思いつつ、しかし、載せるタイミングは操作できるので別にいいかと思っていたのですが、流石に枚数が増えてきたので自動化しました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chara&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(n,index) of cid&amp;#34; :key=&amp;#34;n&amp;#34; :href=&amp;#34;&amp;#39;/img/c_&amp;#39;+ ( &amp;#39;00&amp;#39; + index ).slice( -2 ) +&amp;#39;.png&amp;#39;&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;/img/c_&amp;#39;+ ( &amp;#39;00&amp;#39; + index ).slice( -2 ) +&amp;#39;.png&amp;#39;&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Number(&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;VUE_APP_IMGNUMBERC&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; () {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;cid&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/main.js&#34; data-lang=&#34;js:src/main.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;$mount&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:vue.config.js&#34; data-lang=&#34;js:vue.config.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;configureWebpack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[name].js&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;chunkFilename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[name].js&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;css&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;extract&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[name].css&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;chunkFilename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[name].css&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;pngは&lt;code&gt;static/img/c_0x.png&lt;/code&gt;に置くと仮定して、自動化にはgh-actionsなどを活用してください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugoでsearchするやつ付けてみた</title>
      <link>https://syui.github.io/blog/post/2021/07/02/hugo-search/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/07/02/hugo-search/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/search&#34;&gt;/search&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;記事を検索したい場合、自分はcontent/postをgrepするだけなので、あまり使わないのですが、一応、webにも検索フォームを付けてみました。&lt;/p&gt;&#xA;&lt;p&gt;hugo + vue + lunr.jsです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、日本語はおそらく対応してない。対応するには日本語対応するためのlibを追加で読み込む必要がありそう。&lt;/p&gt;&#xA;&lt;p&gt;lunrに渡すdataは、hugoがjson出力できるので、それを使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:config.toml&#34; data-lang=&#34;toml:config.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;outputs&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;home&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JSON&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTML&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;jsはこんな感じで(要点記述だけですが)。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:static/script.js&#34; data-lang=&#34;js:static/script.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/index.json&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;searchIndex&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lunr&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ref&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;contents&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;documents&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt; =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>androidで動いてたarch-armが壊れた</title>
      <link>https://syui.github.io/blog/post/2021/06/28/android-armv7-arch/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/28/android-armv7-arch/</guid>
      <description>&lt;p&gt;android上で動かしてるarch-armのupdateを怠っていたのでpacmanがupdateできない状態、もしくは無理にupdateすると壊れる状態になってしまってたので、ほぼ詰みかけてた話です。&lt;/p&gt;&#xA;&lt;p&gt;通常、archlinuxは&lt;code&gt;pacman&lt;/code&gt;が壊れても&lt;code&gt;pacman-static&lt;/code&gt;のbinaryをdlしてくればいいんですけど、armにはそういうのがなかったので、pacmanが壊れると、ほぼどうしようもない感じだった。&lt;/p&gt;&#xA;&lt;p&gt;ただ、armv7hのpackage-binaryを公開してくれてる人がいたので、とても助かりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mirror.yandex.ru/archlinux-arm/armv7h/core/&#34;&gt;https://mirror.yandex.ru/archlinux-arm/armv7h/core/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://ftp.tku.edu.tw/Linux/ArchLinux-arm/armv7h/core/&#34;&gt;http://ftp.tku.edu.tw/Linux/ArchLinux-arm/armv7h/core/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本的に更新を怠ってたarch-armは、最初に&lt;code&gt;pacman -Sy base-devel&lt;/code&gt;します。これで一応、必要なpackageをupdateできるはずなんですが、今回はそれでも&lt;code&gt;pacman&lt;/code&gt;が壊れてる状態だったので、必要なものをftpから持ってきてbinaryを置き換えます。ちなみに、解凍とか面倒なら&lt;code&gt;zarchiver&lt;/code&gt;ってアプリを使いますが、便利です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -Sy base-devel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error : archive_entry_digest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# libarchive&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sLO http://ftp.tku.edu.tw/Linux/ArchLinux-arm/armv7h/core/libarchive-3.5.1-1-armv7h.pkg.tar.xz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ aunpack libarchive-3.5.1-1-armv7h.pkg.tar.xz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf ./libarchive-3.5.1-1-armv7h.pkg.tar/* /&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error libraries : libarchive.so.13 file too short&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls /etc/lib/libarch*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ln -s /usr/lib/libarchive.so.13.15.1 /usr/lib/libarchive.so.13&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman v6.0.0, libalpm v13.0.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -Syu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/android_archlinux_armv7h_pacman_6.0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;とりあえず直ったのでよかった。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、backup(2019)のarch-imgがあったので、次にやるなら、おそらく、それを&lt;code&gt;adb push&lt;/code&gt;すると思います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb push arch-arm-back-2019.img /sdcard/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 以下はあくまでイメージです、実際に実行できるコマンドではありません&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chroot /sdcard/arch-arm-back-2019.img&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S libarchive base-devel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -Syu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>herokuでgiteaが動かなくなってた</title>
      <link>https://syui.github.io/blog/post/2021/06/27/heroku-gitea/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/27/heroku-gitea/</guid>
      <description>&lt;p&gt;$USERではなく、&lt;code&gt;whoami&lt;/code&gt;で取るようにしました。&lt;/p&gt;&#xA;&lt;p&gt;herokuはUSERとPORTが変動しますので、仕組みに応じて環境変数を書き換える必要があります。今回もgiteaのdockerfileを使用します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git.syui.ai/syui/gitea&#34;&gt;https://git.syui.ai/syui/gitea&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:heroku.yml&#34; data-lang=&#34;yml:heroku.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;docker&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./Dockerfile&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo RUN_USER=`whoami` &amp;gt;&amp;gt; /data/gitea/conf/app.ini;mkdir -p /home/`whoami`;HOME=/home/`whoami`; echo &amp;#34;[server]\nPROTOCOL=http\nSSH_DOMAIN=git.syui.ai;DOMAIN=git.syui.ai\nHTTP_PORT=$PORT\nROOT_URL=https://git.syui.ai:$PORT&amp;#34; &amp;gt;&amp;gt; /data/gitea/conf/app.ini ;gitea web -p $PORT -c /data/gitea/conf/app.ini&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ちなみに、herokuは、1日おきに生成されたファイルをリセットしますので、例えば、webにpushするにしても&lt;code&gt;gitea/git&lt;/code&gt;に生成されたファイルは時間が経つと削除されてしまうので、localにpushする必要があり、生成された&lt;code&gt;gitea/git&lt;/code&gt;をgit-heroku-repoに含めてheroku-dockerにcopyしなければならず、herokuでのgitea運用は実用的ではありません。&lt;/p&gt;&#xA;&lt;p&gt;参照 : &lt;a href=&#34;https://syui.ai/blog/post/2019/12/06/gitea/&#34;&gt;https://syui.ai/blog/post/2019/12/06/gitea/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた87</title>
      <link>https://syui.github.io/blog/post/2021/06/26/illust/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/26/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_87.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた86</title>
      <link>https://syui.github.io/blog/post/2021/06/24/illust/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/24/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_86.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神をプレイしはじめて1週間が経過した</title>
      <link>https://syui.github.io/blog/post/2021/06/20/genshin/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/20/genshin/</guid>
      <description>&lt;p&gt;最初の1週間は動作確認くらいでほとんどプレイしてなかったので、それを除いて、実際にプレイしはじめて1週間くらい経過しました。&lt;/p&gt;&#xA;&lt;p&gt;今回は、原神をはじめて1週間くらいでどんな感じなのかを記録することにします。&lt;/p&gt;&#xA;&lt;p&gt;現在、冒険者ランク27で、ストーリーは1-1あたりです。次に進むにはランク29が必要らしい。&lt;/p&gt;&#xA;&lt;p&gt;マップはすべて埋めています。現在はドラゴンスパインを制覇していて、頂上にビーコンを置くところまでやりました。というか、風でこれ以上昇れないんですが、どうすればいいのでしょう。風の道はあるみたいなんですが&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210620_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;そんなことは置いといて、現在のパーティーはクレー、ノエル、バーバラ、フィッシュルです。クレーだけ強化していて、LV50の武器LV50です。限界突破にはどちらも冒険者ランク30以上必要なので、これ以上は上げられません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210620_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;クレーは、ダメージが最大3000ほど出せます。なので、耐久に気をつける必要はあるものの、ほとんどの敵は倒せてる感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210620_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その他のことは、まだ全然把握できていません。&lt;/p&gt;&#xA;&lt;p&gt;原石は5000ほど貯まっています。ガチャに使用するもので、最初に1000ほど使いクレーを1枚引いています。&lt;/p&gt;&#xA;&lt;p&gt;原石の使い道はすごく迷いましたが、新しいキャラに使う方針で貯めておくことにしました。&lt;/p&gt;&#xA;&lt;p&gt;本当はクレー2凸も目指したかったのですが、無課金では強キャラを引けないと詰みますので、続けたいなら強キャラを確実に引いたほうがいいと考えました。&lt;/p&gt;&#xA;&lt;p&gt;原神を続けるかどうかの判断ですが、このゲームは続けておいて損はないゲームだと感じました。オープンワールドで景色とかゲーム性とかキャラとか、きれいです。また、マルチがネトゲそのものですし、私はネトゲを本格的にやったことがなかったので、ネトゲは原神で体験していくことになりそう。原神は長続きしそうなゲームという雰囲気があります(運営が)。&lt;/p&gt;&#xA;&lt;p&gt;なので、みなさん、原神をはじめてみると、楽しいかもしれませんよ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、ドドコの物語</title>
      <link>https://syui.github.io/blog/post/2021/06/17/genshin/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/17/genshin/</guid>
      <description>&lt;p&gt;現在、冒険者ランク23です。6/15あたりからランク21で参加したんですが、6/17でランク23になってました。イベントすごい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210617_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;武器、次の限界突破がランク25からとか言われたので、これ以上はできなかった。&lt;/p&gt;&#xA;&lt;p&gt;今回のイベント「真夏！島？大冒険！」に参加するのにちょっと手間取ったので、それについて。&lt;/p&gt;&#xA;&lt;h3 id=&#34;本当の宝物はルピカの意味クリア後に受けられる&#34;&gt;「本当の宝物」は「ルピカの意味」クリア後に受けられる&lt;/h3&gt;&#xA;&lt;p&gt;イベント参加に冒険者ランク21であることが挙げられますが、これはなぜかというと、条件にクレーが登場する任務「本当の宝物」をクリアする必要があり、その受注がランク21からなんです(イベント期間のみ)。&lt;/p&gt;&#xA;&lt;p&gt;ちょっと注意が必要なんですが、この「本当の宝物」任務は、「ルピカの意味」という任務をクリアしないと受けられません。&lt;/p&gt;&#xA;&lt;p&gt;このへん、若干ハマりました。どこにも書いてなかったので。&lt;/p&gt;&#xA;&lt;h3 id=&#34;凸の意味とクレーを凸する意味&#34;&gt;凸の意味とクレーを凸する意味&lt;/h3&gt;&#xA;&lt;p&gt;私は今まで、引いたカードの枚数で1凸、2凸だと考えていました。ですから初めて引いたのが1凸、重複したのが2凸というようにです。しかし、この表記は間違ってたみたいで、どうやら重複してから数えるっぽいのです。ですから合計2枚引いたら1凸、3枚なら2凸です。ポケマスでもボード開放は2凸からということになります。今まで3凸と表記してました、ごめんね。&lt;/p&gt;&#xA;&lt;p&gt;ということで、現在、クレーは無凸、あるいは0凸です。クレーの2凸を目指そうか迷っています。&lt;/p&gt;&#xA;&lt;p&gt;というのも、今後のパーティーにもクレーを入れたいと考えていて、なぜかというと、現在強化してるのが武器含めクレーのみなので、せっかく強化したのが無駄になるのはもったいないという理由と、現時点で頼れるのはクレーのみなので、これからも強化していくことが予想されるためです。つまり、ストーリーを進めるにもイベントを攻略するにも現在はクレーがいないと何もできない状態。&lt;/p&gt;&#xA;&lt;p&gt;ですが、クレーに関して、聞くところによると、最初は使ってたけど、強いキャラを引いたので使わなくなったという声をよく聞きます。&lt;/p&gt;&#xA;&lt;p&gt;そのため、今後、強いキャラを引いたときにもクレーをパーティーに入れるため、最低でも2凸はしておきたいと考えています。2凸だと防御デバフでサポート役に回れるので。&lt;/p&gt;&#xA;&lt;p&gt;ですから、クレーの2凸を目指すか、あるいは原石をためて、次のピックアップを狙うべきか、悩んでます。&lt;/p&gt;&#xA;&lt;p&gt;現在考えているパーティーはクレー、甘雨、鍾離、アルベドです。こいつらを狙っていきたい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他の感想&#34;&gt;その他の感想&lt;/h3&gt;&#xA;&lt;p&gt;ストーリーやってると、ウェンティ、好きになってくる。最初は何だこいつって感じだったけど、いいやつだなって。考え方とかにある種の共感を覚えるので、よくできたキャラだと思う。こういう自然に好きになれるキャラ作れるの強い。&lt;/p&gt;&#xA;&lt;p&gt;クレー、エルフだったっぽい。アリスという破天荒な母親がいる模様。&lt;/p&gt;&#xA;&lt;p&gt;デイリー任務、すでにこなすのがつらくなってきている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、アオギリ&amp;カイオーガを引いた</title>
      <link>https://syui.github.io/blog/post/2021/06/11/pokemas/</link>
      <pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/11/pokemas/</guid>
      <description>&lt;p&gt;アオギリ&amp;amp;カイオーガは2回くらいで出た。&lt;/p&gt;&#xA;&lt;p&gt;余ってた数少ないダイヤ、おそらく600くらいだったと思うけど、それ使ったら単発で引きました。&lt;/p&gt;&#xA;&lt;p&gt;ついでにグラードンが天井で1凸だったので、メダル使って3凸にしといた。現在のEXは以下のような感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210611_0003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;よく使うやつはこんな感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210611_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケマス、原神をプレイしてるときにオート回すくらいの範囲で続けていこうと思ってます。かなりの要素できなくなるけどね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神、クレーを引いた</title>
      <link>https://syui.github.io/blog/post/2021/06/10/genshin/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/10/genshin/</guid>
      <description>&lt;p&gt;現在、序章の第二幕あたりだったかな。冒険者ランク14です。ちょうどデイリーミッションを初クリアしたところなんですけど、祈願(ガチャ)を回したら、クレー出た。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210611_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;14回したところで来た感じだったと思います&amp;hellip;まさか出るとは。ちなみに、原神もポケモンGoやポケマスと同じく無課金でやるつもり。&lt;/p&gt;&#xA;&lt;p&gt;私、原神で一番使いたいキャラがパイモン(使用できない)で、二番目にクレーなので、これは嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;今後の進め方なんですが、正直、武器とかキャラとかわかってないので、しばらくは原石ためて、使い所を判断できるようにしたい。ゲームについてなんとなくわかってきたら、必要そうなところで使う予定です。原石ためるには、デイリーをこなし、ストーリーを進めていく感じだと思う。&lt;/p&gt;&#xA;&lt;p&gt;それ以外で自分が今できるのは、ドドコの物語っていう武器を手に入れることかなと思っていて、クレーが使える武器らしい。参加条件は以下の通り。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;冒険ランク21以上&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;「魔神任務・序章第3幕」クリア&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;クレー伝説任務「本当の宝物」クリア(イベント中は冒険ランク21以上で受注可能)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;なので、冒険者ランク21まで上げるのとストーリー進めるの頑張る。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神をプレイする環境を整えてみる</title>
      <link>https://syui.github.io/blog/post/2021/06/09/genshin/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/09/genshin/</guid>
      <description>&lt;p&gt;今回は、原神をプレイしている環境の話をします。&lt;/p&gt;&#xA;&lt;p&gt;ipad 7thは原神の推奨端末に含まれていませんが、祈願のところまでプレイしたところ、動作に問題は見られませんでした。なので、今の所は普通にプレイできている状態です。&lt;/p&gt;&#xA;&lt;p&gt;ipadを固定するやつは、自転車ホルダーを使用しています。これが非常に便利なんですよ。机とかにそのまま置いても固定装置として機能しますし、本来の仕様通り自転車とか柱とかに固定しても使えます。&lt;/p&gt;&#xA;&lt;p&gt;コントローラーは、ps5のものを使用しています。タッチのほうが操作しやすいという人もいて、それはそうかもしれません。アイコンをタップできるので、タッチのほうが便利なんですよね。寝転がりながらできますし。&lt;/p&gt;&#xA;&lt;p&gt;原神 : &lt;a href=&#34;https://apps.apple.com/jp/app/id1517783697&#34;&gt;https://apps.apple.com/jp/app/id1517783697&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ipad 7th : &lt;a href=&#34;https://support.apple.com/kb/SP807&#34;&gt;https://support.apple.com/kb/SP807&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;固定装置 : &lt;a href=&#34;https://www.amazon.co.jp/dp/B091CF3QV3&#34;&gt;https://www.amazon.co.jp/dp/B091CF3QV3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;コントローラー : &lt;a href=&#34;https://www.amazon.co.jp/dp/B08GG1QSRR&#34;&gt;https://www.amazon.co.jp/dp/B08GG1QSRR&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_09.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;クレーについて&#34;&gt;クレーについて&lt;/h3&gt;&#xA;&lt;p&gt;原神ではクレーを使って冒険したいだけなので、クレー引きたいんですけど、原神のガチャってかなり渋いらしい。&lt;/p&gt;&#xA;&lt;p&gt;なので引けるかはわかりません。というか、おそらく引けない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、祈願(ガチャ)は、冒険ランク10でコード使って、冒険ランク12からデイリーやって原石を集める感じだと思うので、期間中はストーリー進めながらやるつもりです。&lt;/p&gt;&#xA;&lt;p&gt;何をやればいいのか、まるでわからん。戦い方とかもわからん状態。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、ノエル引いて、連続攻撃+ジャンプ(キャンセル)して戦ってます。フィッシュル引いたので、それも使ってるんですけど、これでいいんだろうか。&lt;/p&gt;&#xA;&lt;p&gt;プレイしてると酔うので、ちょっとつらい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケマスについて&#34;&gt;ポケマスについて&lt;/h3&gt;&#xA;&lt;p&gt;関係ないですが、ポケマスで新イベントがあるので、それが落ち着くまではポケマスもやろうかなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスはオートで回せるので、余ってるiphone seを引っ張り出してきて、ディスプレイを取り付け、バッテリーも取り付けて、これちょっと基盤がusb接続あたり壊れてるので接続しづらいんだけど、なんとかファームウェア入れて起動させました。ファームウェア入れるのも苦労しましたが、リカバリモードでファームウェアを選択して実行すると再起動後にインストールが失敗してしまうので、再起動直後にusbを再接続しないとうまくいかないところが難点でした。しかも接続が上手くいってるか確認する方法もないので無事を祈るしかないという。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、マツブサ&amp;グラードンを引いた</title>
      <link>https://syui.github.io/blog/post/2021/06/06/pokemas/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/06/pokemas/</guid>
      <description>&lt;p&gt;マツブサ&amp;amp;グラードンを天井で引きました。アメ(メダル)を使って凸強化などをしています。個人的には、レッド超えの最強キャラだと思うので、ポケマスやってる人は絶対に引いておいたほうがいいです。&lt;/p&gt;&#xA;&lt;p&gt;なんか大体のキャラは天井で無理やり引いてる気がするんですけど。レッドも天井だったし&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210606_0002.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210606_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ということで、最難関も無事クリアです！&lt;/p&gt;&#xA;&lt;p&gt;話は変わりますが、ポケマスはこのへんで休止しようかなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;理由としては、ポケマスのほうに問題があるわけじゃなくて、原神をプレイしたいからです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、マツブサ&amp;amp;グラードンは3凸しておきたいので、月曜日にヴィラをクリアして、カイオーガ10連して、赤アメをもらうとこまではやるつもり。これで3凸できる予定。&lt;/p&gt;</description>
    </item>
    <item>
      <title>原神をプレイしてみた</title>
      <link>https://syui.github.io/blog/post/2021/06/05/genshin/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/05/genshin/</guid>
      <description>&lt;p&gt;前から興味があった原神をプレイしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/genshin_20210605_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在、スマホゲーム(ガチャゲーム)は、どれをやっていこうか迷っている状態です。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoは決まりとして、あと一つがなかなか決まらない。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、初めてプレイしたのがポケモンGoなので、これは確定です。それ以外にプレイしたものとしてはingress、魔法同盟、ポケマスがあります。もうポケモンGoだけでもいいかと思ったりもするんですけど&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;最大2つが限界なので、例えば、原神をやるなら、ポケマスを停止する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;さて、今回プレイした原神ですが、なかなかよさそうでした。ipad 7thでプレイしたんですけど、普通にプレイできました。ただ、ipad 8th以降が推奨らしいです。&lt;/p&gt;&#xA;&lt;p&gt;macbook(m1)でもプレイできるみたいですが、11.2以下にダウングレードする必要があるみたい。m1ではiosのアプリが動かせるので、それを使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sekailab.com/wp/2021/05/04/downgrade-mac-osx-to-play-genshin/&#34;&gt;https://sekailab.com/wp/2021/05/04/downgrade-mac-osx-to-play-genshin/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;実は、原神を快適にプレイするためmacbookやipadの購入も検討してました。&lt;/p&gt;&#xA;&lt;p&gt;windowsでやればいいんだけど、自分が持ってるのはデスクトップだし、原神をパソコンにインストールするのに抵抗があったので選択肢としては採用したくなかった。iosアプリならそのへんのプライバシー権限を把握しやすそう。&lt;/p&gt;&#xA;&lt;p&gt;それに、やっぱゲームって携帯型でプレイしたいじゃないですか。あれ、違います？&lt;/p&gt;&#xA;&lt;p&gt;ですが、手持ちのipad 7thでも動作することを発見、これはやるしかねえ、ということでプレイするに至る。&lt;/p&gt;&#xA;&lt;p&gt;(本当は原神に登場するクレーって子がかわいかったからなんですけどねっ！)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、グラードン</title>
      <link>https://syui.github.io/blog/post/2021/06/03/pokemas/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/06/03/pokemas/</guid>
      <description>&lt;p&gt;ポケマス史上最難関バトルをクリアx3しました。ちなみに、カイオーガもグラードンもどちらも持っていません。グラードンのガチャ、爆死中なんで。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210603_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;正直、無課金勢にクリアはきついと思う。私も無課金なので、ギリギリだったと思います。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、こういうイベントは否定的ではありません。そもそも最初はクリアしないつもりだったんだけど、ギリギリいけそうな感じもしたのでちょっとやってみただけなので。&lt;/p&gt;&#xA;&lt;p&gt;したがって、本来的には「こういうイベントがあっても、まあいいんじゃない」という立場でした。&lt;/p&gt;&#xA;&lt;p&gt;今回、使用したのはハルカ&amp;amp;ラグラージ、アーティ&amp;amp;トゲピー、ツツジ&amp;amp;ダイノースです。タンクはダイノース。&lt;/p&gt;&#xA;&lt;p&gt;ポイントだけ抑えると以下のとおりです。感触では下記のすべての条件を満たさないとクリアできなかった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最初は雨にする&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;B技打てるとき相手が晴れにした上でソーラービーム打ってくるので、晴れにされた直後、雨に書き換える。そのため1ターンB技打つのを遅らせる。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最初のB技は急所に当てる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ソーラービームを耐えたあと、回復する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;雨の回数回復が発動していること前提で、B技前に雨にする&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;例えば、この条件が一つでも足りないとダメなので、例えば、最初のB技が急所に当たらなかった段階でやめるなどします。また、雨の回数回復が発動してないとだめだったり、条件が厳しいので、何度かやり直すことになりました。&lt;/p&gt;&#xA;&lt;p&gt;次は、カイオーガなんですけど、グラードンがもうすぐ天井なのでそれ引いたら倒せると思う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210603_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた85</title>
      <link>https://syui.github.io/blog/post/2021/05/30/illust/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/30/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_85.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた84</title>
      <link>https://syui.github.io/blog/post/2021/05/29/illust/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/29/illust/</guid>
      <description>&lt;p&gt;ドラクエの新作が発表ということで、ドラクエっぽい設定で描いてみた。といってもかなり適当で、毎回どんな絵にしようか、背景周りは割と悩むんで、あくまでコンセプトとして。&lt;/p&gt;&#xA;&lt;p&gt;「ドラクエだ！今度書くのはこんな感じにしてみよう」って感じの思いつき。実は、ドラクエは、昔は好きで全作プレイしてたんだけど、最近はプレイしなくなっちゃって、新しいやつほとんど追えてなかったりもする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Aはアタックの略で、まあ、与えるダメージ量でイメージしてもらえればと思います。これもドラクエ基準&amp;hellip;かな(適当)。11110とかの値は、ドラクエでいうと、かなり大きいと言うか、限界突破してますね&amp;hellip;。いわゆる「おれつえー」ってやつかも。とても痛いです、恥ずかしい。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、最初のキャラっていうのは、こうなっちゃうもんだと思う。痛くない感じの「おれつえー」したい。&lt;/p&gt;&#xA;&lt;p&gt;どうすればできるのでしょうか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた83</title>
      <link>https://syui.github.io/blog/post/2021/05/28/illust/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/28/illust/</guid>
      <description>&lt;p&gt;走ってるところを描いたことなかった気がするので描いてみた。あと、背景が地味だったので、適当にエフェクトでごまかしてる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_83.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;&#xA;&lt;p&gt;この前描いたアナログ絵を再現してみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_82.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここに掲載するイラストは、なかなかうまくかけなかったやつで何度か書き直してる。&lt;/p&gt;&#xA;&lt;p&gt;描けるときは一発なんだけど、それ外すと何度修正しても納得したものに仕上がらないというのがある。&lt;/p&gt;&#xA;&lt;p&gt;何が言いたいのかというと、うまく描けるときと描けないときがあって、後者の場合は、何度修正しても納得したものに仕上がりにくいってことだと思う。&lt;/p&gt;&#xA;&lt;p&gt;でも、懲りずに今回も過去絵をいくつか修正してる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_73.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_71.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;もうこの辺でいいんじゃないというものには仕上がったと思ってるけど、修正に修正を重ねたイラストってのは、結局、最終的に納得できた試しがあまりない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>楽天モバイルの使用感</title>
      <link>https://syui.github.io/blog/post/2021/05/27/mobile/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/27/mobile/</guid>
      <description>&lt;h3 id=&#34;楽天モバイルの使用感は最高レベル&#34;&gt;楽天モバイルの使用感は最高レベル&lt;/h3&gt;&#xA;&lt;p&gt;以前、楽天モバイルはすごくいいって書いたのですが、未使用だったので、使用してみた上で評価をしていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私は現在、以前から使っていたso-netのnruoモバイル(旧0sim)を併用しています。実は、0simに移行する前もdocomoのパケホーダイを半年ほど併用した上で移行を決めたことがあります。&lt;/p&gt;&#xA;&lt;p&gt;普通はさっさとdocomoを切ればいいのですが、実際に半年間併用してみて、自分がどれほどパケットを消費するか、使用感など確認する目的がありました。結果、0simに移行しても全く問題ないと判断し、移行を決めた経緯があります。ですので、しばらくの間は一見して無駄のように思える併用をしています。&lt;/p&gt;&#xA;&lt;p&gt;楽天モバイルに話を戻すと、楽天モバイルはプランや様々な記事内容を見る限り、多少、使用感に問題があったとしても、私は最高レベルの評価をしたでしょう。将来的にこういうことをやる会社がユーザーを獲得してほしいという思いがありました。&lt;/p&gt;&#xA;&lt;p&gt;そのことを前提に評価しますが、実は、楽天モバイルを1ヶ月ほど使用してみると、使用感も素晴らしかったです。&lt;/p&gt;&#xA;&lt;p&gt;これは住んでいる地域によるかもしれませんが、電波は常に良好で問題になることがありませんでした。また、料金などを確認するアプリも使いやすく、わかりやすいと思いました。&lt;/p&gt;&#xA;&lt;p&gt;インフラというジャンルにおいて、プラスよりもマイナスがないことのほうが重要なので、楽天モバイルは、使用感も最高レベルの評価をします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;楽天モバイルの特殊事情1年間無料期間後&#34;&gt;楽天モバイルの特殊事情、1年間無料期間後&lt;/h3&gt;&#xA;&lt;p&gt;次に、楽天モバイルの現在の特殊事情について少し書きます。&lt;/p&gt;&#xA;&lt;p&gt;私は現在、1年間料金無料のサービスが適用されている状態だと思います。私以外の多くのユーザーも同じようなサービスの適用を受けていると思われます。&lt;/p&gt;&#xA;&lt;p&gt;個人的な話になりますが、無料サービスの適用を受けても私は普段通り使うだけなので、1ヶ月/1GB未満の状態が3ヶ月続いています。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、「どれだけ使っても1年間は無料なのでたくさん使おう」とはなりません。無料期間中も1GB以内に抑えようという気持ちのほうが強い。&lt;/p&gt;&#xA;&lt;p&gt;ですが、他のユーザーも自分と同じように考えるとは限りません。ここでは、楽天モバイルを使っているユーザーの今後の動向を予想していきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;まず、「無料期間中はたくさん使って、期間が終わったら他に移ろう」と考えているユーザーがたくさん、あるいは一定数いることが予想されます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私の予想では、実際に他に移るユーザーはごく少数にとどまると考えています。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、移る理由が見当たらないからです。楽天モバイルの料金プランは、サービス期間がなくとも非常に魅力的です。他社よりも圧倒的に有意と言っていいでしょう。ですから、わざわざ面倒な手続きをして他社に移る人は少ないと思います。&lt;/p&gt;&#xA;&lt;p&gt;次に、「無料期間中はたくさん使って、期間が終わったら1GB以内に抑えよう」と考えているユーザーもたくさんいると予想しています。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これらの人たちの試みは、それほどうまく行かないだろうと思います。&lt;/p&gt;&#xA;&lt;p&gt;ここが楽天モバイルの本来の狙いなのかもしれませんが、人はそう簡単に生活習慣を変えることはできません。&lt;/p&gt;&#xA;&lt;p&gt;使わない人は使わないし、使う人は使い続けるでしょう。期間が終わったら習慣を変えよう、習慣をやめようなんてのは、ほとんどの場合は成功しません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、「無料期間中はたくさん使って、期間が終わったら1GB以内に抑えよう」というユーザーは結果としてはごく少数にとどまると予想します。&lt;/p&gt;&#xA;&lt;p&gt;つまり、楽天モバイルは、プランも使用感もすごくいいので、一度獲得したユーザーが離れることは少ないというのが私の予測です。&lt;/p&gt;&#xA;&lt;p&gt;他社に移るのもめんどくさい、習慣を変えるのもめんどくさい、ですが、楽天モバイルは問題なく使えて、プランも良心的となれば、移る理由、やめる理由が思い当たりません。&lt;/p&gt;&#xA;&lt;p&gt;なので、楽天モバイルは、国内において一強になるポテンシャルを秘めていると思っています。以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、L50チャレンジ</title>
      <link>https://syui.github.io/blog/post/2021/05/25/pogo/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/25/pogo/</guid>
      <description>&lt;p&gt;ようやくレベル50チャレンジが終わりました。レイドx50のタスクが一番時間かかった(無課金勢)。&lt;/p&gt;&#xA;&lt;p&gt;L50チャレンジではポーズがもらえるわけですが、L48チャレンジのときにもらえるポーズが漫画版のレッドぽくて、L50のポーズはリーフ(ブルー)っぽいと勝手に思っていて、アバターを女性にしてみることに。&lt;/p&gt;&#xA;&lt;p&gt;原作は全プレイ済みで、主人公を女性にしたのは、剣盾のGEN8だけ。ポケモンGoでもやはり現実の性と一致させたいと思いつつ、ちょっとの間だけはこれでいこうと思っております。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、コーディネートはこんな感じで、ニンフィアの靴、買いましたが、ちょっとでかい気がする。名探偵コナン感(コナンは靴がでかい印象)。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210524_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ランニング、プラチナ取った</title>
      <link>https://syui.github.io/blog/post/2021/05/22/nike/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/22/nike/</guid>
      <description>&lt;p&gt;ランニング、プラチナ取りました。1ヶ月160kを達成すると取れるらしいので、そこ目標にやってました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210522_02.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;基本、ゆっくり走ってるので、余裕持って走れるペースはこれくらいらしいです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210522_01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;5/8くらいからアプリ始めた記憶があって、最初の頃は、スマホをポケットに入れてたんだけど、「ワークアウトを中断しています」とか言われ、14k走ったのに7kしかカウントされてなかったりだとか、その他も色々なアクシデントはあったけど、途中、ロックモードを発見して以降は問題なかったです。&lt;/p&gt;&#xA;&lt;p&gt;最終的な記録はこんな感じ。42kを走れたのもよかった。おそらく、アプリやってなかったら走っていませんでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210521_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ですが、日課のランニングにアプリ(スマホ)を持っていくのは、これで終わろうと思います。&lt;/p&gt;&#xA;&lt;p&gt;走ってるとき、スマホは結構邪魔になるし、割と重いし、持ってくの自体めんどいしで、割とモチベを下げる効果があるんです。&lt;/p&gt;&#xA;&lt;p&gt;日々のちょっとした障壁、たとえ些細なことでも、日課をやる上では必要ないので、取り除いがほうがいいのです。&lt;/p&gt;&#xA;&lt;p&gt;また、アプリで計測していると、どうしてもいつもより頑張っちゃうと思うんです。今回だって普段は絶対に走らない21kや42kを走ったりして、めちゃめちゃ疲れちゃってます。&lt;/p&gt;&#xA;&lt;p&gt;ということで、一旦、アプリは終了して、また、機会があれば、今回みたいに短期間だけアプリ入れて頑張っちゃうことはあるかもしんないけど、しばらくはなさそう。以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた、アナログ編</title>
      <link>https://syui.github.io/blog/post/2021/05/21/illust/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/21/illust/</guid>
      <description>&lt;p&gt;そういえば、アナログ絵は全く描いたことがないなあと思ったので、ボールペンで描いてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/illust_01.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;正直、アナログは、やり直しができないのがつらすぎる。色を塗るのも大変ですし、多分、もうやらないと思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた81</title>
      <link>https://syui.github.io/blog/post/2021/05/20/illust/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/20/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_81.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた80</title>
      <link>https://syui.github.io/blog/post/2021/05/19/illust/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/19/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_80.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>はじめて42kmを走ってみた</title>
      <link>https://syui.github.io/blog/post/2021/05/14/nike/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/14/nike/</guid>
      <description>&lt;p&gt;やってみようかなという気分だったので、この前、42.2kmを走ってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210514_01.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210514_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;42.195kmというと有名ですから、一度走ってみようと、そう思ったのです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私、ランニングにはあまり興味がないので、今まで走ったことがありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は日課だからやってるだけのランニングなんですが、そんな中、たまにやる気になることもあって、アプリを入れたとか、そういうことがあると、少しの期間だけは頑張ることがあります。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、今回もその類でしょう。すぐに飽きてやめちゃいますけどね。タイムとかもよくわからないし、興味もないので。他人がどれだけのタイムを出そうが、そんなことどうでも良くて、私は日課としてやるだけなので。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今回はたまたまアプリを入れたこともあって、ちょっと頑張ってみました。42kmは正直、きつかった。&lt;/p&gt;&#xA;&lt;p&gt;走り終わったあとは、頭の火照りは取れないし、足は吊るしで、なかなかしんどかった。でも寝たら治った。以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>i3でおすすめのvnc clientであるremmina</title>
      <link>https://syui.github.io/blog/post/2021/05/13/vnc/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/13/vnc/</guid>
      <description>&lt;p&gt;vnc clinetは色々ありますが、個人的には、&lt;code&gt;remmina&lt;/code&gt;が最もおすすめです。linuxでは主にこちらを使っています。&lt;/p&gt;&#xA;&lt;p&gt;remminaは、非常に柔軟性のあるvnc clientで、i3でも普通に動作すると思います。また、コマンドオプションも豊富です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S remmina&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ remmina -c vnc://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;password&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;@192.168.xx.xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.jp/index.php/Remmina&#34;&gt;https://wiki.archlinux.jp/index.php/Remmina&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>xtermとsixelでterminalに画像を表示する</title>
      <link>https://syui.github.io/blog/post/2021/05/12/xterm/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/12/xterm/</guid>
      <description>&lt;p&gt;sixelを使えば、terminalに画像を表示することができるようになります。ただし、端末がsixelに対応していなければなりませんし、sixelはvte対応だったかな。vteの問題があるterminalでは難しかったと思いますので、注意。&lt;/p&gt;&#xA;&lt;p&gt;例えば、xtermでは、以下のような感じで画像を簡単に表示できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yay -S libsixel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ xterm -ti vt340&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ img2sixel test.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>動画を作ってみた3</title>
      <link>https://syui.github.io/blog/post/2021/05/11/pogo/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/11/pogo/</guid>
      <description>&lt;p&gt;初回にカバンの中身を紹介しましたが、その続編になります。ポケモンのミュウも最後にちょっとだけ登場します。中二病っぽい内容になっていますが、ご了承ください。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/YoGzpIDkgQQ&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>mastodonでcommit-hashとdeploy-rubyをあわせて表示してみる</title>
      <link>https://syui.github.io/blog/post/2021/05/10/mastodon/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/10/mastodon/</guid>
      <description>&lt;p&gt;mastodonって下の方に現在のverが表示されてますよね。ここに、commit-hashとrubyを表示するやつを&lt;a href=&#34;https://mastodon.zunda.ninja/@zundan&#34;&gt;zunda&lt;/a&gt;さんがpull-reqついでに開発してたので、それを使うといいでしょう。herokuでは&lt;code&gt;SOURCE_VERSION&lt;/code&gt;からhashを取れるっぽい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zunda/mastodon/pull/27/files&#34;&gt;https://github.com/zunda/mastodon/pull/27/files&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby:lib/tasks/version.rake&#34; data-lang=&#34;ruby:lib/tasks/version.rake&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namespace &lt;span style=&#34;color:#e6db74&#34;&gt;:source&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  desc &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Record source version&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  task &lt;span style=&#34;color:#e6db74&#34;&gt;:version&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SOURCE_VERSION&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# available on Heroku while build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; hash&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;blank?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;begin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`git rev-parse HEAD 2&amp;gt;/dev/null`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# ignore the error: fatal: Not a git repository&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;rescue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Errno&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENOENT&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# git command is not available&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;unless&lt;/span&gt; hash&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;blank?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      hash_abb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;config/initializers/version.rb&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;~&lt;/span&gt;_TEMPLATE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# frozen_string_literal: true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;module&lt;/span&gt; Mastodon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;module&lt;/span&gt; Version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;module_function&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;suffix&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; at &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;hash_abb&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; on ruby-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUBY_VERSION&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;repository&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tootsuite/mastodon&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;source_tag&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;hash&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        _TEMPLATE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;assets:precompile&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;source:version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;rake assets:precompile&lt;/code&gt;で&lt;code&gt;config/initializers/version.rb&lt;/code&gt;が生成される仕組みで、表示はこの&lt;code&gt;version.rb&lt;/code&gt;を参照します。形式は以下のような感じ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mastodon v3.4.0をruby v3.0.1でdeployしてみた</title>
      <link>https://syui.github.io/blog/post/2021/05/09/mastodon/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/09/mastodon/</guid>
      <description>&lt;p&gt;mastodon v3.4.0のpre-verがmasterにcommitされています。&lt;/p&gt;&#xA;&lt;p&gt;heroku-20は&lt;code&gt;ruby v3.0.1&lt;/code&gt;に対応していて、mastodon v3.4.0は&lt;code&gt;ruby &amp;lt; v3.1.0&lt;/code&gt;なので、heroku(deploy-server)のruby verを上げてみました。Gemfile.lockをheroku用に更新してdeployすればokです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Heroku supports the following Ruby versions and the associated Rubygems. A supported version means that you can expect our tools and platform to work with a given version. It also means you can receive technical support. Here are our supported Ruby versions:&lt;/p&gt;&#xA;&lt;p&gt;2.6.7, Rubygems: 3.0.3.1&lt;/p&gt;&#xA;&lt;p&gt;2.7.3, Rubygems: 3.1.6&lt;/p&gt;&#xA;&lt;p&gt;3.0.1, Rubygems: 3.2.15&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/ruby-support#ruby-versions&#34;&gt;https://devcenter.heroku.com/articles/ruby-support#ruby-versions&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/tootsuite/mastodon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd ./mastodon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku git:remote -a $app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rm Gemfile.lock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv install 3.0.1 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv local 3.0.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gem i bundler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ bundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;update gemlock ruby3.0.1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# git push heroku master&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git push heroku main &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku run RAILS_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production bundle exec rails db:migrate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku run RAILS_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production bin/tootctl cache clear&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku run RAILS_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production bundle exec rails assets:precompile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ランニングアプリを入れてみた</title>
      <link>https://syui.github.io/blog/post/2021/05/08/running/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/08/running/</guid>
      <description>&lt;p&gt;久しぶりにランニングアプリを入れてみました。&lt;code&gt;nike run club&lt;/code&gt;というアプリなんですが、前に使ったことあるやつもこんな感じのアプリです。2017に登録とある。&lt;/p&gt;&#xA;&lt;p&gt;まずは、1kmくらい走ったんだけど、ちょっとハリキリすぎちゃって、日中だし、危ないかもと思ったので、そこで中断してる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210508_0423.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その後、日課としていつものコースを走ったんだけど、最初と最後だけ、ちょっと頑張ってる。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210508_0425.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;1kmごとに記録見れるらしいので見てみた。高低差があるので、遅かったり早かったりしてる。また、単純にバテてるというのもある。&lt;/p&gt;&#xA;&lt;p&gt;自宅から自宅までなので、高低差は±ゼロ(記録精度上は知らない)。私が走ってるコースは、最初はちょっと下り坂なので楽だけど、帰りは上り坂なのできついっぽい。けど、感覚としてはそこまで変わらないし、意識してない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210508_0426.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前はなかったけど、今はトロフィーとかあるらしいので、目指そうかどうか迷ってるんだけど、でも、データ保存はクラウド上、アカウント上でなされるのかわからず、あくまでスマホに保存する感じではないかなと思っていて、であれば、アプリを削除したり、スマホを変えたりした場合、トロフィーは消えるし、ランレベルも消えることが予想されるんだけど、どうなんだろうか。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/nike_running_20210508_0424.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;アカウント自体も結構厳しいっぽい。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Nikeでは、ナイキ メンバーのプライバシー保護に努めています。そのため、ナイキ メンバーシップがアクティブなお客様のデータのみを保存しています。NikeのWebサイトまたはアプリ上で過去2年以内にご自身のナイキ メンバープロフィールにサインインされたお客様は、メンバーシップのアカウントがアクティブであるとみなされます。アカウントを2年以上利用していない場合でも、ナイキ メンバープロフィールに再びサインインしていただくと、お客様の個人情報は現在も設定内に保存されています。ただし、ランやワークアウトの個別データは表示されず、代わりに集計情報が表示されます（以下の「個人のデータにどのような影響がありますか？」をご参照ください）。アカウントを利用していない期間が5年以上になると、お客様のプロフィールおよび関連するすべてのデータが削除され、いずれの情報も復元できません。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.nike.com/jp/help/a/nike-data-protection&#34;&gt;https://www.nike.com/jp/help/a/nike-data-protection&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mastodon v3.3.0をstack:heroku-20に対応する方法</title>
      <link>https://syui.github.io/blog/post/2021/05/06/heroku/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/06/heroku/</guid>
      <description>&lt;p&gt;stack:heroku-20でmastodon v3.3.0に対応する方法です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;libvpx5&#34;&gt;libvpx5&lt;/h3&gt;&#xA;&lt;p&gt;以下のエラーが出てしまいますが、これは、heroku-20で使用されるubuntu 20.04がlibvpx6を使用するのに対し、mastodonはlibvpx5を使用するためだと思われます。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;remote: E: Unable to locate package libvpx5&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;したがって、&lt;code&gt;mastodon/Aptfile&lt;/code&gt;を書き換えます。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- libvpx5&#xA;+ libvpx[5-9]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;追記:zundaさんがpull-reqされていました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tootsuite/mastodon/pull/15591&#34;&gt;https://github.com/tootsuite/mastodon/pull/15591&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ruby-v273&#34;&gt;ruby v2.7.3&lt;/h3&gt;&#xA;&lt;p&gt;heroku-20は、最も古いのがruby v2.5.9です。したがって、Gemfile.lockを変更する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/ruby-support&#34;&gt;https://devcenter.heroku.com/articles/ruby-support&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd ./mastodon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yay -S rbenv ruby-build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv install 2.7.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rbenv local 2.7.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gem i bundler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ bundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# git push -f heroku main &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git push -f heroku master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bundleを実行するのは何でもいいですけど、archで実行後にGemfile.lockをcpしてgit-pushしました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mastodon-v330&#34;&gt;mastodon v3.3.0&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;SKIP_POST_DEPLOYMENT_MIGRATIONS=true&lt;/code&gt;は特殊だけど、他はいつも通りのコマンド。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku run RAILS_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production bin/tootctl cache clear&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku run SKIP_POST_DEPLOYMENT_MIGRATIONS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true RAILS_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production bundle exec rails db:migrate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku run RAILS_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production bundle exec rails assets:precompile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tootsuite/mastodon/releases/tag/v3.3.0&#34;&gt;https://github.com/tootsuite/mastodon/releases/tag/v3.3.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>heroku stackをheroku-20に移行する</title>
      <link>https://syui.github.io/blog/post/2021/05/05/heroku/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/05/heroku/</guid>
      <description>&lt;p&gt;elixir+phoenixで作ってるappが古いstack:heroku-16で動いてて、versionを上げろと言われてたので、heroku-20にしてみた。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The Heroku-16 stack is end-of-life&#xA;This app is using the Heroku-16 stack, which reached end-of-life on May 1st, 2021. Apps using Heroku-16 no longer receive security updates, and from June 1st, 2021, builds will be disabled. Please upgrade your app to a newer Heroku stack.  Visit here to learn more&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://help.heroku.com/0S5P41DC/heroku-16-end-of-life-faq&#34;&gt;https://help.heroku.com/0S5P41DC/heroku-16-end-of-life-faq&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku git:clone -a $app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd $app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku buildpacks:set hashnuke/elixir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-sh:elixir_buildpack.conf&#34; data-lang=&#34;sh:elixir_buildpack.conf&#34;&gt;elixir_version=1.9.0&#xA;release=true&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでpushしても以下のエラーが出るけど、cacheを削除すると動きます。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;/app/.platform_tools/erlang/erts-10.6.4/bin/beam.smp: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory&lt;/p&gt;</description>
    </item>
    <item>
      <title>herokuのredis 6に移行する</title>
      <link>https://syui.github.io/blog/post/2021/05/04/heroku/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/04/heroku/</guid>
      <description>&lt;p&gt;heroku redis 4,5が廃止になるらしい。6にupgradeしなければ、6/30に自動でupgradeされるらしいので、heroku redis 6にupgradeしてみます。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Users that do not proactively upgrade their add-on to version 6 will be automatically upgraded after the deadline of June 30, 2021.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/heroku-redis-hobby-deprecation&#34;&gt;https://devcenter.heroku.com/articles/heroku-redis-hobby-deprecation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# redis urlの取得&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku config:get REDIS_URL -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# redis addonを作成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:create heroku-redis:hobby-dev --fork &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;heroku config:get REDIS_URL -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 進捗の確認&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku redis:info redis-xxxx -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 完了すればappが使用するredisを変更&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku redis:promote redis-xxxx -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# appを確認後に古いredisを削除&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku redis:info -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ heroku addons:destroy redis-xxxx -a &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;app&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた78,79</title>
      <link>https://syui.github.io/blog/post/2021/05/01/illust/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/05/01/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_78.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_79.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>usbにarchをインストールする方法</title>
      <link>https://syui.github.io/blog/post/2021/04/30/arch/</link>
      <pubDate>Fri, 30 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/30/arch/</guid>
      <description>&lt;p&gt;基本的には、macbookでもbootできるarch usbの作成方法です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;grub&#34;&gt;grub&lt;/h3&gt;&#xA;&lt;p&gt;まずbootですが、私はmacbook-airの内蔵diskにarchをインストールしてることもあって、そこから持ってくることになりました。&lt;/p&gt;&#xA;&lt;p&gt;grub-installは成功するんだけど、なぜかうまく動かない。また、archのインストールディスクからgrubがなくなってるのと、現在のインストールディスクがmacbookで認識しなくなってました。supportはずされたのか、それ以外の問題か。なんにせよ最新のgrub-installで作成されるefiではbootできないし、最新のインストールディスクはmacbookから起動できません。(私の環境では)&lt;/p&gt;&#xA;&lt;p&gt;なので、基本的には、usbにlinuxをインストールして、archが動いてるdiskの&lt;code&gt;/boot(linux-img以外)&lt;/code&gt;及び&lt;code&gt;/dev/sda1&lt;/code&gt;のディレクトリ構成をコピーすればokです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pacman -S linux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount /dev/sdb2 ./mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf /boot/efi ./mnt/boot/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf /boot/grub ./mnt/boot/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount /dev/sdb1 ./boot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount /dev/sda1 ./boot2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf ./boot2/* ./boot/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ちなみに、grub-installは以下のコマンドで成功(動かないけど)。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ arch-chroot ./mnt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount /dev/sdb1 ./boot/efi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grub-install --efi-directory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/boot/efi /dev/sdb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;linux&#34;&gt;linux&lt;/h3&gt;&#xA;&lt;p&gt;macbookは2台あるんですけど、archがすんなり起動したやつとしなかったやつがありました。&lt;/p&gt;&#xA;&lt;p&gt;macbookによってはlinux起動時に以下のようなerrorが出てlinuxが起動しない場合があって、uuidが見つからないと言われてるんだけど、普通にusbのuuidは一致してるので、fstab, grubの問題ではなく、linux kernelの問題でした。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ERROR: device &amp;lsquo;UUID=xxx&amp;rsquo; not found. Skipping fsck.&#xA;mount: /new_root: can&amp;rsquo;t find UUID=xxx.&#xA;You are now being dropped into an emergency shell.&#xA;sh: can&amp;rsquo;t access tty: job control turned off&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた77</title>
      <link>https://syui.github.io/blog/post/2021/04/28/illust/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/28/illust/</guid>
      <description>&lt;p&gt;輪を持ってるのも必要になったので描いた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_77.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_01k.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、チャンピオン7500</title>
      <link>https://syui.github.io/blog/post/2021/04/27/pokemas/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/27/pokemas/</guid>
      <description>&lt;p&gt;今まで挑戦してなかったんですけど、バディーズも揃ってきたので取りました。リーリエ&amp;amp;アブリボンがMVPでした。最後一人でアデク倒した。&lt;/p&gt;&#xA;&lt;p&gt;アデクはアイリスを当てればよかったんですけど、使ってしまってたので、ビオラを使いました。アデクが一番苦戦した(主にバディーズ不足で)。それ以外は楽でした。&lt;/p&gt;&#xA;&lt;p&gt;ダイヤないので、次に来るバディーズはガチャ回せないなあ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210427_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた76、番外編</title>
      <link>https://syui.github.io/blog/post/2021/04/26/illust/</link>
      <pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/26/illust/</guid>
      <description>&lt;p&gt;今回は正面から描く回なので正面で描いたんだけど、ついでに素材にも使えそうだということで、素材にストックすることにしました。&lt;/p&gt;&#xA;&lt;p&gt;素材で使うとなると、微妙な部分が気になり出して、ピースを人差し指に変えたり、服のヒラヒラを修正したり、輪を修正したりと、いつもより丁寧になってしまった。&lt;/p&gt;&#xA;&lt;p&gt;イラストも番号を入れ替えたため、既に見たことある人いるかも。76番&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_01.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_01a.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_01z.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/font_001ai.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_76.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた75</title>
      <link>https://syui.github.io/blog/post/2021/04/25/illust/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/25/illust/</guid>
      <description>&lt;p&gt;今回は定規を使ってみました。最初から定規使ったほうが良かったんじゃないか疑惑。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_75.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた74</title>
      <link>https://syui.github.io/blog/post/2021/04/23/illust/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/23/illust/</guid>
      <description>&lt;p&gt;キラカードっぽい絵、いつか書こうと思ってたので。ちょっと丁寧(いつもよりは)。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに私、定規使わないのでちょっとずれてる。こういうときくらいは使ったほうがいいのかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_74.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ミヅキを引こうとしたらトゲピーを引いてた話</title>
      <link>https://syui.github.io/blog/post/2021/04/21/pokemas/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/21/pokemas/</guid>
      <description>&lt;p&gt;ポケマスでダイヤが貯まったので、ミヅキを引こうかどうしようか、私は迷っていました。(無課金勢)&lt;/p&gt;&#xA;&lt;p&gt;というのもミヅキは性能的には普通なので本来は引かないんですけど、でも、好きなキャラなんですよね。ちなみに、ミヅキというのはGEN7(SUN/MOON)の女主人公。&lt;/p&gt;&#xA;&lt;p&gt;私がポケモンキャラで好きなのって、男性はレッドですけど、女性はアセロラ、リーフ、ユウリ、ミヅキあたりで、大抵の作品は、この子って決まってるんですけど、ポケモンでは決まってなかったりするんです。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、これについてはレッドかなあ&amp;hellip;。でも女性キャラで一人に決まらないのも珍しい。&lt;/p&gt;&#xA;&lt;p&gt;そんなこともあり、ミヅキを引こうかどうしようか迷ってたわけです。一人に決まってたら確実に引いたと思うけど。&lt;/p&gt;&#xA;&lt;p&gt;で、今回、なぜかアーティ&amp;amp;トゲピーを引いてた。聞くところによると強いらしいし、実際、強いと思うのでおすすめ。ミュウと組ませたいね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210420_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた72,73</title>
      <link>https://syui.github.io/blog/post/2021/04/20/illust/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/20/illust/</guid>
      <description>&lt;p&gt;実はこの子の服は特殊で、内部は濃い霧が発生しており視界ゼロという便利設定。なので、下からの視点で描いても通常は問題ないようになっています。&lt;/p&gt;&#xA;&lt;p&gt;今回は上からの視点で輪っかを書いてみたかったんだけど、前回のイラストが上視点だったので、今回は下視点から描いてみました。無理やりだけど輪っかは書きたいようにかけた気がする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_72.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;正直、自分でも何を書いてるのかわからん。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_73.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた71</title>
      <link>https://syui.github.io/blog/post/2021/04/19/illust/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/19/illust/</guid>
      <description>&lt;p&gt;レインボーロードです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_71.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>弱者男性に女をあてがえ論のおかしさ</title>
      <link>https://syui.github.io/blog/post/2021/04/18/archive/</link>
      <pubDate>Sun, 18 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/18/archive/</guid>
      <description>&lt;p&gt;これは正直、言及する価値もなさそうな話だと思ったのですが、話題になってたので、一応、個人的な考えを書いていきたいと思います。文章を書くリハビリも兼ねて。&lt;/p&gt;&#xA;&lt;p&gt;この前、「弱者男性に女をあてがえ」という主張があって、たくさんの賛同というか同意がありました。&lt;/p&gt;&#xA;&lt;p&gt;ですが、個人的には、こういった主張はありえない。正直、ちょっとピキピキしました。&lt;/p&gt;&#xA;&lt;p&gt;まず第一に、男であれ女であれ、個人の自由意思は最も尊重されなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;にもかかわらず、弱者男性は悲惨な目にあっているんだから、大変な目にあっているんだから、女をあてがえ、というのは、ふざけるなとしか言いようがありません。&lt;/p&gt;&#xA;&lt;p&gt;女性は人間であり、物でもなければ献上品でもない。というか本気でそんなことを言ってるんだろうかと私は少し疑問に思いました。ここまでデタラメな主張というのは、もしかしたら藁人形かもしれない。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ちょっと前にある芸能人が「不景気になると上物が風俗にやってくるので、そこが狙い目だ」みたいな趣旨の発言をして話題になったことがありました。&lt;/p&gt;&#xA;&lt;p&gt;なので、こういう考え方をする人も多いのかもしれないと考え直すことになりました。&lt;/p&gt;&#xA;&lt;p&gt;私は、より多くの人々の幸福を願っていて、人の自由意思は最大限に尊重されるべきと考えています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、貧困でそういう仕事をやらざるを得ないような状況を個人的には容認できません。そういった人たちには給付金なりなんなりで政府がその生活を保障すべきだと感じています。&lt;/p&gt;&#xA;&lt;p&gt;ですが、こういった当たり前のことことが実現されないのも、貧困から抜け出されると都合の悪い人がいるからなのかもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ある弱者女性の主張&#34;&gt;ある弱者女性の主張&lt;/h3&gt;&#xA;&lt;p&gt;ある弱者女性(未婚)が「子づれが離婚して自業自得なのに政府が支援するのが許せない、ムカつく」みたいなことを書いてて、それもおかしいと思ったので、自分の考えを書きます。&lt;/p&gt;&#xA;&lt;p&gt;あなたも、その困ってる人も、どちらも救済されるべきというのが私の考えです。&lt;/p&gt;&#xA;&lt;p&gt;より多くの人々が幸せになれる社会がいいです。弱者が自分とは立場が異なる弱者の足を引っ張っても、世の中はよくはならないと思います。&lt;/p&gt;&#xA;&lt;p&gt;こういった主張は、弱者男性のイカれた主張と同じくらい、個人的にはピキピキします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;あなたはモテなくていい&#34;&gt;あなたはモテなくていい&lt;/h3&gt;&#xA;&lt;p&gt;ここからはあまり関係ない話になりますが、私は常々、「あなたはモテなくていい」と思っています。&lt;/p&gt;&#xA;&lt;p&gt;世間一般には「あなたはモテなければいけない」と言われるばかり。「モテるためにはどうすればいいのか」みたいなことが論議されています。&lt;/p&gt;&#xA;&lt;p&gt;そこで、誰も言わないので、私が言うことにしました。&lt;/p&gt;&#xA;&lt;p&gt;「あなたはモテなくていい」と。&lt;/p&gt;&#xA;&lt;p&gt;まずは、モテるというのが具体的にどういうことかを考えてみたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;モテるとは、不特定多数の異性に好意を寄せられることを指します。&lt;/p&gt;&#xA;&lt;p&gt;考えてもみてほしいのですが、あなたが本当にほしいものは「不特定多数の異性に好意を寄せられること」でしょうか。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、それがほしいという人もいます。ただ、それは私が欲しいものではないです。&lt;/p&gt;&#xA;&lt;p&gt;じゃあ、あなたは何がほしいのかと聞かれると、「私は、私が認める人に好かれるなら、それでいい」と答えます。&lt;/p&gt;&#xA;&lt;p&gt;少し曖昧な書き方ですね。なぜかというと、どっちでもいいと考えているからです。&lt;/p&gt;&#xA;&lt;p&gt;私は、私が認める人が幸せなら、それでいいです。好かれてようが、嫌われていようが別にいいと思う。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、自分が認める人に認められたい、好かれたいと頑張ることは、素晴らしいことだと思います。&lt;/p&gt;&#xA;&lt;p&gt;結論としては、あなたはモテなくてもいいし、モテてもいい。どちらでもいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;最初に「あなたは、あなたが認める人に愛されればいい」という趣旨の話をしましたが、仮にこの論法で行くと「もしあなたが認める人が、未だ現れていないのなら、あなたは、誰からも愛されなくていい」ということになります。&lt;/p&gt;&#xA;&lt;p&gt;本当に大切なものを見失わないように、とは思っていて、なので書きました。&lt;/p&gt;&#xA;&lt;p&gt;まあ、沢山の人を認めて、沢山の人から認められるような人生のほうが楽しいと思います。でも、どっちでもいいですよ、がっはっはっ！&lt;/p&gt;&#xA;&lt;h3 id=&#34;あなたモテないでしょ&#34;&gt;あなた、モテないでしょ&lt;/h3&gt;&#xA;&lt;p&gt;このような考えを書くと「あなた、全然モテないでしょ」と瞬時に見抜かれてしまうかもしれませんね。それは間違いなく正しい。私はモテません。&lt;/p&gt;&#xA;&lt;p&gt;よくクズほどモテるとか、面白い人がモテるとか聞きますけど、私は、私と同じような考え方をする人がモテるとは到底思えませんよ。面白くないもんね。&lt;/p&gt;&#xA;&lt;p&gt;ただ、クズほどモテるとはよく聞きますけど、別にそれで良くないですか。クズはモテちゃいけないんですか。&lt;/p&gt;&#xA;&lt;p&gt;私の考えでは、人というのは、同じような人間で集まるようになっている。&lt;/p&gt;&#xA;&lt;p&gt;なので、本物がいるとしたら、本物には見抜かれると思います。ですから、そういった人には寄り付かないと思うなあ。&lt;/p&gt;&#xA;&lt;p&gt;これを聞いた一部のその人は、おそらく、こう思うでしょう。&lt;/p&gt;&#xA;&lt;p&gt;「は？女なんて年収やステータスを偽装して、やさしくすれば、どんなやつでも落とせるよ、女にそんな見抜く能力ないぞ、夢見てんじゃねえ」と。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私は、後述しますが魔法使い(笑)なので、わかるのです。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;夢を見ることが仕事とも言いますが。&lt;/p&gt;&#xA;&lt;p&gt;さて、最後に、仮に自分がモテた場合の話(想像)でも少ししてみましょうか。夢物語のお話です。&lt;/p&gt;&#xA;&lt;p&gt;私がモテても、実は、あまり意味がないです。&lt;/p&gt;&#xA;&lt;p&gt;どういうことかというと、まず、性欲が満たされることはないからです。&lt;/p&gt;&#xA;&lt;p&gt;私、ずっと童貞を目指してるんで。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;いや、ちょっとまってください。帰らないで！少しだけでも私の話を聞いていってくださいっ！&lt;/p&gt;&#xA;&lt;h3 id=&#34;童貞は希少価値だステータスだ&#34;&gt;童貞は希少価値だ！ステータスだ！&lt;/h3&gt;&#xA;&lt;p&gt;この年齢にもなると、童貞、つまり、セッ○スしたことがないというのは、恥ずかしいことだと考えられています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私の考え方はちょっと異なるので、それについてお話していければと思います。&lt;/p&gt;&#xA;&lt;p&gt;私、実は「童貞は希少価値だ！ステータスだ！」と思っていて、これ、どこかで聞いたセリフですが(貧乳？)、できれば捨てたくないのです。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;いや、ちょっとまってください。帰らないで！少しだけでも私の話を聞いていってくださいっっ！&lt;/p&gt;&#xA;&lt;p&gt;その理由はいくつかあって、一つが一度捨てたら取り戻すことができないからです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、これについては、相当の意志力を要するとも思っており、一般的に勧められるようなものではありません。&lt;/p&gt;&#xA;&lt;p&gt;私に関しても、おそらく、一度落ちたらそこで終わりだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、お酒でもタバコでも薬物でも、最初は些細なことだったと思うんです。好奇心とか周りの価値観とか常識とかがあって、流されて、一度やったあとはもうやめられなくなってしまい、中毒者として、それが当たり前になっていく。自分の考えとか信念とか、そういったもの関係なく、ただ欲望に従って、従っていることにすら気づかない。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、それでいいと私は思います。それが自然で、成り行きで、自然の流れです。当たり前のことです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私は、ちょびっとだけ、それに抗っちゃおうかな&amp;hellip;と思っておるのです。&lt;/p&gt;&#xA;&lt;p&gt;うん、頭おかしいと思う。一般的に。&lt;/p&gt;&#xA;&lt;p&gt;ですが、本当はどうなんでしょうね。最初はみんなどう思っていたのでしょう。今となってはわかんないですけどね。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私、気分は上々。自分で決めたこと、やってるだけですし(やってないだけですし)。&lt;/p&gt;&#xA;&lt;p&gt;したことある人はご存知かもしれませんけど、実際そこまでいいものでもないというのが実感するところではないですか。夫婦間でも最初だけで、そのうち相方が兄弟姉妹や戦友のような存在になっていくものだと思っていて、気分になれないのが普通だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、童貞というのは、夢を見ていられるので、その点では強いと思っていて、「30歳まで童貞だと魔法使いになれる」みたいな考えがあったりするんだと思う。もちろん、これは本物の魔法使いではなく、(笑)のギャグにちなんだものですが、私自身、そういった魔力を失いたくないという気持ちも、実はちょっとだけあったりする。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、最終的には個人の意志力の問題だと思っていて、通常は並大抵のことではありません。ですが、初動こそ間違わなければ、なんとか行けるんじゃないとも思っていて、例えば、薬物なんかもそうだと思うけど、一度も手を出さなければ欲しくならないのと似てると思っていて、そういった原理を応用しながら、なんとかかんとかやっていければと。がんばります(なにをか)。&lt;/p&gt;&#xA;&lt;p&gt;今回、こんな話をしたのは、私のバカ話を読んで少しでも気が楽になれた人がいればと思って書きました。以上です。ありがとうございました。&lt;/p&gt;&#xA;&lt;p&gt;あ、彼女、募集中ですっ！&lt;/p&gt;</description>
    </item>
    <item>
      <title>小学生youtuberの登校拒否をどのように考えるか</title>
      <link>https://syui.github.io/blog/post/2021/04/17/archive/</link>
      <pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/17/archive/</guid>
      <description>&lt;p&gt;この前、ある小学生youtuberが「中学は登校しない」みたいな趣旨でニュースに取り上げられており、本人や親御さんに対して、猛烈な批判がありました。&lt;/p&gt;&#xA;&lt;p&gt;この件について、自分はどのように考えたのかを書いていこうと思います。&lt;/p&gt;&#xA;&lt;p&gt;まず私が思ったのは、彼が中学校に登校したほうがいいのか、あるいは、登校しなかったほうがいいのか、それはわからないということです。&lt;/p&gt;&#xA;&lt;p&gt;先のことはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、ひと一人の人生というのは、運によって決まるからです。偶然の要素がほとんどを占めます。学校に通っていれば、よりよい人生が送れるとは限らない。不運にもいじめにあい自殺してしまうより、登校しないほうがよかったのかもしれない。それはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;人生の偶然性については、例えば、私が尊敬するリンカーンで考えてみたいと思います。リンカーンはアメリカの大統領にもなった人物で有名です。シュミレーションの一環として、このリンカーンを黒人に、限界集落の母子家庭で生まれ育ったことにしてみます。なお、DNAは黒人であること以外、同一とします。&lt;/p&gt;&#xA;&lt;p&gt;すると、このリンカーン、大統領にはなっておらず、全く異なった人生を辿ることになりました。&lt;/p&gt;&#xA;&lt;p&gt;私もそうで、私が今までなんとかやってこれたのは、周りの人たちが助けてくれたからであり、私個人の力では全くありません。一言で言えば、ただ運が良かっただけです。&lt;/p&gt;&#xA;&lt;p&gt;このように、人生というのは、運や縁で占める割合が非常に大きく、これは単なる事実です。&lt;/p&gt;&#xA;&lt;p&gt;仮にこれが事実でなければ、こういう事はあまり言いたくはありません。というのも、人というのは、広い視野で物事を考えることができず、局所的にしか物事を把握した気になれないので、全部自分の努力と行動の賜物であると誤認していたいものなのです。ですが、それは事実とは異なりますので、今回はただの事実を書きました。&lt;/p&gt;&#xA;&lt;p&gt;人生がどう転ぶかは運次第。これは成功者も一般人も変わりません。&lt;/p&gt;&#xA;&lt;p&gt;ほんの少しの現実認識能力を持ち、かつ数字がわかるなら、統計を少しでも読めるなら、この程度の事実は把握できます。&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、人生がどう転ぶかは運次第なところがあるので、先のことはわからないということです。&lt;/p&gt;&#xA;&lt;p&gt;そんな中、彼の発言に対して、大人たちの罵声があまりにひどく、逆にそちらの方が気になってしまったというのが正直な感想でした。&lt;/p&gt;&#xA;&lt;p&gt;では、どういった批判が多かったのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;一つは、「義務教育を放棄するとはけしからん、後の人生は悲惨で凄惨なものになるだろう」というものです。&lt;/p&gt;&#xA;&lt;p&gt;この意見は、私の考え方や目的とは全くかけ離れたものだと思いました。&lt;/p&gt;&#xA;&lt;p&gt;私は、より多くの人々の幸せを願っています。そういった社会を形作っていくことが望ましいと考えています。私は、その目的のために投票や発信することがたまにあります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、彼のように中学には登校しないと言ってる人もそうじゃない人も幸せな人生を送れる社会を願っています。&lt;/p&gt;&#xA;&lt;p&gt;それを中学に行かなければ不幸になる、悲惨になる、貧困になるというのは、目指すべき場所が違うと言わざるを得ない。&lt;/p&gt;&#xA;&lt;p&gt;あなたの目的はなんですか。あなたの願いはなんですか。自分たちの言うとおりにしない人たちの人生を悲惨なものにすることですか。&lt;/p&gt;&#xA;&lt;p&gt;それよりも、いくつになってもやり直せるような、学び直せるような社会のほうがよくないですか。&lt;/p&gt;&#xA;&lt;p&gt;私は、そのほうがいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ここで、少し私のことを書いておくことにします。&lt;/p&gt;&#xA;&lt;p&gt;私は大学までストレートで来ており、留年も浪人も経験なし。大学は心理学科、教員免許2つ、心理士の免許を持ち、他にもちょっとあるけど、ここで紹介が必要なのはこの3つ。(あまり書きたいことでもないし)&lt;/p&gt;&#xA;&lt;p&gt;教育実習に行きましたが、教えることとできることは全く違います。自分ができるからと言って、その人が教育者としてふさわしいとは限りません。&lt;/p&gt;&#xA;&lt;p&gt;教えることにも、ある種の技術が必要です。生徒にも色んな人がいたりしますので。&lt;/p&gt;&#xA;&lt;p&gt;そして、例の小学生youtuberの人を見るに、彼は、他の子達より多くの選択肢を持ちます。&lt;/p&gt;&#xA;&lt;p&gt;批判している多くの人は、少しでも彼について知ろうとしましたか。理解しようと努めましたか。反射的にニュースのタイトルだけ見て否定するのではなく、少しは調べてみてはどうでしょう。そんなことを思いましたが、話を戻します。&lt;/p&gt;&#xA;&lt;p&gt;多くの親は、自分の子供により多くの選択肢を用意してあげたいと思うものです。一般的には。&lt;/p&gt;&#xA;&lt;p&gt;このことを前提とすると、彼の親は意図してか意図せずか、わかりませんが、より多くの選択肢を用意できている状況です。&lt;/p&gt;&#xA;&lt;p&gt;親ではなく彼自身の力だよというのは、確かにそのとおりかもしれませんが、最初に述べたように、やはり環境でもあるのです。&lt;/p&gt;&#xA;&lt;p&gt;そんな中、彼の親に対して、全く知らず、調べもせず、無礼な意見を飛ばしている人を見かけましたが、そういうの、私は良くないと思いました。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、彼が平凡な学生に戻り、配信をやめるのがいいのか、あるいは、このまま学校に行かず動画を作り続けるほうがいいのか、どちらのほうが良い結果につながるのかはわかりません。ちなみに、動画を毎日のように作るのは大変な作業です。&lt;/p&gt;&#xA;&lt;p&gt;ただ、現時点で彼は、他の子達より多くの選択肢を持つというのは事実です。そして、親御さんの態度というか、行動というか、影響あってのことなのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;なので、私は、この件について、あまり否定的な意見を持ちません。&lt;/p&gt;&#xA;&lt;p&gt;話をまとめると、私は、より多くの人達の幸せを願っています。彼のように理由あって中学に行かない人にも幸せな人生が送れるといいなと思います。そういう社会を目指す、それが目的なんじゃない、と考えています。ですから、一部の学校に行かなければ不幸になる、転落する、悲惨な目に合うという批判はおかしいと思いました。もしそういうことがあるなら、まずはそれを変えていくほうがいいと思いました。&lt;/p&gt;&#xA;&lt;p&gt;次に、人生の多くは運や縁で決まります。人気youtuberの彼は縁に恵まれる可能性が非常に高く、平凡な学生より選択肢が多い気がします。先のことはわかりません。何が良かったのか、あるいは悪かったのか、それがわかる日すら来ないことも多いのです。なので、彼が自分なりに考えてのことなら、外野が偉そうに説教する必要性を私は感じません。&lt;/p&gt;&#xA;&lt;p&gt;ただ、もし彼の行動に触発され「登校拒否だ」、「youtuberに俺はなる」みたいな人がでてきた場合、それはまた別の問題だと思います。個人的には「やめておけ」あるいは「登校しながら試してみたら」と思いますよ。ですが、現時点で、登校拒否をことさらに煽るような行動は見られないと思うので、特に問題ないと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;今回、登校しないって言った人より、それに罵声を浴びせてる人のほうが気になりました。以上です。ありがとうございました。&lt;/p&gt;&#xA;&lt;p&gt;大学で自分がなにしてたかというと、ずっと遊んでた気がする。免許取ったりとか。学校、教習所のことだけど、行きたくなかったので行かずに直接受験(M普通車)して取ったりしてた。また、教育や心理で技術力を聞かれると、そういうの全く無いので、当てにならないと思う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「頭がいい」ってなんだろう</title>
      <link>https://syui.github.io/blog/post/2021/04/16/archive/</link>
      <pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/16/archive/</guid>
      <description>&lt;p&gt;今回は「頭がいい」とは何を指すのか。哲学的な問題として自分なりの考えを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;私の回答では、「頭がいい」とは「心がいい」ことを指します。具体的には「よい心を持つこと」を指し、私にとって頭がいい人というのは、良い心を持った人のことです。&lt;/p&gt;&#xA;&lt;p&gt;「いやいやいや、意味がわからない」というのは、たしかにそのとおりです。&lt;/p&gt;&#xA;&lt;p&gt;なので、まずは私がこのように考えるに至った経緯を説明していきたいと思います。最後に定義的な問題についても説明します。&lt;/p&gt;&#xA;&lt;p&gt;では、はじめましょうか。&lt;/p&gt;&#xA;&lt;p&gt;まずは皆様、今よりも発達した文化や文明、技術などに思いを馳せてほしいと思います。&lt;/p&gt;&#xA;&lt;p&gt;できましたでしょうか。もし難しければ、未来人や宇宙人と遭遇した場面などを想像してみるといいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、現代人の文化や技術、演算が全く通用せず、圧倒的な文明力、技術力、演算能力を持った存在と相対するとき、あなたならどうしますか。何が重要だと思いますか。何をすべきだと思いますか。何ができるでしょう。何が残されていると思いますか。&lt;/p&gt;&#xA;&lt;p&gt;少し状況を説明すると、今の人間になすすべはなく、どうしようもない、仮に相手が人類を支配し、あるいは滅ぼそうとしたときは間違いなくそうなるというような状況だと想定してみてください。&lt;/p&gt;&#xA;&lt;p&gt;そんなとき、どうすればいいと思いますか。なにをすべきでしょう。あるいは、何ができますか。&lt;/p&gt;&#xA;&lt;p&gt;私はこのようなとき、人間に残されたのは「心」しかないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;よい心を持つことでしか戦えない。いや、本来は勝負ではないのですけど、でも、最終的に目指すところは、心しかないと、私はそう考えているのです。&lt;/p&gt;&#xA;&lt;p&gt;今まで人類の文明が発達してきたのも、世の中が良くなってきたのも、実は、「良い心を持つこと」が大きく寄与してきたと思います。そして、これからも間違いなくそうなっていく。より良い心を持つ人が増えれば増えるほど、加速度的に、世の中もより良くなっていくと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;文明の発展、よりよい社会の構築、より多くの人達の幸福の実現に、心が関係していることを人間が知ったとき、人は、その尺度で物事を判断する方法を模索します。&lt;/p&gt;&#xA;&lt;p&gt;より発展した文明や社会では、おそらく、このような仕組みが機能している可能性が極めて高いと私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、このような仮定を前提に、私は「頭がいい」とは「良い心を持つこと」だと考えているのです。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、そのまま読むと、普通は全く意味がわかりません。&lt;/p&gt;&#xA;&lt;p&gt;意味がわからない理由の一つとして、まず定義の問題があります。&lt;/p&gt;&#xA;&lt;p&gt;今回は個々人が考える頭がいいとはどういうことかを回答しました。&lt;/p&gt;&#xA;&lt;p&gt;これには各人、様々な回答があると思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、「頭がいい人」を「人に合わせたレールで話ができる人」と答える人もいれば、あるいは「普段は頭がいいと思わせない人」と答える人もいます。&lt;/p&gt;&#xA;&lt;p&gt;人それぞれ色んな意見があって、とても面白いですね。&lt;/p&gt;&#xA;&lt;p&gt;哲学的な回答としては、それでよくて、答えなんてありません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、仮に、個々人の考えがにじみ出ないような回答をしてしまうと、私の場合、単純に「演算能力」と回答することになるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;このように回答する場合、もう一つの条件があって、それは現代人が考える「頭がいい」の価値観が変化したときです。&lt;/p&gt;&#xA;&lt;p&gt;現在、頭がいいというのは、非常に重要なことだと考えられています。最も重要なことだと考えられている節があります。&lt;/p&gt;&#xA;&lt;p&gt;このような前提に立った場合、私は「頭がいい」とは「よりよい心」だと回答します。&lt;/p&gt;&#xA;&lt;p&gt;しかし、「頭がいい」の価値観が変化したとき、つまり、人類にとって「頭がいい」ことがそこまで価値を持たなくなった場合は、これに関しては、AIの発展やその他の事情によって有り得ることだと考えられますが、その場合は、「頭がいい」を「演算能力が高いこと」と回答することになるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;以上、「頭がいい」ってなんだろう、というテーマで話しました。ありがとうございました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた69,70</title>
      <link>https://syui.github.io/blog/post/2021/04/15/illust/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/15/illust/</guid>
      <description>&lt;p&gt;躍動感ある絵がたまに書きたくなって、書いてみるんだけど、いつも失敗してる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_69.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_70.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>youtubeのヘッダーやアイコンを作ってみた</title>
      <link>https://syui.github.io/blog/post/2021/04/14/icon/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/14/icon/</guid>
      <description>&lt;p&gt;ポケモンのオオタチが好きなので作ったアイコンとか。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/icon/syui_poke.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/syuipoke_header.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/font_syui.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/font_poke.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoのチャンネルを開設してみた</title>
      <link>https://syui.github.io/blog/post/2021/04/09/pokemongo/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/09/pokemongo/</guid>
      <description>&lt;p&gt;チャンネル開設後、まず第一弾として動画を上げました。面白かったら幸いです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;なぜこんなことをやり始めたのか&#34;&gt;なぜこんなことをやり始めたのか&lt;/h3&gt;&#xA;&lt;p&gt;なぜこんなことをやり始めたのか？後に動画内でも説明することがあるかもしれませんが、一言でいうと、撮影や配信できるようになるためです。&lt;/p&gt;&#xA;&lt;p&gt;私はipadで撮影してるんですけど、こうやってipadさえあれば、外に出て撮影や編集して、気軽に配信できるようになれたらいいな、という思いがありました。&lt;/p&gt;&#xA;&lt;p&gt;したいときにできる、それが自分にとって大切なこと。&lt;/p&gt;&#xA;&lt;p&gt;また、撮影とか編集も難しいんですけど、それ以外にも障壁はいくつかあって、その一つがyoutube恐怖症だと思います。&lt;/p&gt;&#xA;&lt;p&gt;youtubeは見てるだけなら楽しいのですけど、実際に自分が映り込む動画をyoutubeに上げられたりするのは、私を含む一般人からすると「恐怖」ではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;今回、動画を作ったのは、そういった恐怖の克服という意味も少しあった気がします。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、「気軽に撮影や配信できるようになるため」という理由が一番ですけどね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケモンgoの動画を作る上でのポイント&#34;&gt;ポケモンGOの動画を作る上でのポイント&lt;/h3&gt;&#xA;&lt;p&gt;ポイントは2つあると思っていて、1つは「面白い」、もう1つは「役に立つ」だと思います。&lt;/p&gt;&#xA;&lt;p&gt;で、今回は「面白い」に全振りして作っています。なぜかというと、2つも考えてる余裕がないからです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、最初は一つの要素に絞りました。&lt;/p&gt;&#xA;&lt;p&gt;今後は、「面白い」と「役に立つ」の2つの視点で作っていきたいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、日によって変わったり、同時だったりすることはあるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、目ぼしいイベントがない場合は、「面白い」に比重を置くほうが良いかもしれませんし、逆に注目のイベントがあったりすると、「役に立つ」最新情報をわかりやすく伝えていくほうがいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、この2つを同時にというのがベストなんですが、毎回は難しそう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ipadがすごい&#34;&gt;ipadがすごい&lt;/h3&gt;&#xA;&lt;p&gt;ビデオカメラなんて持ってないので、ipad(7th)で撮影してるんですが、ipadは本当にすごい。&lt;/p&gt;&#xA;&lt;p&gt;まずマイクですが、イヤホンやbluetoothを使わずに、かなりの音を拾うことができます。&lt;/p&gt;&#xA;&lt;p&gt;また、画質も思った以上にすごい。&lt;/p&gt;&#xA;&lt;p&gt;ただ、難点もあって、例えば、横置きで撮影すると、視点を合わせるのが難しいです。&lt;/p&gt;&#xA;&lt;p&gt;縦置きだとカメラと画面を同時に見ることができるので、視点を合わせるのは比較的容易ですが、横置きだと、カメラと画面を同時に見ることができず、視点が合わないんですよね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、リーフ6EX</title>
      <link>https://syui.github.io/blog/post/2021/04/05/pogo/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/05/pogo/</guid>
      <description>&lt;p&gt;リーフのボード開放が来たので6EXにしてみました。現在の6EXは以下の通り。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210405_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ボードは回復型です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210405_0002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;vs-ラティアス&#34;&gt;vs ラティアス&lt;/h3&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/WrXNNOVI4pE&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;ついでに今まで6EXにしたキャラを評価していきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mレッド&#34;&gt;Mレッド&lt;/h3&gt;&#xA;&lt;p&gt;最強のアタッカー。説明は不要だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mリーフ&#34;&gt;Mリーフ&lt;/h3&gt;&#xA;&lt;p&gt;好みの問題。マサラ組は6EXにしておきたかった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;mグリーン&#34;&gt;Mグリーン&lt;/h3&gt;&#xA;&lt;p&gt;好みの問題。マサラ組は6EXにしておきたかった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;フウロ&#34;&gt;フウロ&lt;/h3&gt;&#xA;&lt;p&gt;確かイベントで。&lt;/p&gt;&#xA;&lt;h3 id=&#34;メイ&#34;&gt;メイ&lt;/h3&gt;&#xA;&lt;p&gt;確かイベントで。ただ、あまり使ってない。&lt;/p&gt;&#xA;&lt;h3 id=&#34;sリーリエ&#34;&gt;Sリーリエ&lt;/h3&gt;&#xA;&lt;p&gt;状態異常無効や回避バフで希少な役割を担える。急所バフもあり、B技後に回復帯付与できる。6EXにすると、それに加えて気迫バフ。地味に使ってる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ダンデ&#34;&gt;ダンデ&lt;/h3&gt;&#xA;&lt;p&gt;Mレッドのように直接的に目立って強いとは感じないけど、地味に強い。負けそうだったのに、なぜか勝ってるみたいな試合が多かったりする。&lt;/p&gt;&#xA;&lt;h3 id=&#34;aアイリス&#34;&gt;Aアイリス&lt;/h3&gt;&#xA;&lt;p&gt;最近でいうと、最も引いておくべきだと思ったのがAアイリスです。強すぎる。最初はここまでとは思ってなかった。自分の中でバフとデバフの評価は等しく、どちらにも弱点はあると思っていて、バフでも例えばステータス上昇無効化されるとかで封じられたり、または、デバフで相殺されたりする。デバフも同じでダウン無効化されるとダメ。つまり、対策可能性はいくらでもある。バフもデバフも変わらない。バフは一体で全体の効果を発揮すると反論されるかもしれないけど、それは全体技に限っての話。デバフも同じ全体技でAアイリスのように全体に撒ける。例えば、防御ダウンが撒かれたとすると、攻撃アップと同じ効果を発揮する。Aアイリスの場合、「バフればバフるだけ威力上昇」と同等の評価。多くの人は「デバフで威力上昇？あまり強くないな」と感じ、「バフで威力上昇？強いな」と感じてしまいがちだけど、それは違う。バフとデバフの価値は同じ。Aアイリスは現環境、バトルヴィラ、チャンピオン、レジェンドでMレッドより活躍できている。現環境はMレッドが一体いればいいというものではなくなってしまった。アタッカーが即死する環境にある。逆にAアイリスのほうが耐久があるので活躍できている。防御ダウンは攻撃を上げているのと同じだし、攻撃ダウンは防御を上げているのと同じ効果を発揮する。T技ではないため、制限がない。制限がないので、持続のヴィラやレジェンドで威力を発揮する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>はじめての撮影とポケモンGo</title>
      <link>https://syui.github.io/blog/post/2021/04/03/pokemongo/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/03/pokemongo/</guid>
      <description>&lt;p&gt;youtuberの人はすごいなーと前から思ってたので、今回は自分でも動画を作ってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、はじめての撮影や動画編集には、様々な困難が予想されるはずです。また、完成した動画の質の違いにも驚かされることになるでしょうね。&lt;/p&gt;&#xA;&lt;p&gt;で、自分でもやってみると、結果的に予想通りだったので、それを踏まえ、良かった点や悪かった点を挙げていければなあと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;トークの重要性&#34;&gt;トークの重要性&lt;/h3&gt;&#xA;&lt;p&gt;ジョークやギャグを交えたトークの重要性や基本的な声質やトーンなど考えるべき部分が非常に多く、それが自分にとってかなり難しい要素でした。&lt;/p&gt;&#xA;&lt;p&gt;一度、声を入れてみたんですけど「これだ」というものにはならず、トーク一切を消し去ることにしました。&lt;/p&gt;&#xA;&lt;p&gt;む、むずかしい&amp;hellip;！！&lt;/p&gt;&#xA;&lt;h3 id=&#34;外の世界が好き&#34;&gt;外の世界が好き&lt;/h3&gt;&#xA;&lt;p&gt;私は、自然や街なかをウロチョロしているだけの動画がとても好きです。&lt;/p&gt;&#xA;&lt;p&gt;毎日同じ場所を撮影したとしても、季節や天候によって、いつも違った顔を見せてくれます。&lt;/p&gt;&#xA;&lt;p&gt;その点では、ポケモンGoでおなじみの場所で撮影するのは、理にかなっていると思っていて、それに楽だしね。とてもいいと思ってる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;撮影と動画編集&#34;&gt;撮影と動画編集&lt;/h3&gt;&#xA;&lt;p&gt;たいへんだと思う。ただ、慣れればそうでもないのかな。いや、そんなことないかな。&lt;/p&gt;&#xA;&lt;p&gt;iPad 7thの画質がすごくよかったので、これは使えるって思いました。今回、iPadのみで撮影しています。&lt;/p&gt;&#xA;&lt;p&gt;動画編集はiMovieを使っていて、扱いづらくもないんだけど、これも色々大変かな。&lt;/p&gt;&#xA;&lt;p&gt;サムネイル作るのだって、みんなちゃんとしたものを毎回作ってて本当にすごい。&lt;/p&gt;&#xA;&lt;p&gt;あれも大変そう。&lt;/p&gt;&#xA;&lt;p&gt;曲とか効果音もつけないといけないし、トークを含む今後の課題。&lt;/p&gt;&#xA;&lt;h3 id=&#34;正解は楽しむこと&#34;&gt;正解は楽しむこと&lt;/h3&gt;&#xA;&lt;p&gt;動画を作ってみて、一つの正解は楽しむことだと思います。&lt;/p&gt;&#xA;&lt;p&gt;正確には「ポケモンGoを楽しくプレイしている様子をお届けすること」です。&lt;/p&gt;&#xA;&lt;p&gt;このような視点で動画づくりに取り組めば、きっと色々なものが見えてくるはず&amp;hellip;だと思う。あと色々やりやすいような気がするなあ。&lt;/p&gt;&#xA;&lt;p&gt;でも今回は、撮影してるとゲームどころじゃなかったし、慣れない場所で歩き回ってると撮影どころじゃなかった&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;撮影しながらゲームしながら歩き回るとか、結構難しかったというか、できてない！&lt;/p&gt;&#xA;&lt;h3 id=&#34;理想的な流れ&#34;&gt;理想的な流れ&lt;/h3&gt;&#xA;&lt;p&gt;理想的な流れとしては、楽しい自己紹介からはじまって、&lt;/p&gt;&#xA;&lt;p&gt;最新情報をジョークでも交えながら伝えたあと、&lt;/p&gt;&#xA;&lt;p&gt;実際にプレイして、楽しくプレイしている様子を動画にすること、だと思いました。&lt;/p&gt;&#xA;&lt;p&gt;この際、外の景色やら風景って以外に重要。ただし、必須ではない。&lt;/p&gt;&#xA;&lt;p&gt;主にこの4点だと思う。&lt;/p&gt;&#xA;&lt;p&gt;今回作った動画に入ってるのは、最後の必須でもない風景のみなので、改善すべきところは多い。&lt;/p&gt;&#xA;&lt;p&gt;ただ、個人的かつ、根本的な問題点としては「&amp;hellip;しゃべりたくねえ&amp;hellip;一体、どうすりゃいいんだ」ということ。&lt;/p&gt;&#xA;&lt;p&gt;自分が話してる動画、今回撮ってみたんですけど、全カットしましたよ。きらいです。&lt;/p&gt;&#xA;&lt;p&gt;いや、やるべきこと、方向性はわかってるつもりなんです。具体的には「おちゃらけながらもハキハキしたトーンで解説(説明)を行った後、ダラッとした感じ普段口調(トーン)に戻ってプレイしている様子を伝える」ということ。この方向性がベストだと思う。&lt;/p&gt;&#xA;&lt;p&gt;でも、自分の声質からトーンから、何から何まで気に入りません。これ、頑張ってどうにかなる問題なのかどうか正直わからない。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一応の解決策&#34;&gt;一応の解決策&lt;/h3&gt;&#xA;&lt;p&gt;一応の解決策としては、口パクあるいはマスクでモゴモゴやって、音声をあとから入れることと、あとは声質を調整することかな。&lt;/p&gt;&#xA;&lt;p&gt;ただし、非常にめんどくさいと思うし、それでもうまくやる自信はあまりなかったりする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた68</title>
      <link>https://syui.github.io/blog/post/2021/04/01/illust/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/04/01/illust/</guid>
      <description>&lt;p&gt;最近、イラスト描いてなかったので描いた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_68.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;黒髪に黒背景は未だにどうしようか迷う。通常は周りを白で塗るんだけど今回はやらなかった。ただ、周囲の青をもう少し明るくしたほうが良かったかも。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた66,67</title>
      <link>https://syui.github.io/blog/post/2021/03/30/illust/</link>
      <pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/30/illust/</guid>
      <description>&lt;p&gt;最近、イラスト描いてなかったので描いた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_66.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_67.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>スマブラ、セフィロスを使ってみた</title>
      <link>https://syui.github.io/blog/post/2021/03/29/ssbu/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/29/ssbu/</guid>
      <description>&lt;p&gt;スマブラSPでセフィロスを使ってみた。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/STOmX0y5_KE&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;前回、Bをうまく打てばいいみたいなことを書いたので、それについて。&lt;/p&gt;&#xA;&lt;p&gt;Bを予知的に打ってると相手は死ぬ！&lt;/p&gt;&#xA;&lt;p&gt;技は一つ一つ強力で、当たればでかい。ただ、隙も大きく、個人的には扱いづらい印象。&lt;/p&gt;</description>
    </item>
    <item>
      <title>スマブラ、セフィロスとか</title>
      <link>https://syui.github.io/blog/post/2021/03/28/ssbu/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/28/ssbu/</guid>
      <description>&lt;p&gt;スマブラSPで新キャラと戦ってなかったので、まとめて戦ってみました。ちなみに、私は昔からゼルダ使い。ゼルダしか使えないとも言う。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/IW8PvBPy38s&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;ちなみに、マリオのときからそうだったけど、コントローラーが勝手に動く現象が再発してるので、稀におかしな動きがあります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゼルダが一番強い&#34;&gt;ゼルダが一番強い&lt;/h3&gt;&#xA;&lt;p&gt;真面目な話、スマブラでどのキャラが一番強いとかないと思う。&lt;/p&gt;&#xA;&lt;p&gt;どのキャラも調整されているので、同じくらいの強さだと思う。&lt;/p&gt;&#xA;&lt;p&gt;ただ、自分が使ってて一番使いやすいキャラ、つまり、合っているのが、私はたまたまゼルダだった。&lt;/p&gt;&#xA;&lt;p&gt;つまり、ゼルダが一番強いと思ってる(自分にとって)。&lt;/p&gt;&#xA;&lt;p&gt;実はゼルダのことはよく知らないし、別に好きでもない。&lt;/p&gt;&#xA;&lt;p&gt;というのも、私は「ゼルダの伝説」をあまりプレイしたことがなかった。&lt;/p&gt;&#xA;&lt;p&gt;ただ、情報によると素晴らしいゲームだと聞いてるし、そう思うので、いつかプレイしてみたいと思ってる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;セフィロスの使いかた&#34;&gt;セフィロスの使いかた&lt;/h3&gt;&#xA;&lt;p&gt;セフィロスは気になってたので、ちょっと使ってみましたが、B技をタイミングよく打てれば割といける。&lt;/p&gt;&#xA;&lt;p&gt;ただ、結構先を見ないといけないと思うので、難しい人には難しいかもしれないけど、簡単な人には簡単かもしれない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>マリオが難しかったので解説してみる2</title>
      <link>https://syui.github.io/blog/post/2021/03/20/mario/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/20/mario/</guid>
      <description>&lt;p&gt;「最近のマリオは難しい」とか書いたけど、スーパーマリオ3DワールドってWiiUの移植だったんですね。知りませんでした。&lt;/p&gt;&#xA;&lt;p&gt;と、そんな話は置いといて、検索して出てきた攻略サイトがあまり参考にならない感じだったので、今回も難しかったコースを自分なりに解説してみます。&lt;/p&gt;&#xA;&lt;p&gt;今回は、ワールドクラウンのミステリーハウスです。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/bpLE8kRIJGU&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;キャラはロゼッタを選択してネコで入ります。&lt;/p&gt;&#xA;&lt;p&gt;途中、フラワーをゲットし、それを駆使しながら、ネコと入れ替えたりして進みます。&lt;/p&gt;&#xA;&lt;p&gt;ここでフラワーをゲット。大切に使おう。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205431.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;オバケは横をずっと押してれば大丈夫。おそらく、カメラ視点を入れ替えれば間が開いてるんじゃないかな。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205359.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ドッスンのところでネコに入れ替えます。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205416.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここが最難関だと思う。はじめからネコじゃないときつい。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205441.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここでフラワーに入れ替え。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205503.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ウサギは火の玉一発で停止する。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205512.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここでネコに入れ替え。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205534.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;正直、ここはダメージ前提で突っ込んだ。あとで他の攻略動画見てみる。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205603.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;追記:結局、攻略動画は見てないけど、左から番号をつけたとして、1,3,5,4の順で踏んでいけば行けそうな気がした。4のときだけはAボタンを離しておくといいかもしれない。あくまで仮説なのでダメージ前提で突っ込み推奨。&lt;/p&gt;&#xA;&lt;p&gt;やっとマリオ3Dワールドをクリア。やったぜ！&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_202103205627.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>マリオが難しかったので解説してみる</title>
      <link>https://syui.github.io/blog/post/2021/03/19/mario/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/19/mario/</guid>
      <description>&lt;p&gt;マリオ3Dワールドを2,3日プレイしてたんですけど、最近のマリオ、ちょっと難しすぎません？&lt;/p&gt;&#xA;&lt;p&gt;と、そんなどうでもいい話は置いといて、検索しても有効な攻略法が見当たらなかったので、難しかったコースを自分なりに解説してみます。&lt;/p&gt;&#xA;&lt;p&gt;簡単そうに見えるかもしれませんが、意外と難しいかもしれない。&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/KvBnDXZabVk&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;ステージ1&#34;&gt;ステージ1&lt;/h2&gt;&#xA;&lt;p&gt;最初は少し右にずれると砲弾をかわせる。詳しくは動画にて。&lt;/p&gt;&#xA;&lt;p&gt;この細切れの橋は、タヌキで滑走すると乗れる確率が高い。ただし、自信がある場合は任意のタイミングで離してもOK。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031901.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ステージ2&#34;&gt;ステージ2&lt;/h2&gt;&#xA;&lt;p&gt;消える台は、どこに乗るか決めておく。階段の連なりは、一つ目をジャンプ後にタヌキで空中に留まる。ピーチを使うと長く留まれる。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031902.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031903.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ステージ3&#34;&gt;ステージ3&lt;/h2&gt;&#xA;&lt;p&gt;魔法使いは、三角形を描くように、真ん中を中心にジャンプしながら倒す。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031904.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;黄色い台は、乗った直後にジャンプ、着地後にしゃがむ。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031905.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;縦線を意識、その直線上に待機して、タイミングが合えばジャンプ。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031906.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;トゲトゲが通り過ぎた直後にダッシュしてジャンプ。黒虫も飛び越えられる。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031907.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;黄色い台が来るまで待機。待機場所も予め決めておく。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031908.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;黄色い台は一つ乗れば、あとはタヌキで飛び越えられる。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031909.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ステージ4&#34;&gt;ステージ4&lt;/h2&gt;&#xA;&lt;p&gt;壁虫はジャンプして目視しないと通りてこない。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031910.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;パックンは、ジャンプ後に踏みつけたあと、Bボタンを離して、Aを押しっぱなしにする。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031911.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;水のところは、2秒待ってから入る。すると、透明ドカンに入りやすい。&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031912.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031913.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ステージ5&#34;&gt;ステージ5&lt;/h2&gt;&#xA;&lt;p&gt;熱線が手前で消えたあと、2秒を数えてから入る。すると、熱線を避けてジャンプしやすい。大体どの部分を走り、どの部分に着地するのか決めておくといい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031914.png&#34; alt=&#34;&#34;&gt;&#xA;グリーンスターのところは熱線が交差する直前になるので、取ったあとにギリギリのところでジャンプ。すると、しばらく熱線が来ない。この時間を利用して中央のハテナを取る。ちなみに、熱線は中央が一番危険なので、長く待機しない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031915.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031916.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;あとはタヌキとピーチで空中にとどまりつつ、ハテナを取っていくとクリア。奇跡的にノーダメでクリアしました。&lt;/p&gt;&#xA;&lt;p&gt;ただ、この熱線地帯、ダメージ後の無敵状態を利用してハテナを取っていく方法も考えてた。もしタヌキが余ってる場合は中央に置いとこうかなとかも考えてた。(試してないので有効かわからないけど&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/switch_mario_3d_world_2021031917.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、アイリス(アナザー)とクッキー</title>
      <link>https://syui.github.io/blog/post/2021/03/18/pogo/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/18/pogo/</guid>
      <description>&lt;p&gt;最近、ポケマスが楽しい。&lt;/p&gt;&#xA;&lt;p&gt;配布バディーズ、アカギ(パルキア)のボード開放とかがありまして、ちょっとずつでも強くなっていく実感があって、ワクワクしてます。&lt;/p&gt;&#xA;&lt;p&gt;今回は、アイリス(アナザー)、つまり、アイリス(チャンピオン)を引くべきかの話をします。以下、Aアイリスと略します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ダイヤの使い所&#34;&gt;ダイヤの使い所&lt;/h3&gt;&#xA;&lt;p&gt;2周年に向けてダイヤは貯めておいたほうがいいと思います。つまり、一般的には引くべきではないタイミングだと思う。&lt;/p&gt;&#xA;&lt;p&gt;でも、Aアイリスは面白そうなバディーズなので、個人的には引いておきたいと思っています。サザンドラも割と好きだし。&lt;/p&gt;&#xA;&lt;p&gt;主な理由は2つあって、一つはテクニカルで火力を出すバディーズを持っていなかったことです。Aアイリスは後述しますが、かなりの火力を期待できます。&lt;/p&gt;&#xA;&lt;p&gt;もう一つはデバフ要員もあまり持ってなくて、最近はデバフが活躍する場面も増えてきて、ちょっと困っていたこと。Aアイリスはデバフ効果が2倍なので、それが面白そう。&lt;/p&gt;&#xA;&lt;p&gt;追記 : Aアイリスを引きました。予想以上に強いと感じています。ダイヤを全部使って、天井で2凸でした。アメ(19/20)で3凸する予定。また2周年に向けてダイヤ貯めないとなあ&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;現在、6EXしてるバディーズです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210318_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;クッキーで防御ダウン&#34;&gt;クッキーで防御ダウン&lt;/h3&gt;&#xA;&lt;p&gt;今回のAアイリスには、クッキーで防御ダウンのポテンシャルを取ると、その効果も2倍になるので、全体攻撃デバフ+ドラゴンダイブと組み合わせれば、かなり強そうです。ドラゴンダイブが高火力な物理技なので。&lt;/p&gt;&#xA;&lt;h3 id=&#34;aアイリスができること&#34;&gt;Aアイリスができること&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;全体&lt;code&gt;こうげき-2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;全体&lt;code&gt;とくこう-2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;70%で単体&lt;code&gt;すばやさ-2&lt;/code&gt; (3凸), 20%でひるみ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;攻撃時まれに&lt;code&gt;ぼうぎょ-2&lt;/code&gt; (ばりばりクッキー銀)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;B技は相手の能力が下がってるほど威力上昇&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;なお、ドラゴンダイブで&lt;code&gt;すばやさ-2&lt;/code&gt;できるのは大きいので、3凸しておきたい。&lt;/p&gt;&#xA;&lt;p&gt;全体攻撃と全体デバフが打てるのは強いと思います。全体で計算して1回につき最大-12で、これは相当大きいです。しかも、B技の威力まで上がります。Aアイリスは、誰と組ませても活躍してくれそう。&lt;/p&gt;&#xA;&lt;p&gt;組み合わせは、B技バフのプラターヌ、リーフと組ませたり、デバフのマジコスリーフと組ませたり、耐久火力上昇でマジコスグリーン、さらに、圧倒的スピードでフウロなどと組ませたりしても強そう。&lt;/p&gt;&#xA;&lt;p&gt;ただ、レッドとの組み合わせは微妙ですね。なぜなら&lt;code&gt;とくぼうダウン&lt;/code&gt;がないから。&lt;/p&gt;&#xA;&lt;p&gt;個人的におしかったと思うのは、例えば、ボードに攻撃時まれに&lt;code&gt;とくぼうダウン&lt;/code&gt;とかあったら最高なんですけど、この辺、上方修正が来たりしないかなあ&amp;hellip;。これがあれば完璧でした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;配布バディーズの強化&#34;&gt;配布バディーズの強化&lt;/h3&gt;&#xA;&lt;p&gt;最近、配布バディーズであるアカギ(パルキア)のボード開放がなされました。これは、非常によい方針だと思います。&lt;/p&gt;&#xA;&lt;p&gt;強くなっていく実感があって、めちゃくちゃ楽しいし、ワクワクしてます。&lt;/p&gt;&#xA;&lt;p&gt;私は、ヒガナ(レックウザ)がクッキーで特攻ダウン無効をとっていて、りゅうせいぐんをリスクなしに打てるんですが、こいつにもボード開放とかメガシンカが来たら嬉しいですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ダンデと展望</title>
      <link>https://syui.github.io/blog/post/2021/03/12/pogo/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/12/pogo/</guid>
      <description>&lt;p&gt;ポケマスでは、ダンデのガチャ回したんですけど、運良く22連で2凸できたので、アタッカーのアメを使って3凸しました。&lt;/p&gt;&#xA;&lt;p&gt;ダイヤに余裕があるのにアメを使ったのですが、残る1凸を狙って爆死する危険があるので貴重なアメを使いました。&lt;/p&gt;&#xA;&lt;p&gt;ここはダイヤを貯めておこうという判断で、現在は30,000ほど貯まってます。つまり、今回のガチャはダンデのため取っておいたダイヤをほぼ使わず済んだのでよかった。&lt;/p&gt;&#xA;&lt;p&gt;次はアイリス(チャンピオン)を狙う予定。&lt;/p&gt;&#xA;&lt;p&gt;それ以外でポケマス関連の話題を2点ほど書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイ時間&#34;&gt;プレイ時間&lt;/h3&gt;&#xA;&lt;p&gt;まずはポケマスのプレイ時間の話です。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは、ほとんど時間を使わずにプレイしてますし、できると思います。&lt;/p&gt;&#xA;&lt;p&gt;時間を使ったのは初期の頃くらいだった記憶で、今は1日5分くらいでしょうか。大体はポケモンGoのリモートレイドとかの待ち時間にでもやれば終わります。&lt;/p&gt;&#xA;&lt;p&gt;ただ、1週間に1度とか1ヶ月に1度とかヴィラとチャンピオンがあったりするので、それぞれ30分ほどプレイすることになります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;コラボ&#34;&gt;コラボ&lt;/h3&gt;&#xA;&lt;p&gt;そういえば、なぜポケマスをやってるのかいうと、一つはポケモンが好きだし、レッドも好きだしというのがありました。&lt;/p&gt;&#xA;&lt;p&gt;他にはポケモンGoとのコラボなんかも期待してたことが少しあったかな。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoには色々とコラボが入ることがあって、例えば、switchのピカブイを半分以上進めるとメルタンを受け取れるようになります。これは結構大きかった(今もでかい)。&lt;/p&gt;&#xA;&lt;p&gt;せっかく強くなったポケマスも何かコラボがポケモンGoにあるとうれしいなと思っています。また、ポケマスやってる人はポケモンGoやってる人も多そう。&lt;/p&gt;&#xA;&lt;p&gt;仮にコラボが来るとしたらアバターとかポーズ関連とかありなのでは。例えば、ポケマスで星4エンブレム20個持ちなら、この衣装とポーズが手に入るみたいな。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ポケマスは、モデルとかが非常に優秀ですごいです。あと、キャラもしっかり作られてて、ああいう風に違和感ないように作るのほんとすごい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、TL50</title>
      <link>https://syui.github.io/blog/post/2021/03/09/pogo/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/09/pogo/</guid>
      <description>&lt;p&gt;TL50に必要なXP176はヤヤコマのコミュデイのときに到達しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210309_1509.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近の進捗も軽く紹介。ランドロスはハマりまくりました。リモートパス全消費と他のパスも半分くらい持っていかれた。逆にトルネロスは一発で出てくれた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210309_0260.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210309_0261.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210309_0259.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210309_0262.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、今プレイしておくといいかもしれない理由</title>
      <link>https://syui.github.io/blog/post/2021/03/06/pogo/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/06/pogo/</guid>
      <description>&lt;p&gt;「ソフトとハードの未来を探求」ということで以下の記事が出ています。面白そうだったので、ちょっと紹介します。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;We’re thrilled to collaborate with &lt;a href=&#34;https://twitter.com/Microsoft?ref_src=twsrc%5Etfw&#34;&gt;@microsoft&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/HoloLens?ref_src=twsrc%5Etfw&#34;&gt;@hololens&lt;/a&gt; on new experiences that will weave together the digital and physical world. Check out this proof-of-concept demo, built on our planet-scale platform, and the amazing possibilities that could await. &lt;a href=&#34;https://t.co/ig0bQUIQ8b&#34;&gt;https://t.co/ig0bQUIQ8b&lt;/a&gt; &lt;a href=&#34;https://t.co/gGk5djVayC&#34;&gt;pic.twitter.com/gGk5djVayC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Niantic, Inc. (@NianticLabs) &lt;a href=&#34;https://twitter.com/NianticLabs/status/1366795830603247618?ref_src=twsrc%5Etfw&#34;&gt;March 2, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nianticlabs.com/blog/microsoft-ignite-2021&#34;&gt;https://nianticlabs.com/blog/microsoft-ignite-2021&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.businessinsider.jp/post-230729&#34;&gt;https://www.businessinsider.jp/post-230729&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;動画を見てみると、現実の空間を把握した上でゴーグルにコンテンツを配置する技術を使いARを実現するものかなって思いました。&lt;/p&gt;&#xA;&lt;p&gt;この場合、ゴーグルがハードで、ゴーグルに内蔵されるソフトを通じて動く感じになりそう。&lt;/p&gt;&#xA;&lt;p&gt;また、動画の終盤では、ゴーグルの前に手を掲げると、ゴーグル装着者しか見えない操作ウィンドウが開き、手の動きで操作しているように見えます。&lt;/p&gt;&#xA;&lt;p&gt;操作ウィンドウを出すには、まず人の手のひらの形、あるいは手相、もしくは指紋をカメラで読み取りソフトが認識するのかわかりませんが、とりあえず一定の手順を踏むと操作ウィンドウが表示できるようです。&lt;/p&gt;&#xA;&lt;p&gt;操作ウィンドウを表示したあとは、手の動きに応じ、選択・決定のフェイズに移行するみたい。空中で手を動かすだけでゴーグルに内蔵されているソフトを操作できるように見えます。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoを運営するNianticは、結構前からこのような技術を率先して開発していて、これからの変化がとても楽しみです。&lt;/p&gt;&#xA;&lt;p&gt;興味がある人は、今のうちにポケモンGoをプレイしてポケモンを捕まえとくといいかもよ。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、将来的にポケモンGoと連動するかはわかりませんし、こういったものがリリースされたとしても最初のうちは「え？こんなもん？」と感じるような、言ってしまえばあまり出来が良いとは思えないものかもしれませんが、さらにそこから数年後は、結構すごいことになってたりするかもしれませんよ。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoには、たくさんの可能性があってワクワクしてます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、リモートパスの使い所</title>
      <link>https://syui.github.io/blog/post/2021/03/02/pogo/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/02/pogo/</guid>
      <description>&lt;p&gt;ランドロス、トルネロス、ボルトロスの色違いが来ます。&lt;/p&gt;&#xA;&lt;p&gt;基本は無料パスで頑張りますが、出現期間は短いので、リモートパスのストックは2枚を残し、消費していく予定。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210301_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;例えば、リモートパスx3の配布が3/2までで、ランドロスが3/1からなので、ランドロスの出現までパスの受け取りを待つようにするのがおすすめです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を飾ろうとして失敗した話</title>
      <link>https://syui.github.io/blog/post/2021/03/01/photo/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/03/01/photo/</guid>
      <description>&lt;p&gt;この前、ポケモンGoで好きなyoutuberさんが生配信されてて、貰ったものか買ったものかわかりませんが、部屋に絵が飾ってあったんですよね。&lt;/p&gt;&#xA;&lt;p&gt;「うわー、いいなー、かっこいいなー」と思ったので、自分も好きな風景画でも印刷して飾ってみることにしたのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、自分が描いた背景画を印刷して額(縁)に入れてみたのですが、どうもしっくりこなくて。&lt;/p&gt;&#xA;&lt;p&gt;というのも、A4以上のサイズを印刷する印刷機がなく、A4だと額に入れたとき周りが白くなっちゃうんですよね。&lt;/p&gt;&#xA;&lt;p&gt;なので、背景が白で構成されたものしか使えなくて、結局、アイコンを使う羽目になってしまったという。&lt;/p&gt;&#xA;&lt;p&gt;一応、飾ってみたのですが、どうなんでしょうね、これ&amp;hellip;まあ、いいか。&lt;/p&gt;&#xA;&lt;p&gt;いくつかデスクの写真撮ったので、載せときます。私も他人のデスク写真を見るの好きなので。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_01.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_02.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/photo/desk_switch_07.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、絵はデジタルじゃないと死にます。アナログで描くのはきつすぎる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた65</title>
      <link>https://syui.github.io/blog/post/2021/02/28/illust/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/28/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_65.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;こういう構図で一度描いてみたいなあと思ってたやつ。輪っかが体の周りぐるっとしてる感じの。&lt;/p&gt;&#xA;&lt;p&gt;背景は色々考えてみて、結局、そこまで描けるものもないし、ネタもないしで、宇宙好きなので、いつも通り。でも個人的には気に入ってる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>楽天モバイルをオススメする理由</title>
      <link>https://syui.github.io/blog/post/2021/02/27/rakuten/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/27/rakuten/</guid>
      <description>&lt;p&gt;この記事は、「楽天モバイルを応援しよう」という目的で書かれたものです。&lt;/p&gt;&#xA;&lt;p&gt;執筆依頼を受けてるわけでもないんですけど、個人的に楽天モバイルを応援したいと思ったので、書くことにしました。&lt;/p&gt;&#xA;&lt;p&gt;まずは、楽天モバイルがなんなのか、その特徴と料金プランについて紹介します。&lt;/p&gt;&#xA;&lt;p&gt;楽天モバイルとは、単純に&lt;code&gt;1GBまで無料で使えるSIM&lt;/code&gt;のことであり、ネットワーク回線契約のことです。使用容量によって月額が変わってきます。段階的に上がっていく料金プラン。2980円が上限で無制限に使えます。&lt;/p&gt;&#xA;&lt;p&gt;正確には、&lt;code&gt;Rakuten UN-LIMIT V&lt;/code&gt;が自動で&lt;code&gt;Rakuten UN-LIMIT VI&lt;/code&gt;にアップグレートされたときの料金プランということになり、&lt;code&gt;Rakuten UN-LIMIT VI&lt;/code&gt;がプランの名称だと思います。&lt;/p&gt;&#xA;&lt;p&gt;さて、ここで、&lt;code&gt;1GBまで無料&lt;/code&gt;というのは随分と思い切ったな、最悪じゃないか、悪いことだ、大丈夫なのか、という声があります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私にとって、&lt;code&gt;1GBまで無料&lt;/code&gt;というのは不思議でもなんでもなく、ごく普通で、本来ならあたりまえのことだったんじゃないかと思っているということです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、当たり前を実現するのは並大抵のことではありません。楽天さん、随分と頑張られた、すごいな、という感想です。&lt;/p&gt;&#xA;&lt;p&gt;世の中、いろんなサービスがあります。みんなが当たり前のように使っている当たり前のサービスの数々。そんな中、日本国内のネットワーク回線契約、通称、キャリア契約は、私の感想でいうと、ずっとおかしかった。むしろ、おかしいのは楽天モバイルではなく、キャリア契約(料金プラン)のほうだった気がします。&lt;/p&gt;&#xA;&lt;p&gt;ドコモであれ、ソフトバンクであれキャリアと呼ばれる大企業は、国から特別な許可を与えられ、通信規格を独占しています。これは悪いことではなく、公共的な事業を行うためのものです。&lt;/p&gt;&#xA;&lt;p&gt;公共的な事業は、その独占権を受け事業を展開することができます。そのため経営はすごく楽で、あれ程の権限と許可を得て行う事業、誰がやっても絶対に失敗しません。絶対成功するような内容であるため、その代わりに公共のために仕事をしなければなりません。営利追求、つまり、どんなことをしても金さえ儲けりゃいいんだ、ということはできませんし、やってはいけません。&lt;/p&gt;&#xA;&lt;p&gt;本来ならそうですが、今までのキャリアが行ってきた行い、例えば、料金プランや契約方針などを見ていると、これはおかしいと思うことが多々ありました。&lt;/p&gt;&#xA;&lt;p&gt;例えば、両親がドコモショップから帰ってくると、決まって不要なオプションを山盛りで契約させられ、高すぎる基本使用料、高すぎる違約金、そして、端末やSIMカードにもよくわからないアプリが大量にインストール、制限が付け加えられており、SIMロックされていました。&lt;/p&gt;&#xA;&lt;p&gt;わけがわからないよ。&lt;/p&gt;&#xA;&lt;p&gt;通常、あまり使わないような人が月額で7千円も1万円も払っている状況は、やっぱりおかしいと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;また、他にもおかしいところはたくさんあって、私は、このような国から特権を与えられた国営企業のようなところが、国内最大の利益を生み出す状況は良くないと考えています。国際競争力の観点からもそうですし、また、今までのキャリア3社を見ていると、競争しているようには見えず、談合をしているように見えます。&lt;/p&gt;&#xA;&lt;p&gt;こういった企業が国内最大である事実は、他の経営者のやる気を削いでしまって、非常に良くない。&lt;/p&gt;&#xA;&lt;p&gt;「この国では、どうせ国から特権を与えられた特別な国営企業しか勝てないんだ」、「談合して価格を下げないよう不正することでしか勝てないんだ」と既に感づかれてしまっており、新しいイノベーションは生まれず、これではアメリカ企業などに勝てるはずありませんし、世界に通用する企業など出てくるはずありません。&lt;/p&gt;&#xA;&lt;p&gt;日本では、なぜアップルやグーグルのような企業が生まれないんだ、という疑問は、私からすると、現環境からの当然の帰結だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;このような視点から、私は今までの状況はよくない、なにかがおかしいと思っていました。&lt;/p&gt;&#xA;&lt;p&gt;そこで、今回の楽天モバイル、三木谷氏の意見を見てみることにします。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;三木谷氏は、「人間の社会生活に必要な社会インフラ」とし、「経済的な理由でスマホが使えなかったり低速でしかスマホが使えなかったりする人もおり、楽天グループとして何ができるかを真剣に考えた」とコメント。スマホを持てない人を一人でも減らすために、これまでの常識にとらわれずにあらゆる人に安価で高品質なネットワークサービスを提供していく。&lt;/p&gt;&#xA;&lt;p&gt;「これまでの常識をひっくり返す」というのは、楽天創業時からやってきたことという三木谷氏は、楽天創業時に触れ、「楽天創業時は、ネットでモノを買うという常識はなかった。当時のネット回線は14.4kbps～28.8kbpsだったが現在は（超高速大容量の）5Gの時代。楽天はチャレンジし、携帯業界の常識をひっくり返す」と、楽天の携帯電話事業に対する意気込みをみせた。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://k-tai.watch.impress.co.jp/docs/news/1303500.html&#34;&gt;https://k-tai.watch.impress.co.jp/docs/news/1303500.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は、素直に応援したくなりましたよ。これが今後のデフォルト、スタンダードになればいいなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、今現在、他社契約で特に困っていない人も、特に不便していない人も、乗り換えるのが面倒な人も、大金持ちの人も、みんな楽天モバイルに乗り換えるといいと思う。&lt;/p&gt;&#xA;&lt;p&gt;楽天モバイルも契約者が増えて悪いことはないはず。&lt;/p&gt;&#xA;&lt;p&gt;ただし、回線が入るかは&lt;a href=&#34;https://network.mobile.rakuten.co.jp/area/?l-id=gnavi_area&#34;&gt;エリア&lt;/a&gt;を確認しておきましょう。&lt;/p&gt;&#xA;&lt;p&gt;iosでは、&lt;code&gt;モバイル通信 &amp;gt; ネットワーク選択&lt;/code&gt;にて、自動を解除すると、しばらく電波を収集しますが、&lt;code&gt;Rakuten&lt;/code&gt;または&lt;code&gt;440 11&lt;/code&gt;がある場合は、一応、電波を拾えているらしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/ios_20210227_rakuten_mobile_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;楽天モバイルのような理念のあるところが、今後、圧倒的に強くなり、その影響で他社も変わってくるといいなと願っています。&lt;/p&gt;&#xA;&lt;p&gt;仮にそうなった場合でも、先駆者である楽天モバイルはかなりの恩恵を受けられる気がする。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、楽天モバイル、応援してます。がんばえー&lt;/p&gt;</description>
    </item>
    <item>
      <title>skebとfanbox(pixiv)でidを取ってみた</title>
      <link>https://syui.github.io/blog/post/2021/02/26/illust/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/26/illust/</guid>
      <description>&lt;p&gt;skeb.jpが買収された話をきっかけに、skebとかに登録してidを取ってみました。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;「自身がコミュニティに属しているプレイヤーであることが重要です。例えば、イラストレーターさん向けのサービスが作りたいなら、自身もイラストレーターになる必要があります。僕も同人作品だけで相当作りました。だからこそ問題点が見えてきたし、僕のことを知っているコミュニティの人がたくさんいるので、『この人がやっているなら信用できる』とプロダクトを使ってくれました。この分野で事業をやりたいからコミュニティを作ろう、そういう人が集まる場を作ろうというのは失敗します」。&lt;/p&gt;&#xA;&lt;p&gt;スケブに関しても、喜田氏がいかにイラストレーターの立場になってサービス作りをしているかが窺える。クリエイターとクライアントに打ち合わせをさせないのは、クライアントの過度な要求からクリエイターを守る意味合いもあるという。&lt;/p&gt;&#xA;&lt;p&gt;「日本では、お金を出す方が偉いとなりがちです」と喜田氏。「クライアントは後になってやっぱりここを変えてとか、無制限にリテイクを求め、クリエイターが直さないといけなくなる。そういうトラブルも多かったので、それをどうにかしたいという思いがありました」。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/02/19/skeb-buyout&#34;&gt;https://jp.techcrunch.com/2021/02/19/skeb-buyout&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;skebのユーザーページで404が表示される場合&#34;&gt;skebのユーザーページで404が表示される場合&lt;/h3&gt;&#xA;&lt;p&gt;idを取れたのが特にうれしかったです。手遅れかもとちょっと思ってました。&lt;/p&gt;&#xA;&lt;p&gt;ただ、skebでは、twitterからログインして、ユーザーページを作成するんですけど、idをsyuiに変更して、一応、ページはできたように見えるのですが、リロードすると404になってしまい、つまり、publicにページが作成されていない状態でした。&lt;/p&gt;&#xA;&lt;p&gt;docsなどを読んだんですけど、あまり仕様が把握できなくて、よくわからなくて、放置してたら、いつの間にか、ページができていました。&lt;/p&gt;&#xA;&lt;p&gt;つまり、デプロイ処理されてなかっただけなのかもしれません。コスト等の関係で、h1やh2で回るようにしてるのかもとか思いましたが、実際のところはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;したがって、登録したあとは、ユーザーページが公開されるまで、404でもしばらく待つとよいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;この辺、検索してもなかなか情報が出てこなくてハマりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;skebとfanbox&#34;&gt;skebとfanbox&lt;/h3&gt;&#xA;&lt;p&gt;個人的には、skebの方針のほうが好きです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_64.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://skeb.jp/@syui&#34;&gt;https://skeb.jp/@syui&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;依頼について&#34;&gt;依頼について&lt;/h3&gt;&#xA;&lt;p&gt;あまり、いらっしゃらないと思いますが、もし依頼したいと考えてくださる人がいた場合の文章です。&lt;/p&gt;&#xA;&lt;p&gt;skebでは依頼を受け付けています。&lt;/p&gt;&#xA;&lt;p&gt;一次創作しかやりませんので、こんなキャラを描いてと言われた場合、新しいキャラを作成することになります。&lt;/p&gt;&#xA;&lt;p&gt;また、私が気に入れば、後に自分の作品で使われる可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;名前は私がつけますので、クライアントは命名できませんが、別に名前の要望があっても気にしません。&lt;/p&gt;&#xA;&lt;p&gt;どんな依頼があっても、気にすることはないと思うので、気軽に依頼してください。どんな依頼をしてもらっても構いません。&lt;/p&gt;&#xA;&lt;p&gt;ただ、完全に要望に答えられるわけではなく、あくまで要望に答える努力をしながらも、自由にやるつもりです。&lt;/p&gt;&#xA;&lt;p&gt;また、依頼を受けたときの個人方針として「画力向上のため、できる限り努力して仕上げること」を目標にしたいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;よって、今まで描いてきた絵とは多少異なってくる可能性があるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、イラスト自体の特徴や方向性を変えるつもりはなく、変わるのは、おそらく、微妙な線の入れ方や塗り方とかかなと思われます。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、もし依頼があれば、がんばります。&lt;/p&gt;&#xA;&lt;p&gt;以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、注目の1.5周年でやるべきこと</title>
      <link>https://syui.github.io/blog/post/2021/02/25/pokemas/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/25/pokemas/</guid>
      <description>&lt;p&gt;現在の強さはこんな感じ。えっ、弱いって？&lt;/p&gt;&#xA;&lt;p&gt;まあ、無課金だと使ってるバディーズ見てわかるとおり、結構、きつかったりすると思う。一応、攻略は出来てるけど。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210225_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210225_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今までガチャを引いたのって、0.5周年でレッドのときと1.0周年のマサラ組のとき、そして、正月リーリエ(アブリボン)のときくらいだった記憶。&lt;/p&gt;&#xA;&lt;p&gt;正月リーリエのときは完全に外したと思っていて、今思うと、これは引かなくてよかったかも。&lt;/p&gt;&#xA;&lt;p&gt;当初の狙いは、回避運ゲーができるようにすることでした。&lt;/p&gt;&#xA;&lt;p&gt;私は、回避、つまり、攻撃が当たらないことが最も有効な攻略手段だと考えていて、バフ、デバフに関しても、最強なのは回避+命中下げだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、睡眠にしても、その他妨害異常にしても、相手は耐性をつけて、どんどん効かなくなってきます。また、行動を阻害するときって、相手はゲージが溜まっていく状態なんですよね。また、トレーナー技は普通に打たれます。&lt;/p&gt;&#xA;&lt;p&gt;しかし、相手の攻撃が当たらないとなると、相手のゲージも減らした上で、ダメージが0になる。&lt;/p&gt;&#xA;&lt;p&gt;絶対的に勝てないような相手、圧倒的にレベル差があるような相手に対して、これが最も有効な戦略だと思います。&lt;/p&gt;&#xA;&lt;p&gt;原作でもそうでしたが、レベル差が圧倒的で、どうしても勝てないときって、相手の命中を下げれば、勝てる可能性がでてきませんでした？&lt;/p&gt;&#xA;&lt;p&gt;そのような理由から、私は無課金でやってるわけなので、どうしても攻略が難しいタスクが来た場合、回避運ゲーができるよう正月リーリエを引いたという経緯がありました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今思うと、引くべきだったのって、レッド、マサラ組、そして、今回登場するダンデだったんじゃないかと。&lt;/p&gt;&#xA;&lt;p&gt;正月リーリエは、爆死してしまい4万ダイヤを使って、天井で1回引きましたが、本来なら貯めておくのが正解だったかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;まあ、正月リーリエのおかげで、チャンピオンエリートを何度もクリアしてきましたので、いいこともたくさんありましたが。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回、1.5周年のダンデは確実に引いておきたい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;のびしろ&lt;/code&gt;も&lt;code&gt;星5アメ&lt;/code&gt;もありますので、引いたときの準備は一応できてる。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、アイリス(チャンピオン)も気に入ってるので、できればほしい。でも、回すかどうかはやっぱり内容(性能)によるかも。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた62,63</title>
      <link>https://syui.github.io/blog/post/2021/02/21/illust/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/21/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_62.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_63.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;気をつけてること&#34;&gt;気をつけてること&lt;/h3&gt;&#xA;&lt;p&gt;好き勝手描くのはやっぱり楽しい。&lt;/p&gt;&#xA;&lt;p&gt;毎回違う構図で描くよう心がけています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、描く人と見る人の印象は異なるので、客観的にどう見えているのか、わかりません。もしかしたら、全部同じ絵に見えてるかも。&lt;/p&gt;&#xA;&lt;p&gt;同じ人が描いた絵が全部同じに見えてしまうことがあって、よくよく見ると全然違ったりもするんですけど、私もそういうことがたまにあります。&lt;/p&gt;&#xA;&lt;p&gt;全身を描くようにしてて、一部より全身のほうが圧倒的に難しいと思うので。&lt;/p&gt;&#xA;&lt;p&gt;あと背景に関して、実は、人間より背景のほうが好きで、背景を考えたり描いたりするの大変だけど、そこに面白さもあると思っていて、一応、頑張ってます。&lt;/p&gt;&#xA;&lt;p&gt;ただ、背景を考えるの、ホント大変で&amp;hellip;見るのは好きなんですけどね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、カントーは赤緑どちらにすべきか</title>
      <link>https://syui.github.io/blog/post/2021/02/19/pogo/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/19/pogo/</guid>
      <description>&lt;p&gt;ポケモンGoでカントーのイベントが開催されます。カントーといえば、原作のGEN1の舞台で、日本の関東地方がモデル。ポケモンは現実の地域がモデルになることが多く、最新のGEN8はイギリスだったかな。&lt;/p&gt;&#xA;&lt;p&gt;で、このイベント(有料)では赤と緑のどちらかを選んで参加するんですけど、どちらを選んだらいいか、迷っている人もいるかと思います。そこで、自分がどちらを選んだのか、その理由とともに解説していければと思います。&lt;/p&gt;&#xA;&lt;p&gt;私が選んだのは&lt;code&gt;赤&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;理由はメダルがかっこいいから。つまり、受け取れるメダルで決めました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210219_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;選択によって受け取れるメダルが変わってくるんですよね。赤ならリザードン、緑ならフシギバナです。&lt;/p&gt;&#xA;&lt;p&gt;原作では基本的に赤系を選択してプレイしてきました。ちなみに、原作は全部クリア済み。&lt;/p&gt;&#xA;&lt;p&gt;ファイアレッド、ハートゴールド、ルビーをプレイしており、DSは持ってなかったのでダイヤモンドを借りてプレイし、その後、3DSでパール、ホワイト、ブラック2、サンをプレイ。switchでソードをプレイしています。&lt;/p&gt;&#xA;&lt;p&gt;なので、今回の選択も当然といえば当然です。また、リザードン好きであることも関係しています。たとえ緑のほうに色違いがあったとしても、おそらく赤を選択したでしょう。&lt;/p&gt;&#xA;&lt;p&gt;今回のイベントでは赤と緑で登場する色違いが違います。自分が持っていない色違いが登場するほうを選択する人が多いかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、色違いは後で取れる可能性はありますが、メダルは可能性がほぼありません。&lt;/p&gt;&#xA;&lt;p&gt;したがって、私はメダルで決めました。あるいは色で。&lt;/p&gt;&#xA;&lt;p&gt;まあ、緑で出てくる色違い、実は全部持ってるんですけどね。逆に赤はベロリンガを持っていないので、私は色違い要素でも赤を選択するほうがいいのです。&lt;/p&gt;&#xA;&lt;p&gt;みなさまは、どちらを選びましたか？私のオススメは、メダルです。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Proud of the version you chose, &lt;a href=&#34;https://twitter.com/hashtag/PokemonGOTour?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#PokemonGOTour&lt;/a&gt; Kanto ticket holders? Good news! Completing the event’s Special Research will reward you with a hat avatar item styled after your selected version! &lt;a href=&#34;https://t.co/PdvODmvyol&#34;&gt;pic.twitter.com/PdvODmvyol&lt;/a&gt;&lt;/p&gt;&amp;mdash; Pokémon GO (@PokemonGoApp) &lt;a href=&#34;https://twitter.com/PokemonGoApp/status/1362711020645601283?ref_src=twsrc%5Etfw&#34;&gt;February 19, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ポケマス、クレセリア討伐</title>
      <link>https://syui.github.io/blog/post/2021/02/18/pokemas/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/18/pokemas/</guid>
      <description>&lt;p&gt;クレセリアは、ギーマ、プラターヌ、正月リーリエでクリアしました。&lt;/p&gt;&#xA;&lt;p&gt;ゼルネアスのムーンフォースのダメージが結構入ります。これ、途中まで気づいてなかった。&lt;/p&gt;&#xA;&lt;p&gt;ダイヤ貯めてる無課金勢ですが、配布されたプラターヌがすごく強いので、今回取っとくといいかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210218_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;あとは、チャンピオン(エリート)は毎回クリアしてます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを修正してみた4</title>
      <link>https://syui.github.io/blog/post/2021/02/07/illust/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/07/illust/</guid>
      <description>&lt;p&gt;イラストをたくさん修正しました。前回修正したのが2020/11/03です。&lt;/p&gt;&#xA;&lt;p&gt;気になる方は、以下のリンクから。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_60.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、物語やゲームは進捗ゼロです。どうすればいいのか、わかりません。とりあえず書いてみればいいのかな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモン剣盾、お気に入りのコーディネート</title>
      <link>https://syui.github.io/blog/post/2021/02/03/pokemon-sword/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/02/03/pokemon-sword/</guid>
      <description>&lt;p&gt;最近、ポケモン剣盾をyoutubeで見ることがあって、久しぶりにプレイ。他の人のコーディネートを見るのが好きなので、自分のコーディネートを紹介します。見た目を変えて冒険してると、グッと来るものがありますね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemon_sword_20210203_01.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemon_sword_20210203_02.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemon_sword_20210203_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;面白味に欠けるかもしれませんが、やっぱり、シンプルが一番好き。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、おこうの日にやるべきこと</title>
      <link>https://syui.github.io/blog/post/2021/01/24/pogo/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/24/pogo/</guid>
      <description>&lt;p&gt;13:00からと16:00のドラゴンタイプの時間に&lt;code&gt;おこう&lt;/code&gt;を使うとドラゴンタイプが稀に出るらしいので、捕まえて、交換して、進化させることを目指します。ドラゴンタイプのプラチナメダルを取るにはチャンスかもしれません！&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、ドラゴンタイプ自体はそこまで出ないかもしれないので注意。ドラゴンタイプの時間には1/6の確率でミニリュウが出てくる感じのイベントで、ほかはドラゴンタイプではありません。また、お香は確か、5分に1回の割合でポケモンが出てくる感じだと思います。そのうちの1/6がドラゴンタイプだとして、1時間で2匹、2時間で4匹くらいになりそう。ひ、ひでえ&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、がんばります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03592&#34;&gt;https://pokemongo-get.com/pokego03592&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>素材を作り直してる</title>
      <link>https://syui.github.io/blog/post/2021/01/23/illust/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/23/illust/</guid>
      <description>&lt;p&gt;たくさん作ってると、その中で納得できないものとか出てくるので、作り直してます。&lt;/p&gt;&#xA;&lt;p&gt;頭の上の輪っか、実は色々な形にできます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_ai_sword.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ステッカーを作ってみた1</title>
      <link>https://syui.github.io/blog/post/2021/01/21/badge/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/21/badge/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;macbook air 11-inch (intel)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/make_card_20221214_0008.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>衣装を考えてみた</title>
      <link>https://syui.github.io/blog/post/2021/01/20/illust/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/20/illust/</guid>
      <description>&lt;p&gt;最近、いろいろな作品を見てて、私は、自分が作った物語を自分の好き勝手書いてきただけだけど、もっと読んでる人も楽しめるような作品にしたいなあとか思って、その過程で、衣装とかも普遍的なものにアップデートしなきゃとか思ったので、そのへんを少し考えてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_ai.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;でも描くのが楽で、かつ面白いのは、過去バージョンなんだけどなあ、と思いつつ、でも、衣装はいずれ変更修正しなきゃとは思ってたので、この機会にやろうかなと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、靴の色とか、ちょっと悩んだけど、キャラクターのテーマカラーが白系なので、白で。&lt;/p&gt;&#xA;&lt;p&gt;でもなあ、靴要素は、意外とめんどくさいよ、やっぱり。壊れたらどうするのとか、どこで買ったのかとか、色々。&lt;/p&gt;&#xA;&lt;p&gt;このキャラのコンセプトが「何も持たない」なので、当然ながら靴も持ってなかったわけですし、必要もなかったわけですが、あ、絵本は持ってたか。なので、色々と面倒な要素ではあります、靴は。&lt;/p&gt;&#xA;&lt;p&gt;物語のほうは、主要な出来事はそのままで、主に演出方面で書き直したいなあと考えております。&lt;/p&gt;&#xA;&lt;p&gt;色んな作品を見て、どれもすごく面白いんですが、やっぱり、「楽しい」とか「面白い」って思う作品には、それまでの前準備とかパターンみたいなものがあると思って、次はそのへんを意識して作ってみたい。&lt;/p&gt;&#xA;&lt;p&gt;最初は完成させること第一でしたが、今後はそういうこともできるようになれればなあとか思っています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macでtimeコマンドを使ってみる</title>
      <link>https://syui.github.io/blog/post/2021/01/19/shell/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/19/shell/</guid>
      <description>&lt;p&gt;&lt;code&gt;coreutils&lt;/code&gt;になかったのですが、&lt;code&gt;gnu-time&lt;/code&gt;でインストールできます。&lt;/p&gt;&#xA;&lt;p&gt;mac標準は、&lt;code&gt;/usr/bin/time&lt;/code&gt;にありますが、ほとんどのオプションが機能せず、あまり使えません。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install gnu-time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gtime -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%e&amp;#34;&lt;/span&gt; read&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これによって、ストップウォッチとして使えますし、任意のタイミングで実行時間を計測して記録できるので、色々と便利です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、任意のコマンドを指定した間隔で実行してみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#/bin/zsh&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;time.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;command.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[s]ave, [l]oad&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $1 in&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f $json &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;rm $json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; :&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;command?, [s]top&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;read key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $key in&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;command\&amp;#34;:\&amp;#34;\&amp;#34;,\&amp;#34;time\&amp;#34;:\&amp;#34;\&amp;#34;}]&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time enter&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;gtime -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%e&amp;#34;&lt;/span&gt; -o $time read&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cti&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $time&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;command\&amp;#34;:\&amp;#34;&lt;/span&gt;$key&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;,\&amp;#34;time\&amp;#34;:\&amp;#34;&lt;/span&gt;$cti&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;},&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;l&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! cat $json|jq;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $json|jq length&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0;i&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$n;i++&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;command&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].command&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat $json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;].time&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;zsh -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$command&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;sleep $time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例えば、このスクリプトを&lt;code&gt;command.zsh&lt;/code&gt;で保存したとして、&lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;which cat&lt;/code&gt;を一定の時間間隔で実行してみます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、TL50のプラチナメダル40個</title>
      <link>https://syui.github.io/blog/post/2021/01/18/pogo/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/18/pogo/</guid>
      <description>&lt;p&gt;今回は、TL50の要件のうち、推測される要件の一つである&lt;code&gt;プラチナメダル40個&lt;/code&gt;をどのように達成するかを考えていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;プラチナメダルの数はTL2ごとにx2倍が要求されてきました。このままいくと、TL50ではプラチナメダル40個を必要とするのではないか、というのが私の推測です。&lt;/p&gt;&#xA;&lt;p&gt;私は現在、38個です。残り2つですが、ドラゴンタイプが2400/2500なので、カントーイベントでミニリュウが大量に湧くということで、ここで、ドラゴンタイプを一気に捕まえちゃおう、と思っています。&lt;/p&gt;&#xA;&lt;p&gt;もう一つは交換距離のメダルです。タマゴ産を交換することで、交換距離を稼げます。&lt;/p&gt;&#xA;&lt;p&gt;ストックしてあるタマゴ産を、できればアメx2のとき、かつTL49の要件の一つが&lt;code&gt;500km離れたポケモンを何度か交換する&lt;/code&gt;なので、そのときに一気にやりたいなと思っています。(それでもちょっときついぞ&lt;/p&gt;&#xA;&lt;p&gt;相変わらずギリギリちゃんです。XPも現在、166/176でギリギリですし&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、TL50を目指して頑張ろう！&lt;/p&gt;&#xA;&lt;h3 id=&#34;プラチナメダルがtl49ではなくtl50に要求されると考える理由&#34;&gt;プラチナメダルがTL49ではなくTL50に要求されると考える理由&lt;/h3&gt;&#xA;&lt;p&gt;今までのパターンでは、TL2ごとにメダルを要求されたので、このまま行くとTL49に要求されると思いますが、TL49は友情のタスクです。TL49は、ギフト、キラ、交換というタスクが予想されますが、残りの一つは親友(大親友)になるというのが私の予想です。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;トレーナーレベル49：相棒との友情と同じくらい大切なものは何でしょう？もちろん、他のトレーナーとの友情です！『Pokémon GO』で出会ったトレーナーは人生に多くのものをもたらしてくれます。そしてその友情を育むことが、素晴らしいポケモントレーナーになるうえで重要なことです。交換でキラポケモンを手に入れたり、ギフトなどを贈ったりしてトレーナーレベル49になりましょう。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;反対に、TL50では&lt;code&gt;すべての要素をマスター&lt;/code&gt;と記されているので、こちらでプラチナメダルが要求されると予想しています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;トレーナーレベル50：ついに最後のレベルです！『Pokémon GO』の新たな最高レベルに到達するには、ゲームのすべての要素をマスターしなければなりません。エクセレントスローを投げることから伝説のポケモンの捕獲、1500CPを下回るポケモンでGOロケット団のリーダーを倒すなど、『Pokémon GO』の最終レベルに到達するトレーナーとして相応しいかどうかを試す究極の試練が待っています。リワードには最後レベルに相応しい、驚くような着せ替えアイテムが受け取れます！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://9db.jp/pokemongo/data/10566&#34;&gt;https://9db.jp/pokemongo/data/10566&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/TheSilphRoad/comments/l073pi/making_a_plan_earn_40_platinum_medals/&#34;&gt;https://www.reddit.com/r/TheSilphRoad/comments/l073pi/making_a_plan_earn_40_platinum_medals/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、ワンリキーのコミュニティデイ</title>
      <link>https://syui.github.io/blog/post/2021/01/17/pogo/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/17/pogo/</guid>
      <description>&lt;p&gt;カイリキーをPL50まで上げました。あと、プルリルを3匹ほど捕まえました。私は、ちょっとだけGBLをやっていたのでよかったのですが、こういうのは絶対にやめたほうがいいです。GBLにはいかなる報酬も与えるべきではありません。今回、嬉しかったのは、やっとスコルピが光ったことでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210117_0208.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210117_0209.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210117_0210.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210117_0213.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210117_0214.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>webサイトの変更</title>
      <link>https://syui.github.io/blog/post/2021/01/16/web/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/16/web/</guid>
      <description>&lt;p&gt;レイアウトを変更したり、個別ページの文章を書き直したりしてました。&lt;/p&gt;&#xA;&lt;p&gt;このブログと言うか、webサイトのタイトルって、&lt;code&gt;syui.ai&lt;/code&gt;なんですよね。あまり知らなかった人、多いかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;今までタイトルは表示しないようにしてきたんですが、過去ブログを整理したタイミングとかで、やっぱり、タイトルは文字で表示しといたほうがいいと思ったので、表示することにしました。&lt;/p&gt;&#xA;&lt;p&gt;また、コピーしやすいようspanで囲ったりしてね。タイトルをコピーすること私もたまにありますので。&lt;/p&gt;&#xA;&lt;p&gt;逆にプロフィールページへのリンクがアイコンになったので、わかりにくくなっちゃった部分はあります。これ、トップページへのリンクと勘違いしやすそう。&lt;/p&gt;&#xA;&lt;p&gt;普通に文字でプロフィールってすればいいんですけど、項目が多いので個人アイコンの形にしています。&lt;/p&gt;&#xA;&lt;p&gt;これ、分かりづらいよなあと思いつつ、個人アイコンとブログのロゴが同一なので&amp;hellip;.。昔は分かれてたんですが、面倒なので統一したことがあって、それ以降、syui個人のアイコンとブログのアイコンが同じなんですよね。わかりづらい。&lt;/p&gt;&#xA;&lt;p&gt;今回、過去ブログの&lt;a href=&#34;https://mbahack.syui.ai&#34;&gt;mbahack.syui.ai&lt;/a&gt;, &lt;a href=&#34;https://mbahack2.syui.ai&#34;&gt;mbahack2.syui.ai&lt;/a&gt;を閉じて、移転のお知らせのみを表示することにしました。過去ブログはメンテ、運用してなくて、これ以上、放置しておくのもよくないので。&lt;/p&gt;&#xA;&lt;p&gt;あと、google-adsの広告とかをこっちに持ってきました。このサイトでは、収益になるはずもないんですけど、今、審査を通過するのって結構難しいらしいじゃない&amp;hellip;そんな理由で一応貼っておこうかなと。もちろん、収益になれば嬉しいんですけどね。アフィリエイトで収益って今の時代、かなり難しいんじゃないかな。ほとんどの人は、adblockしてますし、私も、してますし&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ハルカは引くべきか</title>
      <link>https://syui.github.io/blog/post/2021/01/15/pokemas/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/15/pokemas/</guid>
      <description>&lt;p&gt;ダイヤがなくなっちゃったので、引けませんけど、引くべきですね。強いから。&lt;/p&gt;&#xA;&lt;p&gt;ただ、恒常キャラなので、続けてればそのうち出るかもとは思ってます。期間中もダイヤが貯れば回すけどね。&lt;/p&gt;&#xA;&lt;p&gt;で、今回は、ポケマスのガチャがどういう方向なのか予想します。&lt;/p&gt;&#xA;&lt;p&gt;私の予想では、次に来るのはアタッカー最強クラスだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;理由としては、1月からテクニカル、サポーターと続けて最強クラスのキャラが来ました。具体的には、正月リーリエとハルカです。正月リーリエに関しては評価が分かれると思いますけど、私の考えでは、正月リーリエはMグリーン枠だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ですから、次に来るのは最強アタッカーだと予想します。来るのは、ちょうど1.5か2周年のタイミングかな。&lt;/p&gt;&#xA;&lt;p&gt;また、上記はどちらも女性なので、今度は男性キャラで来そうな気がしています。今までの最強キャラは、Mレッド、Mグリーン、Mリーフで、男性x2、女性x1の組み合わせでした。なので、今度は女性x2、男性x1なのかなって思います。&lt;/p&gt;&#xA;&lt;p&gt;よって、個人的には、正月リーリエ、ハルカ、そして、次に来ると予想する最強アタッカー枠の男性キャラ？は、引いておきたいし、強化していきたいなあと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;ハルカと組ませるのは、今の所、私なら正月リーリエ、Mグリーンかな。リーリエで全体回避上げて、ハルカで全体命中下げて、ハルカがアタッカー、Mグリーンで回復。なお、予想のアタッカーが来たらMグリーンの代わりに入れる感じ。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、正月リーリエはメガシンカがないし、ちょっと怪しいかも。今後、もっと強いサポーターが実装される可能性もあります。来るとしたら、草系の御三家のうちのどれかでしょうね。また、主人公枠だと思います。&lt;/p&gt;&#xA;&lt;p&gt;以上&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、最強アタッカーが誰なのか、私の予想では、ダンデ&amp;amp;リザードンが来る可能性が高そうと予想しています。理由はいくつかありますが、GEN1とGEN最新での兼ね合い、どちらもリザードン使いであること、男性キャラであること、性格的にアタッカーだと考えられること、ユウリの実装から権利的に可能そう、などの理由から、そのように考えています。あ、私の予想は基本的にめちゃめちゃ外れるんで、あまり気にしないように。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、正月リーリエを天井で引いた話</title>
      <link>https://syui.github.io/blog/post/2021/01/14/pokemas/</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/14/pokemas/</guid>
      <description>&lt;p&gt;天井(400/400)で引きました。ギリギリで天井に届いたのでよかった。これホントギリギリで、1/13にもらったダイヤで400/400ですから、あと1日でも遅かったら天井を引けなかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210114_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;1回につき2%の確率なので、11連で22%として、大体、150/400あたりで1凸くらいのはずなんだけど、400/400まで1凸も来なかった。&lt;/p&gt;&#xA;&lt;p&gt;強化のほうは青メダルが集まりそうなので、そちらでやっていこうかなと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;あと、チャンピオンバトルのエリートモード、クリアしました。毒が最強だったので、Mリーフは6EXするのもありかと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20210111_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは初期よりも遥かに楽しいゲームになっていて、頑張ってるなと思います。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今回は、これがあれば嬉しいのになってのを要点だけ書いていこうかなと思います。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;配布バディーズのエンブレムは4つあったほうが嬉しい&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;現在、ホウオウでもレックウザでもエンブレムは一つで、内容が使い回しで簡単なので、そういう理由からだと思います。ですが、これは4つ集められるようにしたほうがいいと思います。なぜなら、そっちのほうがうれしいからです。これくらいのことは形式にとらわれず、プレイヤーが喜びそうな方向でやってもいいのではと思いました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;配布バディーズが再び登場するイベントでは新しい要素を追加すると嬉しい&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ボードの追加、パッシブスキルの追加など、あったほうがいいのでは。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6EXでポケモンが色違いになると嬉しい&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これに関しては権利関係から使えるかどうかわからないし、使うには新たに契約や資金が必要かもだけど、ある程度の広範な裁量が認められててできるなら、6EXにしたときのポケモンが色違いになると、とても嬉しい。例えば、ダイゴのメタグロスとか、正月ワタルのギャラドスとか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2021/01/08/pogo/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/08/pogo/</guid>
      <description>&lt;p&gt;ピカチュウとかが来たのでうれしかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210103_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ただ、コスプレのポケモンは、基本的にうれしくなくて、通常の進化、メガシンカができないので、例えば、ヤドンでも、普通の色違いが来たほうがうれしいというのはある。自分はまだ色違いヤドキングの図鑑が埋まってないので、ヤドキングに進化させたかったけど、できなかったので、残念。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0191.png&#34; alt=&#34;&#34;&gt;&#xA;なお、こういう進化先がないポケモンならコスプレはあってもなくてもどっちでもいいと思う。あるいはコスプレが通常の進化できるならいいんだけど、最初はできたものが、いつの間にかできなくなってて、例えば、今回のクマシュンでもコスプレは進化できないので、つらかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0192.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;三大希少ポケモンの一つである&lt;code&gt;テッシード&lt;/code&gt;が光りました。これはすごく嬉しい。ちなみに、今現在、一番希少なのは色違いの&lt;code&gt;ワシボン&lt;/code&gt;だと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0198.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;TL上げてるうちにメダルも集まってきた。ロケット団とかリトレーンとか。あと、期間限定メダルも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0194.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0193.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0197.png&#34; alt=&#34;&#34;&gt;&#xA;gucciのコラボ衣装をゲット。現実にもあそこに行かなければ買えない服とかあると思うので、いいと思う。その後、プロモコードが発行されたので、誰でもゲットできるようになりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03568/&#34;&gt;https://pokemongo-get.com/pokego03568/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210108_0190.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その他、ちょっと昔に光ったやつとか、最高の相棒とか。色違いレジスチルがうれしかった。残すところ伝説(幻)はデオキシスのみ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210110_0199.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210110_0201.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210110_0202.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210110_0205.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20210110_0200.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;欲しいポケモン&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_wanted_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>マイクと音声変換</title>
      <link>https://syui.github.io/blog/post/2021/01/07/voice/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/07/voice/</guid>
      <description>&lt;p&gt;この前、youtubeを見てて、うまく音声変換してる人を見かけたんですが、すごいなあ、どうやってやるんだろうとちょっと思ったので、やってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;audio controls src=&#34;https://syui.github.io/music/garageband_voice_trans_f_01.mp3&#34;&gt;&lt;/audio&gt;&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、&lt;code&gt;voidol&lt;/code&gt;とかより、macの&lt;code&gt;garageband&lt;/code&gt;を使ったほうがうまく変換できました。&lt;/p&gt;&#xA;&lt;p&gt;入力にマイクを当て、&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/garageband_voice_trans_f_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;プラグインの&lt;code&gt;pitch -&amp;gt; vocal transformer&lt;/code&gt;を追加。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/garageband_voice_trans_f_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;音声を自然にするには、プラグインの&lt;code&gt;Channel EQ&lt;/code&gt;が役立ちます。Voiceの&lt;code&gt;Female Vox 01&lt;/code&gt;, &lt;code&gt;Clear Vocals&lt;/code&gt;などを試してみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/garageband_voice_trans_f_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;このとき、音声にブツ切り音などが入ってる場合、削除するといいかもしれません。具体的には、オーディオ放射部分の画面をダブルクリックで編集できます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/garageband_voice_trans_f_04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最後に、音声ファイルを書き込むには、&lt;code&gt;共有 -&amp;gt; 曲をディスクに書き出す&lt;/code&gt;からできます。&lt;/p&gt;&#xA;&lt;p&gt;これを&lt;code&gt;imovie&lt;/code&gt;などを使って動画に挿入し、適時、文字を入れていくと、動画の完成。(いうほど簡単ではないと思う&lt;/p&gt;&#xA;&lt;p&gt;youtuberって、案外、バカにされがち？な気がするんですけど、トークも動画編集もすごくて、すごいクリエイターなのだと思います。やってみると難しいことって意外と多い。&lt;/p&gt;</description>
    </item>
    <item>
      <title>big surとvocaloid3</title>
      <link>https://syui.github.io/blog/post/2021/01/06/vocaloid/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/06/vocaloid/</guid>
      <description>&lt;p&gt;昨日、big surでstudio one2(+piapro studio vsti)が激重とか書きましたが、いつの間にか、問題が解決していて、そこまでの遅延が発生しない状態になってたので、そのことについて。&lt;/p&gt;&#xA;&lt;p&gt;まず、よくわからない用語の解説です。&lt;/p&gt;&#xA;&lt;p&gt;mac osの&lt;code&gt;big sur&lt;/code&gt;と、&lt;code&gt;studio one&lt;/code&gt;はDTMアプリのことで、&lt;code&gt;piapro studio&lt;/code&gt;というのはstudio oneのプラグインのこと。&lt;code&gt;vsti&lt;/code&gt;はstudio oneのプラグイン表記、piapro studioがどのようなプラグインかというと、vocaloid editorのようなもので、私が使ってる音声ライブラリは&lt;code&gt;vocaloid3&lt;/code&gt;、と理解しておけば良さそう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/vocaloid3_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;正直、私もよくわかってません。DTM関連もややこしい。&lt;/p&gt;&#xA;&lt;p&gt;ここでは、わかりやすさ重視のため、タイトルには&lt;code&gt;vocaloid3&lt;/code&gt;を使用。また、studio one2もアプリ名はstudio one2ですが、私が使ってるのは正確には、&lt;code&gt;studio one artist OEM&lt;/code&gt;というらしい。&lt;/p&gt;&#xA;&lt;p&gt;さて、この前、作曲しててアプリもプラグインも重かったんですが、プラグインのほうが重かった感じでした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/vocaloid3_00.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;で、アプリ自体はbig surの日本語入力、起動遅延の問題からクリーンインストール(windowsでいうリカバリ相当)後にバックアップから復元したものを使い、プラグインは新しくインストールしたものを使いました。ここで復元アプリからファイルを作って、それを編集していました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、激遅いなあとか思って、復元アプリを消し、イチからアプリをインストールしてみます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、やっぱり激遅い。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今回、アプリで新しいファイルを開き、それを編集してみると、この問題は解消していました。そこまでの遅延は見られない状態です。&lt;/p&gt;&#xA;&lt;p&gt;この状況から察するに、復元アプリでファイルを作成したのが良くなかったような気がしてる。イチからアプリを再インストールした上でファイル作成、編集すべきでした。&lt;/p&gt;&#xA;&lt;p&gt;よくわからんが、たすかった。これで普通に作曲できるぞー！(能力的にはできない&lt;/p&gt;&#xA;&lt;p&gt;なお、私が使っている&lt;code&gt;piapro studio(vocaloid3)&lt;/code&gt;はかなり古く、すでにサポートされてない感じで、現在サポートされている&lt;code&gt;piapro studio NT(vocaloid5)&lt;/code&gt;を使ったほうがいいかもしれません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://piaprostudio.com/?p=7438&#34;&gt;Piapro Studio 2.0.4.10&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://piaprostudio.com/?p=8129&#34;&gt;Piapro Studio NT 3.0.1.3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://piaprostudio.com/?p=8066&#34;&gt;macOS11 Big Sur への対応につきまして&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>作曲してみた9</title>
      <link>https://syui.github.io/blog/post/2021/01/05/music/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/05/music/</guid>
      <description>&lt;p&gt;今回作ったのはこちら。ボカロでミクが歌います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;audio controls src=&#34;https://syui.github.io/music/kira.mp3&#34;&gt;&lt;/audio&gt;&lt;/p&gt;&#xA;&lt;p&gt;一覧 : &lt;a href=&#34;https://syui.github.io/music/&#34;&gt;/music/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これだけでもなんなので、今回もなにか書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;きっかけ&#34;&gt;きっかけ&lt;/h3&gt;&#xA;&lt;p&gt;この前、夢を見たのですが、夢の中で、昔、どこかで聴いて、ずっと探していた曲を見つけることができたので、作曲やってみようかなと思ったのがきっかけです。&lt;/p&gt;&#xA;&lt;p&gt;探していた曲というのは、とても小さい頃、どこかで聴いた音楽なので、タイトルはもちろん、歌詞すらもわかりません。誰が歌っているのかとかも、単に流れてただけなので知る由もありません。ですが、メロディだけは覚えていたという状況。&lt;/p&gt;&#xA;&lt;p&gt;それがまさか夢の中で見つけられるとは思ってもみませんでした。&lt;/p&gt;&#xA;&lt;p&gt;夢って知らないことがでてくることもあるんでしょうか？&lt;/p&gt;&#xA;&lt;p&gt;ただ、これについてはいろいろな解釈があると思う。例えば、記憶の奥底に眠ってたとか、忘れていただけとか。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私が持ってる情報からその曲を見つけられるとは到底思えませんでした。&lt;/p&gt;&#xA;&lt;p&gt;寝てても意識がはっきりしてて、見つけた瞬間、「見つけた！」とか思って、急に起きだし、検索をかけて、その曲を聴いています。&lt;/p&gt;&#xA;&lt;p&gt;正直、私にも何がなんだかよくわからない&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;その曲、昔の曲ですが、いい曲ですよ。(タイトルは伏せておきます&lt;/p&gt;&#xA;&lt;p&gt;で、こういう曲、書きたいなあと思って始めたのですが、出来上がった曲は、ジャンルからして全然違うものになってしまったという&amp;hellip;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;big-surでstudio-one2が激重になっていた件&#34;&gt;big surでstudio one2が激重になっていた件&lt;/h3&gt;&#xA;&lt;p&gt;big surにしてからDTMをやってませんでしたが、今回やってみると、アプリが激重になっており、色々つらかったりした。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、曲が下手なのはこのせいではなく、あまり関係ないと思います。&lt;/p&gt;&#xA;&lt;p&gt;が、今後、big surでのDTM、どうしよう。これはまともに作曲できるレベルの遅さじゃないです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac big surをクリーンインストールしてみた</title>
      <link>https://syui.github.io/blog/post/2021/01/04/mac/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/04/mac/</guid>
      <description>&lt;p&gt;upgrade後に日本語入力と起動が遅くなっていたので、macのbig surをクリーンインストールしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_61.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;原因を調べましたが、どうやら過去にapfsフォーマットに変更された人の端末にこの不都合が多く出ている印象。したがって、内蔵ディスクをapfsに再フォーマット後、macをインストールするれば直るんじゃないかと考えました。&lt;/p&gt;&#xA;&lt;p&gt;実は、macは、過去に一度、osのupgradeでhfs+からapfsへディスクのフォーマットを変更しています。フォーマットをどうやって強制的に変更したんだと思われるかもしれませんが、これは様々な方法が考えられます。例えば、空き領域をボリュームABに分けて、片方をapfsフォーマット後、元のボリュームからバックアップを復元し、その後、分けられていた領域を統合(拡張)したのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;それは置いといて、hfs+からapfsに変更された人が遅くなってるんじゃないかと思ったので、内蔵ディスクをapfsに再フォーマット後、macをインストールしてみたところ、この症状が治りました。具体的には、起動が早くなり、日本語入力の遅延がなくなりました。&lt;/p&gt;&#xA;&lt;p&gt;あと、auto-loginされない問題も解消してました。&lt;/p&gt;&#xA;&lt;p&gt;インストール中はパソコンいじれないので、絵を描いてました。アイキャッチのやつがそれ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた60</title>
      <link>https://syui.github.io/blog/post/2021/01/03/illust/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/03/illust/</guid>
      <description>&lt;p&gt;描きました。今回はちょっとした小話があるので少しだけ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_60.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;創作しているとよくある話&#34;&gt;創作しているとよくある話&lt;/h3&gt;&#xA;&lt;p&gt;今回の絵、どう思いました？&lt;/p&gt;&#xA;&lt;p&gt;いつもより簡素な感じで、いやまてよ、適当書いてんじゃない？そう思った人もいるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;その見方は概ね正しい&amp;hellip;ですが、間違ってもいます。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、この絵、完成するまでに最も時間がかかっているのですから。&lt;/p&gt;&#xA;&lt;p&gt;今回は、このことについて少し話したいと思います。失敗談みたいなもんですね。&lt;/p&gt;&#xA;&lt;p&gt;私は、絵を書いていました。今回のテーマは、街頭、雪道、足跡です。&lt;/p&gt;&#xA;&lt;p&gt;どんどん書いて、最初に完成した絵を見て、なにか物足りないなあと思うのです。&lt;/p&gt;&#xA;&lt;p&gt;そこで色々な要素を追加してみるものの、なにかぱっとしない&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;こうなってしまうと泥沼に足を突っ込んでるようなものです。時間ばかりかかって、全然だめ。&lt;/p&gt;&#xA;&lt;p&gt;これはよくあることですが、上手くいくときは一発、上手くいかないときは、なにをどう修正してもうまくいかないことがあります。&lt;/p&gt;&#xA;&lt;p&gt;これによって、いつもは30分から1時間もあれば完成する絵が、なかなか完成しませんでした。&lt;/p&gt;&#xA;&lt;p&gt;そして、あるとき「これはもうだめだ、イチから書き直し！増やした要素も全削除じゃあああ！！」と言い、やっと完成した絵がこれというわけです。&lt;/p&gt;&#xA;&lt;p&gt;ですから、めちゃくちゃ簡素で適当に見えるんですけど、実は、いつもより遥かに時間がかかってしまったというわけです。&lt;/p&gt;&#xA;&lt;p&gt;このように、よりシンプルな絵のほうが、結果として時間がかかってしまったことも多かったりします。&lt;/p&gt;&#xA;&lt;p&gt;みなさまも気をつけましょう。これはちょっと&amp;hellip;と思ったときは最初から書き直したほうが早いかも。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、正月リーリエは引くべきか</title>
      <link>https://syui.github.io/blog/post/2021/01/02/pokemas/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/02/pokemas/</guid>
      <description>&lt;p&gt;性能としては、全体回避+2, 全体急所+2, 全体状態異常無効, 回避時HP回復など。&lt;/p&gt;&#xA;&lt;p&gt;個人的に、引いておいたほうがいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;無課金なので爆死する可能性は十分あるんですけど、引くべき(回すべき)と判断。&lt;/p&gt;&#xA;&lt;p&gt;正月限定リーリエは、マジコスグリーンには届かないものの、似たような性能を有していると思われます。使用感や役割も似てるんじゃないかな。また、6EXも検討してる。&lt;/p&gt;&#xA;&lt;p&gt;運用方法としては、リーフ&amp;amp;イーブイ, オーキド&amp;amp;ミュウと組ませると活躍してくれそう。&lt;/p&gt;&#xA;&lt;p&gt;実は、イーブイとミュウって、かなり相性良くて、例えば、&lt;code&gt;こおり&lt;/code&gt;弱点の相手に当てるんですが、イーブイB技で命中上げたあと、ミュウでB技後に&lt;code&gt;ふぶき&lt;/code&gt;を連発するっていう戦略です。&lt;/p&gt;&#xA;&lt;p&gt;これにリーリエを組み込むと、全体バフ、全体デバフ、回避ができるようになり、相手の弱点もつきやすいので、かなり強いんじゃないかな。それ以外と組ませても強い。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回の正月リーリエは、引いておく(回しておく)ことにします。目指せ3凸+6EX！&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/PokemonMasters/comments/kmz8l7/now_that_lillie_has_been_officially_announced/&#34;&gt;https://www.reddit.com/r/PokemonMasters/comments/kmz8l7/now_that_lillie_has_been_officially_announced/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた59</title>
      <link>https://syui.github.io/blog/post/2021/01/01/illust/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/01/01/illust/</guid>
      <description>&lt;p&gt;あけましておめでとうございます。今年もよろしく！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_59.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、TL47</title>
      <link>https://syui.github.io/blog/post/2020/12/31/pogo/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/31/pogo/</guid>
      <description>&lt;p&gt;無課金勢(仮)ですが、TL47になりました。課金すれば1日で終わるTL41が1ヶ月ほどかかりましたが、その間に色々と準備できたので、TL41からTL47までは割とスムーズでした。なんとか年内に到達できてよかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201231_0001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在のXPは16,000で、TL50までに17,600必要なので、あと1,600です。&lt;/p&gt;&#xA;&lt;p&gt;TL48に絶対日数で2ヶ月かかり、その間に1,600は貯まりそうな気がするので、XPはギリギリいけそう。&lt;/p&gt;&#xA;&lt;p&gt;順調に行けば、2/21にカントーイベント、2/22にTL48。&lt;/p&gt;&#xA;&lt;h3 id=&#34;やったこと&#34;&gt;やったこと&lt;/h3&gt;&#xA;&lt;p&gt;TL45チャレンジのタスクに&lt;code&gt;レイドx45&lt;/code&gt;がありますので、同時進行すると効率的です。タスクが始まる前日には無料パスを保存しておくと日数を1日短縮できます。&lt;/p&gt;&#xA;&lt;p&gt;また、チャレンジのタスクは最後のところで保存し、スポットレイトアワーなどで&lt;code&gt;しあわせのタマゴ&lt;/code&gt;と同時に使うと効率的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://9db.jp/pokemongo/data/10676&#34;&gt;https://9db.jp/pokemongo/data/10676&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた58</title>
      <link>https://syui.github.io/blog/post/2020/12/30/illust/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/30/illust/</guid>
      <description>&lt;p&gt;今回は正月っぽいのを描いてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_58.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;今年やったこと&#34;&gt;今年やったこと&lt;/h3&gt;&#xA;&lt;p&gt;今年はあまり何もできなかったなあという感じでした。何をやったかとかあまり覚えてすらいなかったり。&lt;/p&gt;&#xA;&lt;p&gt;ipadを買ったので、こうやってお絵かきすることは増えましたが、振り返ってみると、全く上達していません。&lt;/p&gt;&#xA;&lt;p&gt;私は、描きたいように描いてるだけで、別に練習で描いているわけではないので、そのへんが原因かも。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、絵を描くのに練習なんて必要ない&amp;hellip;と思っています。&lt;/p&gt;&#xA;&lt;p&gt;ということで、自分の絵を描こう、他を見て、これいいなと思ったときは素直に取り入れよう、そんなことを思ったのでした。&lt;/p&gt;&#xA;&lt;p&gt;これからも楽しく描けるといいな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、マジコスリーフ6EX</title>
      <link>https://syui.github.io/blog/post/2020/12/28/pokemas/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/28/pokemas/</guid>
      <description>&lt;p&gt;ついに来ました、マジコスリーフ6EX！&lt;/p&gt;&#xA;&lt;p&gt;無課金勢なので結構時間かかっちゃいましたが、最初のEXはこの3人になりました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201228_0000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>imovieでmp4を読み込んだとき音が出ない解決法</title>
      <link>https://syui.github.io/blog/post/2020/12/17/mac/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/17/mac/</guid>
      <description>&lt;p&gt;imovieは、mp4のオーディオを読み込めないらしいので、movに変換して読み込みます。なん度目だ、これハマるの。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ffmpeg -i input.mp4 output.mov&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で、iosで画面収録した動画はそのままだとmp4で保存されますが、一度編集するとmovで保存されます。&lt;/p&gt;&#xA;&lt;p&gt;なので、imovieで編集したい場合は、一度、iosのほうで写真アプリから編集しましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、プレイスタイルの再考</title>
      <link>https://syui.github.io/blog/post/2020/12/16/pogo/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/16/pogo/</guid>
      <description>&lt;p&gt;最近の進捗とプレイスタイルを再考してみた話。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケモンのレベル上げ&#34;&gt;ポケモンのレベル上げ&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンのレベル上げは、ほぼ不可能な領域に突入しています。&lt;/p&gt;&#xA;&lt;p&gt;そんな中、どのポケモンのレベルを上げていくかですが、私は、&lt;code&gt;色違い&lt;/code&gt;で&lt;code&gt;メガシンカ&lt;/code&gt;があり、かつ&lt;code&gt;XLアメ&lt;/code&gt;を獲得しやすいポケモンを優先しています。&lt;/p&gt;&#xA;&lt;p&gt;また、最大までは強化せず、その一歩手前で止めるようにしています。これは、何らかのタスクがあったときなどに使うためです。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、ギャラドス、スピアー、ピジョットがそれに当たります。限定技も覚えているので、おすすめです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0167.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ワシボンにパスを使ってはいけない&#34;&gt;ワシボンにパスを使ってはいけない&lt;/h3&gt;&#xA;&lt;p&gt;色違いワシボンはかなり確率を下げられている模様。&lt;/p&gt;&#xA;&lt;p&gt;ワシボンを出すまでに大体、2万5000円かかる計算です。&lt;/p&gt;&#xA;&lt;p&gt;twitterなどであまりに報告が少なすぎるときは気をつけましょう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://9db.jp/pokemongo/data/10721&#34;&gt;https://9db.jp/pokemongo/data/10721&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://rocketnews24.com/2020/12/16/1440819/&#34;&gt;https://rocketnews24.com/2020/12/16/1440819/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、ワシボン1匹を最大まで強化するには、アメが248+29600が必要なので、1レイドにつきアメx6もらえるとして、1匹強化するのに4974レイド、最低でも49万7400円が必要な計算になります。(実際はもっと多い、パスx1=100円で計算していますが、120円なので)&lt;/p&gt;&#xA;&lt;p&gt;なので私は、12/19のレジスチルにパスを使おうと思ってます。TL41(レイドx30)のついでに。&lt;/p&gt;&#xA;&lt;h3 id=&#34;課金について&#34;&gt;課金について&lt;/h3&gt;&#xA;&lt;p&gt;色違いミュウのチケット(1480円)を買いました。あと、12月コミュニティデイのチケット(120円)も買いました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0172.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;後者は必要ありませんでしたが、通常なら1日限定で1480円で売られる&lt;code&gt;わざマシン&lt;/code&gt;が2つ付いて、120円だったので。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0173.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここまでお買い得だと、無課金ユーザーもたまに出動することがあります。&lt;/p&gt;&#xA;&lt;p&gt;なお、ここで言う無課金ユーザーとは、基本的には無課金でプレイしているという意味。&lt;/p&gt;&#xA;&lt;p&gt;ちょっと前まで完全無課金だったのに、最近はチケットを買わされております&amp;hellip;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ボックスや道具の拡張&#34;&gt;ボックスや道具の拡張&lt;/h3&gt;&#xA;&lt;p&gt;ボックスや道具の拡張は、今まで通り無課金で、ジムコインを貯めて拡張する方向。&lt;/p&gt;&#xA;&lt;p&gt;こういうのは、結構、楽しいですよ。&lt;/p&gt;&#xA;&lt;p&gt;やっぱりゲーム内で頑張って、少しずつ拡張していくほうが面白かったりするんです。&lt;/p&gt;&#xA;&lt;p&gt;また、やむなくボックス整理するみたいなことも、たまには必要だと思う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;検索テクニック&#34;&gt;検索テクニック&lt;/h3&gt;&#xA;&lt;p&gt;よく使う検索テクニックです。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0*,1*,2*,3*&amp;amp;日数0&amp;amp;!伝説のポケモン&amp;amp;!色違い&amp;amp;!しゃどう&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ピカ&amp;amp;色違い&amp;amp;とくべつ&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;相棒を選ぶ2-4&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://niantic.helpshift.com/a/pokemon-go/?s=finding-evolving-hatching&amp;amp;f=searching-filtering-your-pokemon-inventory&amp;amp;l=ja&amp;amp;p=web&#34;&gt;https://niantic.helpshift.com/a/pokemon-go/?s=finding-evolving-hatching&amp;amp;f=searching-filtering-your-pokemon-inventory&amp;amp;l=ja&amp;amp;p=web&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;最近の進捗&#34;&gt;最近の進捗&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0170.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0168.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201216_0171.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、12/15のスポットライトアワー立ち回り</title>
      <link>https://syui.github.io/blog/post/2020/12/15/pogo/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/15/pogo/</guid>
      <description>&lt;p&gt;今回のスポットライトアワーの内容は下記のようになっています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2020年12月15日(火)18時~19時 : ポケモンを捕まえたときにもらえる「ポケモンのアメ」が2倍, 「パイルのみ」「ぎんのパイルのみ」使用でさらに2倍&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;個人的におすすめする立ち回りを紹介します。やるべきことはシンプルで、以下の二点です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;保存しておいたセレビィを捕まえる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ふしぎなはこ&lt;/code&gt;を開けて、メルメタルを捕まえる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;また、場合によっては、&lt;code&gt;はがね, くさ&lt;/code&gt;タイプのポケモンを&lt;code&gt;メガシンカ&lt;/code&gt;しておくといいかもしれません。アメ+1&lt;/p&gt;&#xA;&lt;p&gt;それ以外の時間は、ピカチュウでもタップしておきましょう。&lt;/p&gt;&#xA;&lt;p&gt;なお、ムサシ&amp;amp;コジロウは、時計の針が12と6を示すときに登場する模様。&lt;/p&gt;&#xA;&lt;h3 id=&#34;参照&#34;&gt;参照&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03113&#34;&gt;https://pokemongo-get.com/pokego03113&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、痛恨ミスした話</title>
      <link>https://syui.github.io/blog/post/2020/12/14/pokemas/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/14/pokemas/</guid>
      <description>&lt;p&gt;今回もポケマスの話を少し。&lt;/p&gt;&#xA;&lt;p&gt;バトルヴィラやチャンピオンバトルはやってますでしょうか？私は、なんやかんやで楽しいので、毎回やってます。&lt;/p&gt;&#xA;&lt;p&gt;今回もエンブレムがもらえるということで、最初ちょっと確認して、終わらせたんですけど&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201214_3626.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ごちそう&lt;/code&gt;をミスってる&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201214_3627.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ごちそう&lt;/code&gt;を使うとき、どうやら一つタップし忘れたっぽい。5つずつもらえるので、1つだけ足りないのは通常ありえない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、次回の楽しみが増えましたので、これはこれでよし！&lt;/p&gt;&#xA;&lt;p&gt;関係ありませんが、マジコスリーフがあと3つで&amp;hellip;EXです！&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、2020年コミュニティ・デイの立ち回り</title>
      <link>https://syui.github.io/blog/post/2020/12/11/pogo/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/11/pogo/</guid>
      <description>&lt;p&gt;今回は、個人的におすすめする2020年のコミュデイの立ち回りについて紹介します。やるべきことはシンプルで、以下の二点です。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;12/11に&lt;code&gt;わざマシン&lt;/code&gt;でシャドウポケモンの「やつあたり」を忘れる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;12/12にシャドウポケモンを&lt;code&gt;進化&lt;/code&gt;させ、限定わざを覚える&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;おすすめのシャドウポケモンは、ミズゴロウ、タネボー、ビードル、ヒトカゲ、コイキングあたりを進化させ、限定わざを覚えさせるのがいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;その他、シャドウのケーシィ、エレブー、ブーバー、ナックラー、ナエトル、ラルトス、タツベイ、メリープを集めておくといいですね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;参照&#34;&gt;参照&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongolive.com/post/the-game-awards-2020&#34;&gt;https://pokemongolive.com/post/the-game-awards-2020&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongolive.com/post/communityday-dec20&#34;&gt;https://pokemongolive.com/post/communityday-dec20&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://9db.jp/pokemongo/data/6872&#34;&gt;https://9db.jp/pokemongo/data/6872&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;tlレベルアップとの同時進行&#34;&gt;TLレベルアップとの同時進行&lt;/h3&gt;&#xA;&lt;p&gt;課金していれば、早い人なら現在、TL45あたりだと思われます。&lt;/p&gt;&#xA;&lt;p&gt;よって、ロケット団のタスクと同時進行することで、これらを効率的に片付けることが可能です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://9db.jp/pokemongo/data/10566&#34;&gt;https://9db.jp/pokemongo/data/10566&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、カントー組の使い方</title>
      <link>https://syui.github.io/blog/post/2020/12/10/pokemas/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/10/pokemas/</guid>
      <description>&lt;p&gt;レジロックもマジコスカントー組で一発クリアでした。リザードンが何度か死にかけましたが、カメックスの&lt;code&gt;こらえる&lt;/code&gt;で耐えますので、なんとか生き残った感じでした。&lt;/p&gt;&#xA;&lt;p&gt;今回は、マジコスカントー組をどのように使っているのかの紹介です。さまざまなバディーズと組ませていて、ちょっと変則的です。例えば、マジコスリーフ+アンズだったり、マジコスグリーン+アタッカーだったり。&lt;/p&gt;&#xA;&lt;p&gt;なので、独立してもある程度戦えるボードを構築しています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;マジコスリーフは、どく構成&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;マジコスグリーンは、次回急所、回復&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;マジコスレッドは、バディーズ技威力、晴れ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;基本的には、レッドのバディーズ技をグリーンの次回急所で当てます(それまでリザードンで攻撃しない)。こうすることで、全体バディーズ技が急所に当たります。これにより、周りの敵は一撃で落ちます。&lt;/p&gt;&#xA;&lt;p&gt;実は、グリーンのボードは次回急所か登場時特防かで迷いましたが、速効性を考え、次回急所を選択しました。&lt;/p&gt;&#xA;&lt;p&gt;2回目のバディーズ技はカメックスで&lt;code&gt;気迫+こらえる&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;それでも敵が粘るようなら、3回目をフシギバナで毒威力上げます。だいたいそんな感じのことをやってると、敵はいつの間にか死んでることが多い。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201210_3608.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201210_3609.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201210_3610.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201210_3611.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;トゲキッスは引くべきか&#34;&gt;トゲキッスは引くべきか&lt;/h3&gt;&#xA;&lt;p&gt;ついでに今回登場したトゲキッスは引くべきかの話について。&lt;/p&gt;&#xA;&lt;p&gt;無課金勢の場合、5万(天井狙える)ダイヤがなければ、引くべきではないと判断します。&lt;/p&gt;&#xA;&lt;p&gt;ひるみ攻撃の命中率が95であること(ひるみ自体は60%)、バディーズ技で威力を狙っていくタイプであることがネックだと思っていて、あなたが本当に欲しいのは、&lt;code&gt;ひるみ&lt;/code&gt;でしょうか。バディーズ技で高火力を出すことでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;私が今欲しいのは高火力アタッカーなので、今回のトゲキッスとはちょっと違うかなと。&lt;/p&gt;&#xA;&lt;p&gt;それに、ひるみとか、ねむりとかを狙う戦い方、あまり好きではないのです。&lt;/p&gt;&#xA;&lt;p&gt;また、フウロのクリスマス限定衣装というのも日常的に使いたいものではなかったので、今回は、引くべきではないと判断します。&lt;/p&gt;&#xA;&lt;p&gt;無課金勢は、回すからには確実に当てていかないとダメで、迷いがある以上、引くべきではありません。&lt;/p&gt;&#xA;&lt;p&gt;すごく魅力的に映るトゲキッスですが、今回は引くべきではないと判断し、ダイヤは貯めておくことにしました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2020/12/09/pokemas/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/09/pokemas/</guid>
      <description>&lt;p&gt;最近、ポケマスではランキングイベントが実装され、報酬も増えました。&lt;/p&gt;&#xA;&lt;p&gt;今回のランキングイベントは、まあ、いいんじゃないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは売り上げが厳しいという話も聞いていますので、こういった形での集金も仕方なかった側面があるのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;私は、なんとかランキングを12000位以内で終えることができました。めぼしい報酬は12000までなので、ギリギリのところを狙ってました。あまり無駄なスタミナは使いたくないですし。&lt;/p&gt;&#xA;&lt;p&gt;具体的な内容については、ダイゴもミカンも持っていないなか、残ってた少数のダイヤを全部注ぎ込んで、ユウリを当て、それで回してた感じです。スタミナは、2度ほど回復しましたが、あとは自動回復+配布のみ。&lt;/p&gt;&#xA;&lt;p&gt;これでギリギリ12000に入れましたが、6000以内を狙うには、おそらく、ユウリ3凸は必要だったのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;で、6000位に入れなかった要因は、私がダイヤの使い所を間違えたことに尽きます。&lt;/p&gt;&#xA;&lt;p&gt;私のような無課金プレイヤーは、ダイヤの使い所が非常に重要です。それをミスってしまうと詰みます。&lt;/p&gt;&#xA;&lt;p&gt;このイベントの少し前、私は、貯めていたダイヤをマジコス・カントー組、主にマジコス・グリーンにつぎ込み、爆死しておりました。&lt;/p&gt;&#xA;&lt;p&gt;これがまずかった。完全な判断ミスです。&lt;/p&gt;&#xA;&lt;p&gt;今となっては、あの時点でこうなることを予期し、ダイヤを貯めておけばよかった。&lt;/p&gt;&#xA;&lt;p&gt;つまり、ここをやめていれば、ダイヤは貯まっていて、ユウリ3凸できる確率は上がり、6000位を狙えたのではないかと思われます。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、今回、残ってるダイヤを全て使い、なんとか12000位をキープすることができました。多少は投資したかいがあったかなと思います。&lt;/p&gt;&#xA;&lt;p&gt;これにより、&lt;code&gt;星5のアメ&lt;/code&gt;がもらえますので、ポケマスで2つの目標を達成できるかもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケマス2つ目の目標&#34;&gt;ポケマス2つ目の目標&lt;/h3&gt;&#xA;&lt;p&gt;ポケマスで私の最初の目標は、レッドを引く、というものでした。&lt;/p&gt;&#xA;&lt;p&gt;この目標は、レッドが実装されていない頃からの目標、目的でもありました。&lt;/p&gt;&#xA;&lt;p&gt;レッドは好きなトレーナー、メガリザードンXは好きなポケモンだったからです。&lt;/p&gt;&#xA;&lt;p&gt;レッドに関しては、パッケージに載っているので、いずれ実装されるだろうと予想してました。&lt;/p&gt;&#xA;&lt;p&gt;それまでずっとダイヤを貯めており、いざレッドが実装されると、全部使って、天井でレッドを引きました。&lt;/p&gt;&#xA;&lt;p&gt;ここから私のポケマス快進撃が始まります。&lt;/p&gt;&#xA;&lt;p&gt;それまで相当きつかった攻略が楽になり、初登場のエンテイを含む全てのレジェンドバトルをクリアしていきました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、当初のレッドを引くという目標を達成してからは、次の目標はありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;そんな折、今度は、マジコス・カントー組が実装。&lt;/p&gt;&#xA;&lt;p&gt;ここで、次の目標はマジコス・カントー組の強化だと決めました。具体的には、6EX化とボード解放です。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、今回の報酬ではカメックスのボード解放ができます。それにマジコス・リーフも&lt;code&gt;のびしろ金x5&lt;/code&gt;で6EX化ができる予定。&lt;/p&gt;&#xA;&lt;p&gt;リーフはもともとお気に入りのトレーナーで、おばさんっぽさ?が割とツボだったりします。また、カメックスは超強いので。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスをプレイしていて、好きなトレーナーは、女性キャラ限定で、&lt;/p&gt;&#xA;&lt;p&gt;ユウリ、マジコス・リーフ、アセロラの順に好きです。&lt;/p&gt;&#xA;&lt;p&gt;ユウリのカレー好き、腹ペコ属性に萌えました！&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた55-57</title>
      <link>https://syui.github.io/blog/post/2020/12/08/illust/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/08/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_55.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_56.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_57.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた52-54</title>
      <link>https://syui.github.io/blog/post/2020/12/07/illust/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/07/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_52.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_53.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_54.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最新情報と攻略情報</title>
      <link>https://syui.github.io/blog/post/2020/12/06/pogo/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/06/pogo/</guid>
      <description>&lt;p&gt;近くポケモンGoで開催されるイベント情報や攻略情報など。&lt;/p&gt;&#xA;&lt;h3 id=&#34;色違いのセレビィ&#34;&gt;色違いのセレビィ&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;日本時間12月14日（月）8時からスタート&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongolive.com/post/movie2020/&#34;&gt;https://pokemongolive.com/post/movie2020/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これはすごく嬉しい。色違いは確定だと予想していて、達成者全員に配布する形だと思います。&lt;/p&gt;&#xA;&lt;p&gt;この形式はセレビィ系のポケモンに引き継がれるものと考えられ、例えば、ミュウやジラーチも近いうちに色違いで登場すると思われます。&lt;/p&gt;&#xA;&lt;p&gt;私がGBLに否定的なのは、一つにこのような限定ポケモンの問題も含まれており、その問題が少しは解消されるのではないかと期待しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gblにおける小さな問題の一つ&#34;&gt;GBLにおける小さな問題の一つ&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201206_0002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;GBLが登場する前まで、このゲームには非常にわかりやすい図式がありました。&lt;/p&gt;&#xA;&lt;p&gt;それは、「ポケモンを育てること、強化することはよいことである」という図式です。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoは、アイテムや素材を集めてポケモンを育て、強化していくゲームでもあったわけですね。&lt;/p&gt;&#xA;&lt;p&gt;しかし、GBLの登場によって、そのシンプルな図式が一気に崩れ去ります。&lt;/p&gt;&#xA;&lt;p&gt;つまり、「ポケモンを育てることは、必ずしもよいこととは限らない。場合によっては、強化してしまうと取り返しがつかないものである」という形になってしまったのです。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、ミュウやジラーチがそれに当たります。&lt;/p&gt;&#xA;&lt;p&gt;私は、すでにミュウもジラーチも強化してしまっていたので、GBLに参加させることができなかったのです。&lt;/p&gt;&#xA;&lt;p&gt;とくにミュウはGBLが少し発展してからスーパーリーグで流行り始め、とてつもなく強いポケモンです。こいつが使えないというのはかなり痛かった。他にもメルメタルを持ってるか、持ってないかでランクやレートに大きすぎる影響を及ぼしている問題もありました。&lt;/p&gt;&#xA;&lt;p&gt;ですから、今回の再登場によりスーパーリーグで使用する選択が可能となります。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、この問題にしてもGBL周辺にある小さな問題の一つに過ぎず、以前も書きましたがGBLは根本的な部分で多くの問題がありますので、この問題が多少緩和されたところで、GBLの評価が変わるものではありません。&lt;/p&gt;&#xA;&lt;p&gt;「ポケモンを育てること、強化することはよいことである」を「ポケモンを育ててしまうと取り返しがつかない」とねじ曲げてしまったのは、このゲームにおける設計ミスの一つだったと思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、色違いミュウをゲットして、それを強化したいと思っていても、GBLがある限り、その選択が取れないのです。&lt;/p&gt;&#xA;&lt;p&gt;本来なら色違いミュウを強化し、色々な場面で使いたかったのに、それができない。GBLはこのような形で、いたるところに不自由をもたらしてしまっていると思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;コミュデイ総括&#34;&gt;コミュデイ総括&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;日本時間12月12日（土）と12月13日（日）に開催&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongolive.com/post/communityday-dec20/&#34;&gt;https://pokemongolive.com/post/communityday-dec20/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;毎年の終わりに開催されるコミュデイで、その年に出たポケモンが全部出るようになります。私は取り逃がしがないため、今回は巨大コイキング狙い。あとちょっとでプラチナなんですよね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;コスプレピカチュウ&#34;&gt;コスプレ・ピカチュウ&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;日本時間12月15日（火）18時から19時まで&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今回もスポットライトアワーで登場するようです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ワシボン&#34;&gt;ワシボン&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;日本時間12月14日（月）8時から12月17日（木）22時まで&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;ワシボンの色違いかあ。これTL41の条件と連動させて狙うか迷ってる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;bgmの変化&#34;&gt;BGMの変化&lt;/h3&gt;&#xA;&lt;p&gt;全体に新しい音が混じっていますが、特にスタート部分に変化がありました。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、カントーの街とカロスの街のBGMを混ぜ合わせたようなイメージで、ポケモンぽくてすごくいいなって思いました。または、カントー街がカロス街にアレンジされ、それがさらにGoにアレンジされた形かもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンを感じるBGMとなってます！&lt;/p&gt;&#xA;&lt;h3 id=&#34;相棒のハート&#34;&gt;相棒のハート&lt;/h3&gt;&#xA;&lt;p&gt;ハートがバトルで1から3まで溜まるようになっています。これにより最速交代して1体につき6つのハートをゲットできます。前は4つだったかな。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;大喜び&lt;/code&gt;までの時間も短縮されているようです。私はそこまでやりませんが、やりたい人はどうぞ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03043/&#34;&gt;https://pokemongo-get.com/pokego03043/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;おやつ+なでる+撮る&lt;/code&gt;と&lt;code&gt;バトル&lt;/code&gt;を約15分ごとに繰り返す感じで。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;なお、バトルはロケット団逃げか、リーダー負けで得られると思います。登場させなくてもメンバーに入っていればOK。&lt;/p&gt;&#xA;&lt;p&gt;最高の相棒、メガシンカと連動してくれないかなあ。(メガシンカは毎回コストがかかる時点で使わない)&lt;/p&gt;&#xA;&lt;h3 id=&#34;tl50への道&#34;&gt;TL50への道&lt;/h3&gt;&#xA;&lt;p&gt;現在、TL40です。基本は無課金なので&lt;code&gt;レイドx30&lt;/code&gt;で停滞中。&lt;/p&gt;&#xA;&lt;p&gt;やりたいレイドもないですし、そのうち上がるだろうと思ってたので、とくにレベル上げはしていませんでした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、&lt;code&gt;12/14&lt;/code&gt;にワシボンが来るので、課金して狙ってみるのもいいかもしれないと少し思っています。&lt;/p&gt;&#xA;&lt;p&gt;下記のTL要件を読むと、TL41,47の&lt;code&gt;レイドx30&lt;/code&gt;を課金すればレベルアップを早めることが可能です。課金なしなら2ヶ月かかります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03487/&#34;&gt;https://pokemongo-get.com/pokego03487/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;TL50まで+2000万XP必要なのですが、TL48の2ヶ月で、TL50のXP要件をちょうど満たせそうなんですよね。&lt;/p&gt;&#xA;&lt;p&gt;これが無課金でTL48まで4ヶ月以上かけるとなると、XPは少しオーバーしてしまう感じだと思う。&lt;/p&gt;&#xA;&lt;p&gt;さっさとTL50にしたい欲が増してる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プラチナメダルとか&#34;&gt;プラチナメダルとか&lt;/h3&gt;&#xA;&lt;p&gt;あと&lt;/p&gt;&#xA;&lt;p&gt;大親友x15, リトレーンx200, ロケット団x300, コイキングx30, ドラゴンx200&lt;/p&gt;&#xA;&lt;p&gt;あたりレベル上げしてるうちにいけそうな気もする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201206_0000.jpg&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201206_0001.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、ユウリの実装とイベント</title>
      <link>https://syui.github.io/blog/post/2020/12/01/pokemas/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/12/01/pokemas/</guid>
      <description>&lt;p&gt;今回は、ポケマスでユウリが実装されたことと、そのイベントについての感想になります。&lt;/p&gt;&#xA;&lt;p&gt;内容を見た時、正直、これはひどいなって思いました。イベントを要約すると、課金してランキング上位に入らないと報酬がもらえないよ、という内容でした。&lt;/p&gt;&#xA;&lt;p&gt;私は無課金勢なので、ここらへんで引退しようと思ったんですけど、どうせなら楽しんだほうが得だと思いなおし、ちょっとだけ参加してみることにしたのです。そうすると、意外にも面白かったので、今回はそれについて考察したいと思います。&lt;/p&gt;&#xA;&lt;p&gt;私はまず貯まっていたダイヤを全部使ってガチャを引きました。20,000くらいありました。&lt;/p&gt;&#xA;&lt;p&gt;ですが、これはちょっと危ないんですよね。&lt;/p&gt;&#xA;&lt;p&gt;今後、ポケマスがこういうゲームになっていくとして、仮にここで大当たりしてしまうと沼に引きずり込まれる危険があるのです。&lt;/p&gt;&#xA;&lt;p&gt;この前はせっかく当たったのに、ここで落とすのは勿体無いとか思っちゃうんですよね。&lt;/p&gt;&#xA;&lt;p&gt;したがって、本来は&lt;code&gt;このゲームはもうだめだな&lt;/code&gt;と思った時点で、貯まってたダイヤなんか全部捨ててやめちゃうのが最も合理的な判断だと思います。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私はどうせなら最後まで楽しもうと思い、ガチャを引き、ユウリを1凸当て(かわいいので1枚は引いときたいというのもある)、ダイゴもミカンも持っていない中、できる限りポイントを上げてみることにしたのです。&lt;/p&gt;&#xA;&lt;p&gt;結果、初日は3000位くらいでした。ですが、おそらく最終日には6000位に入れるかどうか、かなり怪しいでしょう。予想では、12000位にも入れないと思う。めぼしい報酬は12000位までなんですよね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemonmasters_20201201_01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、今回のイベント、わりと面白いかもしれないと思いました。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、これまであまり使い道がなかったし、課金もされなかった要素が総動員で必要になったためです。具体的には、スタミナや装備、5凸、6EXなどなど。&lt;/p&gt;&#xA;&lt;p&gt;ですから、今回のイベントは、楽しんでる人もそれなりにいるのではないかと思っています。これまで虚無マスとか言われていましたから。&lt;/p&gt;&#xA;&lt;p&gt;私の感想では、予想外だが面白い、でしょうか。&lt;/p&gt;&#xA;&lt;p&gt;売り上げ、増えるといいですね。&lt;/p&gt;&#xA;&lt;p&gt;あ、エンブレムは上書きするのがいいと思いますよ、ランキングのやつ。今の形式では重複してるみたいで見栄えも良くないですし、欠けが出るとモチベが下がりますし、上書きすることで上位者の栄誉も守れますからね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた50,51</title>
      <link>https://syui.github.io/blog/post/2020/11/30/illust/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/30/illust/</guid>
      <description>&lt;p&gt;新しいやつ描いてたのと、過去絵も納得いかないやつ修正とかしてた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_50.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最近うれしかったこと</title>
      <link>https://syui.github.io/blog/post/2020/11/29/pogo/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/29/pogo/</guid>
      <description>&lt;p&gt;前回に引き続き、最近のポケモンGoはどんな感じなのか、最新の変化を踏まえ、うれしかったことなど書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;今回はポジティブな内容となっております。&lt;/p&gt;&#xA;&lt;h3 id=&#34;交換範囲最大40km以内に拡大1130までテスト&#34;&gt;交換範囲、最大40km以内に拡大(11/30までテスト)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03473/&#34;&gt;https://pokemongo-get.com/pokego03473/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;実は私、交換に関してだけはすごく運がいいんです。図鑑を埋められているのも、ほぼ交換によるものと言っても過言ではないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;最近では、交換可能範囲が広がり、40km以内にいる相手(フレンド)との交換が可能となっていました。&lt;/p&gt;&#xA;&lt;p&gt;私の運がよかったのは、主に、交換相手。とてもいい人と当たる確率がすごく高かった。&lt;/p&gt;&#xA;&lt;p&gt;いや、高すぎると言っていいくらいで、現時点では100%の確率で、とてもいい人たちでした。&lt;/p&gt;&#xA;&lt;p&gt;これは、掲示板などをみていると、私は運が良かっただけなのでしょう。うまくいかないことも結構多いらしい。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoでは、交換掲示板みたいなものがいくつかあって、そこに書き込んで、会ったりまたは非対面で交換したりするんですよね。&lt;/p&gt;&#xA;&lt;p&gt;私の交換相手になってくれた人は、運良くどの人も親切で、圧倒的にスムーズに交換を完了できることが多いんです。&lt;/p&gt;&#xA;&lt;p&gt;そういった関係で、今回の交換範囲の拡大期間でも、非常に良い体験でした。&lt;/p&gt;&#xA;&lt;p&gt;まあ、交換というのは、ちょっと疲れたり緊張したりするんですけど、例えば、相手に渡すポケモンちゃんといるよなと何度も確認したり、時間確認したりだとか。ですが、欲しいものも手に入り、相手もいい人で、そこまで大変というわけではありません。&lt;/p&gt;&#xA;&lt;p&gt;最近は、UEA(湖の神話)などの伝説ポケモンが海外フレンドとのリモート招待でゲットできたりとか、そういったうれしいことが多かったです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;四季の実装&#34;&gt;四季の実装&lt;/h3&gt;&#xA;&lt;p&gt;今回のアップデートで、私が最も期待しているのは、四季の実装です。&lt;/p&gt;&#xA;&lt;p&gt;春夏秋冬が3ヶ月ごとに設定されるらしい。これによってフィールドではどのような変化が訪れるのでしょうか。とても楽しみにしているのです。&lt;/p&gt;&#xA;&lt;p&gt;今までのフィールドの変化、天候もすばらしかったのですが、私は必ずしも現実と一致させる必要はないんじゃないかと思っていて、例えば、現実は夏でも、ゲーム内は冬で雪が降っているみたいなことがあっても面白いんじゃないと考えていました。&lt;/p&gt;&#xA;&lt;p&gt;また、常にお天気APIから取得して反映するのも負担が大変そうですから、半分くらいランダムで決められた天候を表示するのもいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;今回の四季の実装は、必ずしも現実と一致させる方向でもないので、その辺で多少アバウトなフィールド体験をしてみたい。&lt;/p&gt;&#xA;&lt;p&gt;四季の実装では、道路や地面の色がちょっと変わったりするんでしょうか。秋だったら茶色やオレンジとかになるのかな。&lt;/p&gt;&#xA;&lt;p&gt;あと、雪や虹はほとんど見たことなかったので(現実に合わせるため)、発生頻度増えるとうれしい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;すべて選択&#34;&gt;すべて選択&lt;/h3&gt;&#xA;&lt;p&gt;ボックスで全て選択ができるようになりました。便利。&lt;/p&gt;&#xA;&lt;p&gt;私の場合は、&lt;code&gt;n&lt;/code&gt;を&lt;code&gt;日数0&lt;/code&gt;にキーボード登録して使っています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、誤爆の可能性が多少あるので気をつけましょう。&lt;/p&gt;&#xA;&lt;p&gt;また、&lt;code&gt;タグ&lt;/code&gt;が実装される予定なので、さらに便利さが増しそうな予感。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最新アップデートの評価</title>
      <link>https://syui.github.io/blog/post/2020/11/28/pogo/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/28/pogo/</guid>
      <description>&lt;p&gt;前回に引き続き、最近のポケモンGoはどんな感じなのか。評価していきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;今回は少し厳しい意見を書いています。人によっては読まないことをお勧めします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;育成&#34;&gt;育成&lt;/h3&gt;&#xA;&lt;p&gt;TL50が来るので、ポケモンの育成に関しても変化があります。アメXLなるものが実装されるらしい。&lt;/p&gt;&#xA;&lt;p&gt;しかし、最近のポケモンGoは完全におかしくなっちゃってるので、これについても、おそらく最悪なものになるだろうと考えています。&lt;/p&gt;&#xA;&lt;p&gt;詳しい理由は以下で説明しますが、メガシンカとGBLは完全な設計ミスでした。&lt;/p&gt;&#xA;&lt;p&gt;したがって、ポケモンの育成についても、連動して最悪なものになると予想しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;メガシンカ&#34;&gt;メガシンカ&lt;/h3&gt;&#xA;&lt;p&gt;メガシンカは様々なテコ入れ修正がありましたが、いまだにほとんど使われてないので、完全な失敗だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;原作ポケモンのメガシンカといえば有名ですし、人気もあります。普通にやれば成功したはずの内容ですが、まさかここまで失敗しちゃうなんて&amp;hellip;。失敗するほうが難しいといえなくもない。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、メガシンカは盛り上げてこそ、使われてこそだったと思います。&lt;/p&gt;&#xA;&lt;p&gt;この問題を解消するには、ポケモンGoでも原作と同様、コストなしの条件、選択肢を追加する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;それでやっと使う人もでてくるでしょうね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gbl&#34;&gt;GBL&lt;/h3&gt;&#xA;&lt;p&gt;GBLで当初目標だったランク10に到達したので(といっても、シーズン5は勝利数で到達可能)、率直な感想を書きます。GBLとは、簡単にいうとPvPです。&lt;/p&gt;&#xA;&lt;p&gt;少し不快に思われるかもしれませんが、このGBL、客観的に評価すると、ここまでつまらないゲーム、ここまで深刻バグが多すぎる対戦ゲームはこれまでプレイしたことがありません。&lt;/p&gt;&#xA;&lt;p&gt;逆に質問しますけど、ここまでバグってる対人ゲーム、やったことあります？私はないです。おそらく、ほとんどの人がないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;私もそれなりにバトル回数は重ねた上で評価しています。そうでないと正しい評価はできませんから。&lt;/p&gt;&#xA;&lt;p&gt;ある程度、プレイした上でいいますが、GBLは、ポケモンGoのゲーム性に合っていません。これは、完全に設計ミスです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、開発者のインタビューではこんなことが書かれています。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;記者:シーズン中に突然レートが変更される事態が発生しました。&lt;/p&gt;&#xA;&lt;p&gt;アレックス:シーズン3で低迷する状況が多発した結果、シミュレーションよりもランク10になる人の数が下回ってしまった&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://app.famitsu.com/20201103_1719132/&#34;&gt;https://app.famitsu.com/20201103_1719132/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これはありえないことですし、下手な嘘だと思います。シーズン3では誰もランク10に到達できず、シーズンの最後に突如レートが変更されることがありました。これによって何人かがランク10に到達。開発者のアレックスは「シュミレーション結果と異なり予想外だった」と述べているようです。しかし、そこまでバカな人間は存在しません。したがって、これは単なる思想の違いだったと私は思います。GBLは管理者権限を持つアレックスを頂点に、そのアレックスに認められた一部人間のみ褒賞を得ることができる仕組みで作られているのだと思います。そういった思想が垣間見える。根拠はいくつかありますが、数が減らされていたこと、レート操作されたこと、インタビューを読むとそのようなことが書かれていたことでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;反対に下記のような&lt;code&gt;あつ森&lt;/code&gt;の開発者の素晴らしいインタビューがあります。とても良い内容なのでぜひ読んでみてください。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;『どうぶつの森』というゲームが特異なのは、そのような「機能性」でゲームを満たしていくだけではなく、その膨大なリソースの多くが、ほぼ「無機能」であるという点にある。&lt;/p&gt;&#xA;&lt;p&gt;『どうぶつの森』の大半の要素は「無機能」だからこそ良いのである。&lt;/p&gt;&#xA;&lt;p&gt;何故なら「無機能性」によって得られる「自由」があるからだ。&lt;/p&gt;&#xA;&lt;p&gt;「無機能性」、つまりはゲームにおいて何もできなくすることによって「自由」が得られる。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://news.denfaminicogamer.jp/column01/201013a&#34;&gt;https://news.denfaminicogamer.jp/column01/201013a&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは哲学であり、設計です。ポケモンGoも似たところがあり、本来は個人のライフスタイルや生活に溶け込むよう設計されていて、それが非常に良かった。私がポケモンGoを選択し、プレイしている理由です。&lt;/p&gt;&#xA;&lt;p&gt;逆に、バトルロイヤルのレート戦でずっと戦い続けるみたいなのは、このゲームに合いません。常にプレイヤー同士を戦わせ続けるというのは、個人の生活に馴染まない。ようは疲れちゃうんですよ。また、毎日のようにGBLの結果に感情を左右され、ストレスを受け続けるというのも感心しません。どう考えても不健康。&lt;/p&gt;&#xA;&lt;p&gt;ですから、初期のポケモンGoにおいて、それぞれの要素は、そこまで意味を持ちませんでした。個体値もそうですが、個体値が結果に結びつく場面はほとんどありません。影響を及ぼさないよう設計されていました。&lt;/p&gt;&#xA;&lt;p&gt;それでも、みんな高個体値を目指しました。そして、これは各人の意思で自由に決められたものでした。&lt;/p&gt;&#xA;&lt;p&gt;GBLのようにドーミラーがいなければ勝てないのでドーミラーを捕まえて育てたいとは思ってないけど育てるしかない、という状況とはまるで違います。&lt;/p&gt;&#xA;&lt;p&gt;相棒が拾ってくるアイテムなんかもそうですよね。意味がないからこそ、そこには自由がありました。このゲームは、その点がとくに優れており、すばらしかった。その意味で、ポケモンGoは、今までにないゲームでした。&lt;/p&gt;&#xA;&lt;p&gt;反対に、GBLのようなどこにでもあるレート対人ゲームは、最初は面白がって参加する人も多いのですが、次第に参加者が減り続け、最後には一部の人間だけのゲームになってしまいます。&lt;/p&gt;&#xA;&lt;p&gt;大多数のプレイヤーは養分に過ぎず、全体の0.001%に満たない特別なプレイヤーを崇めるためだけの仕組みであることに気づいてしまうからです。普通ならそれでいいんですけど、ポケモンGoは本来そういうゲームじゃないというのが私の考えです。&lt;/p&gt;&#xA;&lt;p&gt;これまでのGBLは完全に設計ミスだったと私は思います。&lt;/p&gt;&#xA;&lt;p&gt;GBLは、最低限、レートを廃止し、勝利数でランクを決めるほうがいいでしょう。今のままでは不自由ですよ。&lt;/p&gt;&#xA;&lt;p&gt;私が考えるベストは、ランクも廃止して、GBLはマッチング処理のみを行い、勝利数のみを記録する方式です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、TL50への道</title>
      <link>https://syui.github.io/blog/post/2020/11/27/pogo/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/27/pogo/</guid>
      <description>&lt;p&gt;気になったことを適当に。&lt;/p&gt;&#xA;&lt;h3 id=&#34;tl50&#34;&gt;TL50&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGoでTL50が解放されます。これまで最大はTL40でした。TLというのはトレーナーレベルのことで、ポケモンのレベルも同等に上げられるようになります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03487/&#34;&gt;https://pokemongo-get.com/pokego03487/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は基本、無課金なので、&lt;code&gt;レイドバトルで30回勝つ&lt;/code&gt;は30日必要です。そのほか、&lt;code&gt;ポケモンのGOスナップショット写真を7日間連続で撮る&lt;/code&gt;, &lt;code&gt;伝説ポケモンを5匹捕まえる&lt;/code&gt;などを含めると、絶対日数がかかるものも多いので、頑張っても2,3ヶ月かかりそう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0121.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;プラチナメダルに関しては、ジョギング, タマゴは&lt;code&gt;振り子&lt;/code&gt;使うしかなさそう。コイキングはコイキング捕まえるしかないし、アイドル、ロケット団、リトレーンはTLタスクをやりながら頑張る。&lt;/p&gt;&#xA;&lt;p&gt;TL50とプラチナメダルの条件については、私はいいと思っています。少々厳しすぎる気もしますが、このゲームは年単位で達成する目標に設定しているのでしょう。個人のライフスタイルや生活に溶け込むよう設計されているゲームですから、このような目標は適切だと思います。&lt;/p&gt;&#xA;&lt;p&gt;私はエンジョイ勢ですから、基本的にはダラダラとサボりながら&amp;hellip;ごほん、コツコツとちょっとずつ続けてきましたが、1億XPは少しずつでも続けていれば達成できる経験値だと思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、常にサボってるわけではなく、たまに頑張ること、特にイベントとかではありますけど、日頃は数分プレイしてるだけです。&lt;/p&gt;&#xA;&lt;p&gt;なので、今から始める人はきついかもしれませんが、ちょっとずつでも続けてきた人にとっては、到達可能な範囲だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他の進捗&#34;&gt;その他の進捗&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0117.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0118.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0122.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0119.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_3508.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0000.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/pokemongo_20201125_0120.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ジュースをやめられたかもしれない話</title>
      <link>https://syui.github.io/blog/post/2020/11/26/private/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/26/private/</guid>
      <description>&lt;p&gt;私は、モンエナとかコーラが好きでよく飲んでたんだけど、体に良くないと思ってたので、3週間やめてみました。&lt;/p&gt;&#xA;&lt;p&gt;モンエナは1週間に1,2缶で、コーラは3,4缶くらい飲んでたかな。コーヒーも飲んでた時期が少しあったけど、今は飲まないようにしています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これでもかなりの我慢が必要だったので、別の方法を探しました。&lt;/p&gt;&#xA;&lt;p&gt;そこで、&lt;code&gt;養命酒&lt;/code&gt;がいいという話を聞いたので、さっそく試してみたのですが、養命酒を代わりにすることで、やめられそうだなと、数週間やってみてそう感じたので、この記事を書いています。&lt;/p&gt;&#xA;&lt;p&gt;お酒は飲まないと決めている私ですが、養命酒は薬だからという理由でOKにしました。&lt;/p&gt;&#xA;&lt;p&gt;養命酒は、おいしいし、酔わないし(容量守ってれば普通は酔わないと思う)、特に問題ありません。また、実感として、モンエナやコーラより体に悪くなさそうに思います。&lt;/p&gt;&#xA;&lt;p&gt;私がジュースを飲んでたのは、ほっと一息ついたとき、コーヒーや紅茶やジュースなど、なにかが欲しくて、その穴をうまく埋めてくれたのかなあと思っています。&lt;/p&gt;&#xA;&lt;p&gt;なので、養命酒、いいですよ。&lt;/p&gt;&#xA;&lt;p&gt;あ、運転とかする人は気をつけて(飲まないように)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ランニングに30秒の全力疾走を取り入れてみた</title>
      <link>https://syui.github.io/blog/post/2020/11/25/private/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/25/private/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;「5分おきに30秒の全力疾走」をはさむと最強コスパのトレーニングになるよ！ &lt;a href=&#34;https://t.co/ZO3B2ZzQuy&#34;&gt;pic.twitter.com/ZO3B2ZzQuy&lt;/a&gt;&lt;/p&gt;&amp;mdash; ココロジー＠心が軽くなる心理学 (@Cocologyinfo) &lt;a href=&#34;https://twitter.com/Cocologyinfo/status/1330103707481108480?ref_src=twsrc%5Etfw&#34;&gt;November 21, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;おもしろそうだったので、日課のランニングに30秒の全力疾走を取り入れて何日かやってみた。&lt;/p&gt;&#xA;&lt;p&gt;結構きついんだけど、終わった後はなんか気持ちいいので、ちょっとだけ続くかも。&lt;/p&gt;&#xA;&lt;p&gt;なお、自分は毎日6kmくらい走るんだけど、その中で4回全力疾走してる。5分おきかどうかは気にもしてないけど、できる範囲で全力疾走入れるようにした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoで特別な衣装をゲットしてみた</title>
      <link>https://syui.github.io/blog/post/2020/11/24/pogo/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/24/pogo/</guid>
      <description>&lt;p&gt;今回、ちょっと変わった方法(プロモーションコード)で衣装を受け取らないといけないので、早めにゲットしといたほうがいいかも。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The new Verizon mask and jacket avatar items are now available to ALL Trainers! Learn how to get yours here: &lt;a href=&#34;https://t.co/zOC8t70l14&#34;&gt;https://t.co/zOC8t70l14&lt;/a&gt; &lt;a href=&#34;https://t.co/FzVLRTsRgO&#34;&gt;pic.twitter.com/FzVLRTsRgO&lt;/a&gt;&lt;/p&gt;&amp;mdash; Verizon (@Verizon) &lt;a href=&#34;https://twitter.com/Verizon/status/1330889279179001856?ref_src=twsrc%5Etfw&#34;&gt;November 23, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;基本的には上のリンクを踏んで、ログインして、ゲームアカウント選ぶと衣装がゲームに送られる仕組み。企業とのコラボらしい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macをbig surにupgradeした</title>
      <link>https://syui.github.io/blog/post/2020/11/13/mac/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/13/mac/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/105/201/817/265/459/998/small/2337ca197a80d2e4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;delete : &lt;code&gt;~/Library/Developer/CoreSimulator&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;install : &lt;code&gt;command line tool for xcode 12.2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;big-surの不具合&#34;&gt;big surの不具合&lt;/h3&gt;&#xA;&lt;p&gt;現在確認してる不具合&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;外部ディスプレイを一度でも接続すると日本語入力が激重になる&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;通常でもかなり遅く、SMCリセットなど様々な方法、設定を見直してみるものの直らない。Google日本語入力の再インストールも試してみた。&lt;/p&gt;&#xA;&lt;p&gt;この現象は、以前のOSにアップグレードしたときに発生した&lt;code&gt;起動がうまく行かなかったとき、再起動すると日本語入力が遅くなる現象&lt;/code&gt;に似てる気がする。なお、また再起動をかけると以前は直ってた。&lt;/p&gt;&#xA;&lt;p&gt;追記:Google日本語入力を消して、Appleのだけにして、再起動したあと、起動から15分くらい経過するとちょっとは快適になる模様。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;auto loginできなくなってる&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;auto loginできなくなってる。&lt;/p&gt;&#xA;&lt;p&gt;追記:SMCリセット後に、なぜかauto loginできるようになった。ただし、SMCやったあとに本体が熱暴走するようになったので、もう一度、SMCをやると、熱暴走は収まったんだけど、再びauto loginされなくなった。&lt;/p&gt;&#xA;&lt;p&gt;管理者としては自動ログインできなくなってるのかもしれない。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;プライバシーの懸念など&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2020/11/blog-post_14.html&#34;&gt;https://okuranagaimo.blogspot.com/2020/11/blog-post_14.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2020/11/apple_15.html&#34;&gt;https://okuranagaimo.blogspot.com/2020/11/apple_15.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://applech2.com/archives/20201116-about-apple-privacy-issue.html&#34;&gt;https://applech2.com/archives/20201116-about-apple-privacy-issue.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;いろいろな意見はあるものの、個人的には、macにプライバシーは存在してないと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;これはxcodeを触ってる人ならわかるかもしれないけど。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;macbook proで文鎮化&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;するらしいので、やめといたほうがいいみたい。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vlcが動かない&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;vlc 3.xの最新では、次の動画を再生するときに大音量で音がブツ切りされる不都合があるので、2.xにダウングレードしてたんだけど、それが動かなくなってる。&lt;/p&gt;&#xA;&lt;p&gt;インターフェイスにはTUIの&lt;code&gt;ncurses&lt;/code&gt;を使用してた。&lt;/p&gt;&#xA;&lt;p&gt;したがって、動画もmpvに移行してみた。mpvは動画の倍速再生でオーディオの品質が悪いのであまり使いたくないのです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mpv -speed 3.5 --af&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rubberband --audio-pitch-correction&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes $directory&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>2FAをgoogleからmicrosoftに移行した</title>
      <link>https://syui.github.io/blog/post/2020/11/12/app/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/12/app/</guid>
      <description>&lt;p&gt;microsoftの2FAアプリはinport, exportができるのでいいですね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://support.microsoft.com/ja-jp/office/microsoft-authenticator-9783c865-0308-42fb-a519-8cf666fe0acc&#34;&gt;https://support.microsoft.com/ja-jp/office/microsoft-authenticator-9783c865-0308-42fb-a519-8cf666fe0acc&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://support.google.com/accounts/answer/1066447&#34;&gt;https://support.google.com/accounts/answer/1066447&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた46-49</title>
      <link>https://syui.github.io/blog/post/2020/11/11/illust/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/11/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_46.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2020/11/08/pogo/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/08/pogo/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_IMG0090.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_IMG0091.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_IMG0092.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_IMG0094.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_IMG0095.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_bEZoAIi.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_h4ZgAE3.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201110_mOmkAAf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://news.denfaminicogamer.jp/column01/201013a&#34;&gt;https://news.denfaminicogamer.jp/column01/201013a&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://app.famitsu.com/20201103_1719132/&#34;&gt;https://app.famitsu.com/20201103_1719132/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを修正してみた3</title>
      <link>https://syui.github.io/blog/post/2020/11/02/illust/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/11/02/illust/</guid>
      <description>&lt;p&gt;過去のイラストを見て納得いかないところの修正してました。また、アイデア自体がよくないと思った場合、完全にイチから構築したやつも少しあります。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、自分が一番気に入ってるのは、月のやつかな(どれだよ&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_34.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_35.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_38.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_40.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_43.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_45.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall/&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoは最近どんな感じなのか</title>
      <link>https://syui.github.io/blog/post/2020/10/11/pogo/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/10/11/pogo/</guid>
      <description>&lt;p&gt;ポケモンGoをプレイしている人にも、していない人にも向けたポケモンGoは最近どんな感じなのかを紹介する記事。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プロフィール画像をちょっと差し替えた話&#34;&gt;プロフィール画像をちょっと差し替えた話&lt;/h3&gt;&#xA;&lt;p&gt;まずは、プロフィール画像をちょっと差し替えました。ポケモンGoをやってるよと書いてるんですけど、古くなってたので、ボックスでいい感じのポケモンをピックアップ。&lt;/p&gt;&#xA;&lt;h4 id=&#34;古い&#34;&gt;古い&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/pokemongo_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;新しい&#34;&gt;新しい&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/pokemongo_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;図鑑の話&#34;&gt;図鑑の話&lt;/h3&gt;&#xA;&lt;p&gt;最近のポケモンGoは、&lt;code&gt;pokemon gen6(第六世代)&lt;/code&gt;、つまり、XYZのポケモンが追加されはじめました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201012_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201012_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;レイドアワーとコミュニティデイ&#34;&gt;レイドアワーとコミュニティデイ&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20201012_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;帽子のピカチュウが10/13で、ヒトカゲが10/17です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego02416/&#34;&gt;https://pokemongo-get.com/pokego02416/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;期間中にヒトカゲを進化させると&lt;code&gt;りゅうのいぶき&lt;/code&gt;を覚えます。おそらく、メガシンカXするとドラゴンタイプになるのでその辺。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、メガリザードンX用に、わざマシンスペシャルを使って、&lt;code&gt;ブラストバーン&lt;/code&gt;を覚えさせようと思っています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;りゅうのいぶき&lt;/code&gt;, &lt;code&gt;ブラストバーン&lt;/code&gt;, &lt;code&gt;ドラゴンクロー&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;メガリザードンYの場合は、昔からボックスにいる&lt;code&gt;ブラストバーン&lt;/code&gt;覚えたやつを使うことになりそう。こっちは&lt;code&gt;りゅうのいぶき&lt;/code&gt;じゃないほうがいい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ほのおのうず&lt;/code&gt;, &lt;code&gt;ブラストバーン&lt;/code&gt;, &lt;code&gt;ドラゴンクロー&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスにエンテイが復刻してる件</title>
      <link>https://syui.github.io/blog/post/2020/10/08/pokemas/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/10/08/pokemas/</guid>
      <description>&lt;p&gt;ポケマスにエンテイが復刻してたりとか色々あったので、少し感想を書きます。&lt;/p&gt;&#xA;&lt;p&gt;エンテイ自体は割と楽に勝てました。ただ、カメックスが1凸でかつEXではないので、そのへん強化したいと思ってます。EXだった場合は気迫+こらえるなのでとてもいいです。また、3凸だと全体回復できるので性能的にかなり変わってきます。天井まで351/400なので、無課金でたどり着けるかギリギリのところ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;エンテイの復刻と報酬について&#34;&gt;エンテイの復刻と報酬について&lt;/h3&gt;&#xA;&lt;p&gt;エンテイのエンブレムは古参の証みたいな感じで機能していましたので、少し寂しい気もします。ですが、途中参加だった場合、取れるチャンスがあるというのは嬉しいですし、また、運営も使いまわしができるので、単純にいいことだと思いますね。&lt;/p&gt;&#xA;&lt;p&gt;復刻に関しては以上ですが、報酬に関しては問題があります。&lt;/p&gt;&#xA;&lt;p&gt;これは、再び攻略した人も報酬を受け取れるようにしたほうがいいです。古参も気持ちよくプレイするために、ノビシロくらいはもらえるようにしたほうがいいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;星5確定チケット&#34;&gt;星5確定チケット&lt;/h3&gt;&#xA;&lt;p&gt;新しいイベントに星5確定チケットというものが登場しています。これは必要ないと思います。&lt;/p&gt;&#xA;&lt;p&gt;以前の報酬だったノビシロのほうがいいでしょうね。ノビシロは普遍的に使えるアイテムですし。&lt;/p&gt;&#xA;&lt;p&gt;ただし、星5確定チケットの内容にレッドやハロウィンアセロラなどが含まれるというなら話は別です。また、使いどころによって、その期間中の星5を含まれるというなら意味はあるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、現在の内容では、あまり意味があるとは思えませんね。よくないでしょう。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゼニガメ事件&#34;&gt;ゼニガメ事件&lt;/h3&gt;&#xA;&lt;p&gt;ゼニガメ事件というものがありました。&lt;/p&gt;&#xA;&lt;p&gt;私の意見ですが、こういうことはあり得ることですし、特に気にしていません。&lt;/p&gt;&#xA;&lt;p&gt;私は、ポケモンGoをプレイしていますが、ずっと何かしらバグっています。修正される気配はありませんし、補償も報告も全く無いですから、これくらいのミスは仕方ないと思います。頻度的に見ても問題があるとは思えませんね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた45</title>
      <link>https://syui.github.io/blog/post/2020/09/29/illust/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/29/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_45.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス最近の進捗と思ったこと</title>
      <link>https://syui.github.io/blog/post/2020/09/28/pokemas/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/28/pokemas/</guid>
      <description>&lt;p&gt;最近、カメックスを狙ってガチャを回してるんだけど爆死中。それは置いといて、ハロウィンは、アセロラ&amp;amp;ミミッキュが来るという情報があって、これは嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;ただ、衣装がやっぱりなコスプレなので&amp;hellip;ダサい！と思ってしまった。やっぱり、難しいんでしょうね、ハロウィンとかクリスマスに合わせるの&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;あと、チャンピオンリーグなんかは毎回クリアしてるけど、自分は楽しんでます。&lt;/p&gt;&#xA;&lt;p&gt;簡単にクリアできるからつまらないっていう人もいますが、バトルヴィラでもリーグでも私は毎回、なんやかんやで面白がってクリアしていて、つまらなくはないかな。&lt;/p&gt;&#xA;&lt;p&gt;これについては、ちょっと思ってることがあるのでそれについて書いていきたい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;上級者に焦点を当ててしまってはいけない&#34;&gt;上級者に焦点を当ててしまってはいけない&lt;/h3&gt;&#xA;&lt;p&gt;簡単すぎてつまらない、もっと難しくて上級者でも楽しめるコンテンツを、という意見があります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私は、そこを基準にするとゲームは終わると思ってたりしますので、もちろん、そのゲームの性質にもよりますが、ポケマスでそれをやると、ダメだろうと思っています。どんどんプレイヤーが減り、終了するでしょう。&lt;/p&gt;&#xA;&lt;p&gt;なので、基本的には上級者のいうことは無視してかまわない。誰でも楽しめるゲームを作るほうがいいと考えています。&lt;/p&gt;&#xA;&lt;p&gt;上級者は文句を言いながらも楽しみ方を見つけ続けるものですし、ほうっておいても大丈夫だと思います。そういうもんです、ポケモンGo見てても。&lt;/p&gt;&#xA;&lt;p&gt;そんな感じなので、上級者を基準にゲームを作ってしまうといけません。&lt;/p&gt;&#xA;&lt;p&gt;ただし、そんな人達も遊べるような場所は一つくらいあってもいいかもとは思っていて、次はそれについて。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最難関マルチを1日1回&#34;&gt;最難関マルチを1日1回&lt;/h3&gt;&#xA;&lt;p&gt;具体的にあるといいなと思っている仕組みは、最難関の協力プレイを1日1回だけ挑戦できるという内容のものです。&lt;/p&gt;&#xA;&lt;p&gt;なお、やり直しはできないようにします。中止したところでその日は終了。これは今までのバトルとは少し違いますね。今まではやり直しができました。&lt;/p&gt;&#xA;&lt;p&gt;まず、最難関をどうやって定義すればいいのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これも簡単な話で既存の内容を使えばいいです。それを組み合わせるだけ。&lt;/p&gt;&#xA;&lt;p&gt;私なら「ソウリョクバトル + ソウリョクバトル + レジェンドバトル」を連続するという内容にします。&lt;/p&gt;&#xA;&lt;p&gt;所感で「これは流石にクリアできないでしょ」というレベルのものを設置して放置。&lt;/p&gt;&#xA;&lt;p&gt;すると、しばらく誰もクリアできない日が続きます。しかし、気にする必要はありません。やがて誰かが糸口を見つけるでしょう。クリアすると思います。これは1ヶ月スパンで見るのがいいかなと思います。1ヶ月クリアできなければ「ソウリョク + レジェンド」にします。&lt;/p&gt;&#xA;&lt;p&gt;報酬は特別なものを用意せずダイヤx10とかノビシロ銀とかにします。&lt;/p&gt;&#xA;&lt;p&gt;そんな感じのものをマルチに一つだけ置いておくといいんじゃないかと考えています。&lt;/p&gt;&#xA;&lt;p&gt;これは長く回せる仕組みであり、ソウリョクバトルもレジェンドバトルもすでにあるものを使っており、報酬も継続可能だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、マルチってサーバーの負担にもなりますからお金がかかったりして大変かもしれません。ということで1日1回という制限をつけます。&lt;/p&gt;&#xA;&lt;p&gt;これによってマッチングできない問題が発生するかもしれませんが、そこはプレイヤーが工夫すべき部分でしょう。&lt;/p&gt;&#xA;&lt;p&gt;なお、マッチングしない場合はNPCを与えるのではなく、マッチングを一度キャンセルする処理を行うのが妥当かと思います。1日1回の挑戦は貴重なので。&lt;/p&gt;&#xA;&lt;p&gt;こういうものが一つ用意してあるといいかもしれませんね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;衣装を変更設定する&#34;&gt;衣装を変更、設定する&lt;/h3&gt;&#xA;&lt;p&gt;次に同じキャラ間の衣装が変更、設定ができるようになるといいなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;アセロラのハロウィン衣装を見て思ったんですが、個人的には、通常のアセロラ+ミミッキュの組み合わせで使いたいんですよね。&lt;/p&gt;&#xA;&lt;p&gt;6EXの衣装は素晴らしい仕組みですし、変更もできてカッコいいです。とはいえ同じキャラで変更できるバリエーションが増えるとさらに嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;例えば、カミツレ&amp;amp;ロトムを使いたいけど、衣装があまりにいかがわしすぎるので、使いづらい。変更できないのだろうかみたいなことはあると思います。&lt;/p&gt;&#xA;&lt;p&gt;そういうケースも想定して、同じキャラに限り変更できるようになるといいなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;まあ、私の場合、通常衣装のアセロラでミミッキュを使いたいってだけなんですけどね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>本と本の表紙を作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/09/23/zenn/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/23/zenn/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://zenn.dev/&#34;&gt;zenn&lt;/a&gt;という投稿サービスが流行ってて、本形式の記事とかも販売できるようなので、とりあえずやってみました。&lt;/p&gt;&#xA;&lt;p&gt;最初に目指したのは、(1)最速で作ること、(2)表紙だけはそれっぽくすることの2つ。&lt;/p&gt;&#xA;&lt;p&gt;なので、直近に書いた技術系の記事をそのまま利用する形になったのと、あとは実験のために作曲というコードとは直接関係ないジャンルを投稿してみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;で、今回もっとも挑戦的だったのが表紙の作成です。&lt;/p&gt;&#xA;&lt;p&gt;本形式の投稿というなら昔からgitbookを使ってたし、そこまで初体験でもないけれど、本の表紙みたいなものを作ったのはこれが初めてだったんじゃないかなと。&lt;/p&gt;&#xA;&lt;p&gt;作った表紙はこちら。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/book/rust-cli-tool.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/book/vocaloid-music-first.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;コピーライトはいらないんじゃないかと思ったんだけど、そのままではそれがなにか分かりづらいし、「著者」とか入れるのもなんだしということで入れといた。&lt;/p&gt;&#xA;&lt;p&gt;それぞれに工夫した点を挙げると、タイトルを考えるの割と大変でした。&lt;/p&gt;&#xA;&lt;p&gt;幅的なものを調整したりとか色々なんだけど、「コマンドラインツール」でいくか「CLIツール」でいくか「コマンドライン・インタフェース・ツール」でいくか、様々な選択肢がある中で、見栄えの良さを考慮した結果、「コマンドツール」になりました。&lt;/p&gt;&#xA;&lt;p&gt;で、上の部分と下の部分を分けて入力し、それぞれに幅を変えていますので、しっかりと長方形に収まっているというか一致するようになっています。&lt;/p&gt;&#xA;&lt;p&gt;ボカロのほうは、そのまま書くと「で」だけうまく入らなかったので、スペース空けて丸で囲むことで、あくまでパッと見なんだけどいい感じになったんじゃないかなと。&lt;/p&gt;&#xA;&lt;p&gt;あと、フォントの囲みを白にしたのと、背景にちょっと被せる形にしたのが一番しっくり来た。&lt;/p&gt;&#xA;&lt;p&gt;背景については、それぞれ端末と音階を表現しています。色についても難しくて、うん、難しかった。&lt;/p&gt;&#xA;&lt;p&gt;ボカロは初音ミクの緑っぽさを使った感じで、rustは、はじめ青で行こうと思ったんだけど、zennで見てみるとなんか違うってなったので、赤に変更。&lt;/p&gt;&#xA;&lt;p&gt;気になった方はちょっと覗いてみてくだされ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zenn.dev/syui&#34;&gt;https://zenn.dev/syui&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>秘密の設定資料を作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/09/20/game/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/20/game/</guid>
      <description>&lt;p&gt;興味ある人、いるかわからないけど、作品の設定資料を作ったので置いときます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/gamedoc&#34;&gt;/gamedoc&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/docs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスの難易度について</title>
      <link>https://syui.github.io/blog/post/2020/09/18/pokemas/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/18/pokemas/</guid>
      <description>&lt;p&gt;twitterとかyoutubeを見ていると、ポケマスの難易度について誤解が生まれ、それが新規参入の障壁になっていると思うので、少し語ってみることにします。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスの難易度については、それほど簡単ではないと思う。&lt;/p&gt;&#xA;&lt;p&gt;特にいま始めたばかりの人や無課金でやっている人だと、結構きついんじゃないかな。&lt;/p&gt;&#xA;&lt;p&gt;私自身は、簡単にクリアできているけれど、でもそれは単に昔からプレイしてて強いキャラがそろってたり、強化できてたりするからであって、基本、無課金勢や新規で始めたばかりの人は、レジェンドバトルのエクストラなんて難しいと感じるんじゃないかなと思います。&lt;/p&gt;&#xA;&lt;p&gt;だから、アグノムが難しい、クリアできないってのは別に恥ずかしいことではありません。&lt;/p&gt;&#xA;&lt;p&gt;twitterやyoutubeを見ていると、あんなの簡単だよ、誰でもクリアできるよ、みたいな雰囲気があって、そういうのよくないと思います。&lt;/p&gt;&#xA;&lt;p&gt;そもそも、始めたばかりの人でも簡単に最高難易度をクリアできるってこと自体が普通じゃないです。それは、おかしいですよ。&lt;/p&gt;&#xA;&lt;p&gt;ですから、難しい、クリアできない、という感覚が普通なのであって、簡単だという感覚のほうが間違っています。&lt;/p&gt;&#xA;&lt;p&gt;私も、エンテイのときとかめっちゃ苦戦した覚えがあって、当時は盾役で使えるのってミュウくらいしかいなかったので、マジできつかった思い出があったりします。&lt;/p&gt;&#xA;&lt;p&gt;エンテイのときは、1組でやらないとこちらがやられるみたいな状況で、2組目以降、一発で即死みたいな感じだった記憶があって、当時はバディズドロップとかもなかなか貯まってなくて、手持ちも今よりもっと少なかったと思うので、それが苦戦の要因でした。&lt;/p&gt;&#xA;&lt;p&gt;昔からプレイしてて、課金で強いキャラを当て、強化できている人にとっては簡単なのかもしれませんが、そうでない場合は、往々にして苦戦するもんなんじゃないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;でも続けていればそのうちエンブレム星x4とかも取れるようになってくると思うので、めげずに頑張っていきましょー。以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、方針転換でマジコスグリーンを狙ってみる</title>
      <link>https://syui.github.io/blog/post/2020/09/17/pokemas/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/17/pokemas/</guid>
      <description>&lt;p&gt;ハロウィンでアセロラでも来たらダイヤ使おうかなと思っていましたが、グリーン&amp;amp;カメックスが上方修正されるようなので、方針転換して、3凸を目指そうかなと思います。期間中はこれにダイヤを使う予定。現在は1凸です。&lt;/p&gt;&#xA;&lt;p&gt;無課金でやってるので当たるのかはわかりませんが、1枚でも来れば、あとはメダルを集めて3凸は実現可能だと思う。&lt;/p&gt;&#xA;&lt;p&gt;そうすると、もしハロウィンでアセロラが来てもダイヤが貯まってないので引けませんけど、これがイベントでゲットできるやつであることを願う&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;以前は全部レッドにつぎ込んでいて、私のような無課金だと1年で1人強化するのが限界です。この1周年でレッドを強化できたので、次はグリーンにしようかなと思います。全部グリーンにノビシロとか6EXとかもつぎ込む予定。&lt;/p&gt;&#xA;&lt;p&gt;グリーンの6EXは、1度限りB技で気迫x2になるというもの。気迫とはB技後の威力上昇のことで、B技を打つごとに全体の威力が上がりますよね、あれのことです。&lt;/p&gt;&#xA;&lt;p&gt;運営はおそらく、このマサラ組を最強枠にするつもりだと思います。よって、マジコスのレッド、リーフ、グリーンを優先するのが正解だと思う。&lt;/p&gt;&#xA;&lt;p&gt;この上方修正にあまり疑問はなく、グリーンってそこまで強くないなって感じでしたから、アイコンの表紙にもなってるので、これくらい強くてもいいんじゃないって思います。&lt;/p&gt;&#xA;&lt;p&gt;上方修正の内容について見ていきましょう。&lt;/p&gt;&#xA;&lt;p&gt;主に2凸で攻撃時30%で全体回復、3凸でダメージ時30%で全体回復が目玉でしょう。&lt;/p&gt;&#xA;&lt;p&gt;ただし、これらの併用ができるかはわかりません。ボードの状況にもよるでしょう。おそらく、併用は無理なんじゃないかと。攻撃時全体回復にするか、ダメージ時全体回復にするかでタイプが分かれるのではないかと考えています。&lt;/p&gt;&#xA;&lt;p&gt;また、フシギバナと組むのであれば、フシギバナで全体リジェネをかけ、カメックスでダメージ時全体回復+攻撃時ゲージ回復というタイプも考えられます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;引いておきたい優先順位&#34;&gt;引いておきたい優先順位&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sランク : レッド&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Aランク : リーフ、グリーン&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Bランク : フウロ、セレナ、カミツレ(ロトム)、ナツメ、リーフ(イーブイ)、オーキド、グラジオ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ポケマス、アグノムの攻略法</title>
      <link>https://syui.github.io/blog/post/2020/09/16/pokemas/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/16/pokemas/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemon_masters_20190916.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は、セレナ、レッド、リーフ(イーブイ)の構成でいきました。&lt;/p&gt;&#xA;&lt;p&gt;レッド(リザードン)のボードでフレアドライブのダメージ軽減x2をとり、アグノム一回目のHP半分超え当たりのところでフレアドライブを打ちます。&lt;/p&gt;&#xA;&lt;p&gt;全体の流れとしては、セレナで睡眠、リーフでB技x2してバフしたあと、メガリザードンXにしてフレアドライブする感じで攻略しました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた44</title>
      <link>https://syui.github.io/blog/post/2020/09/15/illust/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/15/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2020/09/14/pokemas/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/14/pokemas/</guid>
      <description>&lt;h3 id=&#34;重い腰を上げてエンブレム取ってた&#34;&gt;重い腰を上げてエンブレム取ってた&lt;/h3&gt;&#xA;&lt;p&gt;星1とかのエンブレムは取ってなくて、放置してたんだけど、このゲーム、続きそうな気がしたので、重い腰を上げてエンブレム取ってた。&lt;/p&gt;&#xA;&lt;p&gt;富豪(コイン)は道具交換で進化の石を売りつけたりするといいよ。&lt;/p&gt;&#xA;&lt;p&gt;ワタル持ってないんで、カイリューの&lt;code&gt;はかいこうせん&lt;/code&gt;のやつだけ取れてないんだけど、取得する手段はあるので、こういうのは否定的ではない。&lt;/p&gt;&#xA;&lt;p&gt;こういう遊び心はゲームにあったほうがいいので、ポケモン好きな人が好き勝手作ればいいと思ってたりするので、この程度のことは許容範囲内だと思う。(ワタル持ってない人は基本取れないので否定的な意見もある&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200914_img_2963.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;取得する手段は、twitterとかでマルチの協力を得て、&lt;code&gt;はかいこうせん&lt;/code&gt;を打ってもらうというのが考えられる。&lt;/p&gt;&#xA;&lt;p&gt;なので特に気にしてない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200914_img_2964.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガチャの天井でセレナを引く&#34;&gt;ガチャの天井でセレナを引く&lt;/h3&gt;&#xA;&lt;p&gt;私は無課金でやってるんだけど、基本的にはガチャを引かない。&lt;/p&gt;&#xA;&lt;p&gt;引いた覚えがあるのはレッドのときとかレッドのときくらいかな。&lt;/p&gt;&#xA;&lt;p&gt;大半はイベント時にゲットできる限定バディーズを使ってクリアしてきた。ミュウとかミュウツーとかパルキアとか。&lt;/p&gt;&#xA;&lt;p&gt;ただし、ここぞというときは貯めてたダイヤを放出することがあり、今回も1周年で登場したマサラ組に全部使ってしまった。&lt;/p&gt;&#xA;&lt;p&gt;後悔はしてないし、目標は達成したので、すごく嬉しかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200914_img_2965.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;で、今回はリーフとグリーンを当てることが目的だったんだけど、それを達成したあと、リーフがもう少しで天井だったので、天井を使ってリーフを凸しといたほうがいいかもと思い、追加で10連を回してみた。&lt;/p&gt;&#xA;&lt;p&gt;すると、リーフが連続で当たり、リーフ凸3になるという強運。&lt;/p&gt;&#xA;&lt;p&gt;しかも天井に到達したので、そこで初セレナを引くことにした。楽しい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200914_img_2966.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここからまたダイヤの貯蓄に移行。&lt;/p&gt;&#xA;&lt;p&gt;レッドの次にお気に入りのアセロラでも来たら使おうかなと思ったりしてる。&lt;/p&gt;&#xA;&lt;p&gt;スタミナ制度のおかげで毎日ログインしてるんだけど、ちょっとした作業で80ダイヤがもらえるのでそれをやってる。&lt;/p&gt;&#xA;&lt;p&gt;あとバトルヴィラをクリアしとくと貰えるので毎回クリアするといいよ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;メイの6ex&#34;&gt;メイの6EX&lt;/h3&gt;&#xA;&lt;p&gt;メイを6EXにした。今回のイベントでできるようになってるので、こういうときはやっとかないとね。&lt;/p&gt;&#xA;&lt;p&gt;6EXは何か特別感があっていいね。今後の6EXが楽しみ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;タマゴの色違い&#34;&gt;タマゴの色違い&lt;/h3&gt;&#xA;&lt;p&gt;50くらい割ったんだけど、色違いは一匹も出てなかったりする。&lt;/p&gt;&#xA;&lt;p&gt;色違いは低確率なのが普通だし、特に気にしてない。&lt;/p&gt;&#xA;&lt;p&gt;毎回、色違いが出るか否かのドキドキを楽しませてもらってるよ。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスはプレイしてて普通にたのしい。&lt;/p&gt;&#xA;&lt;p&gt;このゲーム、人気出てほしいな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ちょっと思ってること&#34;&gt;ちょっと思ってること&lt;/h3&gt;&#xA;&lt;p&gt;さて、このゲームでちょっと思ったことを適当に書いていきたい。&lt;/p&gt;&#xA;&lt;p&gt;このゲーム、私がガチャを当てたことでも分かる通り、かなり高確率であたりが出るようになっているんじゃないかと思っている。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今回のイベントで脱落する人も比較的少なかったのではないかと予想している。&lt;/p&gt;&#xA;&lt;p&gt;そして、バトルヴィラやチャンピオンリーグなどの素晴らしい仕組みがある。ここで、強い当たりキャラを腕試しできる機会が定期的にやってくるわけだ。&lt;/p&gt;&#xA;&lt;p&gt;強いキャラを使い、勝てる、楽しい、となるので、その時点でゲームとして成功していると思う。&lt;/p&gt;&#xA;&lt;p&gt;また、コンプ要素のあるエンブレム、タマゴ、6EXなどが揃っていて、これらは課金要素を含む。&lt;/p&gt;&#xA;&lt;p&gt;つまり、長続きしそうな要素があると思う。&lt;/p&gt;&#xA;&lt;p&gt;なので、このゲーム、思った以上に長続きするかもしれないと思いはじめている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた43</title>
      <link>https://syui.github.io/blog/post/2020/09/13/illust/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/13/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_43.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた42</title>
      <link>https://syui.github.io/blog/post/2020/09/12/illust/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/12/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた41</title>
      <link>https://syui.github.io/blog/post/2020/09/11/illust/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/11/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた40</title>
      <link>https://syui.github.io/blog/post/2020/09/10/illust/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/10/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_40.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスの進め方</title>
      <link>https://syui.github.io/blog/post/2020/09/09/pokemas/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/09/pokemas/</guid>
      <description>&lt;p&gt;好きなトレーナーやポケモンを使って好きに進めればいいんじゃない、楽しむことが重要。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;と、思いますが、何をやったらいいのかわからない人向けにポケマスの進め方を解説してみます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;エンブレムを取ろう&#34;&gt;エンブレムを取ろう&lt;/h3&gt;&#xA;&lt;p&gt;とりあえず星4のエンブレムを目標にやっていくのがいいですね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;育てよう&#34;&gt;育てよう&lt;/h3&gt;&#xA;&lt;p&gt;まずは、オーキド(ミュウ)とフウロ(スワンナ)を育てましょう。最強キャラです。&lt;/p&gt;&#xA;&lt;p&gt;レベルを上げ、ボードを埋めればいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは、盾役と回復役、攻撃役にタイプが分かれます。というよりこのように役割を当てはめてパーティーを組んだほうがいい。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ミュウは盾役で使うと強いです。サポート、攻撃にも使えますが、ミュウと互角の盾役はグリーン(カメックス)くらい。また、スワンナは回復役として優秀です。&lt;/p&gt;&#xA;&lt;p&gt;次に、ガチャを狙いましょう。狙うのはマジコスのレッド、グリーン、リーフです。&lt;/p&gt;&#xA;&lt;p&gt;こいつらを育てれば間違いありません。&lt;/p&gt;&#xA;&lt;p&gt;構成として初心者におすすめなのは盾役にオーキド、攻撃役にレッド、回復役にフウロです。これで最低限の安定はするはず。&lt;/p&gt;&#xA;&lt;p&gt;上記ほどではありませんが、他におすすめなのはリーフ(イーブイ)、ナツメ(フーディン)、カミツレ(ロトム)です。&lt;/p&gt;&#xA;&lt;p&gt;ただ、ガチャが当たらなかった、無課金でやりたいという人は、他のキャラでも攻略可能です。限定キャラが配布される期間があって、その期間にゲットできるやつは強いですね。例えば、この前まで配布されてたパルキアとか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;続けること&#34;&gt;続けること&lt;/h3&gt;&#xA;&lt;p&gt;続けることが重要です。&lt;/p&gt;&#xA;&lt;p&gt;私は、過去にレッドを確定で当てました。&lt;/p&gt;&#xA;&lt;p&gt;レッドが出てきたときのためにずっとダイヤを貯めていたのですが、時が来てそれを全部使っても、ガチャでレッド(当たり)を引くことができませんでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ポケマスには期間限定の上限が設定されており、期間中これだけダイヤを使うと好きなカードを1枚選べるよ、となっていたので、そこでレッドを引きました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、このときレッドは凸1です。凸は重複のことで、カードを重複するとボードを開放できます。3枚重複すると最大まで強化できる仕組み。&lt;/p&gt;&#xA;&lt;p&gt;つまり、私のレッドは確定で当てた1枚だけだったので、レッドの中では一番弱かったのです。&lt;/p&gt;&#xA;&lt;p&gt;その後も続けていると、アメというアイテムがもらえることがありました。アメを使うと一つのカードを重複できるようになります。&lt;/p&gt;&#xA;&lt;p&gt;これを使って今ではレッドを凸3にまで強化できています。&lt;/p&gt;&#xA;&lt;p&gt;ということで、このゲームは結構良心的なので、続けていればきっといいことあります。ガチャを当てられたり、強化できたりとか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;スタミナの可否&#34;&gt;スタミナの可否&lt;/h3&gt;&#xA;&lt;p&gt;スタミナ制度が導入され、否定的な意見が目立ちます。しかし、私はこの制度には肯定的なので、個人的な意見を述べます。&lt;/p&gt;&#xA;&lt;p&gt;まずスタミナがなぜ導入されたかというと、スキップできるようになったからでしょう。&lt;/p&gt;&#xA;&lt;p&gt;そして、スキップできるようになったのは、私のようなユーザーにとって非常にありがたいものでした。&lt;/p&gt;&#xA;&lt;p&gt;私はそれほど熱心にプレイしているユーザーとは言えず、過去には一気にレベル上げをしてそのまま放置、ログインしない状態が長く続きました。&lt;/p&gt;&#xA;&lt;p&gt;それを変えたのがスタミナ制度の導入です。&lt;/p&gt;&#xA;&lt;p&gt;スタミナが導入されてからは、毎日のようにログインするようになりました。&lt;/p&gt;&#xA;&lt;p&gt;それに、1日でレベルMAXにできるようなゲームはよくないんじゃない、ということです。仮にスタミナが廃止された場合、簡単にMAXにできてしまう。&lt;/p&gt;&#xA;&lt;p&gt;しかし、それはゲームとしてちょっとおかしい。毎日やってるうちに強くなっていくほうがいいんじゃないかな。&lt;/p&gt;&#xA;&lt;p&gt;ということで、スタミナには賛成ですし、良かったと思ってます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;チャンピオンバトル2回目&#34;&gt;チャンピオンバトル2回目&lt;/h3&gt;&#xA;&lt;p&gt;新しいチャンピオンバトルが来てたのでクリアしてみました。この仕組みはある程度運営が放っておいても回せそうなのでいいと思います。楽しいし。&lt;/p&gt;&#xA;&lt;p&gt;今回追加できたの3タイプくらいでした。あと7タイプ！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/104/822/867/343/024/860/small/037d79a05ca84319.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;6ex&#34;&gt;6EX&lt;/h3&gt;&#xA;&lt;p&gt;6EXの仕組みはすごくいいです。欲しくなりますが、そこまで課金圧が強いわけでもありません。そのことについて思ったことを書いてみます。&lt;/p&gt;&#xA;&lt;p&gt;今は収益はどうなのかわかりませんが、将来的にこれは増えていくんじゃないかと思っていて、仕組みが非常にいいんですよ。よく考えられている。&lt;/p&gt;&#xA;&lt;p&gt;6EXの仕組みとしては、衣装なんですよね。今までにない衣装ということで例えばお気に入りのトレーナーがいるとして、どんなのが来るのかワクワクしません？あと必殺技が強くなったりもしますが、やっぱり衣装だと思う。これもとに戻せるんですが、マルチでやるとやっぱりEXの人が多い。&lt;/p&gt;&#xA;&lt;p&gt;こういったちょっとだけ他の人に見せびらかせるというのもポイントで、プロフィールに載せられたりとかするんですよね。あとエンブレムも載るのでこれもすごくいい仕組みです。&lt;/p&gt;&#xA;&lt;p&gt;6EXにする大変さとかもちょうどいい感じで、あとゲーム攻略には少しだけしか関係しないというのも大きい。B技が強くなるというのはちょっとだけ関係しますが、でもオリジナルの衣装に課金を組み込むのは正解で、これはすごく欲しくなるなって思うのです。&lt;/p&gt;&#xA;&lt;p&gt;今後はEXとかタマゴの色違いを集める人が増えてきて、そういうのを狙う人が多くなるんじゃないかな。それはおまけみたいな要素ですけど、継続した収益化につながるんじゃないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;ただまあ個人的にはすごく嬉しいEXですが、収益化としてはちょっと弱い部分はあるかもとは思っていて、それについて解説します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、私なら6EXにした時点で1/20のガチャを組み込むと思います。6EXの素材を集めて6EXにします、そのとき抽選が行われ個体値が20段階でランダムで決まります。ここで個体値20(MAX)ならポケモンのステータスに+20、個体値が1なら+1されるというようにするかもしれません。仮にトレーナー個体値ぽい何かが実装されたとしてその場合の具体的な仕組みはポテンシャルを引用するでしょうね。書き換えますか？みたいな。&lt;/p&gt;&#xA;&lt;p&gt;これなら例えば私のようなレッドさえ6EXにしたらあとはいいか、と思っているような人も、何度かレッドを6EXにしてよい個体値をゲットしようとするかもしれませんよね。または一人6EXにしたら次のキャラにいこうっていう人もいるでしょう。ちなみに20段階の個体値は5段階でもいいし、10段階でもいいですが、少ないほうが良心的と言えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;今のポケマスは非常に良心的でいいゲームです。が、収益化にはちょっと弱いかも。その場合はトレーナー個体値ぽいものを実装するといいかも。今後、EXを増やしていくんでしょうけど、でも人気のキャラは限られているし、コンプ勢はそこまで多くない気もするので。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今の6EXの仕組みがイコールで悪い結果になるとは限りません。多くの人が納得するよい仕組みでとりあえず遊んでもらって興味を持ってもらう、それを損なわないような設計のほうがよい結果になるかもしれません。とりあえず、現状では6EXは欲しくなるし非常にいい仕組みだと思います。関係ありませんが、今の6EXはカードの裏に引いたときに出てくる風景が載せられてるのとかもカッコいい。&lt;/p&gt;&#xA;&lt;p&gt;あと、細かいかもしれませんが、6EXを使った場合、登場時に何らかのエフェクトがちょっと欲しいかもって思いました。色違いエフェクトっぽい何か。&lt;/p&gt;</description>
    </item>
    <item>
      <title>特製のアイコンを作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/09/08/icon/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/08/icon/</guid>
      <description>&lt;img src=&#34;https://syui.github.io/icon/syui-ai.png&#34; width=&#34;128&#34;&gt;&#xA;&lt;p&gt;何かの記念日等に使用したい変身アイコン。1日だけちょっとアイコンが変化したりするの。&lt;/p&gt;&#xA;&lt;p&gt;クリスマスとか正月とか、あとは作品キャラの誕生日とかに1日だけ設定しようかなって思ったりしてます。&lt;/p&gt;&#xA;&lt;p&gt;キャラ、プロフィールが決まってるのもあれば決まってないのもありますが、ちょびっとだけ紹介すると&lt;/p&gt;&#xA;&lt;p&gt;月見唯 : 身長 123cm, 誕生日 1/23&lt;/p&gt;&#xA;&lt;p&gt;ポンタ : 身長 166cm, 誕生日 6/6&lt;/p&gt;&#xA;&lt;p&gt;キョウスケ : 身長 171cm, 誕生日 7/1&lt;/p&gt;&#xA;&lt;p&gt;となってます。というか忘れそうなので、どっかに設定資料作りたい&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた39</title>
      <link>https://syui.github.io/blog/post/2020/09/07/illust/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/07/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、シーズン3</title>
      <link>https://syui.github.io/blog/post/2020/09/06/pogo/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/06/pogo/</guid>
      <description>&lt;p&gt;何かのはずみでランク9に到達しちゃいました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/104/807/914/795/599/478/small/a302a69cf2f180be.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これ運ゲーなので運が良かっただけなんですけどね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた38</title>
      <link>https://syui.github.io/blog/post/2020/09/05/illust/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/05/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_38.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた37</title>
      <link>https://syui.github.io/blog/post/2020/09/04/illust/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/04/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_37.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた36</title>
      <link>https://syui.github.io/blog/post/2020/09/03/illust/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/03/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最近の動向について語ってみる</title>
      <link>https://syui.github.io/blog/post/2020/09/02/pogo/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/09/02/pogo/</guid>
      <description>&lt;p&gt;ポケモンGoをプレイしてて思ったことや最新の話題など。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gblについて&#34;&gt;GBLについて&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/104/793/696/415/870/018/small/4a6106474ffa785b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今シーズンは、初期レート1900で始まりました。あまりやる気がなかったのですが、2400に到達後、2300に下がり、このあたりでやめようという結論になりました。色々と問題はありすぎますが、面白くないという一言に尽きます。&lt;/p&gt;&#xA;&lt;p&gt;少し前まで誰もランク10に到達できない状況でしたが、Nianticがこれはまずいと思ったのでしょう。レートの上がり下がりの値がなぜか変更され、その直後、ランク10の到達がちらほら出ました。現在は4-1や5-0で上下幅がアップしています。シーズン中に基準を変更するのありえない。&lt;/p&gt;&#xA;&lt;h3 id=&#34;pokemon-companyがnianticに与える影響&#34;&gt;Pokemon CompanyがNianticに与える影響&lt;/h3&gt;&#xA;&lt;p&gt;Pokemon CompanyがNianticに与える影響について話題になっていました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/TheSilphRoad/comments/ika0qa/whats_the_pokemon_company_relationship_with/&#34;&gt;https://www.reddit.com/r/TheSilphRoad/comments/ika0qa/whats_the_pokemon_company_relationship_with/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私の考えでは、Pokemon Company(以下、pokec)は、Niantic(以下、nian)にキャラクター等を使用する許可を与え、それをどのように使うかは、ある程度の裁量をもってnianが行うものだと考えています。&lt;/p&gt;&#xA;&lt;p&gt;根拠は色々ありますが、例えば、Pokemon Mastersというゲームがあります。どちらもpokecが関係していますが、仮にすべてをpokecがコントロールしているのなら、メガシンカにも両者に違いはでなかったはずではありませんか？&lt;/p&gt;&#xA;&lt;p&gt;しかし、メガ進化は両者で大きく異なります。&lt;/p&gt;&#xA;&lt;p&gt;また、nianの人がインタビューに応じていて、内容は下記になります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.vg247.com/2020/08/26/pokemon-go-mega-evolutions-mega-raids-mega-energy/&#34;&gt;https://www.vg247.com/2020/08/26/pokemon-go-mega-evolutions-mega-raids-mega-energy/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“We don’t think it’s a good experience if there’s like 10 different Raids that you want to do all at once – we’ve seen that in the past with Legendaries,” Matthew Slemon, senior product manager at Niantic, said.&lt;/p&gt;&#xA;&lt;p&gt;“So we figured the best way to do that was start with a smaller batch and continue rotating in different Mega Pokemon.”&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoのメガシンカの問題点</title>
      <link>https://syui.github.io/blog/post/2020/08/29/pogo/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/29/pogo/</guid>
      <description>&lt;p&gt;ポケモンGoのメガシンカの問題点を簡潔にまとめます。&lt;/p&gt;&#xA;&lt;p&gt;まず原作やアニメを知らない人のために原作やアニメでのメガシンカはどういったものだったのか説明します。&lt;/p&gt;&#xA;&lt;p&gt;メガシンカは、メガストーンというアイテムをポケモンに持たせると、バトル中にメガシンカできるようになります。これは何度でもできますし、コストはかかりません。バトル中のみということで、主に、バトルのための進化であると考えられます。アニメでは、色々な人が相棒のポケモンをメガシンカさせています。原作にある伝承によると「ポケモンとの絆が重要」と書かれています。&lt;/p&gt;&#xA;&lt;p&gt;まとめると、メガストーンという道具が必要、何度でも行える、バトルのための設定である、ポケモンとの絆が重要らしくアニメでは相棒ポケモンに限られている、あたりがポイントです。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoのメガシンカはどうなったかというと、メガエナジーというものを集める必要があり、レイド(1回120円)を何度も行うことで集められます。一度進化すると200個や50個のメガエナジーが消費され、時間経過でもとに戻ります。なお、元に戻ったらまたメガエナジーを集め、それを消費しなければメガシンカできません。さらに、メガエナジーはポケモンごとに存在するため、当該メガエナジーは当該レイドでしか得られません。&lt;/p&gt;&#xA;&lt;p&gt;すべての要素が当てはまってないじゃないか&amp;hellip;どうしてこうなった。&lt;/p&gt;&#xA;&lt;p&gt;これのどこが問題なのか簡潔に説明します。&lt;/p&gt;&#xA;&lt;p&gt;まず、ポケモンGoでは、メガシンカ1回ごとにとてつもないコストがかかってくるということです。&lt;/p&gt;&#xA;&lt;p&gt;そのため多くの人は、図鑑を埋めることくらいにしかメガシンカを使わないだろうと思います。本来、バトルのためのメガシンカですが、ポケモンGoでは、図鑑を埋めるために2,3回実行されるだけのものになるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;次に、メガシンカのコストについて説明します。単純計算ですが、最初に200、次から50のコストがかかるとしましょう。1レイドに付き30集められます。時間経過でもとに戻ることを考慮して、仮に1週間メガシンカを堪能したとしましょう。メガシンカできるポケモンは48種類です。メガ進化できるポケモンを1週間メガシンカ維持したとして&lt;code&gt;7+2x6x6x48=3463&lt;/code&gt;のレイドが必要になります。最初の7回のレイド、次からは一回につき2回のレイドで、それが6日。さらに4時間で元に戻るため24時間維持するとして、24/4=x6、メガ進化できるポケモンは合計で48種類なのでx48。つまり、1週間メガシンカを堪能する場合、ポケモンGoでは、3463のレイドをこなしメガエナジーを集める必要があります。レイド一回に付き120円なので、かなり大雑把ですが、多めに見積もると1週間で&lt;code&gt;3463x120=415560&lt;/code&gt;の費用がかかってくる計算です。約41万円ですね。計算違いかもしれませんが、Nianticのことなのであり得ると思います。ちなみに、1ヶ月なら166万円。&lt;/p&gt;&#xA;&lt;p&gt;つまり、メガシンカを常用しようとすると、ありえないほどのコストがかかってくるということです。これでは誰もメガシンカを使わないし、楽しめないと思うよ。&lt;/p&gt;&#xA;&lt;p&gt;メガエナジーはポケモンごとに存在するため、全部で48種類のレイドを何度もこなす必要が出てきます。しかし、一斉に全種類ということはないでしょう。期間に分けてレイドを開催するはずです。すると、その期間中にしかそのポケモンのメガエナジーを集められないため、そのポケモンしかメガシンカできないということになります。仮にエナジーを貯蓄している人がいたとしても、使ったらなくなるし、貴重だし、数時間で解除される進化のためにはもったいないので使えませんし、普通、使いません。&lt;/p&gt;&#xA;&lt;p&gt;とすると、最初に述べたように「図鑑を埋めることくらいにしかメガシンカは実行されず、最高でも2,3回実行されて終わりだろう」ということになります。&lt;/p&gt;&#xA;&lt;p&gt;原作と比較しても、普通に考えても、ポケモンGoのメガシンカは、ありえないほど不自由で面白くない設計になっています。これを修正するには、一度メガシンカしたポケモンは、ノーコストでメガシンカできるようにしてください。&lt;/p&gt;&#xA;&lt;p&gt;今のままでは、メガシンカは面白くありませんし、使われることもないでしょう。Nianticにとっては金儲けのためのメガシンカですが、正直、この設計ではまずいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;個人的な話&#34;&gt;個人的な話&lt;/h3&gt;&#xA;&lt;p&gt;個人的には、メガシンカは、図鑑を埋めるためにやって終わります。&lt;/p&gt;&#xA;&lt;p&gt;本来ならバトルに使えるはずだったはずのメガシンカですが、ポケモンGoではバトルで常用するなんてできませんね。メガエナジーは取っておく選択になるでしょう。今後レイドが入れ替わるタイミングで集めることすらできなくなります。ポケモンごとに違いますからね。&lt;/p&gt;&#xA;&lt;p&gt;さて、私は、一応、メガシンカさせるポケモンを相棒ポケモンに限定してやっていくつもりです。&lt;/p&gt;&#xA;&lt;p&gt;何故かと言うと、まだ相棒ポケモンの線は消えていないと考えるからです。&lt;/p&gt;&#xA;&lt;p&gt;現在のメガシンカの仕組みはおかしすぎるので、修正される可能性はあると思っていて、その場合、誰もが納得できる形でとなると、やはり原作やアニメにも沿った相棒ポケモンが絡んでくる可能性は高い。今後、最高の相棒はノーコストみたいになる可能性はあると思います。なので一応、最高の相棒をメガシンカするつもり。&lt;/p&gt;&#xA;&lt;p&gt;参考 : &lt;a href=&#34;https://pokemongo-get.com/pokego03342/&#34;&gt;https://pokemongo-get.com/pokego03342/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスが楽しかった</title>
      <link>https://syui.github.io/blog/post/2020/08/28/pokemas/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/28/pokemas/</guid>
      <description>&lt;p&gt;今回は、ポケマスがすげー楽しかった話。&lt;/p&gt;&#xA;&lt;p&gt;私はそれほど熱心にログインしてるユーザーではありませんが、レッドが出るぞとか、あるいは1周年だとか、そういったときにはログインしてプレイしてるユーザーです。&lt;/p&gt;&#xA;&lt;p&gt;今回は、1周年ということで、すごく楽しかった。運が良かったというのもありますが、ポケマス1周年のプレイ日記です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;レジェンドチームを1発1組で突破した&#34;&gt;レジェンドチームを1発1組で突破した&lt;/h3&gt;&#xA;&lt;p&gt;一番最初は、レジェンドチームのバトルがあったんで、何気なしにやってると、まさかの1発、1組、しかも誰も死なずに突破しました。&lt;/p&gt;&#xA;&lt;p&gt;これは気持ちよかった。毎回この1組で突破してる気もするんですが、1発で突破というのはなかった気がする。&lt;/p&gt;&#xA;&lt;p&gt;いつもと同じくリーフ+レッド+オーキドの構成です。スピードスターで回避上げて、リーフのB技で能力アップやってました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200828_IMG_2870.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;チャンピオンバトル&#34;&gt;チャンピオンバトル&lt;/h3&gt;&#xA;&lt;p&gt;チャンピオンバトルは、説明とか読んでなかったので、初っ端からリーフ+レッド+オーキドをカンナにぶつけてしまって、すごく苦戦しました。一度使ったやつは使えないらしい。&lt;/p&gt;&#xA;&lt;p&gt;私は、これ以外のバディーズ、あまり使ってないし、育ててなかったので、正直、きつかった。今回、急遽育てたのもいくつかありました。シバが一番手こずったかな。&lt;/p&gt;&#xA;&lt;p&gt;それにしても、「殿堂入りおめでとう」ってのがなんか嬉しいもんだね。楽しかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200828_IMG_2869.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;リーフとグリーン海外ではブルーが当たった&#34;&gt;リーフとグリーン(海外ではブルー)が当たった&lt;/h3&gt;&#xA;&lt;p&gt;ダイヤは3万貯まってたので全部使っちゃったけど、狙いのリーフとグリーンが結構早めに出てくれたので嬉しかった。&lt;/p&gt;&#xA;&lt;p&gt;というか1万ほどで出たんだけど、ボード開放するため重複したかったので残りの2万も使ったけど、重複は来なかった。&lt;/p&gt;&#xA;&lt;p&gt;いやいや、1枚出ただけでも十分です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;レッドがexバージョンになった&#34;&gt;レッドがEXバージョンになった&lt;/h3&gt;&#xA;&lt;p&gt;レッドがEXバージョンに強化できました。今まで素材は全部レッドにつぎ込んでたのがよかったらしい。&lt;/p&gt;&#xA;&lt;p&gt;というわけで、今日はポケマスをプレイしてましたが、めちゃくちゃ楽しかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas_20200828_IMG_2871.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた35</title>
      <link>https://syui.github.io/blog/post/2020/08/27/illust/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/27/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_35.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;お絵きをはじめて35枚目のイラストとなりました。描き直したやつとかも入れるともっとですが、ナンバリングでは35枚目らしい。かなりの数になったなあと少し感慨深いです。&lt;/p&gt;&#xA;&lt;p&gt;全部の絵は、自由に好き勝手に描いてきました。&lt;/p&gt;&#xA;&lt;p&gt;これからもそんな感じになると思いますが、よろしくお願いします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた34</title>
      <link>https://syui.github.io/blog/post/2020/08/26/illust/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/26/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_34.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた33</title>
      <link>https://syui.github.io/blog/post/2020/08/25/illust/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/25/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_33.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた32</title>
      <link>https://syui.github.io/blog/post/2020/08/24/illust/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/24/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_32.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト30を描き直した</title>
      <link>https://syui.github.io/blog/post/2020/08/22/illust/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/22/illust/</guid>
      <description>&lt;p&gt;パッと見たとき、うーんと思ってたやつで、最近、一枚絵を描いてなかったので描き直してみた。新しいの描けよって話なんだけど、ほぼ全部書き直しなので、新しい一枚絵のようなもんだと思う。次からは新しい数字で更新できそう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた31</title>
      <link>https://syui.github.io/blog/post/2020/08/22/illust2/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/22/illust2/</guid>
      <description>&lt;p&gt;新しいイラストを描いてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_31.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>やっと3話まで完成した</title>
      <link>https://syui.github.io/blog/post/2020/08/22/manga/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/22/manga/</guid>
      <description>&lt;p&gt;以前描いた漫画をrewriteしててやっと既存の3話まで完成しました。&lt;/p&gt;&#xA;&lt;p&gt;読み直してみて、完璧に納得してるわけではないですけど、前よりはいいものに仕上がったのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;これからはもう少し丁寧に描こうと思ったのでした。以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマス、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2020/08/19/pokemon/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/19/pokemon/</guid>
      <description>&lt;p&gt;ポケマスをちょっとだけやってて、今度、1周年みたいで、レッドを強化できるみたいな話があって、楽しみです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemonmasters-game.com/ja-JP&#34;&gt;https://pokemonmasters-game.com/ja-JP&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;現在、エンブレム(星4)は全部持ってて、今回はパルキアのやつが来て、悪い気はしませんよね。&lt;/p&gt;&#xA;&lt;p&gt;このゲーム、ネット見てると批判が多いんですけど、なんか批判するところあった？と個人的には思ってます。昔と比べても今の方が遥かに面白くなってると思いますよ。&lt;/p&gt;&#xA;&lt;p&gt;スタミナという要素が実装されましたが、こういうスマホゲームは、一気にクリアされないよう工夫が必要だと思うので、いいんじゃないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;さて、個人的には、レッド目当てでこのゲームを始めたんで、もし強化できるのなら狙っていきたい。&lt;/p&gt;&#xA;&lt;p&gt;現在は、リーフ、レッド、オーキドの構成を好んで使ってます。いや、現在というか前からか。&lt;/p&gt;&#xA;&lt;p&gt;大体がミュウのスピードスター連発で回避上げて、イーブイでB技やって能力アップ、リザードンで攻撃というパターンかな。なんやかんやでミュウ強いのでどの構成にも活かせるという感想。&lt;/p&gt;&#xA;&lt;p&gt;最近、リーフのイーブイでポテンシャルの急所無効を引けたのでうれしかった。&lt;/p&gt;&#xA;&lt;p&gt;改善案なにかあるかというと、正直特にありません。&lt;/p&gt;&#xA;&lt;p&gt;あえて挙げるなら、マジコスやらを一つのトレーナーに統合して欲しさはちょっとある。具体的には、衣装、ポケモンの切り替え、ボードの共有とかかな。別々だとなんかこうコンプ欲がそそられないというか、やっぱり好きなトレーナーがいた場合、それを別々に所持し別々に使うというより、一つをカスタマイズしたり切り替えたりして使いたいかなって。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2020/08/18/pokemon/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/18/pokemon/</guid>
      <description>&lt;p&gt;ポケモンGoの最近の進捗とゲームの感想を書きます。&lt;/p&gt;&#xA;&lt;p&gt;まず、ポケモンGoは非常に良心的なゲームだと思っています。他のスマホゲームのことはあまり知りませんが、これは客観的な事実です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、みんなが欲しがる色違いについて考えてみましょう。色違いがゲットできないからと言ってゲーム上で不利に扱われることはありませんよね。色違いは単なるおまけというか、ピカピカ光ってカッコいいという要素でしかありません。ですから、色違いを求めて課金するにしてもそれはあくまで個人的な好みというか、自由意志によるところが大きい。&lt;/p&gt;&#xA;&lt;p&gt;したがって、このゲームは非常に良心的なゲームと言えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;また、図鑑が素晴らしく、全部完璧にコンプしましょうみたいな仕様ではなく、色違いを一つ取れば他の種類も埋まったりするのでいいですね。つまらないコンプ作業を延々とやらせるようなゲームではないということですが、これが非常によい。完璧を目指す人はそれでも集めたりしますが、それはやはり趣味枠にすべきでしょう。(ただアンノーンはどうかと思う)&lt;/p&gt;&#xA;&lt;p&gt;以上を踏まえて最近の個人的な進捗を書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;イベント&#34;&gt;イベント&lt;/h3&gt;&#xA;&lt;p&gt;まず、チケットを購入したイベントに関して、私は、2000匹くらい捕まえ色違いはハリーセンx1, コロモリx2の合計3匹だったと思います。その後の補償イベントも参加しましたが、このときは色違いゼロでした。&lt;/p&gt;&#xA;&lt;p&gt;例えば、こちらにイベント時の進捗が紹介されています。こういうのと比較するに、確率的にも、運がとてつもなく悪かったっぽい。まあ、そういうこともある。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://rocketnews24.com/2020/07/27/1396542/&#34;&gt;https://rocketnews24.com/2020/07/27/1396542/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ですが、最初に述べたようにこのゲームは客観的に見て非常に良心的な設計になっています。よって、色違いがでなかったからと言って文句を言える筋合いではありませんね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;デオキシス&#34;&gt;デオキシス&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20200818_IMG_0040.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;その後のデオキシスですが、そのうち出るやろとか思って楽観視してたら、最終日に「あれ今日まさか最終日じゃない」って気づいて、慌ててリモートレイドやりまくって、課金して60回くらいやったけど出なくて、レイドが終了してしまいました。ちなみに、確率は1/20。まあ、こういうこともある。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、これは完全にミスったなと思っていて、ずっとこのゲームを続けてきて現在の色違いコンプは96%くらいになってるんです(多めに見積もっている)。伝説で持ってないのはレジスチルだけ。&lt;/p&gt;&#xA;&lt;p&gt;ですから、今回のデオキシスも頑張って取ろうと思っていて&amp;hellip;でも、私のプレイスタイルって当初は、取れたら嬉しいくらいに思ってたはずで、取れなかったら取れなかったで別にいいやって思ってたはずなのに、いつの間にか色違いが揃ってきて、執着してしまったのがよくなかった。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今後は当初のスタイルに戻ってのんびりやってこうと思い直したのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゲノセクト&#34;&gt;ゲノセクト&lt;/h3&gt;&#xA;&lt;p&gt;デオキシスが全く出る気配なくて、これ突っ込んでもダメなんじゃという予感がしてたけど、突っ込んでしまい大失敗した反面、ゲノセクトはすごい出た。&lt;/p&gt;&#xA;&lt;p&gt;1/4くらいの確率で出たので、さっさと上がれて嬉しかったし、精神衛生上も良かった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20200818_IMG_0039.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;サザンドラとか&#34;&gt;サザンドラとか&lt;/h3&gt;&#xA;&lt;p&gt;運良くサザンドラ、スターミー、ギガイアスも埋められました。うれしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_20200818_IMG_0044.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画を2話まで仕上げてみた</title>
      <link>https://syui.github.io/blog/post/2020/08/14/manga/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/14/manga/</guid>
      <description>&lt;p&gt;漫画を2話まで書き直してみました。2話は戦いの話です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;全部で44ページになりました。ページ数は少し増えた気がする。ブログを見ると8/5から書き直しを開始、8/14で44ページほぼ全部を書き直したので、少し多めに見積もって9日間で約40ページあげた計算になります。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、元になる下書き？あってのことですが、気に入らなくて下書き全削除した箇所も結構多かった。&lt;/p&gt;&#xA;&lt;p&gt;感想としては、楽しかったのと、きつかったの半々くらいかな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画のrewriteを継続中</title>
      <link>https://syui.github.io/blog/post/2020/08/09/manga/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/09/manga/</guid>
      <description>&lt;p&gt;最近、漫画をrewriteしていたのですが、やっと1話をそこそこ納得できる形に書き直すことができました。作業は主に絵に関してなので、お話は同じです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;改めて以前描いた2話(戦いの話)、3話(伝説の剣の話)を見てみると、これはあまりにも納得できない、書き直さなきゃと思ったので、一旦、非公開にしてrewriteし、終了した段階で改めて公開という形になりそうです。&lt;/p&gt;&#xA;&lt;p&gt;以下、rewriteで思ったことなど書きます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;きっかけ&#34;&gt;きっかけ&lt;/h3&gt;&#xA;&lt;p&gt;私がrewriteをはじめたきっかけは、なんとなく「上手くできそうな気がするのでやろうかな」とか、「仕上げの練習になりそう」と思ったのでやってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;仕上げをどうしていくかあまり決まってなかったし、よくわかってなかった。もちろん、今でもよくわかってませんが。&lt;/p&gt;&#xA;&lt;p&gt;また、漫画の絵柄についても固定できず曖昧なところがありました。&lt;/p&gt;&#xA;&lt;p&gt;よって、今回のrewriteで絵柄やその方向性をある程度決め、仕上げについても練習するつもりでした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;rewriteをやるべきかまたはタイミングの問題&#34;&gt;rewriteをやるべきか、またはタイミングの問題&lt;/h3&gt;&#xA;&lt;p&gt;私の場合は、rewriteをやってよかったです。また、タイミング的にも最適だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;rewriteをやるべきかは人によって考えが異なると思います。なので、私の考えを紹介します。&lt;/p&gt;&#xA;&lt;p&gt;この問題は、最初から完璧なものを仕上げるべきか否かの問題でもあります。&lt;/p&gt;&#xA;&lt;p&gt;私は、今回、rewrite作業で大変な目にあっています。しかし、最初から完璧なものを目指すべきではないので、これでよかったと思っています。&lt;/p&gt;&#xA;&lt;p&gt;初めて漫画を描いて公開したとき、それはそれは雑なものでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、最初から完璧な仕上げでやろうと思っていたら、多分、続いていません。完成すらしなかったと思います。&lt;/p&gt;&#xA;&lt;p&gt;ということで、最初は、雑でもいいからとりあえず完成させてみることが大切だと思います。&lt;/p&gt;&#xA;&lt;p&gt;私は48ページ(全3話と仮定)を描いた時点でrewriteやってみるかという気分になり、やりはじめましたが、これくらいがちょうどよかったのでは、と感じています。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、早すぎても遅すぎても、うまくできなかった気がする。早すぎるとそこまで上手くできないし、遅すぎるとページ数が大変です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;絵柄の方向性&#34;&gt;絵柄の方向性&lt;/h3&gt;&#xA;&lt;p&gt;簡単で上手く見せる表現を模索しています。&lt;/p&gt;&#xA;&lt;p&gt;私は、とにかく楽がしたい。面倒な作業も大変な作業もやりたくないのです。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回は、その方向性も同時に模索しました。&lt;/p&gt;&#xA;&lt;p&gt;大体、こんな感じでやればいいんじゃないって組み合わせができてきたような気がします。&lt;/p&gt;&#xA;&lt;p&gt;これも一つ良かった点かな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後のrewriteについて&#34;&gt;今後のrewriteについて&lt;/h3&gt;&#xA;&lt;p&gt;今後は、もう書き直すのやりたくないので、1話1話丁寧に(最低限は納得できるように)仕上げていこうって思いました。&lt;/p&gt;&#xA;&lt;p&gt;雑にやると後々大変なことになりますので&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、雑に描いてしまった3話までは書き直す予定。&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画をrewriteしてみる</title>
      <link>https://syui.github.io/blog/post/2020/08/05/manga/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/05/manga/</guid>
      <description>&lt;p&gt;以前、漫画を描いてみたんだけど、どうにも下書きっぽくて、でもめんどくさいから放置してて、でも仕上げを上達したいなってちょっと思ったので、以前描いたページで納得いかないやつ、rewriteしてみようかなと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/manga/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫画とゲームの続きを作った</title>
      <link>https://syui.github.io/blog/post/2020/08/04/manga/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/04/manga/</guid>
      <description>&lt;p&gt;最近、漫画を少し描いてたのとゲームの物語は週更新なので続きを書いたりしてました。&lt;/p&gt;&#xA;&lt;p&gt;漫画は40ページからなんですが、ちょっとわかりにくいなあ。でも、面倒なので放置。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;追記 : 現在、1話を除いて公開を停止しています。&lt;a href=&#34;https://syui.ai/blog/post/2020/08/05/manga/&#34;&gt;書き直し&lt;/a&gt;が終われば改めて公開される予定です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoで8月にやることをまとめてみる</title>
      <link>https://syui.github.io/blog/post/2020/08/02/pokemon/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/08/02/pokemon/</guid>
      <description>&lt;p&gt;イベントが複雑化してるので整理してみた。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2020年8月8日土のコミュデイではボックスを購入する&#34;&gt;2020年8月8日(土)のコミュデイではボックスを購入する&lt;/h3&gt;&#xA;&lt;p&gt;コミュニティデイでコイキングが出てくるらしい。とりあえず色違いを進化させて終わる予定。&lt;/p&gt;&#xA;&lt;p&gt;ショップに特製ボックスが出てくるので&lt;code&gt;すごいわざマシンスペシャル&lt;/code&gt;が入ってるやつを購入して、シャドウ・ミュウツーにサイコブレイクを覚えさせる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03313/&#34;&gt;https://pokemongo-get.com/pokego03313/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2020年8月8日土デオキシス&#34;&gt;2020年8月8日(土)～デオキシス&lt;/h3&gt;&#xA;&lt;p&gt;色違いのデオキシスをゲットすること。あと、色違いのヒトデマン。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03304/&#34;&gt;https://pokemongo-get.com/pokego03304/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2020年8月15日土ゲノセクト&#34;&gt;2020年8月15日(土)～ゲノセクト&lt;/h3&gt;&#xA;&lt;p&gt;色違いのゲノセクトをゲットすること。ゲノセクトはまだ捕まえてなかったりするので一石二鳥。&lt;/p&gt;&#xA;&lt;p&gt;あと、色違いのダンゴロ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2020年8月16日日のgo-fest-2020補填&#34;&gt;2020年8月16日(日)のGO Fest 2020補填&lt;/h3&gt;&#xA;&lt;p&gt;前回のフェスでは、色違いがほとんど取れなかったので、アンノーン、クイタラン、チョンチー、ソーナンスの色違いを狙います。&lt;/p&gt;&#xA;&lt;p&gt;アイアントは出てこないのかな、これもまだゲットしてないのです。&lt;/p&gt;&#xA;&lt;p&gt;リモートレイドパスをもらえるので、余ってるやつをゲノセクトに使っておくこと。(3枚しか持てないらしい)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03316/&#34;&gt;https://pokemongo-get.com/pokego03316/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>シャドウ・ミュウツーの育成方針</title>
      <link>https://syui.github.io/blog/post/2020/07/27/pokemon/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/27/pokemon/</guid>
      <description>&lt;p&gt;&lt;code&gt;#pokemongofest2020&lt;/code&gt;のシャドウ・ミュウツーは普通のシャドウと少し違います。&lt;/p&gt;&#xA;&lt;p&gt;この違いは限定的なものになるのか不明。したがって、大切にとっておくことをおすすめします。リトレーンは絶対におすすめしません。リトレーンした人の画像を確認しましたが従来の効果と同じもののように感じました。&lt;/p&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0009.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0013.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;シャドウ・ミュウツーは数カ月後に再登場すると思う&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;しかし、再登場したシャドウ・ミュウツーは従来のシャドウ表現を持つ可能性がある(つまり、バチバチはなくなっている可能性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;このように考える理由はいくつかあります。&lt;/p&gt;&#xA;&lt;p&gt;一つは、スクリーンショットでわかりますが、今回の表現効果はかなり特殊なもののように感じます。&lt;/p&gt;&#xA;&lt;p&gt;ミュウツーだけが他の伝説でも持たない特殊な表現効果を持つというのは、通常プレイでは想定しづらい。&lt;/p&gt;&#xA;&lt;p&gt;例えば、対戦するにしてもシャドウ・ミュウツーだけこのような特殊効果を見せるのでしょうか？&lt;/p&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0012.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0001.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;p&gt;私は違うと思います。通常プレイにおいてミュウツーも他のポケモンと同じようにシャドウならシャドウ効果を見せるようにするはずです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、&lt;code&gt;#pokemongofest2020&lt;/code&gt;で捕まえたミュウツーは少し特別なものになるかもしれないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;私は、現時点ではミュウツーだけが持つこの特殊な表現効果をとても気にいってます。と同時に、これが一般的なものになるとはちょっと考えづらいとも思っています。&lt;/p&gt;&#xA;&lt;p&gt;仮に、これがチケット限定のものだった場合、チケットを購入して本当によかった。&lt;/p&gt;&#xA;&lt;p&gt;シャドウ・ミュウツーの育成方針ですが、私は、やっぱカッコいいの使いたいので個体値は低いですけどMAXまで育成し、サイコブレイク覚えさせ、技開放するつもりです。&lt;/p&gt;&#xA;&lt;p&gt;また、最高の相棒にもするつもりで、バチバチしたメガミュウツーYを見てみたい！&lt;/p&gt;&#xA;&lt;p&gt;とはいえ予想は外れるかもしれないので、注意。&lt;/p&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0010.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0014.png&#34; width=&#34;200&#34;&gt;</description>
    </item>
    <item>
      <title>pokemongo fest 2020に参加した感想</title>
      <link>https://syui.github.io/blog/post/2020/07/26/pokemon/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/26/pokemon/</guid>
      <description>&lt;p&gt;今回は、チケット(JPY 2000くらい)を購入して参加しました。これがはじめてのフェスです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;#pokemongofest2020&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;コロナの影響もあってリモートで開催されました。&lt;/p&gt;&#xA;&lt;p&gt;イベントは色々と工夫されててよかったと思います。&lt;/p&gt;&#xA;&lt;p&gt;以下、フェスの内容をざっと紹介していきます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;演出が良かった&#34;&gt;演出が良かった&lt;/h3&gt;&#xA;&lt;p&gt;ロケット団の気球から&lt;code&gt;かみふぶき&lt;/code&gt;が落とされ、相棒ポケモンがお土産の&lt;code&gt;かみふぶき&lt;/code&gt;を拾ってくれたりします。これ地味に嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;また、夜になると花火が上がります。いいね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/104/580/784/408/454/828/small/b1dadf1731554366.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;色違い&#34;&gt;色違い&lt;/h3&gt;&#xA;&lt;p&gt;私を含むほとんどのプレイヤーは色違い狙いです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、色違いが来れば満足だし、来なければ不満でしょう。したがって、こういったフェスでは「プレイヤーが求めているもの」を提供すると喜ばれると思います。&lt;/p&gt;&#xA;&lt;p&gt;今回は、&lt;/p&gt;&#xA;&lt;p&gt;アンノーン、ザングース、ハブネーク、クイタラン、アイアント、フカマルの色違い狙いの人が多かったのではと思います。&lt;/p&gt;&#xA;&lt;p&gt;その他、モンジャラ、ハリーセン、コロモリが新実装です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ビクティニ&#34;&gt;ビクティニ&lt;/h3&gt;&#xA;&lt;p&gt;ビクティニは&amp;hellip;嬉しいのは嬉しいんだけど、でも&amp;hellip;いらん！&lt;/p&gt;&#xA;&lt;p&gt;という感想。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ロトム&#34;&gt;ロトム&lt;/h3&gt;&#xA;&lt;p&gt;ロトムも&amp;hellip;嬉しいのは嬉しいんだけど、でも&amp;hellip;いらん！&lt;/p&gt;&#xA;&lt;p&gt;という感想。&lt;/p&gt;&#xA;&lt;h3 id=&#34;シャドウミュウツー&#34;&gt;シャドウ・ミュウツー&lt;/h3&gt;&#xA;&lt;p&gt;今回はチケットありだと&lt;code&gt;シャドウ・ミュウツー&lt;/code&gt;が手に入ります。&lt;/p&gt;&#xA;&lt;p&gt;サンダー、フリーザー、ファイヤーもついてきますが、正直、シャドウをもらっても基本嬉しくなくて「シャドウ？いらねー」と思ってました。&lt;/p&gt;&#xA;&lt;p&gt;ですが、シャドウ・ミュウツーが現れた瞬間&amp;hellip;カッコええじゃねえか！！&lt;/p&gt;&#xA;&lt;p&gt;そうなんです。ミュウツーだけ演出効果がちょっと違うんですよ。&lt;/p&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0010.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_fest_2020_mewtwo_IMG_0014.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;p&gt;このバチバチあるから最高ーーー！って評価ですが、もし、これがなかったら&amp;hellip;どうなってたかわからん(あくまで個人感想&lt;/p&gt;&#xA;&lt;p&gt;バチバチは正義。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;やつあたり&lt;/code&gt;を変更できるというのも大きかったと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>付属イヤホンが故障している気がする</title>
      <link>https://syui.github.io/blog/post/2020/07/25/iphone/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/25/iphone/</guid>
      <description>&lt;p&gt;iphoneに付属しているイヤホンなんですが、右側が聞こえなくなったりする症状が頻繁に発生しています。&lt;/p&gt;&#xA;&lt;p&gt;よくわからない症状で、抜き差しすると直ったり、サウンド設定で右寄りにしたあと音を鳴らすと直ったりする場合があります。&lt;/p&gt;&#xA;&lt;p&gt;macで接続してもipadで接続しても発生する症状なので、おそらくイヤホンに不具合があるのだと思われます。また、可能性は低いですが、ソフトウェア、OS関連のバグの可能性もあるかも。&lt;/p&gt;&#xA;&lt;p&gt;新古品で購入したもので、包装が新品だったので、おそらく使われたことがないのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;前に新品で購入したiphoneのイヤホンにも同様の症状が発生したことがあり、たまたま自分がハズレを引いているだけなのか、かなりの確率で不良品が混じっているものなのかはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;ふとした瞬間に直ってくるといいんですけどねえ。&lt;/p&gt;&#xA;&lt;p&gt;追記 : なんか調子良くなった(また悪くなりそうな気もする&lt;/p&gt;</description>
    </item>
    <item>
      <title>どうすれば絵がうまくなるのか</title>
      <link>https://syui.github.io/blog/post/2020/07/24/illust/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/24/illust/</guid>
      <description>&lt;p&gt;最近、たくさんのイラスト描いてたので、その時に思ったことでも書きます。&lt;/p&gt;&#xA;&lt;p&gt;テーマは、どうすれば絵が上達するかです。今回はこれについて考えていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;なお、私が描く絵は全然上手くないんですが、それを前提に話をします。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、上手くはないけれど、私は、自分の絵柄を気に入ってます。そこがポイントかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;模写について&#34;&gt;模写について&lt;/h3&gt;&#xA;&lt;p&gt;私は昔、模写をしていた時期がありました。絵が上達すると思ってやってみたわけですが、模写はおすすめしません。&lt;/p&gt;&#xA;&lt;p&gt;模写をしてた期間は短かったのですが、私の場合、模写では絵がうまくなりませんでした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;自分の絵を好きになること&#34;&gt;自分の絵を好きになること&lt;/h3&gt;&#xA;&lt;p&gt;じゃあ何をすればいいのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;私は、自分が好きなものを好き勝手に描くことが一番おすすめだと思います。同時に自分の絵を好きになることです。&lt;/p&gt;&#xA;&lt;p&gt;では、どうすれば自分の絵を好きになれるのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは、自分が納得できる絵を描くことだと思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、あとで見返すと正直あれだったりすることが多いんですが、その時その時の自分が納得できる絵を描いていけばいいのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;でも自分が納得できる絵って難しいですよね。&lt;/p&gt;&#xA;&lt;p&gt;何度も修正して自分が納得できるまで描かなければならないわけですから、大変です。&lt;/p&gt;&#xA;&lt;p&gt;ただそうやって自分が納得できる絵を書いて、それを続けていけば、自然に上達するものだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;まとめると、「自分が納得できるまで描き、それを続けること」が上達のコツだと思います。&lt;/p&gt;&#xA;&lt;p&gt;色々な上達法がありますが、これが一番の近道だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;楽しく描くこと&#34;&gt;楽しく描くこと&lt;/h3&gt;&#xA;&lt;p&gt;ただ、絵を描くことが楽しくないと続けるのは難しいと思います。&lt;/p&gt;&#xA;&lt;p&gt;そこで、自分の好きなものを好き勝手に描くことをおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;また、好きに書くというのは、自分で考えるということでもあります。この絵はどうしようと自然に考えることができます。模写ではそういったことが難しい。&lt;/p&gt;&#xA;&lt;p&gt;好き勝手に絵を描くのは楽しいです。あるいは、楽しめる可能性が非常に高い。&lt;/p&gt;&#xA;&lt;p&gt;楽しいと続けられますよね。&lt;/p&gt;&#xA;&lt;p&gt;もし楽しくないなら、それは自分の絵柄ではないか、もしくは不必要に目標を高くしている可能性があると思います。&lt;/p&gt;&#xA;&lt;p&gt;誰かになろうとする必要はありませんし、あなたが尊敬する絵師のような絵を書く必要もありません。あなたは、あなたの絵を自分が納得するまで描けばいい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;自分の絵を描くこと&#34;&gt;自分の絵を描くこと&lt;/h3&gt;&#xA;&lt;p&gt;では、自分の絵ってなんでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは、自分が最も描きやすい絵柄のことを指します。人によってどのような絵柄が描きやすいかは異なります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、それを見つけて伸ばしてやればいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;と偉そうなことを書きましたが、私が上達してないんですけど、どうしましょう。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、使えそうな表現手法を見かけたらそれを取り込んで、次の絵を描きましょうか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを修正してみた2</title>
      <link>https://syui.github.io/blog/post/2020/07/23/illust/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/23/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_10.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_11.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_14.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_16.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_22.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;今回の修正にあたって&#34;&gt;今回の修正にあたって&lt;/h3&gt;&#xA;&lt;p&gt;過去のイラストを載せてるページがあるんですけど、それを見たとき「これはなあ&amp;hellip;」という絵が何枚かありました。&lt;/p&gt;&#xA;&lt;p&gt;ゲームで使う背景とかを修正したとき、やっぱり自分で納得できる絵を載せたいと思い、今回の大修正が始まりました。&lt;/p&gt;&#xA;&lt;p&gt;目指したのは「これならいいか」とトップに載せられる程度にすること。&lt;/p&gt;&#xA;&lt;p&gt;いくつかの絵は原型を留めないほど修正してしまったのもあります。これは、nexus7で描いたやつが多いかな。&lt;/p&gt;&#xA;&lt;p&gt;とりあえずイラストのページはこれでいいかという感じになったので、修正はこのへんで落ち着きそうです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>iphone seを修理した</title>
      <link>https://syui.github.io/blog/post/2020/07/22/iphone/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/22/iphone/</guid>
      <description>&lt;p&gt;iphone seのバッテリーがおかしいので、何度か新しいバッテリーに付け替えてみたのだけど充電してるのに増えない現象が直らなかった。原因はバッテリーでもコードでもなく、本体やソフトウェアかなと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;増えたり、増えなかったり、充電してても減ったり、と状態がすごく不安定。&lt;/p&gt;&#xA;&lt;p&gt;そして、何度も分解してると、両面テープが剥がれてきて、それが原因でディスプレイの細いコードが切れてしまって、ディスプレイが映らなくなってしまった。&lt;/p&gt;&#xA;&lt;p&gt;使っていないiphone 5sのディスプレイに付け替えてみたら、互換性があったようで、seのディスプレイが直った。&lt;/p&gt;&#xA;&lt;p&gt;seと5sは互換性のある部品を使い回せるのはいいね。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、バッテリーは直ってないので、新しいスマホを注文することにした。&lt;/p&gt;&#xA;&lt;p&gt;結果として、5sは使えない状態になり、seは使えるけどバッテリー問題ありの状態になってる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jp.ifixit.com/Teardown/iPhone+5s+Teardown/17383#s52361&#34;&gt;https://jp.ifixit.com/Teardown/iPhone+5s+Teardown/17383#s52361&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを修正してみた</title>
      <link>https://syui.github.io/blog/post/2020/07/21/illust/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/21/illust/</guid>
      <description>&lt;p&gt;過去のイラストを整理したついでに、納得いかないイラストを書き直したりしてた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_07.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_08.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_14.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_17.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_18.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_24.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_25.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/img/yui_27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgall&#34;&gt;/imgall&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた29</title>
      <link>https://syui.github.io/blog/post/2020/07/19/illust/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/19/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/img/&#34;&gt;/img&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>アイコンを追加してみた</title>
      <link>https://syui.github.io/blog/post/2020/07/18/icon/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/18/icon/</guid>
      <description>&lt;p&gt;またアイコンとか追加してた。&lt;/p&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/design.png&#34; width=&#34;144&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/icon/&#34;&gt;/icon&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた28</title>
      <link>https://syui.github.io/blog/post/2020/07/17/illust/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/17/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/img/&#34;&gt;/img&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた27</title>
      <link>https://syui.github.io/blog/post/2020/07/16/illust/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/16/illust/</guid>
      <description>&lt;p&gt;久しぶりに書いてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/img/&#34;&gt;/img&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>あなたはビオフェルミンSを知っているか？</title>
      <link>https://syui.github.io/blog/post/2020/07/13/amazon/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/13/amazon/</guid>
      <description>&lt;p&gt;最近、TLで胃の調子が悪いみたいな話が結構流れてきたので、&lt;code&gt;ビオフェルミン&lt;/code&gt;を紹介してみる。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、本物の万能薬では全く無いのだけど、薬嫌いで薬は絶対飲まないような人間が、&lt;code&gt;ビオフェルミン&lt;/code&gt;だけは飲むので、それなりに信頼してくれてもいいと思う。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、効果は人それぞれだし、合う合わないはあると思う。&lt;/p&gt;&#xA;&lt;p&gt;それを前提に話をすると、&lt;code&gt;ビオフェルミン&lt;/code&gt;は、副作用の危険があまりない。単なる乳酸菌の類(たぶん)だと思うので飲みやすいと思う。&lt;/p&gt;&#xA;&lt;p&gt;私はこの&lt;code&gt;ビオフェルミン&lt;/code&gt;を知ってから二ヶ月ほど特に理由なく飲み続けたことがあった。その頃に胃腸関連で全般的に体調が改善されたように感じたことがあったりする。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これは気のせいかもしれない。けど、人によっては、&lt;code&gt;ビオフェルミン&lt;/code&gt;を知っているか知らないかは大きいかもしれないと思ったので、一応、紹介してみることにした。&lt;/p&gt;&#xA;&lt;p&gt;なお、プラスか通常版か、どちらがいいのかは知らない。&lt;/p&gt;&#xA;&lt;h3&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://www.amazon.co.jp/gp/product/B07YQ91Z3F/ref=as_li_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=B07YQ91Z3F&amp;linkCode=as2&amp;tag=123456705-22&amp;linkId=6514a0325382570947041e3c183f098f&#34; style=&#34;color:#fd7e14&#34;&gt;新ビオフェルミンS+&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;a target=&#34;_blank&#34;  href=&#34;https://www.amazon.co.jp/gp/product/B07YQ91Z3F/ref=as_li_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=B07YQ91Z3F&amp;linkCode=as2&amp;tag=123456705-22&amp;linkId=4fe2ecb8694a04141f06cd80dc39a543&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;MarketPlace=JP&amp;ASIN=B07YQ91Z3F&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;tag=123456705-22&#34; style=&#34;float:left;margin-right:20px;margin-bottom:0px;&#34;&gt;&lt;/a&gt;&#xA;&lt;p&gt;薬嫌いだけど、唯一、ビオフェルミンだけは飲むという。&lt;/p&gt;&#xA;&lt;p&gt;最初の二ヶ月ほど特に理由なく飲み続け、体調が改善されたように感じている。&lt;/p&gt;&#xA;&lt;p style=&#34;clear:both;&#34;&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;ついでにアイテムのページを作ってみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/item/&#34;&gt;/item&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスのコバルオンをクリアしてみた</title>
      <link>https://syui.github.io/blog/post/2020/07/10/pokemas/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/10/pokemas/</guid>
      <description>&lt;p&gt;久しぶりにポケマスにログインしてみると、レジェントバトルにコバルオンが追加されていたのでクリアしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/104/484/382/704/493/190/small/2aafed79127e056e.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は、ウツボットの人とレッド、リーフで構成、ラストのHP50%まで削りました。&lt;/p&gt;&#xA;&lt;p&gt;なお、コバルオンは大ダメージが通るときと通らないときがあって、通らないときは全然ダメージが入りません。したがって、「ここは大ダメージが通るな」と思ったとき一気に連続攻撃(ねっぷう)することが重要だと思います。&lt;/p&gt;&#xA;&lt;p&gt;基本は眠らせて、B技を貯めます。B技は最初リーフでバフして耐久を上げています。&lt;/p&gt;&#xA;&lt;p&gt;コバルオンは、HPの半分を超えるタイミングが特に重要。これを超えたとき&lt;code&gt;ねむり&lt;/code&gt;を当てること。そして、ここで&lt;code&gt;ねっぷう&lt;/code&gt;を連発しなければなりません。いざというときのためB技が使える状態だと良いでしょう。また、それが大ダメージが通るときじゃないと一気に倒すことができずやられてしまいます。&lt;/p&gt;&#xA;&lt;p&gt;このような条件を満たすとこのメンバーだけでクリアできると思います。が、私はいくつか失敗して、次のメンバーに引き継ぎました。&lt;/p&gt;&#xA;&lt;p&gt;次のメンバーでは、相手がB技を打ってくるタイミングだったので一人メンバーのバインド使いLV1を出撃させました。バインド当ててB技を食らい無事死亡。&lt;/p&gt;&#xA;&lt;p&gt;次が本命でアチャモ、シルバー、アセロラでやりました。ひるませて、バフして、シルバーで攻撃というパターン。ここで無事撃破という感じ。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは、メダルが実装されてからなんか面白くなってる気がします。レジェンドバトルもいいですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>github profile(readme)にsvgを付けてみる</title>
      <link>https://syui.github.io/blog/post/2020/07/09/github/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/09/github/</guid>
      <description>&lt;p&gt;&lt;code&gt;github profile(readme)&lt;/code&gt;を使用するには、githubで&lt;code&gt;$user&lt;/code&gt;のrepositoryを作成して&lt;code&gt;readme.md&lt;/code&gt;を置くと&lt;code&gt;github.com/$user&lt;/code&gt;で表示できるようになるかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;この機能のテストに当選した人は、リポジトリを作成するとき以下の表示が出るようです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/github_profile_readme_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここでsvgを再生したいなあと思ったのですが、このブログで使用しているsvgは少し複雑過ぎるので、新しく作り直してみました。&lt;/p&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/syui_2.svg&#34; width=&#34;144&#34;/&gt;&#xA;&lt;p&gt;urlはrawを引用したほうがいいようです。&lt;/p&gt;&#xA;&lt;p&gt;他にもカウンターを使ってみたりできそう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/brentvollebregt/hit-counter&#34;&gt;https://github.com/brentvollebregt/hit-counter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:readme.md&#34; data-lang=&#34;html:readme.md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://hitcounter.pythonanywhere.com/count/tag.svg?url=https%3A%2F%2Fgithub.com%2Fsyui%2Fsyui&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;alt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hits&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、4周年</title>
      <link>https://syui.github.io/blog/post/2020/07/08/pogo/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/08/pogo/</guid>
      <description>&lt;p&gt;ポケモンGoが4周年を迎えます。なので、今回は、過去を振り返ってみたり、現状を評価したり、思ったことを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;最初に書いた記事を見てみよう&#34;&gt;最初に書いた記事を見てみよう&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGoを始めたばかりに書いた記事が見つかりました。当時こんな事を言ってたようです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2016/08/04&lt;/p&gt;&#xA;&lt;p&gt;私は今までスマホゲームは一切というほどプレイしてきませんでしたが、ポケモンはやってみようかなと思いました。&lt;/p&gt;&#xA;&lt;p&gt;大流行したということで、末永くアップデートされるかもしれない。したがって、初回にプレイしておいたほうが良いかなと思いました。&lt;/p&gt;&#xA;&lt;p&gt;アップデートされても初期攻略が早ければ、その後も有利になるかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;変な理由かな。&lt;/p&gt;&#xA;&lt;p&gt;ゲーム自体は面白いです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/blog/post/2016/08/04/pokemon-go/&#34;&gt;https://syui.ai/blog/post/2016/08/04/pokemon-go/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;実は、私がはじめてプレイしたスマホゲームはポケモンGoでした。理由も長続きしそうなので今のうちにプレイしておこうかなという軽い気持ちでした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケモンgoの設計思想はすごかった&#34;&gt;ポケモンGoの設計思想はすごかった&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGoの設計思想はすごいものでした。私はそれまでスマホゲームにあまり良い印象を持っておらず、おそらく一生プレイすることはないだろうと思っていたのですが、ポケモンGoには手を出しています。&lt;/p&gt;&#xA;&lt;p&gt;自分で言うのもなんですが、これはちょっとしたイレギュラーでした。&lt;/p&gt;&#xA;&lt;p&gt;私がポケモンGoに手を出した主な理由としては、その設計思想にあったと思われます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;仮想現実でポケモンを捕まえ、それを保有するゲームなので、プレイするほど価値を高めていくことができること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ポケコインというゲーム内の共通通貨をジムで作り出すことができる。現金でポケコインを買うこともできるが、無課金でも同様の通貨を作り出せるという画期的なシステムであること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;課金アイテムのルアーを使うことで周りのプレイヤーに恩恵を与えることができるシステムであること&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;とくにこれらの設計が素晴らしいものだったと考えています。&lt;/p&gt;&#xA;&lt;p&gt;通常、課金アイテムを使うと自分だけが強くなったり、自分だけが恩恵を受けたりするのですが、ポケモンGoでは自分を含む周りのプレイヤーに「与える」ことができるようになっているのです。具体的には、課金するとポケストップというところにプレイヤー名が30分程度表示され、30分の間はその近辺に花びらが舞い、たくさんのポケモンが出現する仕組み。非常に良くできたこの名誉システムは、非常に長い間、有効に動作しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;伝説のポケモン&#34;&gt;伝説のポケモン&lt;/h3&gt;&#xA;&lt;p&gt;レイドの実装もすごかったなあ。以下は当時のプロモーションビデオですが、とにかくすごかった。&lt;/p&gt;&#xA;&lt;div style=&#34;position:relative;height:0;padding-bottom:56.25%&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/lKUwVYUKii4?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&amp;amp;ecver=2&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; style=&#34;position:absolute;width:100%;height:100%;left:0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;div style=&#34;position:relative;height:0;padding-bottom:56.25%&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/yQCREgz4tQY?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&amp;amp;ecver=2&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; style=&#34;position:absolute;width:100%;height:100%;left:0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;現在のポケモンgoはちょっとおかしい気がする&#34;&gt;現在のポケモンGoはちょっとおかしい気がする&lt;/h3&gt;&#xA;&lt;p&gt;しかし、今のポケモンGoはちょっとおかしくなっていて、昔ほどにおすすめするわけではありません。&lt;/p&gt;&#xA;&lt;p&gt;まずポケコインが無料で得たものと有料で得たものに分けられました。&lt;/p&gt;&#xA;&lt;p&gt;これによって特定のアイテムを有料で得たコインのみでしか買えないような仕組みに変更されてしまったのです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、レジギガスの有料チケットあたりからポケモンGoは本格的におかしくなっていったなあと感じています。しかし、売上という結果が出ているので誰も文句を言えないような状況なのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;また、このような変化が見られたのは、Nianticがハリーポッター魔法同盟の&lt;code&gt;wizardsunite&lt;/code&gt;をリリースし、大コケした時期だった記憶があり、関係はあるのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;今更ですが、私は、&lt;code&gt;wizardsunite&lt;/code&gt;がおそらく流行らないだろうと考えていて、やめたほうがいいのではと心配していた気がします。これ、どこかに書いた気がする。&lt;/p&gt;&#xA;&lt;p&gt;また、現在のポケモンGoには、GBLという闘技場(コロシアム)が建設され、レート・ランキングありの対人ゲームになりましたが、個人的には、不自由さが増した気がしています。&lt;/p&gt;&#xA;&lt;p&gt;このようにちょっとおかしくなったポケモンGoですが、それでも、素晴らしいゲームであることに変わりはありません。個人的には、初心に戻れるかどうかが重要だと思っていて、そのあたりを見ています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;図鑑&#34;&gt;図鑑&lt;/h3&gt;&#xA;&lt;p&gt;嬉しかった図鑑の更新です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-07-08-6-18-44.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;gblをやめるといったなあれは嘘だ&#34;&gt;GBLをやめるといったな？あれは嘘だ&lt;/h3&gt;&#xA;&lt;p&gt;GBLをやめるといいましたが、なぜか続けています。「GBL、やめる」と言ったときの画像。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/001/original/27b2e44cce2c35fb.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;そして、なぜか続けることになったときの画像。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/003/small/8b04b314f1beb4cc.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前後の画像では、残り日数が11日だったのに、なぜか21日に増えています。わけがわからん。&lt;/p&gt;&#xA;&lt;p&gt;11日でレートを上げるのは不可能との判断でしたが、21日であれば不可能ではないと判断、続けることに&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;次は、GBLの攻略について書きます。&lt;/p&gt;&#xA;&lt;p&gt;今まで私は、個体値を全く気にせずポケモンを育ててきました。今でも個体値を調べるのが面倒なので重複ポケモンは調べずに全部はかせに送っています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、1000試合もすると個体値が勝率に影響してくる可能性があると思います。まさかここまでの回数バトルすることになるとは思っていませんでした。個体値で特に重要になるのが先鋒のポケモンです。ミラーのときに勝てるようにしたほうがいいでしょう。とはいえ、やはり、バグ、不正を食らわないこと、マッチング運に恵まれることのほうが遥かに重要ですが。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、クレセリア、ギラティナ、カビゴン、ディアルガ(最高の相棒)は、個体値厳選したほうが勝率は少し上がるかもしれません。なお、最強のポケモンは？と聞かれたら、おそらく&lt;code&gt;クレセリア&lt;/code&gt;と答えるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、やはり好きなポケモンを好きなように育ててバトルすると思います。例えば、カビゴンはメガシンカがないので、最高の相棒にする気はありませんし、色違いがあれば、色違いを使います。&lt;/p&gt;&#xA;&lt;p&gt;以下、すべてのリーグで私が使用するポケモンです。&lt;/p&gt;&#xA;&lt;h4 id=&#34;スーパー&#34;&gt;スーパー&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-07-08-6-18-16.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;ハイパー&#34;&gt;ハイパー&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-07-08-6-18-19.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;プレミアム&#34;&gt;プレミアム&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-07-08-6-30-34.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは、カビゴンを最高の相棒にしたほうが良いパターン。&lt;/p&gt;&#xA;&lt;h4 id=&#34;マスター&#34;&gt;マスター&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-07-08-6-31-56.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;攻略サイトの情報やYouTubeは全く見ません。リーグ中は使用するポケモンをほぼ変更しません。&lt;/p&gt;&#xA;&lt;p&gt;色々なパーティーがありますが、使い慣れているポケモンを使ったほうがいいと考えるからです。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、あまりに勝てないようなら変更を考えますが、環境が変わることはほとんどありません。5連勝した5分後に5連敗するようなゲームですから、連勝したときも連敗したときも大体の場合、運が良かった悪かったの話に過ぎません。とはいえ、ポケモンの流行り廃りは多少あるように思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;よかったところ&#34;&gt;よかったところ&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/pokemongo_04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにNiantic Socialが来た</title>
      <link>https://syui.github.io/blog/post/2020/07/07/pokemon/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/07/pokemon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/005/small/f65f259d872749e8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/search?q=%23nianticsocial&amp;amp;src=recent_search_click&amp;amp;f=live&#34;&gt;#nianticsocial&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/search?q=%23pokemongo&amp;amp;src=recent_search_click&amp;amp;f=live&#34;&gt;#pokemongo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoにNiantic Socialというプロフィールが追加されていました。(プライバシーのためニックネームは非表示にしています)&lt;/p&gt;&#xA;&lt;p&gt;もしかしたら&lt;a href=&#34;https://pokemongolive.com/en/post/pokemongofest2020-details/&#34;&gt;Pokémon GO Fest 2020&lt;/a&gt;に関係があるのかもしれませんね。&lt;/p&gt;&#xA;&lt;p&gt;今回はイベントがリモートで開催されますが、過去のイベントでは実地での交換会などがあったようです。こういった機能で、そういったことを実現しようとしているのかも。&lt;/p&gt;&#xA;&lt;p&gt;イベントの日に回数限定のリモート交換とかできたら面白そう。&lt;/p&gt;&#xA;&lt;p&gt;なお、&lt;code&gt;ingress&lt;/code&gt;アカウントはingressで一旦ログアウトしてログインすれば表示されるとの情報があります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ノベルゲームの週刊連載はじめました</title>
      <link>https://syui.github.io/blog/post/2020/07/06/game/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/06/game/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;こちら&lt;/a&gt;のノベルゲームあるじゃないですか。それを週刊連載にしてみたら面白いかもしれないと思ったので、やってみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;毎週月曜日に1話ずつ更新する予定です。&lt;/p&gt;&#xA;&lt;p&gt;また、最近、「クリエイターはお金もらえ」みたいな話があったりするので価格を設定してみることに。&lt;/p&gt;&#xA;&lt;p&gt;お支払いは&lt;code&gt;github sponsors&lt;/code&gt;から&lt;code&gt;月に$1&lt;/code&gt;となっております。作者のスポンサーという形になります。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://github.com/sponsors/syui/card&#34; title=&#34;Sponsor syui&#34; height=&#34;225&#34; width=&#34;auto&#34; style=&#34;border: 0;&#34;&gt;&lt;/iframe&gt;&#xA;&lt;h3 id=&#34;github-sponsorsとは&#34;&gt;github sponsorsとは&lt;/h3&gt;&#xA;&lt;p&gt;microsoftが運営するgithubの開発者支援サービスです。githubアカウントを作成すると登録されているユーザーに課金できる仕組み。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/ja/github/supporting-the-open-source-community-with-github-sponsors/about-github-sponsors&#34;&gt;https://docs.github.com/ja/github/supporting-the-open-source-community-with-github-sponsors/about-github-sponsors&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2020年上半期ボカロ曲1位の発表</title>
      <link>https://syui.github.io/blog/post/2020/07/05/vocaloid/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/05/vocaloid/</guid>
      <description>&lt;p&gt;何曲かボカロを聴いてみたので、個人的に一番良かった曲を紹介。&lt;/p&gt;&#xA;&lt;p&gt;その結果、&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.nicovideo.jp/watch/sm37104384&#34;&gt;【初音ミクDark】　she　【 keeno 】&lt;/a&gt;に決定しました！&lt;/p&gt;&#xA;&lt;h3 id=&#34;聴いてみた曲の一覧&#34;&gt;聴いてみた曲の一覧&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:nico.json&#34; data-lang=&#34;json:nico.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm37104384&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;【初音ミクDark】　she　【 keeno 】 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36177919&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;シックス・フィート・アンダー / Flower - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36187141&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;神様の庭/ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36237863&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sasakure. UK  -  QUI  feat.初音ミク  MV - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36243343&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;【初◯ミク】Convenient Singer【オリジナル】 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36271857&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Penguin&amp;amp;#039;s Detour / 初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36274388&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;【オリジナル曲】 オバジ・シュンプチー 『自分騙し』 feat.初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36279033&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;quot; ね？風味,,,R E M E M B ヰ R &amp;amp;quot; - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36320501&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;「ひと」-nao/to　feat.初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36322436&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;クリーム入り今川焼き／虎音ココ - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36353531&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;花色 / 香椎モイミ feat. KAITO - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36369187&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;雨に浸る / 雨歌エル - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36375608&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My Dear, My Muse ……　feat. 初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36400155&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;【IA】Movin&amp;amp;#039; Girl【オリジナル】 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36459491&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UNSTOPPABLE FEAT.MEIKO - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36470545&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GUMI『マスクがない』オリジナル曲 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36506282&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;◈*_命ひとつしかないもんで - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36584432&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[初音ミク] 夜を飼う / TOKOTOKO（西沢さんP） - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36599714&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;薄翅の国へと至る道 / 重音テト - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36619621&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;甘い病／なつめ千秋 feat.GUMI - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36643372&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;カゼヒキ - 最初の言伝 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36666361&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ど～ぱみん -「サイケデリックによろしく」feat.初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36669843&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;蟲 【初音ミク オリジナル】 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36685545&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ワンダーランド / higma feat.初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36691187&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FRONTIER ／ 初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36731216&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ボッカデラベリタ / 柊キライ feat.flower - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36818941&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ユダ / 虻瀬 with 初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36820823&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;氷上に駆ける／雨歌エル - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36845017&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eden/歌愛ユキ - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36850023&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;こぬか雨/雨歌エル　 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36851417&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;昆虫図鑑／鏡音リン &amp;amp;amp; 鏡音レン - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36865458&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rorero - 黄金に急かされて／IA - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36904226&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Conslo - 不可逆的にさようなら feat. 水音ラル, 樹人 - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36943926&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p.h. / flower - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm36982435&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;「森の哲学」- CiderPlanet - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm37020733&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ochatime - ft.初音ミク - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.nicovideo.jp/watch/sm37092156&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SO HOW? / ソーホー and シメサバツイスターズ - ニコニコ動画&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat nico.json|jq length&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat nico.json|jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.[].url&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>コマンドラインからjavascriptでレンダリングされたHTMLソースを取得する方法</title>
      <link>https://syui.github.io/blog/post/2020/07/04/curl/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/04/curl/</guid>
      <description>&lt;h3 id=&#34;phantomjs&#34;&gt;phantomjs&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt;ではjavascriptを有効にしたブラウザと同じHTMLソースの取得が難しいことがあります。このような場合、&lt;code&gt;phantomjs&lt;/code&gt;を使用すると便利です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g phantomjs phantom&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;公式サイトにてバイナリも配布されてるので、&lt;code&gt;node&lt;/code&gt;でのインストールが依存関係などで失敗する場合、こちらをダウンロード、解凍して実行権限を与えると良いでしょう。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://phantomjs.org/download.html&#34;&gt;https://phantomjs.org/download.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -sLO https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ aunpack phantomjs-2.1.1-linux-x86_64.tar.bz2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd phantomjs-2.1.1-linux-x86_64/bin/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chmod +x phantomjs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./phantomjs --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:set.js&#34; data-lang=&#34;js:set.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;page&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;webpage&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;();&lt;span style=&#34;color:#a6e22e&#34;&gt;argument&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;args&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;page&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;page&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;phantom&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ phantomjs set.js https://google.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;domcurl&#34;&gt;domcurl&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PaulKinlan/domcurl&#34;&gt;domcurl&lt;/a&gt;というツールがあり、webscrapingに非常に便利です。&lt;code&gt;phantomjs&lt;/code&gt;などで要件を満たせない場合におすすめです。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;domcurlはPuppeteerを使う小さなNodeJSアプリケーションで、 npm i domcurlコマンドを発行することでインストールできます。 curlコマンドのように、簡単なdomcurl [url]を発行してリソースを取得し、JSをページ上で実行することができます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://paul.kinlan.me/domcurl/&#34;&gt;https://paul.kinlan.me/domcurl/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i domcurl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./node_modules/domcurl/index.js  --url https://example.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>新しいキャラ描いた</title>
      <link>https://syui.github.io/blog/post/2020/07/03/illust/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/03/illust/</guid>
      <description>&lt;p&gt;新しいキャラを描いたり、エピソードを書いたりした。エピソードはまだ非公開だけど。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_kyouko.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_ponta_4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoのGBLをやめた話</title>
      <link>https://syui.github.io/blog/post/2020/07/02/pogo/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/02/pogo/</guid>
      <description>&lt;p&gt;一応、シーズン2でもランク9には到達しています。が、ここでGBLをやめようと思います。以降は単なる愚痴ですので、嫌いな人は読まないように！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/003/small/8b04b314f1beb4cc.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;GBLをやめる理由はいくつかありますが、一番は、GBLが面白くないからです。これほど面白くないゲーム、初めてかも。&lt;/p&gt;&#xA;&lt;p&gt;勝っても嬉しくなく、負けたときは悔しいだけなので、ストレスしかありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;ハッピーはゼロでストレスだけが蓄積されていく仕組み。これでは健康も損ないますし、プレイする意味が全くないと判断。ランク10に到達可能ならプレイするのもありですが、初期レートの差が大きすぎてそれも不可能。よほどの強運に恵まれない限り難しいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;仮に初期レートが2300で現在レートが2800とかだったら続けてたかも。私の初期レート2000なので。&lt;/p&gt;&#xA;&lt;p&gt;そして、バグや不正か何かはわからないけど、あまりに理不尽が多すぎたという点も大きかったと思います。対人戦ゲームでこれはあまりにもひどい、ありえない。&lt;/p&gt;&#xA;&lt;p&gt;最後に、私が現在把握している(と思っている)GBL事情を少しだけ書いていきたいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gblが停止された件&#34;&gt;GBLが停止された件&lt;/h3&gt;&#xA;&lt;p&gt;まず、シーズン2の半ばでGBLが停止されました。理由は、世界ランク1位だった人が不正なテクニックを使っていたことが発覚したためです。&lt;/p&gt;&#xA;&lt;p&gt;これがチートと呼ばれるものかどうかは難しい問題ですが、通常のバトルではありえない抜け道を利用して、ランキングやレートを独占しました。そのプレイは公正と呼ばれるものではなかったということでしょう。&lt;/p&gt;&#xA;&lt;p&gt;私自身、チートを使ったり、作ったりすることはあります。しかし、対人戦においては、チートまたは、それに類するテクニックを使うことは絶対にありません。&lt;/p&gt;&#xA;&lt;p&gt;実は、プレシーズン、シーズン1、そして、シーズン2、そういった類のものはあるんだろうなと予想していましたが、探すことはしませんでした。探せばおそらく見つけられたと思いますが、対人戦では使わないと決めていますので探す必要はありません。また、知ってたら使いたくなるものなので、あえて探しませんでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、その情報がどこで共有されているのか大体の目星はついていました。それは、あるコミュニティで共有され、多くの人が使っているのだろうなと予想していました。&lt;/p&gt;&#xA;&lt;p&gt;そういった人達が過去、または現在ランク10に到達し、リーグボードのバトル数または勝利数などからもおおよその検討はつきます。前に確認した限り、あくまで印象ですけど、約半数はあれを使い、残りの半数はバトル数または勝利数から推測が難しいけど、別のあれを使っていた人もかなりいたのではないかと思います。この件の具体的な情報は後述します。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これについてはずっと否定の意見が根強く存在していたのも知っています。つまり、「バグや不正なんてものは存在しない」と言い続けていた人達です。&lt;/p&gt;&#xA;&lt;p&gt;このような発言や隠蔽を行っていたのは、現にチートを使っていた人達なのか、Nianticの回し者なのか、GBL開発の社員さんだったりするのか、または、それ以外の人達なのか、それはわかりません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、「バグや不正なんてものは存在しない」と言い続けていた人達がいなければ、もっと早くに問題が明らかにされていたかもしれません。現に「バグや不正」は存在していました。&lt;/p&gt;&#xA;&lt;p&gt;その証拠に、GBLの世界ランクで1位だった人も不正テクニックを使用していたことが判明。これによって、GBLが停止されました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/pokemongo/comments/h7wz7f/pvp_down_due_to_gbl_exploit/&#34;&gt;https://www.reddit.com/r/pokemongo/comments/h7wz7f/pvp_down_due_to_gbl_exploit/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私の推測ではNianticはずっとこの事実を把握しており、わざと放置していたのだろうと考えています。&lt;/p&gt;&#xA;&lt;p&gt;その証拠に、プレシーズンもシーズン1もずっとおかしい動きがあることは報告されていたはずです。redditやtwitterでもたくさんの声がありました。私もブログでいくつかのおかしな動きについて言及しています。以下は2月に書かれた文章です。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ギラティナと戦ったとき、ピクシーが為す術なくやられてしまうことが何度かありました。これも相手がギラティナなので、これは勝ったぞと思っていました。しかし、相手のギラティナがあまりに強すぎたので、ピクシーがタイマンで負けてしまったのです。&lt;/p&gt;&#xA;&lt;p&gt;相手のギラティナは4回連続でげんしのちからを放ちました。正確には、3回連続で放ったあと、1秒ほど間をおいて最後の一発を放ち、計4回です。このとき、ギラティナのHPは半分も削ることができませんでした。こちらのシールドも虚しく、これほど強いギラティナには勝てないなあと私は思いました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、果たしてギラティナはあそこまで早くチャージが撃てるものなのだろうか。私は、ロケット団を相手にギラティナを使って試してみたところ、やはり、あれほど早くチャージ攻撃が打てるというのはありえない。しかも、どれだけ貯めても2回が限度ではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;この現象は、相手がグリッチ(不正)を使ったのか、それとも通信の問題だったのか、もしくは相手が強かっただけなのか、わかりません。これも、そこそこの確率で遭遇する現象の一つです。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/blog/post/2020/02/20/pokemon/&#34;&gt;/blog/post/2020/02/20/pokemon/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;つまり、最低でも2月から、そして、おそらくそれよりも昔から存在していたテクニックがなぜ今になって問題とされたのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;おそらくその理由は、有名な人がこの不正テクニックを大々的に取り上げてしまったためではないかと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;Nianticは対処する気がなかったこの問題ですが、ある有名な人がこの不正テクニックを取り上げてしまったのです。それに加えて、チートを使ったことが明らかなランク1位が存在し、もしこの二つの要素がなければ、おそらく対処されなかったのではないかと思います。これは非常に恐ろしいことです。レートありの対人ゲームにおいて、あってはならない態度だと思います。&lt;/p&gt;&#xA;&lt;p&gt;上記の不正テクニックは、チャージ攻撃を速く打つためのものですが、他にも様々な不正テクニックが存在します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、5の倍数と呼ばれるもので、これは、簡単にランク10に到達するテクニックです。過去ボードのバトル数または勝利数を見ればこのテクニックを使用していると思われる人は数多く存在していました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/TheSilphRoad/comments/het3o5/gbl_how_i_became_the_first_to_get_to_rank_10_in/&#34;&gt;https://www.reddit.com/r/TheSilphRoad/comments/het3o5/gbl_how_i_became_the_first_to_get_to_rank_10_in/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私はこのテクニックを使用した人のことをあまり信用しておらず、その理由としては、不正テクニックを知っている人の多くがそれを使ってしまうだろうと考えているからです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、現在のリーグにおいてこういったテクニックを使用した人は、おそらく過去のリーグにおいても他の不正テクニックをバレないように使用していたのではないかと考えられるからです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、リーグ初期から存在していたであろうチャージ攻撃を速く打つ不正テクニックも慎重に使っていればバレることはなかったと思います。&lt;/p&gt;&#xA;&lt;p&gt;今回は警告のためか大げさに使ったために有名人が取り上げて大きな問題になりました。しかし、そうでもない限り、対処されることはなかったでしょう。その証拠に、今までずっと対処されてこなかったという事実があります。&lt;/p&gt;&#xA;&lt;p&gt;また、リーグ初期から「バグや不正なんてものは存在しない、負けたのが悔しいだけだろ」みたいな投稿や隠蔽工作が今も昔もずっと続いています。&lt;/p&gt;&#xA;&lt;p&gt;こういった投稿は、この問題が長い間ずっと対処されてこなかったことと関連があるように感じます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;吸われたレートが行き着く先&#34;&gt;吸われたレートが行き着く先&lt;/h3&gt;&#xA;&lt;p&gt;次は、不正テクニックにより吸われたレートの行き着く先の話をします。&lt;/p&gt;&#xA;&lt;p&gt;たまに「不正テクニックに当たるなんて確率的には1/10でしかないはずだ、問題にならない」という人がいます。&lt;/p&gt;&#xA;&lt;p&gt;でもそれは違います。&lt;/p&gt;&#xA;&lt;p&gt;たとえ1/10であっても、バトル数を重ねるごとに取り返しのつかない数値になります。例えば、1000試合すれば、100試合は不正テクニックにより負けさせられていることになります。これがレート(評価)に及ぼす影響は計り知れません。&lt;/p&gt;&#xA;&lt;p&gt;また、考えなければならないのが、不正テクニックを使われた場合のレートが行き着く先です。レートが行き着く先がどこになるのかという視点でも考えなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;不正テクニックを使われた場合、一人ひとりの損害はたった1/10であっても、知らない間にレートが吸われ、そのレートが最終的に行き着く先は&amp;hellip;わかりますよね。&lt;/p&gt;&#xA;&lt;p&gt;それは、ランク10であったり、高レートだったりということになります。&lt;/p&gt;&#xA;&lt;p&gt;しかも、GBLは1勝するか1敗するかがレートに大きな影響を及ぼします。それが続けばどれほどの損害を受けるかが明らかでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ゲームのシステム上、それを個人の実力で覆すのは不可能です。断続的にそういうバトルを食らってしまうと、なかなかその遅れを取り戻すことはできません。その理由については後ほどお話します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他のおかしな動き&#34;&gt;その他のおかしな動き&lt;/h3&gt;&#xA;&lt;p&gt;その他にもおかしな動きはまだあります。これはバグか不正かはわかりませんが、私がミラーマッチになったときにはっきりと確認できる現象で、通常、ミラーだと同時攻撃になるはずなのですが、最初は1回余分にこちらが攻撃しなければチャージがたまらないようになり、次には2回とどんどん遅れていく現象がかなり頻繁に発生しています。ミラーになったときは、約半分の試合にこの遅れが発生し、おそらく、ミラー以外にも発生し続けているのだと思われます。&lt;/p&gt;&#xA;&lt;p&gt;その他、シールド3枚、シールドすり抜け、フリーズしてタコ殴りにされる、バトルが開始したのに画面が移行せず負けたことになっている、など私が今シーズンで体験した出来事です。これは過去シーズンにおいても発生していましたし、今シーズンにおいても発生し続けています。&lt;/p&gt;&#xA;&lt;p&gt;追加で、同時チャージ攻撃なのに相手だけ先に打って交代するという問題、残り2体が一発で落ちる状態なのに相手が交代せずにタイムアップが進んで負けるなどの問題があります。&lt;/p&gt;&#xA;&lt;p&gt;私は、GBLを半年間プレイし、改善されるのを待ちましたが、改善される気配はありません。したがって、これ以上ストレスを溜めるのもなあ、と思ったのでGBLをやめることにしました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;そもそもが運ゲーである&#34;&gt;そもそもが運ゲーである&lt;/h3&gt;&#xA;&lt;p&gt;プレイヤーには実力の差はほとんどありません。GBLの勝負は運と不正、あるいはバグによって決まります。その割合が非常に大きい。レートも同じです。&lt;/p&gt;&#xA;&lt;p&gt;その証拠に、シーズン2においても、世界ランク1位だった人が不正テクニックを使用していたことが判明しています。また、ランク10に到達した人の何名かも不正テクニック(5の倍数を含む)を使用していたことが判明しています。もし不正なんかで勝負は決まらないのであれば、不正テクニックの使用者が世界ランク1位になるということは起こらなかったはずです。&lt;/p&gt;&#xA;&lt;p&gt;また、GBLシステムは完全におかしいです。プレシーズン、シーズン1ともにランク10に到達した多くの人たちがいますが、シーズン2においては全体のスピードが遅いようです。&lt;/p&gt;&#xA;&lt;p&gt;その理由の一つは、初期レートの差です。今までは1000ほどのレート差が初期についていることが珍しくありませんでした。しかし、シーズン2においては、その差が小さくなりました。したがって、シーズン2ではランク10に到達する人も少ないというわけです。初期レートでランク10に到達可能か否かが決まっていたシステムは絶対におかしかったわけです。&lt;/p&gt;&#xA;&lt;p&gt;その証拠に、過去のボードでは、ランク7にもかかわらず3200ものレートを獲得している人が確認されています。下記の画像は初期レートが3200だったことを意味します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://imgur.com/r/TheSilphRoad/U8RMFOL&#34;&gt;https://imgur.com/r/TheSilphRoad/U8RMFOL&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/TheSilphArena/comments/ghfr5l/3202_mmr_with_41_battles_rank7_and_number_6_in/&#34;&gt;https://www.reddit.com/r/TheSilphArena/comments/ghfr5l/3202_mmr_with_41_battles_rank7_and_number_6_in/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;例えば、このときの私の初期レートが1900ですから、スタートから1300ものレート差があったことになります。この差を公正なバトルで埋めるのは不可能です。プレシーズンとシーズン1では、どんなに頑張っても大体の最終評価が初期レートにより決まっていた印象があります。ランク10の到達可能範囲についても、大体はある初期レート数値以上を得たものに収束したのではないかと考えられます。&lt;/p&gt;&#xA;&lt;p&gt;私は、運ゲーが苦手ですし、GBLも好きではありませんでした。不正テクニック(5の倍数を含む)も使用する気はないので、ここでやめることにしました。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;疲れました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;チーターを責める気はない&#34;&gt;チーターを責める気はない&lt;/h3&gt;&#xA;&lt;p&gt;とはいえ、このバグゲーム、設計がダメなので不正テクニックの使用者を責める気は全くありません。&lt;/p&gt;&#xA;&lt;p&gt;GBLのシステムがつまんないので、つまんないというだけの話です。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoは素晴らしい設計ですが、そこに入り込んできたGBLの設計があまりにひどかったというのが私の意見です。&lt;/p&gt;&#xA;&lt;p&gt;GBLは単純に「不正やバグが蔓延した部屋にプレイヤーを閉じ込め、さあ殺し合え」ってだけのシステムです。そこには革新性もなければ創造性もありません。むしろ個人のそれを低下させる要素でしかない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>七星のスバルが面白かった</title>
      <link>https://syui.github.io/blog/post/2020/07/01/anime/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/07/01/anime/</guid>
      <description>&lt;p&gt;昔のアニメで見てなかったやつをいくつか見てみたんだけど、七星のスバルというアニメが意外にも面白かったので紹介。&lt;/p&gt;&#xA;&lt;p&gt;1話を見た瞬間、「はあ&amp;hellip;面白くねえ&amp;hellip;いつの時代のアニメだよ」って思ったのは内緒ですよ。&lt;/p&gt;&#xA;&lt;p&gt;でも2話以降、普通に面白かった。まあ、戦闘シーンとかは、正直あれなんですけど、でも、ストーリーが良く出来てるし、普通に楽しめました。&lt;/p&gt;&#xA;&lt;p&gt;まず、ヒロインがかわいい。好き。&lt;/p&gt;&#xA;&lt;p&gt;次に、ツンデレの子がいいツンデレなのもポイント高いです。(悪いツンデレは過激すぎる子です)&lt;/p&gt;&#xA;&lt;p&gt;他にもゲームオーバーになるとアカウント抹消とか緊張感がありましたし、ヒロインが生きてるんじゃないかって謎が面白いですし、三角関係っぽいのも面白いですし、センスが現実に及ぼす影響、それをゲームによって引き出す陰謀みたいなのも面白いですし、よかったですよ。&lt;/p&gt;&#xA;&lt;p&gt;このアニメ、評判は良くないみたいなんですけど、個人的には普通に面白かったし、2期やってほしいな。続きが気になる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/anime/comments/9hh0gy/shichisei_no_subaru_episode_12_discussion_final/&#34;&gt;https://www.reddit.com/r/anime/comments/9hh0gy/shichisei_no_subaru_episode_12_discussion_final/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>アイコンをいくつか作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/06/23/icon/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/23/icon/</guid>
      <description>&lt;p&gt;アイコンをいくつか作ってみました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;trace&#34;&gt;trace&lt;/h3&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/trace.png&#34; width=&#34;120&#34;&gt;&#xA;&lt;p&gt;こちらは、&lt;a href=&#34;https://github.com/ny-a&#34;&gt;ny-a&lt;/a&gt;さんに提供したやつで、&lt;code&gt;trace&lt;/code&gt;というファイル名。動物は難しそうだったので足跡なら簡単なんじゃないと思って作り始めたんだけど、いらない部分を削ぎ落としていったら、色々あってこんな形になった。&lt;/p&gt;&#xA;&lt;p&gt;一応、いろんな角度から見てもそれなりにいろんなものに見えるようなってる。私の場合だと、上からは石、斜め右は爪、左は箱、下は鐘など。&lt;/p&gt;&#xA;&lt;p&gt;実は、私は、アイコンを移行したばかりのとき、違和感だらけで、「うーん、やっぱりなんか違うよなあ」みたいなことを思ったりしたんだけど、今は慣れたという経験があって、逆に複雑なアイコンに戻すのはちょっと無理ってなったりするので、最終的には、シンプルに落ち着くのではという考えがあったりするので、一番シンプルにしてみた。なお、シンプルさの指標として、一つは使用されている色の数かな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;robot&#34;&gt;robot&lt;/h3&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/robot.png&#34; width=&#34;120&#34;&gt;&#xA;&lt;p&gt;以前、ロボットのアイコンを作ったんだけど、あまり納得いってなかったので、作り直して、やっと完成したと思う。&lt;/p&gt;&#xA;&lt;h3 id=&#34;moon&#34;&gt;moon&lt;/h3&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/moon.png&#34; width=&#34;120&#34;&gt;&#xA;&lt;p&gt;月のアイコン。絵文字とかにもあるけどね。でも、線の大きさや色が結構違ってたりするんだよ。よく使いそうだから、自分でも作っとくかとか思って。&lt;/p&gt;&#xA;&lt;h3 id=&#34;cloud&#34;&gt;cloud&lt;/h3&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/cloud.png&#34; width=&#34;120&#34;&gt;&#xA;&lt;p&gt;雲のアイコン。よく自分のイラストに登場している。&lt;/p&gt;&#xA;&lt;h3 id=&#34;owl&#34;&gt;owl&lt;/h3&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/owl.png&#34; width=&#34;120&#34;&gt;&#xA;&lt;p&gt;フクロウをイメージして作ったアイコン。&lt;a href=&#34;https://16test.uranaino.net/&#34;&gt;心理テスト&lt;/a&gt;をやったらフクロウだったので作ってみた。&lt;/p&gt;&#xA;&lt;p&gt;目をつけるとかわいくなったりするなあとか、色々な学びがあったアイコンだった。&lt;/p&gt;&#xA;&lt;p&gt;フクロウぽくないというのは確かにそのとおり。&lt;/p&gt;&#xA;&lt;p&gt;ただ、目を大きくすると、強調が強すぎて個人的にはNGでした。最初は、緑一色にしようかと思ったくらいなので、強調は抑えていきたい。また、くちばしを小さくするのはわかりにくいし、人に見えるので、大きくしてみた。&lt;/p&gt;&#xA;&lt;p&gt;フクロウから考えはじめたアイコンなんだけど、最終的には、普通の鳥っぽい。&lt;/p&gt;&#xA;&lt;p&gt;実はアイコンを作ってるとこういうことはよくある。最初のイメージと出来上がったものが違ってくる。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私の場合は、出来上がったものに納得してればOKだし、いくら最初のイメージ通りでも、納得できないならNGなので、最初のイメージにこだわりはあまりない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、名前は最初のイメージにすることが多いかな。出発点がわからなくなるし。&lt;/p&gt;&#xA;&lt;h3 id=&#34;sword&#34;&gt;sword&lt;/h3&gt;&#xA;&lt;img src=&#34;https://syui.github.io/icon/sword.png&#34; width=&#34;120&#34;&gt;&#xA;&lt;p&gt;ソードのアイコン。私は、図形をこねくり回してアイコンを作ることが多くて、&lt;code&gt;owl&lt;/code&gt;も&lt;code&gt;sword&lt;/code&gt;も、元は&lt;code&gt;trace&lt;/code&gt;のアイコンに使った図形を使用している。それを伸ばしたり、狭めたり、回転させたり。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;trace&lt;/code&gt;の図形自体も一つ作って、複製し、色を白とオレンジにして重ね合わせ、白の部分を透過するという作りになってる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/icon&#34;&gt;/icon&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ヘッダー画像を変えてみた</title>
      <link>https://syui.github.io/blog/post/2020/06/22/illust/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/22/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/f_hosi_1.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;twitterなどで使ってるヘッダー画像、NASAが提供してるものを使ってたんですが、自分が描いたものに変更してみました。&lt;/p&gt;&#xA;&lt;p&gt;前のやつが地球だったので今回も同じ。&lt;/p&gt;&#xA;&lt;p&gt;あと、フィールド画像とかアイテム画像で納得いってなかったやつ修正してみたりです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoのメガシンカはどうなるのか</title>
      <link>https://syui.github.io/blog/post/2020/06/19/pogo/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/19/pogo/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo_mega_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoのメガシンカはこんな感じになるのではないかと期待しています。わざわざ画像作りました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;レイドでメガシンカしたポケモンとバトル&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;終了後に元の姿に戻る、ゲットチャレンジ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;メガシンカしたポケモンとのバトルは報酬に稀に石が入ってることがある&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最高の相棒と石とアメでメガシンカできるようになる、なお、開放できるのはXYのうちどちらか一方のみ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;メガシンカが開放されたら、1バトルにつき1回のみメガシンカが可能となる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ボックスでもメガシンカの姿を確認できるボタンが付く、なお、ボックスを閉じると元の姿に戻る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;最高の相棒条件は付くのか&#34;&gt;「最高の相棒」条件は付くのか？&lt;/h3&gt;&#xA;&lt;p&gt;この条件は付けるのが最も適切だと思います。理由はいくつかあります。&lt;/p&gt;&#xA;&lt;p&gt;一つに、この条件がつかないとすぐにメガシンカできてしまうので、なるべく攻略されるのを遅らせたい運営としては、この条件をつけると思います。&lt;/p&gt;&#xA;&lt;p&gt;また、攻略を遅らせる理由でメガシンカできるポケモンを限定する方法を採用した場合、そこにプレイヤーの個性が反映されないという問題があります。例えば、今回はスピアーだけメガシンカできるよと、これでは、楽しくありません。みんなスピアーを一度だけメガシンカさせてそれで終わりです。&lt;/p&gt;&#xA;&lt;p&gt;「最高の相棒」条件をつけることで、これはクリアするためにかなりの日数がかかりますし、自然とプレイヤーが選択するポケモンがバラけ、攻略も遅れるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;また、相棒メダルが厳しすぎるという理由の動機づけにもなります。現在、相棒メダルは100という途方もない数字です。しかし、メガシンカの条件に入れることで、自然に数を稼げるよう誘導できます。&lt;/p&gt;&#xA;&lt;p&gt;したがって、相棒メダル、攻略速度、プレイヤーの個性の反映などの観点から「最高の相棒」条件は付くと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoは早いうちからやっておいたほうがいい</title>
      <link>https://syui.github.io/blog/post/2020/06/18/pogo/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/18/pogo/</guid>
      <description>&lt;p&gt;今回は、ポケモンGoは早いうちからやっておいたほうがいいという話をします。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoは、Nianticが出しているARアプリで、2016年07月にリリースされ、未だに人気のゲームです。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoをやっていると、いろんな年齢の人がプレイしています。まさにお年寄りから子供までという感じです。中には本当に小さな子もプレイしていて、親子連れで幼稚園くらいの子も結構やってたりします。&lt;/p&gt;&#xA;&lt;p&gt;では、このような年齢からポケモンGoをプレイするのは、良いことなのでしょうか？&lt;/p&gt;&#xA;&lt;p&gt;私の考え方からすると、これは非常に良いことです。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、その子は、幼稚園の頃から投資を始めていることになるからですね。&lt;/p&gt;&#xA;&lt;p&gt;なんでポケモンGoが投資につながるんだという話ですが、これにはいくつかの理由があります。&lt;/p&gt;&#xA;&lt;p&gt;一つに、ポケモンというコンテンツはみなさんが生まれたときから当たり前のように存在し、小さい頃はアニメも見ていたでしょう。それほど一般的なものです。初めて投資するようなときは、どこぞの新興株なんかより、古くからある一般的な企業の株が最適です。&lt;/p&gt;&#xA;&lt;p&gt;次に、ポケモンGoのゲーム性です。ポケモンGoというゲームのコンセプトは「いつも持ち運べるあなたのポケモン」です。ゲームが現実とリンクしていて、仮想世界と現実世界の融合、つまり、現実に行った場所でポケモンを捕まえ、それを保有する。これがポケモンGoのコンセプトです。非常によく考えられています。これを超えられるゲームはあまり存在しないでしょう。もちろん、ポケモンというIPの強さによる部分も大きい。しかし、いくら巨大IPとはいえ、このようなコンセプトなしに、このゲーム価値はありえなかったでしょう。&lt;/p&gt;&#xA;&lt;p&gt;したがって、巨大IP x Nianticのコンセプトが組み合わさったからこそのゲーム価値だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;このゲームには、他のゲームにない価値が存在します。&lt;/p&gt;&#xA;&lt;p&gt;通常のゲームは、一度遊んだら終わりというものが多いですが、ポケモンGoは、ずっと続いてきて、これからも続いていくことが予想されます。そして、それは現実の行動と深く結びついています。早くからはじめた人ほど、たくさんのポケモンを保有することになります。&lt;/p&gt;&#xA;&lt;p&gt;そのため、今始めたばかりの人は、初期から続けてきた人に追いつけません。もちろん、新しい要素が次々に出てきて、今始めても楽しいわけですが、始めるなら早いほうがいいゲームです。&lt;/p&gt;&#xA;&lt;p&gt;それにこのゲームは、どの年齢層でも楽しめる、実際に楽しんでいるという点が圧倒的に強い。強すぎる。&lt;/p&gt;&#xA;&lt;p&gt;例えば、一部の若い人たちの間だけで流行っているようなゲームや、子供の中だけで流行っているようなゲームは、時間経過とともにやめてしまうことが多い。中学生になったとき、あるいは、大学、社会人。そこでやめてしまうのが通常です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ポケモンGoは、おそらくそうはならない。&lt;/p&gt;&#xA;&lt;p&gt;ですから、投資先としては、非常に優良です。&lt;/p&gt;&#xA;&lt;p&gt;このゲームは、現実と結びついた形で、自分が主人公となり、ポケモンを保有するゲームです。そこには、他のゲームにはない価値があり、その価値は、現実の行動によって日々、高めていくことができるのです。&lt;/p&gt;&#xA;&lt;p&gt;なので、ポケモンGoを早いうちから始めるのは、とても良いことだと思います。&lt;/p&gt;&#xA;&lt;p&gt;学校でもポケモンGoが流行る時期が何度かあるでしょう。また、大人になってからも色々と役立てられる場面があるはずです。ポケモンGoがきっかけで結婚しましたみたいな人がいたり、海外で友だちができたという人もいれば、営業で役にたったみたいな話があったり。&lt;/p&gt;&#xA;&lt;p&gt;しかし、これらは、単なる副産物に過ぎません。ポケモンGoは、それよりもっと大きな、あなたのルーツになりえる、そんなゲームだと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ノベルゲームを更新してみた69</title>
      <link>https://syui.github.io/blog/post/2020/06/17/game/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/17/game/</guid>
      <description>&lt;p&gt;69話から74話が最新となっております。&lt;/p&gt;&#xA;&lt;p&gt;PLAY : &lt;a href=&#34;https://game.syui.ai&#34;&gt;https://game.syui.ai&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ゲーム紹介 : &lt;a href=&#34;https://syui.ai/imgame/&#34;&gt;https://syui.ai/imgame/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;補足小説 : &lt;a href=&#34;https://syui.ai/novel/&#34;&gt;https://syui.ai/novel/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;くいなちゃんが隠れキャラとして登場&#34;&gt;くいなちゃんが隠れキャラとして登場&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_kuina.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;たまにあるじゃないですか、他の作品のキャラがゲストとして登場したりするの。ああいうの一度やってみたいなあ、面白そうだなあと思ったので&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;今回は、&lt;a href=&#34;https://kuina.ch/others/license&#34;&gt;くいなちゃん&lt;/a&gt;をゲストとしてちょろっと登場させてみました！&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;くいなちゃん&lt;/code&gt;は、隠れキャラなので探してみてください。登場するのは今回の一度きりですが。&lt;/p&gt;&#xA;&lt;p&gt;(それに二次創作で一度絵を描いたことがあってキャラ絵を用意するのが楽だったというのもある)&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_sen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回のテーマは、恋愛&amp;hellip;みたいなものでしょうか。一度やってみっか、とか思ったので。&lt;/p&gt;&#xA;&lt;p&gt;セニョールことセニルですが、実は、自分が一番苦手なタイプと言うか、あまり好きではないタイプです。あえてそうしました。&lt;/p&gt;&#xA;&lt;p&gt;普通、なんで苦手なタイプで書くんだよ！って感じですけどね。なんとなくです。&lt;/p&gt;&#xA;&lt;p&gt;ストーリー的には漫画の方につながるよう構成されています。&lt;/p&gt;&#xA;&lt;p&gt;しかし、漫画の続きを書くかどうかがわかりません！&lt;/p&gt;&#xA;&lt;p&gt;まんが、かくの、たいへんなんだよなあ&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;なお、&lt;code&gt;セニョール&lt;/code&gt;という言葉が登場しますが、スペイン語の意味はなく、単なるキャラの口癖です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスのエンテイをクリアしてみた</title>
      <link>https://syui.github.io/blog/post/2020/06/13/pokemas/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/13/pokemas/</guid>
      <description>&lt;p&gt;ホウオウ以来、プレイしてなかったのですが、twitter見てるとエンテイが来てるぽいので、クリアしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/027/small/e0c0aded2a53e0d8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケマスはもしかしたら長続きするゲームになるかもしれないと思いました。こういったメダルの実装はいいですね。こういうのがあると、課金してでも集めたいような、または継続するための要素になりそうな気がする。&lt;/p&gt;&#xA;&lt;p&gt;難易度は、正直、難しかったです。ちょっと難しすぎるんじゃないって思いました。脱落者がすごく出そう。これが良いのか悪いのかわかりません。難しいゲームがいいのか、簡単なゲームがいいのか。&lt;/p&gt;&#xA;&lt;p&gt;今回、アセロラ、レッド、リーフでクリアしました。アセロラでひるませて、リーフでB技を繰り返します。アセロラはLV100なのですが、かなり役に立ちました。というか、アセロラがいなかったらクリアできなかったな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケマスのエンテイねむりバグ&#34;&gt;ポケマスのエンテイねむりバグ&lt;/h3&gt;&#xA;&lt;p&gt;また、ねむりバグなるものがあって、以下のようにするとクリアできるようになっています。おそらく、これはバグではなく救済の類だと思いますが。&lt;/p&gt;&#xA;&lt;p&gt;画面に表示されている技の順番を見ながらやります。ねむりは全部当てなければなりません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手のB技カウントが1のとき、かえんほうしゃを打ってくる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手がかえんほうしゃ、こちらは、ねむり、攻撃、攻撃の順にそれぞれのメンバーが打つ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手がB技を入れる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;そこで、再度、ねむりを打つ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;こちらがB技を食らう&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手が眠りを食らう&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;すかさず、ねむりを打つ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手はスピードスターを打つ前にねむりを食らうが、すぐに目を覚まし、スピードスターを打つ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;こちらがスピードスターを食らう&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手がねむりを食らう&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;相手が起きるが、動かなくなる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;それまでの手順が正しければ、相手のB技を食らったあとは、スピードスター前後で眠りを連発しとけば大丈夫です。うまく眠りが入ったら相手は動かなくなります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iphone5s(ios 12.4.7)をjailbreakしてみた</title>
      <link>https://syui.github.io/blog/post/2020/06/10/ios-jb/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/10/ios-jb/</guid>
      <description>&lt;p&gt;現在、iphone5sで&lt;code&gt;signed&lt;/code&gt;なiosの&lt;a href=&#34;https://ipsw.me&#34;&gt;fw&lt;/a&gt; &lt;code&gt;12.4.7&lt;/code&gt;がjailbreak(脱獄)可能なので、checkm8のexploitを利用してjailbreakしてみました。&lt;/p&gt;&#xA;&lt;p&gt;iphone5sは、現在、放置になってて、楽しい使い方ができてなかったので、これを期に活用していきたい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;checkra1n&#34;&gt;checkra1n&lt;/h3&gt;&#xA;&lt;p&gt;実行には&lt;a href=&#34;https://checkra.in/&#34;&gt;checkra1n&lt;/a&gt;というツールが便利です。jailbreak後はcydiaもinstallが簡単にできます。&lt;/p&gt;&#xA;&lt;p&gt;ただし、checkra1nの実行は、少しの工夫が必要でした。iphone5s(12.4.7)の場合、通常は、&lt;code&gt;error -21&lt;/code&gt;が出てきてjailbreakができません。exploitが走っていない模様です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/checkra1n/BugTracker/issues/1389&#34;&gt;https://github.com/checkra1n/BugTracker/issues/1389&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私の場合ですが、dfu-modeになったときにもホームボタンを離さず、次のステージに進んだ時点でホームボタンを離すとうまくrebootしてexploitが走ったような気がする。usb接続の抜き差しはやっていません。何度かやると成功するぽいので、何度か実行してみてください。&lt;/p&gt;&#xA;&lt;h3 id=&#34;altstore&#34;&gt;altstore&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://altstore.io/&#34;&gt;altstore&lt;/a&gt;というものがあり、app(.ipa)に自己署名して起動するものらしいです。&lt;/p&gt;&#xA;&lt;p&gt;altstore-serverをmacで起動し、mail.appにて、pluginを有効にします。そして、deviceとusb接続し、当該deviceを信頼した上で、altstoreをinstallします。なお、installの際には、apple id, passwordが必要になります。完了すると、deviceにaltstoreのアイコンがあります。また、ファイアウォールをoffにするといいという情報もあります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rileytestut/AltStore/issues/83&#34;&gt;https://github.com/rileytestut/AltStore/issues/83&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;reprovision&#34;&gt;reprovision&lt;/h3&gt;&#xA;&lt;p&gt;自己署名の自動化(再署名)を可能にする&lt;a href=&#34;https://repo.incendo.ws/&#34;&gt;reprovision&lt;/a&gt;が便利です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/ios_jailbreak_iphone5s_2020_06_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;unc0ver&#34;&gt;unc0ver&lt;/h3&gt;&#xA;&lt;p&gt;脱獄ツールぽい&lt;a href=&#34;https://github.com/pwn20wndstuff/Undecimus/releases&#34;&gt;unc0ver&lt;/a&gt;ですが、github-releasesから.ipaをdownloadして&lt;code&gt;altstore&lt;/code&gt;で開きます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/ios_jailbreak_iphone5s_2020_06_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;なお、&lt;code&gt;12.4.7&lt;/code&gt;はまだサポートされてないぽい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ノベルゲームを更新してみた60</title>
      <link>https://syui.github.io/blog/post/2020/06/06/game/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/06/game/</guid>
      <description>&lt;p&gt;60話から68話が最新となっております。&lt;/p&gt;&#xA;&lt;p&gt;PLAY : &lt;a href=&#34;https://game.syui.ai&#34;&gt;https://game.syui.ai&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ゲーム紹介 : &lt;a href=&#34;https://syui.ai/imgame/&#34;&gt;https://syui.ai/imgame/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;制作秘話&#34;&gt;制作秘話&lt;/h3&gt;&#xA;&lt;p&gt;制作に関して、つぶやいたことなど、覚えている限りで適当に書いてみます。&lt;/p&gt;&#xA;&lt;p&gt;各キャラクターに一つは弱点を入れるようにしてる。例えば、アイならボロ、キョウスケならハゲ、ポンタなら犬など。完全無欠のかっこいいキャラというより、主人公だろうがなんだろうが、どこかツッコミどころのある弱点があるようなキャラを心がけてるみたいなとこある気がする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_yui.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;なんでアイは肩を出してるの？これは個人的な好みです、という理由と、もう一つは、手足が内部でつながっているかをイメージしやすくするためかな。絵って、裸から書いて、服を着せてという書き方する人もいるんですけど、私はそんな面倒なことやりませんから、全部一発書きしたあと想像でつながってるか視るんですよね。いや、エッチな感じではなく純粋にこの絵は大丈夫なんだろうかという視点で。それやるのに肩を出してたほうが見やすいのです。興味ある人は、ぜひ試してみてくだされ。&lt;/p&gt;&#xA;&lt;p&gt;今回の話は、シリアスっぽく、でもシリアスになりすぎないように注意して作りました。どこか笑えるような、救いようがあるような、そんな雰囲気に仕上げたかったし、この作品では、そこは譲れないところだと思ってる。なんか残虐でショッキングな単語も出てきますが、それを和らげる工夫を頑張ってみた感じ。&lt;/p&gt;&#xA;&lt;p&gt;ストーリー上の矛盾点については、直近しか読み直していないので、存在しているかもしれないけど、また読み直す機会とかあれば、あとからその理由をでっち上げたりとか、そういったことを含めて楽しんで作っていけたらと思ってたりする。とはいえ、軸となる部分はあまり間違えないと思うんだけど、細かい部分、ふんわりした部分なんかは、書いていて、多分、こんな感じだっただろうみたいなところがあるので、若干の不安を感じてたり&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;次の話は、既に頭の中にぼんやりあって、でもそれをいつ書き出すかは未定。気分が乗ったら書くことはあるかも。マンガも数ページ書いてあって、こっちも構想はあるんだけど、区切りまで書けてないので今のところ出さないと思う。&lt;/p&gt;&#xA;&lt;p&gt;今度は、少し内容に関することを適当に。&lt;/p&gt;&#xA;&lt;p&gt;まず、絵本のタイトルは？「月と雲」(仮)。どんな話なのかというと、まあ、これは本編で出すことがあるかもしれんので、内緒にしとこう。とはいえ、今のところ予定ないので、一生でないかもしれんけど&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、GBL S2ハイパーリーグがはじまった</title>
      <link>https://syui.github.io/blog/post/2020/06/03/pogo/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/03/pogo/</guid>
      <description>&lt;p&gt;GBLは楽しんでいますか？シーズン2のハイパーリーグが始まりましたね。&lt;/p&gt;&#xA;&lt;p&gt;現在のレートは2400あたり。初期レートは2000です。今回は少しハイパーの感想とか書きます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/026/small/4c377743e101e51f.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ランク1からランク8まで経験して、プレシーズンや高レート帯も経験してきた感想からいうと、相手の強さは、ランク1でもランク8でも全く変わりませんでした。今は変わると思います。遅れて参加したほうが良かったんじゃないかという気持ちも少しあります。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私の場合でいうと、2000でも2400でも相手の強さは変わらない印象です。みなさん、同じスキルを持ち、似たようなポケモンを使われますので。&lt;/p&gt;&#xA;&lt;p&gt;少しだけハイパーをプレイした感想ですが、タイムアップになることが増えたような気がします。&lt;/p&gt;&#xA;&lt;p&gt;相手も私も防御重視のポケモンを使っているということでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoは、レイドは攻撃力、ジムはHP、バトルは防御力という優先順位があると思っていて、GBLは、防御力重視です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>windowsの必須ツールをupdateしてみる</title>
      <link>https://syui.github.io/blog/post/2020/06/01/win/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/06/01/win/</guid>
      <description>&lt;p&gt;windowsがWSL2, terminalなどリリースしてたりしたので、色々とupdateしてみました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ scoop install curl 7z&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# powershell 7.0.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/PowerShell/PowerShell/releases&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -LO https://github.com/PowerShell/PowerShell/releases/download/v7.0.1/PowerShell-7.0.1-win-x64.msi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ msiexec.exe /package PowerShell-7.0.1-win-x64.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ENABLE_PSREMOTING&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; REGISTER_MANIFEST&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# openssh v8.1.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/PowerShell/Win32-OpenSSH/releases&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -LO https://github.com/PowerShell/Win32-OpenSSH/releases/download/v8.1.0.0p1-Beta/OpenSSH-Win64.zip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ 7z x OpenSSH-Win64.zip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp OpenSSH-Win64/* &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c:\programfiles\OpenSSH\&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ robocopy .&lt;span style=&#34;color:#ae81ff&#34;&gt;\O&lt;/span&gt;penSSH-Win64&lt;span style=&#34;color:#ae81ff&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c:\Program Files\OpenSSH\&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# terminal 1.0.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/microsoft/terminal/releases&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -LO https://github.com/microsoft/terminal/releases/download/v1.0.1401.0/Microsoft.WindowsTerminal_1.0.1401.0_8wekyb3d8bbwe.msixbundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ Add-AppxPackage ./Microsoft.WindowsTerminal_1.0.1401.0_8wekyb3d8bbwe.msixbundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;robocopy&lt;/code&gt;は例えば、sshdというprocessが起動していても上書きするので便利です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;winget&#34;&gt;winget&lt;/h3&gt;&#xA;&lt;p&gt;今までは、scoopを愛用してたけど、wingetが公式で提供され始めたので、よさそうだったら使っていきたい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;https://github.com/microsoft/winget-cli&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -LO https://github.com/microsoft/winget-cli/releases/download/v0.1.4331-preview/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.appxbundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ Add-AppxPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.appxbundle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ winget&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお、ssh経由では、wingetは使用できない感じでした。アクセス権関連ぽい気がする。これは採用しづらい&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、スポットレイトアワーなど</title>
      <link>https://syui.github.io/blog/post/2020/05/31/pogo/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/31/pogo/</guid>
      <description>&lt;h3 id=&#34;スポットレイトアワーが楽しい&#34;&gt;スポットレイトアワーが楽しい&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGoでは、色違いが登場するコミュニティデイがありますが、スポットレイトアワーというものも1週間に一度、開催されています。&lt;/p&gt;&#xA;&lt;p&gt;こういうイベント好きです。twitter見ていてもみんな楽しそう。&lt;/p&gt;&#xA;&lt;p&gt;この前、twitterでドーミラーの色違いをゲットしている人がたくさんいて、このイベント見落としていたみたい。なので、今後は、コミュデイとスポットアワーに注目してポケモンGoをやっていくと、楽しいかも。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Tuesday, June 23, 2020: Clefairy will be in the spotlight, and you’ll earn twice the XP for catching Pokémon. If you’re lucky, you might encounter Shiny Clefairy!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongolive.com/en/post/jun2020-events/&#34;&gt;https://pokemongolive.com/en/post/jun2020-events/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Clefairy&lt;/code&gt;とはピッピのことで、&lt;code&gt;6/23&lt;/code&gt;は色違いのピッピと出会えるようです。ピッピの色違い、欲しかったんですよおおお！&lt;/p&gt;&#xA;&lt;p&gt;ただ、ドンメルとコロボーシは、現時点で色違いは実装されていないような気がする。当日にも実装されていなかった場合、スルーかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ジェネレーションチャレンジが楽しかった&#34;&gt;ジェネレーションチャレンジが楽しかった&lt;/h3&gt;&#xA;&lt;p&gt;クレセリアがゲットできたので楽しかった、色違いは出なかったけど。なお、30%の確率で出たぽい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03242/&#34;&gt;https://pokemongo-get.com/pokego03242/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;最近の変更&#34;&gt;最近の変更&lt;/h3&gt;&#xA;&lt;p&gt;まず、ボックスでコスプレポケモンを選択できるようになったのはいいですね。ほとんどの人が喜んでると思う。(なぜ今まで実装しなかったんだというツッコミはなしですよっ&lt;/p&gt;&#xA;&lt;p&gt;また、「強化」の時間短縮ができるようになったのもよかったです。これも、ほとんどの人が喜んでると思う。&lt;/p&gt;&#xA;&lt;p&gt;昔は、何度も「強化」をタップして「はい」を選択し、戻ってまたタップを延々と繰り返さなければならなかったのですが、今回の変更では、一度のタップで「強化」が可能になっています。&lt;/p&gt;&#xA;&lt;p&gt;これらは、原作からの変更になるのかもしれませんけど、私は、良い判断だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、原作との兼ね合いで葛藤もあったのではないかと思っていて、どういうことかというと、例えば、原作では、「ふしぎなアメ」というものがあります。レベルアップのアイテムなんですが、これもひとつずつ使う必要がありました。すごく面倒なんですけどね、そういうものなんです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ポケモンGoでは、それを短縮する変更があって、私は良い判断だったと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;今後やってほしいイベントなど&#34;&gt;今後やってほしいイベントなど&lt;/h3&gt;&#xA;&lt;p&gt;レジスチル、ドジョッチ、リオルの色違いが欲しいなって思ってる。なので、レイドでレジスチル、スポットでドジョッチ、タマゴでリオルが出てくれたら嬉しい。&lt;/p&gt;&#xA;&lt;p&gt;また、トゲピー花飾りを持ってるので、進化させて使いたい。進化できるなら花飾りなくていいのでっ！&lt;/p&gt;&#xA;&lt;p&gt;花飾りはピチューとイーブイがあるんだけど、進化できるんだよね&amp;hellip;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、GBLの真実</title>
      <link>https://syui.github.io/blog/post/2020/05/30/pogo/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/30/pogo/</guid>
      <description>&lt;p&gt;GBLは楽しんでいますか？もうすぐシーズン2のスーパーリーグが終わりますね。&lt;/p&gt;&#xA;&lt;p&gt;私のスーパーリーグは、初期レート2000からの2200でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/021/small/3dd00ddd96f7d976.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;gblはただの運ゲー&#34;&gt;GBLはただの運ゲー&lt;/h3&gt;&#xA;&lt;p&gt;まず、GBLについてのおさらいというか基本的なことを説明します。このゲームの勝敗は運で決まります。&lt;/p&gt;&#xA;&lt;p&gt;これについては、今シーズンは自分でも検証しています。&lt;/p&gt;&#xA;&lt;p&gt;検証方法としては、メインとサブを用意し、同じポケモン、同じ時間帯、同じレート帯でバトルしました。若干、個体値はメインが有利なものを使用しました。&lt;/p&gt;&#xA;&lt;p&gt;結果は、メインは-200レート。サブは+200レートでした。&lt;/p&gt;&#xA;&lt;p&gt;2週間ほど検証を行い、スキルは同じ人物が操作しているので、もちろん一緒です。&lt;/p&gt;&#xA;&lt;p&gt;同じスキル、同じポケモン、同じ時間、同じレートでバトルしたにもかかわらず、最終的にはレート400もの差が開きました。&lt;/p&gt;&#xA;&lt;p&gt;では、何が違ったのでしょう？&lt;/p&gt;&#xA;&lt;p&gt;それは、マッチングです。環境が変わったわけでも何でもないのです。&lt;/p&gt;&#xA;&lt;p&gt;このように、GBLの勝敗は、ほぼ運によって決定します。レート差も大きく運に依存します。&lt;/p&gt;&#xA;&lt;p&gt;その後は、検証を終了して、サブを封印。メインでバトルしてました。&lt;/p&gt;&#xA;&lt;p&gt;検証で下がったレート1800から2200に上がったのが今季スーパーリーグでした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;もし開発側だったら&#34;&gt;もし開発側だったら&lt;/h3&gt;&#xA;&lt;p&gt;もし私が開発側だったとしても、そりゃ、運ゲーにしますよ。&lt;/p&gt;&#xA;&lt;p&gt;何故かと言うと、運ゲーのほうが長く遊ぶことができるからです。&lt;/p&gt;&#xA;&lt;p&gt;このポケモンを使えば絶対に勝てるとか、このテクニックを使えば絶対に勝てるなどの攻略法があった場合、長く遊ぶことができないんですよ。&lt;/p&gt;&#xA;&lt;p&gt;新しい調整やら追加やらが必要になってきて、開発側としては面倒極まりないのです。&lt;/p&gt;&#xA;&lt;p&gt;なので、開発側としても、運ゲーにします。&lt;/p&gt;&#xA;&lt;p&gt;FFIVで麻雀が流行っているのもそんな理由だと思います。なぜ、麻雀が選ばれたのか？それは運ゲーだからでしょう。&lt;/p&gt;&#xA;&lt;p&gt;GBLが運ゲーである証拠に、技のバフ率が1/10だったり、または相性があったりしますよね。みんな同じようなスキルを持ち、同じようなポケモンを使います。&lt;/p&gt;&#xA;&lt;p&gt;ですから、GBLは、最終的には運によって勝敗が決るゲームに過ぎないというわけです。&lt;/p&gt;&#xA;&lt;p&gt;これは、とても基本的なことですが、多くの人が見落としているような気がします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;良い成績のみが出てくるネット&#34;&gt;良い成績のみが出てくるネット&lt;/h3&gt;&#xA;&lt;p&gt;これを聞いて、例えば、こんな反論が予想されます。&lt;/p&gt;&#xA;&lt;p&gt;「でも、強い人は強いでしょ？」、「強い人はいつも好成績を上げている」と。&lt;/p&gt;&#xA;&lt;p&gt;これも少し違います。ガチ勢で強いと言われている人の中にもそれなりの数、レートが溶けたと言ったっきり浮上しなくなってしまった人達がいます。&lt;/p&gt;&#xA;&lt;p&gt;悪い成績は投稿されず、もう一方の良い成績を収めた人のみ投稿しているので、そのように見えるのです。&lt;/p&gt;&#xA;&lt;p&gt;また、初期レートでもかなりの差がついており、同じような勝率でも初期レートが300も400も違うことがよくあります。&lt;/p&gt;&#xA;&lt;p&gt;この差をマッチング運バトルで埋めるのは難しいことです。&lt;/p&gt;&#xA;&lt;p&gt;検証結果と同じように、同じスキル、同じポケモンを使っても、なぜか大きな差が開いてしまうことも珍しくはないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ランク10に到達できるのは、一部の強運に恵まれた人達に過ぎません。&lt;/p&gt;&#xA;&lt;p&gt;私も、強運に恵まれてさっさと辞めたいGBL。&lt;/p&gt;&#xA;&lt;h3 id=&#34;不運は重なる&#34;&gt;不運は重なる&lt;/h3&gt;&#xA;&lt;p&gt;GBLをやってると、不運が重なる連チャンを食らいます。&lt;/p&gt;&#xA;&lt;p&gt;例えば、遅延バグで3連敗したとしましょう。こういう事があると、その後も全部出し負けを食らったりとか、あるんですよね。よくあるのです。不運が重なることがよくあります。&lt;/p&gt;&#xA;&lt;p&gt;不運が重なると、レートは死にます。私は、このバグゲームで、よくGBLみたいなものを作ったなあと驚きます。&lt;/p&gt;&#xA;&lt;p&gt;バグが発生するのは仕方ありません。ですが、今のGBLシステムでは、そのバグが回復不能な致命傷を負わせています。&lt;/p&gt;&#xA;&lt;p&gt;なぜ、バグが発生することを前提とした仕組みで作らなかったのでしょうか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;心を不健康にするゲームポケモンgo&#34;&gt;心を不健康にするゲーム、ポケモンGo&lt;/h3&gt;&#xA;&lt;p&gt;GBLが実装されて以降、ポケモンGoは、心を不健康にするゲームになっています。&lt;/p&gt;&#xA;&lt;p&gt;というか、GBLをやめちゃった人、多すぎませんか。&lt;/p&gt;&#xA;&lt;p&gt;最近、バトルしていても、頭のおかしいガチ勢しか残ってない気がするんですけど、そのためか、さらに面白くなくなっています。大丈夫でしょうか、GBLは？ (自分のことを棚に上げるやつ&lt;/p&gt;&#xA;&lt;p&gt;GBLやってると疲れますし、面白くないです。5試合のうち4試合をbotと気楽に対戦したい&amp;hellip;。ガチ勢とやるのは、5試合中1試合くらいで十分です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ダイゴのポーズ&#34;&gt;ダイゴのポーズ&lt;/h3&gt;&#xA;&lt;p&gt;GBL以外は、いいゲームなんですけどねえ。&lt;/p&gt;&#xA;&lt;p&gt;とりあえず、ダイゴのポーズほしいので、がんばる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>お絵かき講座、応用編</title>
      <link>https://syui.github.io/blog/post/2020/05/29/illust/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/29/illust/</guid>
      <description>&lt;p&gt;今回は、なんとなく前回の続きでお絵かき講座でもやってみようかなと思ったのでやります。&lt;/p&gt;&#xA;&lt;p&gt;この講座を受講すれば完璧にお絵かきできるようになりますよ！(半分、嘘で、半分、本当です&lt;/p&gt;&#xA;&lt;p&gt;なお、お絵かきが苦手だと思っている人が対象です。&lt;/p&gt;&#xA;&lt;p&gt;まずは私が過去に書いた絵を見てほしいのですが、特にこの部分に注目してみてください。石ですね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/illust_2020_05_29_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;この石、実はとんでもない石なのです。この石にお絵かきのすべてが詰まっていると言っても過言ではありません！&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、この石、豪華にも3色を使っているからなのです！！&lt;/p&gt;&#xA;&lt;p&gt;まずは茶色で全体を塗りつぶして、区切りを書きます。その後、黒(透明)を2つ使う面と1つ使う面で構成されています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/illust_2020_05_29_01.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;この前のイラストを確認してみると、全部で1時間30分もかかってしまっているようで、意外と時間かかっちゃったなという感じでしたが、なんとなく意識していたのは、2面性と3面性ですかね。遠くは2面で、近くは3面です。&lt;/p&gt;&#xA;&lt;p&gt;難しいところは2面で構いません。簡単なところを3面化することで、なんとなく見栄えが良くなるかも。&lt;/p&gt;&#xA;&lt;p&gt;この石が描けたら、もう何も言うことはありません。&lt;/p&gt;&#xA;&lt;p&gt;あとはなんとなく好き勝手、自由に描いていけばいいのではと思います。&lt;/p&gt;&#xA;&lt;p&gt;自分が好きな絵柄、描きやすいものってありますよね。&lt;/p&gt;&#xA;&lt;p&gt;私は、単純で簡単なものが好きです。逆に複雑で緻密なものが苦手です。&lt;/p&gt;&#xA;&lt;p&gt;どちらにも良さがあります。例えば、簡単そうに見えるシンプルな絵柄は、ごまかしが全く効きませんから、人によっては難しいと感じる人もいます。&lt;/p&gt;&#xA;&lt;p&gt;なので、その人の絵を書けば、お絵かきなんてそれでいいんだと思います。&lt;/p&gt;&#xA;&lt;p&gt;ただのお絵描きですから、自分の好きに自由に描きましょう。&lt;/p&gt;&#xA;&lt;p&gt;お絵かき講座、応用編はこれで終了です。(何も言ってないような気もする&lt;/p&gt;</description>
    </item>
    <item>
      <title>表現の自由について考えてみよう</title>
      <link>https://syui.github.io/blog/post/2020/05/28/private/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/28/private/</guid>
      <description>&lt;h3 id=&#34;最近の世論&#34;&gt;最近の世論&lt;/h3&gt;&#xA;&lt;p&gt;最近、あまり思わしくない方向に世論が形成されていきそうな雰囲気を感じているので、あまり書きたい話ではないのですけど、今一度、表現の自由について考えてみようという内容で書いていこうと思います。&lt;/p&gt;&#xA;&lt;p&gt;まずは、少し前に芸能人の方が大勢からすごい批判を浴びることがありました。この人を芸能人Aとします。&lt;/p&gt;&#xA;&lt;p&gt;その芸能人の発言自体は不適切と判断された模様で、大多数の批判は的を得ており、適切だったと思います。&lt;/p&gt;&#xA;&lt;p&gt;しかし、批判が多かったので、それをいじめだと認定して、批判を批判する人たちまでもが登場し、色々と話題を呼びました。&lt;/p&gt;&#xA;&lt;p&gt;その時、私は、自分の考えがあったのですが、特に何も言わずスルーしていました。&lt;/p&gt;&#xA;&lt;p&gt;あの時点で私がなにかいう必要は特にないだろうと考えていたからです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今度は、TVに出ていた人がSNSで批判され、それが原因かはわかりませんが、自殺してしまうという痛ましい事案がありました。&lt;/p&gt;&#xA;&lt;p&gt;これによって、世論は急速に「批判や誹謗中傷を絶対に許さない」みたいな方向にシフト。新しい法整備も検討されているみたいです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、既に誹謗中傷などは法律によって規制され、特定も難しくはありません。&lt;/p&gt;&#xA;&lt;p&gt;この問題、どう考えていけばいいのでしょうか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;職務上の性質&#34;&gt;職務上の性質&lt;/h3&gt;&#xA;&lt;p&gt;まず最初に、芸能人が大勢から批判されたり、またはプライベートを暴露されたして、大変な目にあっている、これをどう考えればいいのかです。&lt;/p&gt;&#xA;&lt;p&gt;ある芸能人がこのようなことを言ったことがありました。&lt;/p&gt;&#xA;&lt;p&gt;「自分について良いニュースはどんどん宣伝してくれ。でも、悪いニュースを流すことは絶対に許さない。そんなことになれば、世間から批判を浴びる。いじめと変わらないじゃないか」&lt;/p&gt;&#xA;&lt;p&gt;これは芸能人の性質、自分の仕事を理解していない人の発言でした。&lt;/p&gt;&#xA;&lt;p&gt;これに対して、このような判例があります。&lt;/p&gt;&#xA;&lt;p&gt;「その情報は確かに芸能人のプライバシーに関わる情報だが、職務の性質上、それが公の利益に資するなら、そのプライバシーの要請は若干、低くなる」&lt;/p&gt;&#xA;&lt;p&gt;つまり、世間に対する多大な影響力を持っているにも関わらず、よい部分だけは報酬や称賛を得て、その人が失言したとき、批判されたときの不利益は受け付けないというのは、通らないのです。&lt;/p&gt;&#xA;&lt;p&gt;より大きな影響力には、より大きな責任が伴います。&lt;/p&gt;&#xA;&lt;p&gt;それを、自分にとって有利なものだけ受け取って、不利は絶対に受け付けないというのは、公平でもなければ、公正でもありません。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、何をどう考えようと個人の自由です。&lt;/p&gt;&#xA;&lt;p&gt;現に私自身は、芸能人Aの発言について特に何も言いませんでした。それがその人の考え方なんだろうと思ったくらいです。&lt;/p&gt;&#xA;&lt;p&gt;また、その芸能人A自身は、自分の職務上の性質を理解されているみたいで、批判は普通に受け止められてたと思います。大勢がよってたかっていじめじゃないか、そんなのは許されないなんてことを言いませんでした。&lt;/p&gt;&#xA;&lt;p&gt;ただ、批判を批判する人に関しては、そういった性質を全く理解されていないように思います。&lt;/p&gt;&#xA;&lt;p&gt;芸能人が一人の人間なら、批判する人もひとりひとりの人間です。&lt;/p&gt;&#xA;&lt;p&gt;私にとって、どちらに対しても、それがその人の考え方なんだろう以外に思うところはありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;誹謗中傷&#34;&gt;誹謗中傷&lt;/h3&gt;&#xA;&lt;p&gt;誹謗中傷は、個人を傷つけるためだけに悪意からなされたものですが、そのような表現を規制する法律は既にいくつもあります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、刑法上の侮辱罪や名誉毀損、ネット関連では、プロバイダ責任法など。&lt;/p&gt;&#xA;&lt;p&gt;このように個別的事案や少数者は、これらの法律によってケアされるべきと考えます。&lt;/p&gt;&#xA;&lt;p&gt;精神的に追い詰められてしまった人が行くところは病院であったり、専門家のところです。&lt;/p&gt;&#xA;&lt;p&gt;SNSでこういった事件が起こったとき、多くの批判や誹謗中傷を行った人達へ対処しようと考えているようですが、個人的には炎上元の個人が専門家のケアを受けられるようにしたほうが効率が良いと思います。&lt;/p&gt;&#xA;&lt;p&gt;大規模な炎上が起こるのも日に数十件くらいでしょう。炎上に加担したすべてのユーザーを対処するより、発生源を支援するほうが合理的です。&lt;/p&gt;&#xA;&lt;p&gt;そして、表現の自由を一律に制限したり、萎縮効果を発生させるような法整備に私は反対です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;表現の自由&#34;&gt;表現の自由&lt;/h3&gt;&#xA;&lt;p&gt;表現の自由という言葉は曖昧で、それがどういう意味なのか、よくわからないってことありますよね。&lt;/p&gt;&#xA;&lt;p&gt;表現の自由を簡単に説明すると「言論同士を戦わせれば、より良いものが自然と残る」という信頼を前提に構築された理論です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、批判があったとするじゃないですか。表現の自由は、そこで黙るのではなく、その批判が間違っているのなら言論には言論で対抗せよという精神の下にあるので、最も良くないことは、黙ること、口を閉じることなんです。&lt;/p&gt;&#xA;&lt;p&gt;この前、ある有名な経営者の方が、国益を損なうようなことをやろうとし、大勢の人がtwitterで批判してそれを止めるということがありました。&lt;/p&gt;&#xA;&lt;p&gt;実は、歴史において、世の中を良くしていたのは、賛美や称賛ではなく、批判であることのほうが多かったりします。&lt;/p&gt;&#xA;&lt;p&gt;今回のコロナ禍においても、批判というのは大惨事を防いだかもしれなくて、私自身は、特に何も言わなかったしやらなかったわけですが、批判してくれた人たちのおかげで、本当におかげで、本当に良かったと思っています。&lt;/p&gt;&#xA;&lt;p&gt;このように、全体の利益を考えるのなら、自由な言論市場を保障し、その環境を作っていくということは、最大の防衛線であり、最高の防衛線です。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、良いことも悪いこともあります。ですが、悪いことは現在の法律でも十分に対処可能。むしろ、自由な言論市場への抑制のほうが気になります。完璧にクリーンな言論を目指してはいけません。総合的に見ると、それは全体の利益を損ないます。萎縮効果が発生し、その効果は多くの問題ない一般人に影響を及ぼします。&lt;/p&gt;&#xA;&lt;p&gt;言論には言論で対抗する、言論同士を戦わせれば、より良いものが自然に残る、そういった信頼を含め、私は、世の中はよくなってきて、これからもっと良くなっていくと考えています。&lt;/p&gt;&#xA;&lt;p&gt;これはデータからも明らかです。世の中は過去に比べ遥かに良くなりました。山あり谷ありですが、総合的に見て、これからも、もっと良くなっていくであろうことが推察できます。&lt;/p&gt;&#xA;&lt;p&gt;表現の自由も、おそらく、このことに寄与しているのでしょう。そんなことを思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>タグを表示するようにしてみた</title>
      <link>https://syui.github.io/blog/post/2020/05/27/hugo/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/27/hugo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/tags&#34;&gt;/tags&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;タグは表示すると、整理したり、管理したり、付けるのも考えるのも覚えてるのも面倒だったりするので、表示していなかったのですが、他のブログ見てるとき、やっぱりタグあると便利だよなあと思ったので記事中に表示するようにしました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:layout/_default/single.html&#34; data-lang=&#34;html:layout/_default/single.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $taxo := &amp;#34;tags&amp;#34; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with .Param $taxo }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;strong&lt;/span&gt;&amp;gt;tag{{ if gt (len .) 1 }}s{{ end }}:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;strong&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{ range $index, $director := . }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{{- if gt $index 0 }}, {{ end -}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;{{ with $.Site.GetPage (printf &amp;#34;/%s/%s&amp;#34; $taxo $director) -}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ $director }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{{- end -}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{- end -}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:layout/_default/list.html&#34; data-lang=&#34;html:layout/_default/list.html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $s := path.Dir (.Permalink | relURL) }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $t := index (split $s &amp;#34;/&amp;#34;) 1 }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if eq $t &amp;#34;tags&amp;#34; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{- range $termName, $index := .Site.Taxonomies.tags }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;relLangURL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}{{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;termName&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;urlize&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&amp;#34;&lt;/span&gt;&amp;gt;{{ $termName }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{{- end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ノベルゲームを実機でテストしてみた</title>
      <link>https://syui.github.io/blog/post/2020/05/25/app/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/25/app/</guid>
      <description>&lt;p&gt;nexus7, iphoneseでテストしてみました。調整も一通り終了したので、releasesにて配布します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/game/releases/tag/v3.0&#34;&gt;https://github.com/syui/game/releases/tag/v3.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;いまのところ、対応はmac, win, ios, androidとなっています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/android_yui_screenshot_20200525-093412.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;やったこと&#34;&gt;やったこと&lt;/h2&gt;&#xA;&lt;h3 id=&#34;アイコン調整&#34;&gt;アイコン調整&lt;/h3&gt;&#xA;&lt;p&gt;アイコンがぼやけてたので、シャープ強にしてから変換しました。&lt;/p&gt;&#xA;&lt;p&gt;また、xcodeでのアイコンの設定が分かりづらかったのですが、サイズのあった.pngをprojectのImages.xcassets/AppIcon.appiconset/に置きます。そして、Contents.jsonを書きます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:Images.xcassets/AppIcon.appiconset/icon.zsh&#34; data-lang=&#34;sh:Images.xcassets/AppIcon.appiconset/icon.zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/zsh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Images.xcassets/AppIcon.appiconset/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# use : icon_1024x1024.png&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 20x20! icon_1024x1024.png icon-20.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 40x40! icon_1024x1024.png icon-20@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 60x60! icon_1024x1024.png icon-20@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 80x80! icon_1024x1024.png icon-40@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 120x120! icon_1024x1024.png icon-40@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 180x180! icon_1024x1024.png icon-60@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -rf icon-20@2x.png icon-40.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -rf icon-20@3x.png icon-60.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -rf icon-40@3x.png icon-60@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 29x29! icon_1024x1024.png icon-29.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 58x58! icon_1024x1024.png icon-29@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 87x87! icon_1024x1024.png icon-29@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 76x76! icon_1024x1024.png icon-76.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 152x152! icon_1024x1024.png icon-76@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mogrify -resize 167x167! icon_1024x1024.png icon-83.5@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -f ./Contents.json &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;#34;images&amp;#34; : [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-20@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;20x20&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-20@3x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;3x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;20x20&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-29@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;29x29&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-29@3x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;3x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;29x29&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-40@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;40x40&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-40@3x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;3x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;40x40&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-60@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;60x60&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-60@3x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;iphone&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;3x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;60x60&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-20.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;1x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;20x20&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-20@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;20x20&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-29.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;1x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;29x29&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-29@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;29x29&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-40.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;1x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;40x40&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-40@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;40x40&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-76.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;1x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;76x76&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-76@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;76x76&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon-83.5@2x.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ipad&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;2x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;83.5x83.5&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;filename&amp;#34; : &amp;#34;icon_1024x1024.png&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;idiom&amp;#34; : &amp;#34;ios-marketing&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;scale&amp;#34; : &amp;#34;1x&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;size&amp;#34; : &amp;#34;1024x1024&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;#34;info&amp;#34; : {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;author&amp;#34; : &amp;#34;xcode&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;version&amp;#34; : 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#39;&lt;/span&gt; &amp;gt; ./Contents.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;音が出ない&#34;&gt;音が出ない&lt;/h3&gt;&#xA;&lt;p&gt;m4aにすると音が出るようになる。ただし、m4aは、tyranorider(web-browser)では出ないので、webでは使えなそう。mp3と同時に書く、連続して書く方法もあるらしい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ノベルゲームをiosとandroid用に調整してみた</title>
      <link>https://syui.github.io/blog/post/2020/05/24/app/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/24/app/</guid>
      <description>&lt;p&gt;前回は、画面の調整などをしていなかったので、今回は、調整してみました。&lt;/p&gt;&#xA;&lt;p&gt;まずtyranoscriptは、画面サイズを調整するのがそこそこに面倒でした。具体的には、背景画像などのサイズをimagemagickなどで変換し、ボタンの配置を調整しました。androidは、&lt;code&gt;data/system/Config.js&lt;/code&gt;の以下を調整すればいけました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:www/data/system/Config.js&#34; data-lang=&#34;js:www/data/system/Config.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ml&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mw&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mh&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、アイコンですが、こちらも面倒です。基本的には、&lt;code&gt;cordova&lt;/code&gt;のフォルダ構成で以下の場所に配置します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls ./platforms/ios/yui/Images.xcassets/AppIcon.appiconset/*.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls ./res/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Android,ios&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;変換スクリプトは以下を使います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hibara/create-ios-all-icons-shellscript&#34;&gt;https://github.com/hibara/create-ios-all-icons-shellscript&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ios&#34;&gt;ios&lt;/h3&gt;&#xA;&lt;p&gt;iosはxcodeでbuildします。実機でdebugしました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm i -g cordova&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cordova platform add ios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cordova compile ios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 更新&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim www/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cordova prepare ios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls ./platforms/ios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ open -a Xcode ./platforms/ios/yui.xcodeproj&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ただ、apple storeで配布するには、年間1万円以上の費用がかかるみたいです。これでは、配布しても回収できませんね。それに、審査も厳しそうです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/app_mobile_html5_ios_2020-05-24-23-20-28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;android&#34;&gt;android&lt;/h3&gt;&#xA;&lt;p&gt;androidはandroid sdkでcli toolやemulateをdownloadし、sdkmanでgradleをinstallします。cordovaがpathからこれらを実行し、buildします。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cordova platform add android&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cordova compile android&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# android sdk install&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# curl -s get.sdkman.io | bash&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sdk install gradle&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# device download&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# start emulate&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cordova emulate android&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://cordova.apache.org/docs/ja/latest/guide/platforms/android/&#34;&gt;https://cordova.apache.org/docs/ja/latest/guide/platforms/android/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた26</title>
      <link>https://syui.github.io/blog/post/2020/05/20/illust/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/20/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>xqというcli toolにtxtをjson{body:}に出力するオプションを追加してみた</title>
      <link>https://syui.github.io/blog/post/2020/05/17/golang/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/17/golang/</guid>
      <description>&lt;p&gt;shellの&lt;code&gt;cat&lt;/code&gt;では、github-apiのpostでjson errorが出る場合があったので、&lt;a href=&#34;https://github.com/syui/xq&#34;&gt;xq&lt;/a&gt;にtxt, mdなどのファイルをjsonのbodyに入れて出力するコマンドを追加してみました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ xq j ./index.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+++\ndate = \&amp;#34;2020-05-17\&amp;#34;\ntags = [\&amp;#34;golang\&amp;#34;]\ntitle = \&amp;#34;\&amp;#34;\nslug = \&amp;#34;golang\&amp;#34;\n+++\n\n\n[xq](https://github.com/syui/xq)にtxt, mdをjsonのbodyに入れるコマンドを追加した。\n\n```sh\n&lt;/span&gt;$&lt;span style=&#34;color:#e6db74&#34;&gt; xq j ./index.md\n```\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでgh-actionsに以下のような書き方ができます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -X POST &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: token &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;GITHUB_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`xq j index.txt`&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;URL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;github-apiのpostは、titleなども加えられるのでbodyだけでは応用性は低いですが、個人的に使わない機能を追加してもしょうがないので、必要最小限で。&lt;/p&gt;&#xA;&lt;p&gt;どんどんと、なんのツールかわからなくなってきましたね！&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;でも新しく作るのとか、分けるのとか面倒なんだよなあ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>pull-reqが来たときgithub-actionsを実行してhtml,sqlをreviewする</title>
      <link>https://syui.github.io/blog/post/2020/05/16/arch/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/16/arch/</guid>
      <description>&lt;p&gt;今回は、pull-reqが来たときgh-actionsを実行してlintでreviewやらreview-supportをするbotを作ってみた話。突然やる気になって作り始めてしまったという。&lt;/p&gt;&#xA;&lt;p&gt;sql lintは、&lt;code&gt;sqlint&lt;/code&gt;を使いました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo gem i sqlint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sqlint index.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml:.github/workflows/reviewbot.yml&#34; data-lang=&#34;yml:.github/workflows/reviewbot.yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pull_request&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;types&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;opened&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#on:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  push:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#    branchs:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#    - test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;comment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Set up Ruby 2.6&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/setup-ruby@v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ruby-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2.6&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;.x&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gem i&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gem i sqlint&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;run sqlint&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_TOKEN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_REPOSITORY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.repository }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;URL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.event.pull_request.comments_url }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;GITHUB_PR_NUMBER&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.event.pull_request.number }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#pull_number=$(jq --raw-output .pull_request.number &amp;#34;$GITHUB_EVENT_PATH&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#pull_number=1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#URL=https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${pull_number}/comments&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# review sqlint&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;if ! lint_body=`sqlint views/news/index.sql`;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;lint_body=`sqlint views/news/index.sql|tr &amp;#39;&amp;#34;&amp;#39; &amp;#34;&amp;#39;&amp;#34;|tr &amp;#39;\n&amp;#39; &amp;#39;.&amp;#39;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;echo $lint_body&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;curl -X POST \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;-&lt;span style=&#34;color:#ae81ff&#34;&gt;H &amp;#34;Authorization: token ${GITHUB_TOKEN}&amp;#34; \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;-&lt;span style=&#34;color:#ae81ff&#34;&gt;d &amp;#34;{\&amp;#34;body\&amp;#34;: \&amp;#34;### :exclamation: sqlint ...no\n${lint_body}\&amp;#34;}&amp;#34; \&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;${URL}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここでは、&lt;code&gt;sqlint views/news/index.sql&lt;/code&gt;をcheckして、結果をgithub-pullreq-commentにpostしています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスのことがわかってきたので解説してみる</title>
      <link>https://syui.github.io/blog/post/2020/05/15/pokemon/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/15/pokemon/</guid>
      <description>&lt;p&gt;ボチボチやってるうちにポケマスのことがわかってきたので、裏技？も含めて解説します。ただ、知ってるよという人は多いかもね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;センターにお気に入りのトレーナーを呼び寄せる&#34;&gt;センターにお気に入りのトレーナーを呼び寄せる&lt;/h3&gt;&#xA;&lt;p&gt;ポケセンには、色々なトレーナーがやってきます。お気に入りを優先することもできます。&lt;/p&gt;&#xA;&lt;p&gt;チーム編成からトレーナーを選んで、左上にあるハートマークにチェックを入れます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas-2020-05-15-12-53-47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;トレーナーやポケモンのモデルを自在に動かせる&#34;&gt;トレーナーやポケモンのモデルを自在に動かせる&lt;/h3&gt;&#xA;&lt;p&gt;トレーナーを選択して、&lt;code&gt;+&lt;/code&gt;ボタンをタップしてから表示されるトレーナーやポケモンをタップすればモデルを自在に動かせます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas-2020-05-15-12-55-36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;最強のトレーナーは誰だ&#34;&gt;最強のトレーナーは誰だ？&lt;/h3&gt;&#xA;&lt;p&gt;いまのところ、&lt;code&gt;レッド+カツラ&lt;/code&gt;, &lt;code&gt;シロナ+アセロラ&lt;/code&gt;のペアが最強とされています。&lt;/p&gt;&#xA;&lt;p&gt;シロナを引きたかったので、この前、ダイヤを全部使いました。サービス終了したら取っといても仕方ないし、使えるときに使っとくのも悪くないとか思って。&lt;/p&gt;&#xA;&lt;p&gt;そしたら、結構当たりが出ました。シロナ、カミツレ、シトロン、ヒビキ、カリンが当たりましたね。すごい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas-2020-05-15-12-55-15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポテンシャルも当たりを引きまくっていて、なんかすごい。&lt;/p&gt;&#xA;&lt;p&gt;シロナ+アセロラのペアは、バトルヴィラですごく活躍できそうです。&lt;/p&gt;&#xA;&lt;p&gt;ということで、レッド、オーキド、シロナ、アセロラがS評価となります。ボードとかもこの優先でいいでしょう。カツラは、他のチームや単体で使いづらいので、A評価かな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;後悔したこと&#34;&gt;後悔したこと&lt;/h3&gt;&#xA;&lt;p&gt;アセロラが実は強かったこと知りませんでした。&lt;/p&gt;&#xA;&lt;p&gt;今現在、レッド、シロナ、アセロラを優先的に育てるといいと思っているのですが、カードを重複させないとボードの一部が開放されませんので、カードレベルを上げなきゃいけません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas-2020-05-15-12-54-41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;アセロラのイベントやってたとき、アセロラ弱いし別にいいかと思って、スルーしてしまってるんですよね&amp;hellip;。カードレベル上げるチャンスだったのに。&lt;/p&gt;&#xA;&lt;p&gt;あのとき、やっときゃよかった！&lt;/p&gt;&#xA;&lt;p&gt;そもそもアセロラは結構お気に入りなのに、なぜスルーしてしまったのか。&lt;/p&gt;&#xA;&lt;p&gt;あのときは、ボードとかカード重複の効果とか正直良くわかってなかったな。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemas-2020-05-15-12-55-59.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGo、最近の進捗</title>
      <link>https://syui.github.io/blog/post/2020/05/14/pokemon/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/14/pokemon/</guid>
      <description>&lt;p&gt;ポケモンGoの最近の進捗です。色違いは、ダークライトとかピカチュウが嬉しかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-05-14-10-33-07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;コスプレのポケモンがハロウィンあたりから急に進化できないような仕様になってしまったのが残念です。これ進化できるように元に戻してほしさある。トゲピーの花飾りだけでも頼む。トゲピーは昔から色違いが欲しくて、やっと来たと思ったら、進化できないぞ！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-05-13-13-04-30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ドーブルのメダルをやっとゲットしました。これは&amp;hellip;苦行！もうやらなくていいので、ホッとしてる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-05-13-13-05-17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;gbl-プレシーズン--シーズン1&#34;&gt;GBL プレシーズン &amp;amp; シーズン1&lt;/h3&gt;&#xA;&lt;p&gt;GBLのプレシーズンとシーズン1の大体の成績です。どちらもランク9です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-05-06-6-32-27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;どちらも共通するパターンを食らってしまっています。&lt;/p&gt;&#xA;&lt;p&gt;最後に各リーグが混ざる時期があるじゃないですか。そこでは、勝率が50%くらいになってしまい、基本は上がりません。同じ場所をウロチョロするしかない。&lt;/p&gt;&#xA;&lt;p&gt;ただ、バグで1日の全バトルを全敗するみたいな事が稀に発生するんですよね、未だに。&lt;/p&gt;&#xA;&lt;p&gt;これは仕方ないことかもしれませんが、この時期にこれを食らってしまうと、割とどうしようもない。&lt;/p&gt;&#xA;&lt;p&gt;これを食らうとレートは-100から-200ほど一気に下げます。各リーグが混ざる前はこれを食らってもなんとかマイナスからプラスに挽回できたのですが、各リーグ混ざったあとは、完全に勝率が50%程度になってしまうわけですから、一旦下げたら、下げたところに固定されてしまう感じです。&lt;/p&gt;&#xA;&lt;p&gt;シーズン1は、計3回ほどこれを食らってしまっています。プレシーズンはもっと多かった。&lt;/p&gt;&#xA;&lt;p&gt;回避策は、各リーグが混ざった時期に参加しないこと。ついつい参加して酷い目にあってる。バグが発生したときもすぐにやめればいいのですが「勝つまでやめない」みたいな心境になってしまって、結局、やられてしまうパターン。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gbl-シーズン2&#34;&gt;GBL シーズン2&lt;/h3&gt;&#xA;&lt;p&gt;GBLのシーズン2が始まりました。ランク7になりました。初期レートは2000でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/old/pokemongo-2020-05-14-1-14-09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;前回と同様、ランク1でもランク7でも相手の強さは全く変わりませんでした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>rustで作るcli tool</title>
      <link>https://syui.github.io/blog/post/2020/05/12/rust/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/12/rust/</guid>
      <description>&lt;p&gt;私は、cli(command line interface) toolを好んで使うのですが、自分で作ることもあります。&lt;/p&gt;&#xA;&lt;p&gt;特に、ワンバイナリなtoolは、CIやdockerを回すときに便利でgolangをよく使います。goはshellとの親和性が高いので色々な場所で扱いやすく、非常に素晴らしい言語です。&lt;/p&gt;&#xA;&lt;p&gt;ただ、最近は、rustが人気みたい。理由としては、高速で、サイズが小さく、安全であることが挙げられます。デメリットはコンパイルが遅いこと。&lt;/p&gt;&#xA;&lt;p&gt;しかし、rustも非常に魅力なので、&lt;code&gt;base64 {encode,decode}&lt;/code&gt;などをcli tool化しながら、rustを学んでいこうという記事です。&lt;/p&gt;&#xA;&lt;p&gt;まず、テンプレを作成します。&lt;code&gt;src/main.rs&lt;/code&gt;が本体になります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cargo new udrs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd udrs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim src/main.rs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここで、cli optionなどを書きやすくするframeworkの&lt;a href=&#34;https://github.com/ksk001100/seahorse&#34;&gt;seahorse&lt;/a&gt;を導入します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust:src/main.rs&#34; data-lang=&#34;rust:src/main.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::env;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; seahorse::{App, Command, Context};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; args: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; env::args().collect();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; App::new()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.name(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_NAME&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.author(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_AUTHORS&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.version(env!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CARGO_PKG_VERSION&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cli_tool [command] [x] [y]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;.command(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;Command::new()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;.name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;.usage(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;udrs t {}&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;.action(t),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;app.run(args);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(_c: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world.&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,t);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml:Cargo.toml&#34; data-lang=&#34;toml:Cargo.toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;dependencies&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;seahorse&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.7.1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では、実行してみましょう。ここでは、オプションを&lt;code&gt;t&lt;/code&gt;で指定しています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>rustで作るcli toolに入門してみる</title>
      <link>https://syui.github.io/blog/post/2020/05/10/rust/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/10/rust/</guid>
      <description>&lt;p&gt;前からrustでcli toolを作ってみようかなと思っていたので作ってみました。&lt;/p&gt;&#xA;&lt;p&gt;こちらの記事がわかりやすすぎた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/watawuwu/items/b20abfae62f76e4b4c0c&#34;&gt;https://qiita.com/watawuwu/items/b20abfae62f76e4b4c0c&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;rustでコードを書くところから、toolのテストやmakefileでの自動化、ciでbuildしてtoolを配布するところまで、おおよそ必要な情報すべてが解説されています。&lt;/p&gt;&#xA;&lt;p&gt;rustで作ったcli tool(そのまんま) :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/udrs&#34;&gt;https://github.com/syui/udrs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;travis-ciでgithub-releasesにupload&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo gem i travis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ travis login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ travis encrypt $GITHUB_ACCESS_TOKEN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat .travis.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deploy:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  api_key:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    secure: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;makefileでtaskの自動化&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;LOG_LEVEL := debug&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;APP_ARGS  := &amp;#34;foo%20bar&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;export RUST_LOG=url=$(LOG_LEVEL)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;PREFIX := $(HOME)/.cargo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;cargo run $(APP_ARGS)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;test&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;cargo test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;check&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;cargo check $(OPTION)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;install&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;cargo install --force --root $(PREFIX) --path .&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ make test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;base64のencodeを追加してみることにしました。cliは&lt;code&gt;seahorse&lt;/code&gt;がおすすめです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5曲目の修正に苦戦した話</title>
      <link>https://syui.github.io/blog/post/2020/05/08/vocaloid/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/08/vocaloid/</guid>
      <description>&lt;p&gt;自分の曲のうち5曲目に作ったものだけ、聴いててあれとなってたので、歌だけ削除してた。&lt;/p&gt;&#xA;&lt;p&gt;最近になってやっと、久しぶりに作曲してみようという気分になったので、この曲の歌の部分を作り直すことをやってた。が、昔、一度失敗してるだけに、なかなかうまくいかなかった。&lt;/p&gt;&#xA;&lt;p&gt;作曲も感覚だけでやってるところがあるので、こういう伴奏、苦手なのかもしれない。&lt;/p&gt;&#xA;&lt;p&gt;で、何度も作り直してると、やっと、まあ、これなら&amp;hellip;というものができたと思う。&lt;/p&gt;&#xA;&lt;p&gt;できたと思うという曖昧な言い方なんだけど、創作物というものは、これでいいかなと思ったものでも次の日見てみると、ひどいなこりゃとなってることが多い。よって、時間をあけてみないとわからないところがあったりする。&lt;/p&gt;&#xA;&lt;p&gt;なので、これでもダメかもしれない。けど、今のところは許容範囲、それもかなり低いレベルの許容範囲内ギリギリの部分だと思ってる。&lt;/p&gt;&#xA;&lt;p&gt;私は、自分で作った曲をx2の速度で稀に聴くことがあるんだけど、他はふーんって感じで、5曲目だけはなんじゃこりゃって感じだったが、今回、ふーんって感じになってると思う。&lt;/p&gt;&#xA;&lt;p&gt;やったこととしては、ズレてるなあと思ったので、ブロックをそれぞれ1つずつ落とした。歌の冒頭って結構合わないこと多くて難しいんだけど、始まりからじゃなく部分の終わりを持ってくることにした。間を開けることにした。以上。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/music&#34;&gt;/music&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>お絵かき講座、修了編</title>
      <link>https://syui.github.io/blog/post/2020/05/08/illust/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/08/illust/</guid>
      <description>&lt;p&gt;今回は、過去キャラを修正するついでにお絵かき講座でもやってみようかなと思ったのでやります。&lt;/p&gt;&#xA;&lt;p&gt;この講座を受講すれば完璧にお絵かきできるようになりますよ！(半分、嘘で、半分、本当&lt;/p&gt;&#xA;&lt;p&gt;なお、お絵かきができない、苦手だと思っている人が対象です。&lt;/p&gt;&#xA;&lt;p&gt;早速ですが、まずは月を好きなように描いてみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/014/small/4fc73dc235c4afc1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;できましたか？&lt;/p&gt;&#xA;&lt;p&gt;普通は、丸を描いて、色を塗りますよね。誰でも最初はそんな感じになります。&lt;/p&gt;&#xA;&lt;p&gt;私もできました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/012/small/86acab91d428230b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;半分は黒にし、半分は黄色です。&lt;/p&gt;&#xA;&lt;p&gt;真ん中で線を引いて、両色で塗りつぶせばいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;同じようにやってみてください。&lt;/p&gt;&#xA;&lt;p&gt;できました？&lt;/p&gt;&#xA;&lt;p&gt;それはすごい。これであなたも絵をかけます。&lt;/p&gt;&#xA;&lt;p&gt;なんでこんなことでと思いました？&lt;/p&gt;&#xA;&lt;p&gt;でも、違うのですよ、それは。&lt;/p&gt;&#xA;&lt;p&gt;私が描いている絵の本質は、この半円の月、半月にあります。&lt;/p&gt;&#xA;&lt;p&gt;ですから、これを描けたということは、あなたは絵をかけるということです。&lt;/p&gt;&#xA;&lt;p&gt;いや、本当は最初からできたのでしょう。気づいていなかっただけで。&lt;/p&gt;&#xA;&lt;p&gt;次は、お絵かき修了編です。ここから難易度が少しだけ上がります。気を引き締めてください。&lt;/p&gt;&#xA;&lt;p&gt;もう一度同じように、月を描いてみてほしいのですが、今度は、黒ではなく、&lt;code&gt;透過な黒&lt;/code&gt;を使って同じようなことをしてみてください。全体を黄色で塗りつぶしたあと、黒(透明)で真ん中に線を引いて、片方を塗りつぶします。&lt;/p&gt;&#xA;&lt;p&gt;できましたか？&lt;/p&gt;&#xA;&lt;p&gt;私もできました。こんな感じになりますね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/016/small/88a05d55f21449ff.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;わかりにくい方は、以下の画像を参考にしてみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/010/small/af00c0c43ade21ed.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これができたなら、あなたは、もうお絵かきマスターです。よく頑張りました。&lt;/p&gt;&#xA;&lt;p&gt;例えば、キャラを描くとき、同じ色のままにして完成ではいけません。これはパッと見でもわかるんですが、なんかかっこよくないんですよね。影をつけないと、かっこよくないのです。&lt;/p&gt;&#xA;&lt;p&gt;逆に言うと、影がうまくついていると、かっこよく見えます。&lt;/p&gt;&#xA;&lt;p&gt;では、影をうまくつけるにはどうするのでしょう。&lt;/p&gt;&#xA;&lt;p&gt;究極の答えとしては「半分」を意識するということになります。&lt;/p&gt;&#xA;&lt;p&gt;例えば、半月はシンプルで、かつデザインに優れています。お絵かきにおける私の哲学です。&lt;/p&gt;&#xA;&lt;p&gt;ですから、半分を若干黒くしたり、または、白くしたりすることがとても重要。これは、透明色で上塗りすることで実現します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、黒が基本色の場合、白(透明)で上塗りです。白(透明)でパーっと境界線を引いて塗りつぶしですね。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/011/small/981b713f53bfd258.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;境界線は、迷ったら半分を意識します。腕の中心、腕の真ん中、足の半分、斜めに半分など。下記の絵を見て、若干、色が黒くなっている部分に注目してみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/015/original/abbb4de9d7847a25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;同じような青や茶色でも微妙に違いますよね。この微妙な色の違いが、パッと見の印象を決定づけます。&lt;/p&gt;&#xA;&lt;p&gt;また、丁寧に仕上げるときは、透明黒・白の濃さを段階に分けて調整していきます。最大で3段階くらいでしょうか。私は写真を描きたいわけではないので、必ずしも現実と一致している必要はないと考えます。理想で構わないし、パッと見でいい感じなら、それが正解です。逆に、いくら現実に合わせていても、パッ見でダサかったら、私の価値基準では間違いとなります。&lt;/p&gt;&#xA;&lt;p&gt;次に、使用する色についても少しだけ話します。私が一つのキャラに使う色は、3色くらいです。それを濃くしたり、薄くしたりで使います。とはいえ、まずはそのキャラのテーマ色、例えば、キョウスケなら紫、アイなら白というふうに、思い浮かべる色を決めるようにしています。上記のイラストはかなり微妙ですが、おそらく、茶色でしょう。&lt;/p&gt;&#xA;&lt;p&gt;基本的にはパレットの基本色から選ぶことが多いです。仮にその時々で選びぬいた色だった場合、次に塗るときも大変です。&lt;/p&gt;&#xA;&lt;p&gt;基本を大切に。&lt;/p&gt;&#xA;&lt;p&gt;これでお絵かき講座は修了です。よくできました。&lt;/p&gt;&#xA;&lt;p&gt;私は、迷ったとき、半月を思い出すようにしています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/012/small/86acab91d428230b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;それは簡単ではあるものの、シンプルで美しく、かつデザイン性も優れていると考えているからです。&lt;/p&gt;&#xA;&lt;p&gt;私が絵を描くときの基本です。&lt;/p&gt;&#xA;&lt;p&gt;なお、月は定規を使って描いても良かったんですが、これは難しい問題でもあります。&lt;/p&gt;&#xA;&lt;p&gt;一度、カチッと仕上げてしまうと、例えば、背景とかですが、カチッとしてしまうと、他と合わなくなる可能性が高くなるというか、雑に描けなくなってしまうので、使い所は難しかったりします。&lt;/p&gt;&#xA;&lt;p&gt;私の場合、一枚絵なら、定規を使う場合もありますが、マンガなら使わないでしょう。今回はお絵かき講座ということもあり、使いませんでした。完璧を求めるような内容ではないからです。ただ、デザイン性を考えるなら、使ったほうがいいですね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスをプレイしてみた6</title>
      <link>https://syui.github.io/blog/post/2020/05/07/pokemon/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/07/pokemon/</guid>
      <description>&lt;p&gt;ポケマスの記事を書くのは前回で終了と思ってたんですが、ちょっと難易度のタスクが上がってたので、動画を撮ってみました。&lt;/p&gt;&#xA;&lt;div style=&#34;position:relative;height:0;padding-bottom:56.25%&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/UKKjGgTU1cQ?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&amp;amp;ecver=2&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; style=&#34;position:absolute;width:100%;height:100%;left:0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;p&gt;高火力で端っこの奴らを倒します、最速です。私は、リザードンを使いましたが、炎タイプがいいですね。なお、倍速にしてると、相手になんかシールドを貼られてしまうので、注意。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、私は最初のクリアでは、リザードンでふぶき打ってくるやつ倒しました。そういう選択肢もあるということで。&lt;/p&gt;&#xA;&lt;p&gt;次に、ホウオウのB技で天候をひざしに変更します。ふぶきのやつ倒してない場合、ソーラービームやるといいです。&lt;/p&gt;&#xA;&lt;p&gt;最後に、炎タイプでジュカインをやっつけます。&lt;/p&gt;&#xA;&lt;p&gt;そういえば、最後にやってたリフレクター、意味なかったな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた25</title>
      <link>https://syui.github.io/blog/post/2020/05/06/illust/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/06/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;なんか書きたい気分だったので、描いてみたやつ。内容自体は、雑な感じになってる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスをプレイしてみた5</title>
      <link>https://syui.github.io/blog/post/2020/05/05/pokemon/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/05/pokemon/</guid>
      <description>&lt;p&gt;基本的な立ち回りを紹介。バトルヴィラが一番難しいので、バトルヴィラ用の戦い方を中心に解説します。ゲームがどんな感じかわかりにくいと思ったので、今回は動画を撮ってみた。&lt;/p&gt;&#xA;&lt;p&gt;あくまで私の場合ですが、&lt;/p&gt;&#xA;&lt;p&gt;まずは、ミュウでスピードスターを連発します。これは、回避アップ+デバフ+B技溜めが狙いです。スピードスターを連発してると、たまに回避アップします。バトルヴィラでは、相手の攻撃を避けることが最も重要です。&lt;/p&gt;&#xA;&lt;p&gt;スピードスターでゲージが回復しなかった場合、イーブイのたいあたりで補完してもよいでしょう。とりあえず、B技をすばやく実行することが重要で、威力は低くても速い技を連発します。&lt;/p&gt;&#xA;&lt;p&gt;B技ができるようになったら、リザードンで一気に落とせるか、落とせないか判断します。&lt;/p&gt;&#xA;&lt;p&gt;もし落とせないようなら、イーブイのB技で全体バフします。防御が上がるので、防御型で戦えます。&lt;/p&gt;&#xA;&lt;p&gt;バトルヴィラではトレーナー技を消費してしまい使えない事も多いので、イーブイのB技はそこそこ役に立ちます。&lt;/p&gt;&#xA;&lt;p&gt;ただし、イーブイをピカチュウに変えてもいいと思っていて、リザードンとミュウの次にボードを進めるのはピカチュウにしようかと思っています。キズぐすり技回復が魅力。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、攻略は人それぞれ。自分なりの勝ち筋を見つけてやればいいでしょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスをプレイしてみた4</title>
      <link>https://syui.github.io/blog/post/2020/05/04/pokemon/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/04/pokemon/</guid>
      <description>&lt;h3 id=&#34;ボックスサーチ&#34;&gt;ボックスサーチ&lt;/h3&gt;&#xA;&lt;p&gt;今までのイベントで一番楽しかったと思います。このシステムはいいですね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;イベント&#34;&gt;イベント&lt;/h3&gt;&#xA;&lt;p&gt;再登場をあまり見ないので、イベントの希少価値が上がってきました。&lt;/p&gt;&#xA;&lt;p&gt;なので、ホウオウのイベントは、やっておくべきと考えます。これは新実装なので、これから新実装、再登場なしという流れになるかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;はじめての攻略&#34;&gt;はじめての攻略&lt;/h3&gt;&#xA;&lt;p&gt;これから始める人向けに攻略法を書きます。&lt;/p&gt;&#xA;&lt;p&gt;アタッカー、シールド、サポート役が必要になります。それぞれの役はアイコンみたいなものでわかると思います。&lt;/p&gt;&#xA;&lt;p&gt;アタッカーが特に重要で、これがいないと攻略できないので、アタッカーを集めるところからですね。&lt;/p&gt;&#xA;&lt;p&gt;イベントがあるので、イベント中にゲットできるアタッカーがおすすめです。今はホウオウですが、ホウオウをゲットして育てればいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;シールド役はデフォルトのメイが使えます。サポート役はあればいいかなくらい。全バフ、回復を意識するといいでしょう。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;シルバー(ホウオウ)、メイ(ツタージャ)、主人公(ピカチュウ)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;一日にやること&#34;&gt;一日にやること&lt;/h3&gt;&#xA;&lt;p&gt;ボードに使えるアイテムがもらえるので、エクストラはやるべき。また、経験値も多いので、上限でないヤツ入れるといいかも。&lt;/p&gt;&#xA;&lt;p&gt;あと、バトルヴィラは面白いので、やるといいかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガチャとダイヤ&#34;&gt;ガチャとダイヤ&lt;/h3&gt;&#xA;&lt;p&gt;プレイしているとダイヤが貯まってきますが、使うのはおすすめしません。ダイヤは貯めておきましょう。&lt;/p&gt;&#xA;&lt;p&gt;貯めておくと、上限確定が狙えますが、これには期限がありますので、貯めておいて一気に使うのが最もおすすめです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイ歴&#34;&gt;プレイ歴&lt;/h3&gt;&#xA;&lt;p&gt;私のプレイ歴は短くて、このゲームがリリースされた初期に数日プレイしていました。それ以降はプレイしてなくて、レッドが実装されたと聞いて、最近になって復帰しました。 (これを復帰と言っていいのかは疑問&lt;/p&gt;&#xA;&lt;p&gt;初プレイのときは、メイ(ツタージャ)、コルニ(ルカリオ)、初回限定でもらえたダイヤを使ったガチャで当たったクリス(ワニノコ)でやってました。攻略きつかった。&lt;/p&gt;&#xA;&lt;p&gt;復帰したときは、ダイヤが貯まってたので、それを全部使ってレッド(リザードン)を上限確定で引きました。 (ポケマスに天井があって助かった&lt;/p&gt;&#xA;&lt;p&gt;レッドを手に入れてから、次のイベントにオーキド(ミュウ)が来たので、それを育てて戦っているという感じです。なお、オーキドは期間限定でログインした全員に配布されました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;何が強いの&#34;&gt;何が強いの？&lt;/h3&gt;&#xA;&lt;p&gt;私は、レッド(リザードン)とオーキド(ミュウ)を使います。&lt;/p&gt;&#xA;&lt;p&gt;レッド、オーキドしか使ってこなかったので、他をあまり知りませんが、レッド、オーキドは、かなり強いと思います。持っていればそれを育てるといいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;個人評価ですが、レッドとオーキドはS評価で、他はA評価。他を知らないだけというのはある。&lt;/p&gt;&#xA;&lt;p&gt;情報を見る限りでは、みんな好きなやつを使って攻略してるみたい。なので、手に入ったもの、自分が好きなものを使っていけばいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;お気に入りは、レッド(リザードン)、オーキド(ミュウ)、リーフ(イーブイ)のパーティーです。&lt;/p&gt;&#xA;&lt;p&gt;無駄に育ててしまったなあと思うカードも少しあるので、個人的なおすすめを紹介。逆に言うと、これ以外は育てなくても良かったなと。プレイ歴が短いのでアイテムも不足してますし。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;レッド(リザードン)、オーキド(ミュウ)、リーフ(イーブイ)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;主人公(ソルガレオ)、ラン(ルナトーン)、メイ(ツタージャ)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;サカキ(ミュウツー)、コトネ(メガニウム)、フヨウ(サマヨール)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;下記は今の手持ちです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/009/small/dbb05481006b2f9c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;主人公は重複して使えないため、育てるやつを1つに限定したほうが効率的ですが、主人公(アチャモ)、主人公(ピカチュウ)もおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;言いたいことは手持ちで頑張ろうということ。好きなやつ使えばいいよ。その他、タイプを意識してもいいかも。私は、レックウザが再登場したらドラゴンタイプまだなので、育てようと思ってる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;強化&#34;&gt;強化&lt;/h3&gt;&#xA;&lt;p&gt;のびしろやアメなど強化アイテムはすべてレッドに使います。&lt;/p&gt;&#xA;&lt;p&gt;ボードはレッドとオーキドをやります。重要なのは、オーキドの回避アップとピンチ回復、スピードスター技回復です。それを取っています。&lt;/p&gt;&#xA;&lt;p&gt;次は主人公(ピカチュウ)で、キズぐすり技回復や再度こらえるなどを取っていこうかなと考えています。&lt;/p&gt;&#xA;&lt;p&gt;ポテンシャルは、レッドに技ゲージ威力、オーキドに全ダウン耐性が当たりました。&lt;/p&gt;&#xA;&lt;p&gt;あと、シルバー(ホウオウ)に急所威力アップ、主人公(ピカチュウ)に急所無効が当たりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;不都合のお知らせ&#34;&gt;不都合のお知らせ&lt;/h3&gt;&#xA;&lt;p&gt;ポケマスには、よく不都合のお知らせが来ます。&lt;/p&gt;&#xA;&lt;p&gt;ただ、私がこのゲームをプレイしている限りでいうと、ポケマスには、不都合なんてありません。&lt;/p&gt;&#xA;&lt;p&gt;私は、このゲームで不都合やそれにまつわるストレスを感じたことは一度もありませんね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスをプレイしてみた3</title>
      <link>https://syui.github.io/blog/post/2020/05/03/pokemon/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/03/pokemon/</guid>
      <description>&lt;p&gt;ポケマスにホウオウが実装されたらしいのでプレイしてみました。このゲームは結構面白くて、レッドが実装されたあたりからバトルヴィラを毎回クリアしてます。バトルヴィラは1日で最大、GRADE13まで上がりました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイスタイル&#34;&gt;プレイスタイル&lt;/h3&gt;&#xA;&lt;p&gt;私は、リザードンとミュウが気に入ってるのでリザードンとミュウを使っています。&lt;/p&gt;&#xA;&lt;p&gt;残りの一体は回復や全体バフを入れます。お気に入りは、リザードン、ミュウ、イーブイの構成。その他、メガニウム、アチャモ、サマヨル、ルナトーンなどがおすすめ。&lt;/p&gt;&#xA;&lt;p&gt;基本的には、ミュウでスピードスターを連発し、回避率を上げながら、必殺ゲージをためます。必殺技が使えるようになれば、メガリザードンXにしてブラストバーンを連発するというパターン。ミュウが壁役なので、やられるとパーティーが崩壊しますが、生き残ってる限り耐えます。&lt;/p&gt;&#xA;&lt;p&gt;ボードで最も優先しているのもミュウで、登場時の回避アップと技稀に回避アップ、ピンチ時回復を取っています。そんな感じでやると、そこそこ戦えるのではないかと思います。他にはスピードスター威力増あたりをとっておくといいかも。&lt;/p&gt;&#xA;&lt;p&gt;なお、相手の弱点をつけるアタッカーがいれば、適時、リザードンと入れ替えます。私はあまりアタッカーを持ってないなくて、使えるのは、ミュウツー、ソルガレオくらいです。なので弱点はあまり突けませんね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ホウオウ&#34;&gt;ホウオウ&lt;/h3&gt;&#xA;&lt;p&gt;ホウオウは、アイテムを集めて、なんかガチャを回すんですが、これいいですね。私、ガチャ運って全く無いんですが、こういうの面白いと思います。&lt;/p&gt;&#xA;&lt;p&gt;有料だと早く集められる感じかな。ゲーム運営には課金も必要ですが、このシステムはとてもバランスがいいと感じています。ポケモンGoでいうジム防衛みたいなもので、無料でも頑張って有料コインを貯められるみたいな仕組みに近い印象。&lt;/p&gt;&#xA;&lt;p&gt;私は、レッドが実装されたときからポケマスを続けてますが、そのあたりから続けてる人は、ミュウ、ミュウツー、ソルガレオが手に入ったりしたので、楽しめてる人が多いのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;ホウオウが手に入ったら、ひでりリザードンが使えるのでは？戦略の幅が広がる予感。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた24</title>
      <link>https://syui.github.io/blog/post/2020/05/02/illust/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/02/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;勘で描いてると、完成後になんか変だぞみたいな感じになって、余計に時間がかかってしまった。&lt;/p&gt;&#xA;&lt;p&gt;構図あたり最初にしっかり考えてから描きはじめたほうがいいかもと思った。&lt;/p&gt;</description>
    </item>
    <item>
      <title>作った曲を整理してみた</title>
      <link>https://syui.github.io/blog/post/2020/05/01/vocaloid/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/05/01/vocaloid/</guid>
      <description>&lt;p&gt;作った曲を整理したり、追加したりしてました。よかったら聴いてみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/music&#34;&gt;/music&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;以前作った5曲目(sora)があまりにダメすぎたので、一旦、歌だけ削除していたのですが、今回、イチから歌を作って追加。とはいえ、あまり期待しないでください。一度こうなってしまうと、難しい気がしてる。ただ、前のがあまりにダメすぎたので、前よりは多少マシになってると思う。でもダメ。&lt;/p&gt;&#xA;&lt;p&gt;あとは、忘れてたmetaを追加したり、アルバムを整理したりです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>短編小説に出てくるキャラを描いてみた</title>
      <link>https://syui.github.io/blog/post/2020/04/30/illust/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/30/illust/</guid>
      <description>&lt;p&gt;短編小説に出てくるキャラの絵が必要になったので、北村くんと村長を描いてみました。カタツムリくんはまあいいかな&amp;hellip;そんなもん描いてるヒマはねえ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_kitamura.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_sontyou.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;北村くんのイメージ、最初はメガネをかけた青年みたいな感じで書こうと思ってたけど、一発でうまく描けなかったので、好きなように描いてたらこうなった。もうこれでいいや。&lt;/p&gt;&#xA;&lt;p&gt;イメージとぜんぜん違うってのは、まあ、私もそう思うんですけど、でも、これでいきます&amp;hellip;描き直してるヒマはねえ。(めんどくさいだけだろ&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた23</title>
      <link>https://syui.github.io/blog/post/2020/04/29/illust/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/29/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_23.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ノベルゲームの続きを作ってみた57</title>
      <link>https://syui.github.io/blog/post/2020/04/29/game/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/29/game/</guid>
      <description>&lt;p&gt;ノベルゲームの続きを作ってみました。57話までありますが、飛ばしたい方は、最新話から。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/game&#34;&gt;/game&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ひとりごと&#34;&gt;ひとりごと&lt;/h3&gt;&#xA;&lt;p&gt;内容としては、小説とつながるところまで。&lt;/p&gt;&#xA;&lt;p&gt;最近、キャラが増えすぎなのでよくないなあと思っていて、ノートも何も作っていませんから、どういった特徴があるのかとか忘れちゃったりするんです。&lt;/p&gt;&#xA;&lt;p&gt;お話を複雑にしすぎないこと、できる限りキャラを増やさないことを心がけてやってきたつもりでしたが、ここ最近の話が複雑になったり、キャラが増えすぎてる気がするので、この話が一区切り着いたら、少し抑えていきたいなと思ってます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今ある分はキャラ絵を描かないといけないので描きました。&lt;/p&gt;&#xA;&lt;p&gt;マンガと小説の方は、書きたい気分なら書くかも。&lt;/p&gt;</description>
    </item>
    <item>
      <title>短編小説を書いてみた4</title>
      <link>https://syui.github.io/blog/post/2020/04/28/novel-04/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/28/novel-04/</guid>
      <description>&lt;h3 id=&#34;銀河鉄道&#34;&gt;銀河鉄道&lt;/h3&gt;&#xA;&lt;p&gt;今日もいつもどおり起床し、みんなゾロゾロと境界に向かった。&lt;/p&gt;&#xA;&lt;p&gt;しかし、今日に限っていえば、その必要はなかったことを思い出した。&lt;/p&gt;&#xA;&lt;p&gt;銀河鉄道は、境界よりも中央寄りの場所に停車するらしい。&lt;/p&gt;&#xA;&lt;p&gt;私は来た道を引き返した。&lt;/p&gt;&#xA;&lt;p&gt;見送りのためか、みんなもゾロゾロと境界ではなく停車位置に向かうのだった。&lt;/p&gt;&#xA;&lt;p&gt;私は、故郷の星の見えないガラス板の上で、こんな光景が繰り広げられていることに、少し吹き出しそうになる。&lt;/p&gt;&#xA;&lt;p&gt;停車位置にたどり着き、しばらく住人と別れの挨拶を交わしていると、かすかな音が聞こえたような気がした。&lt;/p&gt;&#xA;&lt;p&gt;みんな一斉にキョロキョロと当たりを見渡したが、鉄道らしき物体が宇宙を徘徊している様子はなかった。&lt;/p&gt;&#xA;&lt;p&gt;「おや、皆さん、時間はまだですよ」&lt;/p&gt;&#xA;&lt;p&gt;村長がそう言った。&lt;/p&gt;&#xA;&lt;p&gt;「あれ、おかしいな&amp;hellip;何か聞こえたような気がしたんですけど」&lt;/p&gt;&#xA;&lt;p&gt;私は頭をかき、そうに言った。&lt;/p&gt;&#xA;&lt;p&gt;すると、住人の一人、カタツムリくんが上の方を指さして声を上げた。&lt;/p&gt;&#xA;&lt;p&gt;「おい、あれはなんだ！」&lt;/p&gt;&#xA;&lt;p&gt;「ん？何でしょう。私にもわかりません」&lt;/p&gt;&#xA;&lt;p&gt;村長が言った。&lt;/p&gt;&#xA;&lt;p&gt;仮に村長がわからないなら、多分、他の人にもわからないだろう。ここでは、そういう事が多かった。&lt;/p&gt;&#xA;&lt;p&gt;とすれば、あれは未知の現象ということになる。私は、心の中で、そんな事を考えていた。&lt;/p&gt;&#xA;&lt;p&gt;まさか、銀河鉄道が来る前に、変なトラブルだけはやめてくれよ。&lt;/p&gt;&#xA;&lt;p&gt;しかし、それが近づいて来るとはっきりわかるが、あれは人ではないだろうか。人の形をした何かがすごいスピードでこっちに近づいてくるみたいだった。&lt;/p&gt;&#xA;&lt;p&gt;「うわあああああ、な、なんだ！？」&lt;/p&gt;&#xA;&lt;p&gt;光熱と煙を巻き上げるほどのスピードだったらしい。しばらく経たないと正体が確認できないほどであった。&lt;/p&gt;&#xA;&lt;p&gt;その正体は、人だった。しかも、小さな女の子だ。&lt;/p&gt;&#xA;&lt;p&gt;小さな女の子が、宇宙の果てから飛んできた。宇宙服もなしにでだ。&lt;/p&gt;&#xA;&lt;p&gt;「あ、ああ&amp;hellip;わけが&amp;hellip;理論的に考えて&amp;hellip;いや、どうやって&amp;hellip;」&lt;/p&gt;&#xA;&lt;p&gt;村長がはじめてよくわからない言葉を発した瞬間だった。&lt;/p&gt;&#xA;&lt;p&gt;住人たちもはじめのうちはすごく動揺していた様子だが、次第にみんな落ち着きを取り戻すのだった。&lt;/p&gt;&#xA;&lt;p&gt;私も、これが銀河鉄道絡みの可能性を考え、一番最初にアクションすべきは自分だと判断した。&lt;/p&gt;&#xA;&lt;p&gt;まずは、女の子に話かけてみることからだ。&lt;/p&gt;&#xA;&lt;p&gt;「あー、はろー、君の名前はなんですか？」&lt;/p&gt;&#xA;&lt;p&gt;「アイだよ」&lt;/p&gt;&#xA;&lt;p&gt;「あー、アイ。変わった名前だね。君も下に見える星から来たのかい？」&lt;/p&gt;&#xA;&lt;p&gt;「アイは、向こうのほう、地球からだよ」&lt;/p&gt;&#xA;&lt;p&gt;「地球&amp;hellip;知らないなあ」&lt;/p&gt;&#xA;&lt;p&gt;住人達は、ザワザワとそうつぶやく。&lt;/p&gt;&#xA;&lt;p&gt;どうやら目の前にいるのは本物の宇宙人らしい。私も実物で見るのははじめてだ。それに名前が奇妙なことにも頷ける。しかし、見た目は、私達人間と全く変わりないように見えた。&lt;/p&gt;&#xA;&lt;p&gt;「私は、北村正(きたむら・ただし)。足元に見える星の出身だよ。ここにいるみんなそうだ」&lt;/p&gt;&#xA;&lt;p&gt;「ふーん」&lt;/p&gt;&#xA;&lt;p&gt;「アイも銀河鉄道に乗るのかい？」&lt;/p&gt;&#xA;&lt;p&gt;「うん。地球から一番近いのがここなんだって」&lt;/p&gt;&#xA;&lt;p&gt;「あー、そうなんだ」&lt;/p&gt;&#xA;&lt;p&gt;この子もどうやら銀河鉄道に乗るらしい。&lt;/p&gt;&#xA;&lt;p&gt;すると、宇宙の果てからまた奇妙な音が聞こえた。&lt;/p&gt;&#xA;&lt;p&gt;「シュウウウ&amp;hellip;」&lt;/p&gt;&#xA;&lt;p&gt;「今度はなんだ！」&lt;/p&gt;&#xA;&lt;p&gt;私は、気がつくとそう叫んでいた。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、今度のは銀河鉄道でしょう。時間です」&lt;/p&gt;&#xA;&lt;p&gt;村長が言った。&lt;/p&gt;&#xA;&lt;p&gt;それは一瞬だった。大きな音がしたと思ったら、目の前に巨大な箱が流れていく。そして、それがやんだと思ったら、ドアが目の前でパッと開き、黄色い光があたりに溢れた。&lt;/p&gt;&#xA;&lt;p&gt;「おおっーーーーー！」「これが&amp;hellip;」「僕は3回目だ」&lt;/p&gt;&#xA;&lt;p&gt;住人たちが口々に感想を述べた。&lt;/p&gt;&#xA;&lt;p&gt;私の印象でいうと、想像していたのと違ってモクモクの煙はでていないようだった。&lt;/p&gt;&#xA;&lt;p&gt;光と少しの音がするだけの影の列車という印象だ。&lt;/p&gt;&#xA;&lt;p&gt;アイが自分の後ろについていた。&lt;/p&gt;&#xA;&lt;p&gt;正直、よくわからない宇宙人の訪問で自分の中にあった銀河鉄道への恐怖が吹き飛んでいた。むしろ、清々しく明るい気分だ。&lt;/p&gt;&#xA;&lt;p&gt;「みんな、今までありがとう。できることなら、また帰ってくるよ！」&lt;/p&gt;&#xA;&lt;p&gt;「おう、がんばれよ！」「達者でな」「北村くん、さようなら。またいつでも帰っておいで！」&lt;/p&gt;&#xA;&lt;p&gt;そんなお別れの言葉もあっという間、列車は二人を乗せ宇宙の彼方へと走り去っていくのだった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/novel&#34;&gt;/novel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;登場人物&#34;&gt;登場人物&lt;/h3&gt;&#xA;&lt;p&gt;主人公は、アイが銀河鉄道に乗るとき偶然乗り合わせた乗客の一人&lt;/p&gt;</description>
    </item>
    <item>
      <title>短編小説を書いてみた3</title>
      <link>https://syui.github.io/blog/post/2020/04/27/novel-03/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/27/novel-03/</guid>
      <description>&lt;h3 id=&#34;前日&#34;&gt;前日&lt;/h3&gt;&#xA;&lt;p&gt;あれから数日が過ぎた。いや、もしかしたら数年だったかもしれない。ここでは時間の感覚が大きく狂うので仕方ない。&lt;/p&gt;&#xA;&lt;p&gt;そんなある日、村長が言った。&lt;/p&gt;&#xA;&lt;p&gt;「明日あたり、銀河鉄道が来ると思います。乗りたい人は準備しておくといいですよ」&lt;/p&gt;&#xA;&lt;p&gt;村長というのは、私に最初に声をかけてくれた人で、みんなから村長と呼ばれていた。時間を可能な限り正確に把握しているのも、この中では彼だけだ。&lt;/p&gt;&#xA;&lt;p&gt;「えっ、明日！？」&lt;/p&gt;&#xA;&lt;p&gt;私は、いつもの日課をこなそうという最中だったが、驚いて声をあげた。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、そうですよ。おそらく、明日」&lt;/p&gt;&#xA;&lt;p&gt;「それで、村長は、どうするんです？」&lt;/p&gt;&#xA;&lt;p&gt;「ああ、私は、今回もパスになりますよ」&lt;/p&gt;&#xA;&lt;p&gt;「&amp;hellip;そう、ですか」&lt;/p&gt;&#xA;&lt;p&gt;村長の気持ちも少しわかる。もし列車に乗って変なところに連れて行かれるくらいなら、ここでのんびり暮らすのも悪くない、そう思うからだ。&lt;/p&gt;&#xA;&lt;p&gt;すると、村長が私に言った。&lt;/p&gt;&#xA;&lt;p&gt;「北村くんは、おそらく、乗っていかれるんでしょう。寂しくなりますよ」&lt;/p&gt;&#xA;&lt;p&gt;「はい、私は、乗る予定です」&lt;/p&gt;&#xA;&lt;p&gt;今回乗るのは、この中では自分だけだった。&lt;/p&gt;&#xA;&lt;p&gt;このあとも何人出るのか、わからない。もしかしたら、自分で最後かもしれない。そんなことを思った。&lt;/p&gt;&#xA;&lt;p&gt;正直、私だって怖い。怖くて怖くてたまらない。だが、ここに来て最初に言った言葉を私はまだ覚えていた。&lt;/p&gt;&#xA;&lt;p&gt;「私、乗ります」&lt;/p&gt;&#xA;&lt;p&gt;ここに来て銀河鉄道の話を聞いたとき、私は、そう言った。&lt;/p&gt;&#xA;&lt;p&gt;最初に直感したことは正しいことが多い。そんな人生の経験則に従い、私は、乗ることに決めたのだ。&lt;/p&gt;&#xA;&lt;p&gt;ただ、後々になってみると、乗るのは自分だけではなかった。&lt;/p&gt;&#xA;&lt;p&gt;しかもそれは、ここの住人でもなければ、知っている人物でもなかった。&lt;/p&gt;&#xA;&lt;p&gt;それは、見ず知らずの女の子だった。&lt;/p&gt;&#xA;&lt;p&gt;まさかあんなことが起ころうとは、誰も予想していなかった。宇宙の果てから少女が飛んできて、自分の後ろに並ぶなんてことを、一体、誰が予想できただろう。&lt;/p&gt;&#xA;&lt;p&gt;ここの住人の誰もが、あの村長でさえ、とんでもなく予想外の出来事だったはずだ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/novel&#34;&gt;/novel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;登場人物&#34;&gt;登場人物&lt;/h3&gt;&#xA;&lt;p&gt;主人公は、アイが銀河鉄道に乗るとき偶然乗り合わせた乗客の一人&lt;/p&gt;</description>
    </item>
    <item>
      <title>短編小説を書いてみた2</title>
      <link>https://syui.github.io/blog/post/2020/04/26/novel-02/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/26/novel-02/</guid>
      <description>&lt;h3 id=&#34;大気圏&#34;&gt;大気圏&lt;/h3&gt;&#xA;&lt;p&gt;このガラス板の上での生活に多少慣れてきたものの、私は未だ足元に見える星に帰りたいという思いを捨てきれずにいた。&lt;/p&gt;&#xA;&lt;p&gt;その様子を見ると、ここの住人は「俺も昔はああだった」と笑ったものだ。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私には、この薄暗い光の中で延々と暮らす退屈な生活より、あの星の中で、さんさんと輝く太陽の下、公園のベンチに座って子供たちが遊ぶのを眺める生活のほうが、よっぽど楽しいことだと思うのだ。&lt;/p&gt;&#xA;&lt;p&gt;だからこそ、私はいつまでたっても、その望みを捨てられず暮らしていた。&lt;/p&gt;&#xA;&lt;p&gt;しかし、真下に見える故郷に帰るためには、超えなければならないたくさんの壁があった。&lt;/p&gt;&#xA;&lt;p&gt;最も大きい壁は、大気圏に突入しても燃え尽きないほどの強度を持つ素材がここにはないことだ。&lt;/p&gt;&#xA;&lt;p&gt;例えば、1日に1度やってくる人工衛星だが、これは、一度打ち上げたら役目を終えるまで動き続け、それが終わると大気圏で燃え尽きるよう設計されている破棄型だ。&lt;/p&gt;&#xA;&lt;p&gt;ここの住人もかつて何度も帰還を夢見たが、ついぞ叶うことはなかった。&lt;/p&gt;&#xA;&lt;p&gt;昔、この人工衛星を操作して星に突っ込むという計画が考えられたこともあったらしい。&lt;/p&gt;&#xA;&lt;p&gt;しかし、操作不可能であること、耐久性がゴミであることなどから、仮に突っ込んだら全員死ぬと結論付けられた。&lt;/p&gt;&#xA;&lt;p&gt;宇宙工学を勉強してきた自分でさえ、そりゃそうだと頷いた。&lt;/p&gt;&#xA;&lt;p&gt;また、助けを呼ぼうにも連絡手段がないこと、ガラス板の周りはどうやら外部から見えなくなっているらしいこと、なぜかすり抜けることなどの事情があった。&lt;/p&gt;&#xA;&lt;p&gt;そのうち、挑戦するものもいなくなり、現在に至る。&lt;/p&gt;&#xA;&lt;p&gt;ここでの生活は単純だった。まずは起床からだ。&lt;/p&gt;&#xA;&lt;p&gt;起床すると、勝手に移動した分だけ境界に向かって歩くことからはじまる。&lt;/p&gt;&#xA;&lt;p&gt;ここの住人は、起き出すと、一斉に中央とは逆方向にゾロゾロと歩き出すのだ。&lt;/p&gt;&#xA;&lt;p&gt;それさえやっていれば、中央に至り星に吸い込まれて燃え尽きるなんてことはないからだ。ガラス板の中央に至るとそこから星に落ちる、と言われている。&lt;/p&gt;&#xA;&lt;p&gt;私は、それを見たことはなかったが、ここの住人はそう証言していたし、毎朝かなりの距離を勝手に動いていることを考え合わせると、おそらく、本当のことだろう。&lt;/p&gt;&#xA;&lt;p&gt;毎日やってくる人工衛生はかなり大きくて広かった。&lt;/p&gt;&#xA;&lt;p&gt;そこには、たくさんの食料が積み込まれており、トイレと水道はずっと可動しているようだ。&lt;/p&gt;&#xA;&lt;p&gt;私は、この人工衛星で一着の宇宙服を見つけたが、残念ながらこれでは星に帰れない。大気圏の突入に耐えうるほどの耐久性を備えていなかった。あたり前のことかもしれないが、ちょっと期待した自分がバカだった。&lt;/p&gt;&#xA;&lt;p&gt;また、ガラス板の周りには大気の膜(まく)らしきものが張り巡らされているため、宇宙服は着る必要もなかった。&lt;/p&gt;&#xA;&lt;p&gt;この膜がどれだけの高さまであるのかはわからないが、その昔、銀河鉄道で行ってしまった身長213センチの大男がジャンプしても膜はあったと言われている。&lt;/p&gt;&#xA;&lt;p&gt;ただ、こんな場所にも一つだけいいと思えることがあった。&lt;/p&gt;&#xA;&lt;p&gt;それは、ここの住人である。&lt;/p&gt;&#xA;&lt;p&gt;ここの住人は、驚くほど精神が安定していて、まるで誰かに選ばれたんじゃないかと思えるような人たちばかりだった。&lt;/p&gt;&#xA;&lt;p&gt;仮にこのような場所に精神不安を抱えた極悪人が来たら、おそらく、その人を含む全員が全滅していただろう。&lt;/p&gt;&#xA;&lt;p&gt;こんな場所でも、まともな人間が多いことに、私は、心底助けられていた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/novel&#34;&gt;/novel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;登場人物&#34;&gt;登場人物&lt;/h3&gt;&#xA;&lt;p&gt;主人公は、アイが銀河鉄道に乗るとき偶然乗り合わせた乗客の一人&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた22</title>
      <link>https://syui.github.io/blog/post/2020/04/25/illust/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/25/illust/</guid>
      <description>&lt;p&gt;最近、描いてなかったので描いてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_22.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>短編小説を書いてみた1</title>
      <link>https://syui.github.io/blog/post/2020/04/25/novel-01/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/25/novel-01/</guid>
      <description>&lt;h3 id=&#34;はじめに&#34;&gt;はじめに&lt;/h3&gt;&#xA;&lt;p&gt;眠っているとき、夢の中で小説を書いたり、物語を書いたりすることってありますか。私はよくあります。&lt;/p&gt;&#xA;&lt;p&gt;実際、寝ているときに話の続きを考えたりすることは多かったりします。&lt;/p&gt;&#xA;&lt;p&gt;今回もその類の短編小説になるのですが、面白そうだったので出してみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;一応、yui(自作ノベルゲームのタイトル)のスピンオフという位置づけかな。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ガラスの上&#34;&gt;ガラスの上&lt;/h3&gt;&#xA;&lt;p&gt;私は、さっきまで人工衛星の打ち上げテストをやっていたはずなのだが、気がつくと、闇の中に立っていた。&lt;/p&gt;&#xA;&lt;p&gt;闇と言っても、完全な暗闇ではない。足元にはかすかな青白い輝きが見える。&lt;/p&gt;&#xA;&lt;p&gt;私は、思い切って足元を覗き込んでみた。すると、そこには、私が住んでいたはずの巨大な星が、ゆるやかなアーチを描いているではないか。&lt;/p&gt;&#xA;&lt;p&gt;「星の周りに、こんな巨大なガラスが置いてあるなんて&amp;hellip;」&lt;/p&gt;&#xA;&lt;p&gt;ガラスが巨大に思えたのは、これがどこまでも続くだろうと直感していたからだった。&lt;/p&gt;&#xA;&lt;p&gt;見えないガラス板の上と表現するほかないこの場所だったが、私は、次第に怖くなってきた。&lt;/p&gt;&#xA;&lt;p&gt;なぜか先程から足元がやけに後ろの方に引きづられているような感覚があるのだ。&lt;/p&gt;&#xA;&lt;p&gt;考えても見てほしい。もし私が無意識のうちにあの下に見える巨大な星に引き寄せられているのなら、そのうちどれだけ走っても抜け出せなくなり、燃え尽きて消えてしまうだろう。そのような場所に私はいるのだ。これが恐怖と言わずなんと言うだろう。&lt;/p&gt;&#xA;&lt;p&gt;そんなこともあり、私は、できる限り端の方に移動することにした。&lt;/p&gt;&#xA;&lt;p&gt;歩いても歩いても変わらない景色だったが、それでも歩いていると、向こうの方に人影が見える。数人が座り込んだり、立っていたりするようだった。&lt;/p&gt;&#xA;&lt;p&gt;「こんな場所にも人がいるのか？」&lt;/p&gt;&#xA;&lt;p&gt;私はそうつぶやきながらも、自分がいるのだから、他の人もいるだろうという結論に達した。いや、達したというより、それだけが希望の光だった。&lt;/p&gt;&#xA;&lt;p&gt;近づくと、やっぱり人だ。立っている人に声をかけられた。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、あなたもここに連れてこられたんですか？怖かったでしょう。さあさあ、こちらへ」&lt;/p&gt;&#xA;&lt;p&gt;私は、彼が手招きしたその場所まで歩いた。&lt;/p&gt;&#xA;&lt;p&gt;そこに着いてみると、その場所は他の場所とは全然違っていて、それまではわからなかったが、足元に見える青白い輝きが一層鮮やかに溢れ出ているかのような場所だった。&lt;/p&gt;&#xA;&lt;p&gt;「ここは一体？」&lt;/p&gt;&#xA;&lt;p&gt;私は彼に質問した。他の人達もどうやら同じような場所にとどまっているみたいで、座ってたり、寝ていたりしている。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、そこは境界。この世界において一番マシなところですよ」&lt;/p&gt;&#xA;&lt;p&gt;「境界？」&lt;/p&gt;&#xA;&lt;p&gt;「ああ、そうです。あなたも体感しているとおり、ここに連れてこられた人達はみんな、足元に見える巨大な星に引き寄せられているのですよ」&lt;/p&gt;&#xA;&lt;p&gt;「そんな感じはしていました」&lt;/p&gt;&#xA;&lt;p&gt;私はそうつぶやき、彼は話を続けた。&lt;/p&gt;&#xA;&lt;p&gt;「そして、ある地点を超えたとき、もう戻ってこられなくなるのです」&lt;/p&gt;&#xA;&lt;p&gt;「やっぱり、そうでしたか！私も危ないと思っていたんです。それなら、私はもう少しあっちのほうに行ってみようと思います」&lt;/p&gt;&#xA;&lt;p&gt;私はそう言って歩き出そうとした。しかし、なぜか彼に引き止められた。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、それもやめたほうがいいですよ」&lt;/p&gt;&#xA;&lt;p&gt;「なぜです？」&lt;/p&gt;&#xA;&lt;p&gt;「ここを超えてしまっても、戻って来られないからです。いつの間にかガラス板は消え、行く方向をコントロールできなくなりますよ」&lt;/p&gt;&#xA;&lt;p&gt;「そ、そんな&amp;hellip;」&lt;/p&gt;&#xA;&lt;p&gt;「だから最初に言ったでしょう。ここが一番マシだと」&lt;/p&gt;&#xA;&lt;p&gt;「どっちもアウトだからですか？」&lt;/p&gt;&#xA;&lt;p&gt;「ああ、そうです。ここは無意識のうちに移動している距離が最も少ないんですよ。あっちの方になると、たった数時間を寝ているうちに、もうダメですね。戻ってこられない。駆け出しても間に合わず、やがて足元から燃えだし、消えてしまう」&lt;/p&gt;&#xA;&lt;p&gt;「&amp;hellip;それは怖い」&lt;/p&gt;&#xA;&lt;p&gt;「あなたも最初に来たときはあそこらへんだったのでしょう？歩き続けて正解ですよ」&lt;/p&gt;&#xA;&lt;p&gt;「どのくらいこの場所に？」&lt;/p&gt;&#xA;&lt;p&gt;私は、興味本位で質問してみた。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、それは、覚えていないくらい長くです」&lt;/p&gt;&#xA;&lt;p&gt;「それで、食事やトイレはどうしてるんです？」&lt;/p&gt;&#xA;&lt;p&gt;「ああ、食事やトイレなどは人工衛星が1日に1度、ここを通り過ぎるので、そのときに調達を。この人数ですと500年分くらいはありますよ」&lt;/p&gt;&#xA;&lt;p&gt;「それはいいですね」&lt;/p&gt;&#xA;&lt;p&gt;私は、心の底からホッとしてそうつぶやいた。&lt;/p&gt;&#xA;&lt;p&gt;すると彼は、その思いに釣られてか、そのことを口にしたみたいだった。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、それに、何年かに一度、ここにはあれも来るんですよ」&lt;/p&gt;&#xA;&lt;p&gt;「何がですか？」&lt;/p&gt;&#xA;&lt;p&gt;私は、こわごわと聞いてみた。&lt;/p&gt;&#xA;&lt;p&gt;「鉄道です、銀河鉄道」&lt;/p&gt;&#xA;&lt;p&gt;「ま、まさか！？」&lt;/p&gt;&#xA;&lt;p&gt;「ありえないこととお思いでしょう。その気持ち、わかりますよ。ですが、このような場所で、ありえないことなどあるでしょうか」&lt;/p&gt;&#xA;&lt;p&gt;「ほんとに、それがここに？」&lt;/p&gt;&#xA;&lt;p&gt;「私は前回、どこに連れて行かれるか、それが怖くて乗れなかったのです。次もどうなるのかわかりません。ですが、それがここに来るのは確かです。この見えないガラス板もそのために設置されたものなのでしょう」&lt;/p&gt;&#xA;&lt;p&gt;「私、乗ります」&lt;/p&gt;&#xA;&lt;p&gt;私は、考えるよりも先にそう口走っていた。&lt;/p&gt;&#xA;&lt;p&gt;「ああ、そうなるといいですね。ここに留まっている人の中にも10人に2人は乗って、どこか遠くにいかれますよ」&lt;/p&gt;&#xA;&lt;p&gt;彼は、私の挑戦的な言動を意にも介さず、和やかにそう言うのだった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/novel&#34;&gt;/novel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;登場人物&#34;&gt;登場人物&lt;/h3&gt;&#xA;&lt;p&gt;主人公は、アイが銀河鉄道に乗るとき偶然乗り合わせた乗客の一人&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoの進捗</title>
      <link>https://syui.github.io/blog/post/2020/04/24/pokemon-go/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/24/pokemon-go/</guid>
      <description>&lt;p&gt;ポケモンGoの最近の進捗状況です。&lt;/p&gt;&#xA;&lt;p&gt;ワシボンがウォーグルに進化した&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/008/small/74ef77678e93ea4b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;マスターリーグを戦った、レートは2500&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/007/small/3cd4645ec8bd9657.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;一緒に戦ってきた仲間たちです。個体値は低いですが、みんな頑張りました。ちなみに、L41はいません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/006/small/c1d639225a913b1f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は自分が育てたいポケモンでしか技開放しませんし、戦いませんから、マスターリーグで使っているポケモンの個体値はかなり低めです。&lt;/p&gt;&#xA;&lt;p&gt;マスターリーグでは個体値が特に重要になります。よって、バトル重視なら個体値を優先したほうがいいでしょう。&lt;/p&gt;&#xA;&lt;p&gt;私はそもそもGBLが好きではありませんし、戦いたいとも思っていないので、自分の育成方針を変えてまでやるものではないのです。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、所感ですが、このような構成でも5人に1人くらいは運良くランク10に到達可能だと思います。&lt;/p&gt;&#xA;&lt;p&gt;そのための戦略を書いていきます。相手側にギラティナが入ってくるようなら、メルメタル、ディアルガ、カビゴンの構成でほぼ勝てます。カビゴンはのしかかり,じしんです。&lt;/p&gt;&#xA;&lt;p&gt;先鋒にギラティナが出てきたら、即座にディアルガに交代。相手も交代でメルメタルを出して来ることが多いのですが、この場合も勝ちパターンです。ディアルガにシールドを使って、ギラティナにカビゴンをぶつければ勝ちます。相手側の先鋒がギラティナばかりなら、こちらもディアルガを先鋒にします。&lt;/p&gt;&#xA;&lt;p&gt;それ以外、つまり相手にギラティナがいない場合は、カイオーガ、ガブリアスのどちらかを入れた構成で行くといいでしょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンハートゴールドをプレイしてみた</title>
      <link>https://syui.github.io/blog/post/2020/04/23/pokemon-heart-gold/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/23/pokemon-heart-gold/</guid>
      <description>&lt;p&gt;ポケモンのハートゴールドを久しぶりにプレイしてます。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンの原作って旅行してるみたいな気分になれるので好きです。なので、こうやってたまにプレイするわけですが、旅行？と思われる方もいると思うので、そのへんを少しだけ解説。&lt;/p&gt;&#xA;&lt;p&gt;皆さん、旅行は好きですか？知らない場所に行ったり、昔行ったところに行ったり。&lt;/p&gt;&#xA;&lt;p&gt;私は旅行、好きでもあり、嫌いでもあります。旅行している最中ってあまり楽しくなかったり、疲れたりしますよね。ですが、後々思い返してみたらよかったなーみたいな、そんな感じなんです。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンの原作もそうで、最初はプレイってあまり楽しくないんです。これ時間の無駄じゃないって、すごく思ったり。いや、今はすごい勉強になるので全然無駄じゃないと思うんですけど&amp;hellip;。勉強になるというのは、基本的な作り、オープニングがすごい考えられてたり、シンプルだったり、わかりやすかったりしますから、改めて良く出来てるなって思ったり。&lt;/p&gt;&#xA;&lt;p&gt;話を戻すと、一度プレイしてますから、やっぱり基本つまんないんですよね、最初は。でもプレイしていると面白くなってきて、懐かしくなってきて、そして思い出になっていくんだろうなって、後々思い返してみると、あのときプレイしてたやつ楽しかったな、あの場所にもう一度行きたいなとか、そういう気分に浸れるので、原作は好きだったりします。&lt;/p&gt;&#xA;&lt;p&gt;原作が旅行なら、ポケモンGoは日常のルーツみたいな感じかなあ。どちらにも良さがあり、好みがあると思うんですが、もちろん、私はどっちも好きです。ただ、多くの人にとってより重要になってくるのは、ポケットにはいる、いつも持ち運べる、終わりのないゲーム、ポケモンGoだろうなあと思っていますが。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、ポケモンの原作は旅行気分になれるので、おすすめです。&lt;/p&gt;&#xA;&lt;p&gt;今はちょうどシロガネ山でレッド倒しに行くところ。ただLV70なので、ちょっとレベル上げしないと勝てないと思う。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイスタイル&#34;&gt;プレイスタイル&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;名前はゴールド。最初はトレーナーと戦うが、後半、バテて避けるようになる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ほぼ最初の一匹、バクフーンだけで攻略する。基本、炎タイプを選択する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;アイテムは取れたらとるが探索しない&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;伝説のホウオウが手に入ってからはホウオウを使う、四天王あたりでバクフーンとレベルが逆転する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;四天王ではかちぬきからいれかえに変更する、その後も戻すのが面倒でいれかえバトルになるため楽になる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>phonegapを使ってhtml5で開発したwebアプリをbuildする方法</title>
      <link>https://syui.github.io/blog/post/2020/04/20/ios/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/20/ios/</guid>
      <description>&lt;h3 id=&#34;phonegapでremote-buildする&#34;&gt;phonegapでremote buildする&lt;/h3&gt;&#xA;&lt;p&gt;tyranoscript v5でios,androidはphonegapなどでbuildしてねと書いてあったので、やってみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://tyrano.jp/dl/v5&#34;&gt;https://tyrano.jp/dl/v5&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo npm -g install phonegap cordova&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ phonegap create test com.example.test2 Test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# html5(index.htmlファイル群)はwww/に置く&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp -rf ../yui/* www/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim config.xml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml:config.xml&#34; data-lang=&#34;xml:config.xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;widget&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns   =&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.w3.org/ns/widgets&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:gap   =&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://phonegap.com/ns/1.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;id          =&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cf.syui.game&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;versionCode =&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;version     =&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;yui&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;platform&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ios&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;platform&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;android&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      novel game yui.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://syui.ai&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;email=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example@example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      syui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ phonegap serve -p &lt;span style=&#34;color:#ae81ff&#34;&gt;1313&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ phonegap remote build ios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/002/small/0c0180e07bd8937c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>マンガの4,5話を描いてみた</title>
      <link>https://syui.github.io/blog/post/2020/04/17/manga/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/17/manga/</guid>
      <description>&lt;p&gt;マンガの4話と5話を描いてみました。cookieが効いてるかもなので、その場合はシークレットモードで。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/manga/&#34;&gt;https://syui.ai/manga/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ひとりごと&#34;&gt;ひとりごと&lt;/h3&gt;&#xA;&lt;p&gt;vueのページも不便だったので作り直したりと思ったより時間がかかってしまいました。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ一番はモチベがないと描かないってことかなと思います。モチベがあれば割とすぐ描きますけど、モチベがないと全く描かない。描かないと完成しませんから、モチベが全て。&lt;/p&gt;&#xA;&lt;p&gt;4話は誕生、5話は戦いみたいな感じで構築しました。これからガララ星はにぎやかになっていくのかもしれませんね。後に人間が生まれ、折れたつるぎを拾ったりして、その場所にある足跡やらなんやらからへんなおとぎ話でも作ったりするのかな。まだわかりません。(方向転換も考えて予防線を張っておく&lt;/p&gt;&#xA;&lt;p&gt;バトルについてですが、これはマンガでやりたかったことの一つだったので、実現できてよかったです。&lt;/p&gt;&#xA;&lt;p&gt;小説とかノベルゲームの戦闘シーン、あれがあまりに味気ないので、マンガで表現してみたいなあと思っていました。とはいえ、正直いうと、難しかったです。私は感覚で描いたりするだけなので、うまく行っているのかもわかりません。&lt;/p&gt;&#xA;&lt;p&gt;ただ、バトル漫画とか好きですし、描いてるときは楽しかったと思います。それにバトルシーンって読み直していても飽きが少ないような気がします。&lt;/p&gt;&#xA;&lt;p&gt;絵の雑さがひどすぎる件。本当にひどい&amp;hellip;もう少し丁寧に描けるといいんですけど。&lt;/p&gt;&#xA;&lt;p&gt;「これ下書きですか？」&lt;/p&gt;&#xA;&lt;p&gt;「いや、あれが限界なんですよ&amp;hellip;」&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoのGBLについて考えを改めた話</title>
      <link>https://syui.github.io/blog/post/2020/04/14/pokemon/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/14/pokemon/</guid>
      <description>&lt;p&gt;今回は、GBLについて少し思っていることを書いていきたいと思います。過去の反省を含め、考えを改めなければならないという話になります。&lt;/p&gt;&#xA;&lt;p&gt;レートは相変わらず上がったり下がったり。自分の判断ミスや不運も重なり、今は、2500-2600あたりをウロウロしてます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/001/small/647c925f6525280e.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;さて、今回は、このGBLにおける私の考えや態度は、真実ではあるものの、率直に言ってよくないものだということです。だからこそ、今回はそれを改めなければならないという結論に至りました。&lt;/p&gt;&#xA;&lt;p&gt;これについては、実は最初から迷っていました。ポケモン風に言うと、現実で行こうか、理想で行こうか、悩んでいたのです。ブラック・ホワイトはそんな感じのテーマだった記憶があります。&lt;/p&gt;&#xA;&lt;p&gt;私は、当初、GBLが始まるよりもずっと前から、GBLはこういう理由でよくないと主張していました。そして、GBLが始まってもその考え方や態度は変わることはありませんでした。&lt;/p&gt;&#xA;&lt;p&gt;バグによって負ける試合も相次いでいますが、それは些細な問題であり、GBLの最大の問題は、その仕組みにあります。対戦相手を踏み台にすることでしか楽しめない、そのシステム、そこに最大の問題があり、私が今まで遊んできたポケモンGoというゲームのゲーム性には相容れない、そんな思いがありました。今でもこの考え方は変わりません。&lt;/p&gt;&#xA;&lt;p&gt;次にバトルについてですが、マスターリーグを見ていても分かる通り、使われるポケモンと個人スキルには大きな差はありません。みんな同じポケモンを使い、同じスキルを持つため、勝敗は運に依存するところが大きい。もっというとマッチングと初手ポケモンにです。最善手を選択し続けても、負けるときは負けるし、勝つときは勝つのです。例えば、会場に集まった人達でジャンケン大会があったとしましょう。10連勝する人もいれば、1勝しかしない人も出てくる。これが真実です。ランクやレートについても同じで、ランク10に到達した人の殆どは、初期レートが高かったのでしょう。例外はあります、常に。しかし、多くの場合は初期レートによって決まります。初期レートはランダムか、あるいはコントール不可能な数値です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、ポケモンGoってもともとどういうゲームだったか考えてみると、現実と仮想の融合です。原作にないポケモンGoの価値はそこにあると私は考えていたはずです。&lt;/p&gt;&#xA;&lt;p&gt;原作のポケモンは、RPGです。RPGとは他人の物語を進めていくというもの。それは想定されたストーリー、現実との接点はありません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ポケモンGoは違います。自分が主人公、外に出てポケモンを捕まえるというコンセプト。現実とつながっているのです。その意味で、原作で捕まえたポケモンとGoで捕まえたポケモンは、後者のほうが圧倒的に価値が高い。一過性の物語をクリアしたらそれで終わりの原作とは大きく異なります。&lt;/p&gt;&#xA;&lt;p&gt;私はこういった理由から、このゲームを始めたわけで、今もなんとなく続けています。&lt;/p&gt;&#xA;&lt;p&gt;とすればですよ、現実における理想や真実をGBLにぶつけるのはよくないなあとそう思いました。&lt;/p&gt;&#xA;&lt;p&gt;なぜかというと、現実と理想を融合させるゲームなので、現実だけ、理想だけ、どちらか一方だけというのはよくないのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;現実との接点は多少あるものの、もともとファンタジーであり、ゲームですよね。仮に私の態度を物語に当てはめてみた場合、非常によろしくない。&lt;/p&gt;&#xA;&lt;p&gt;どうせなら、ゲームにおける現実や理想を、自身に逆輸入したほうが、個人にとってもよい影響があるはずです。&lt;/p&gt;&#xA;&lt;p&gt;ということで、GBLについては、淡々とやっていこうと思っています。自慢も批判も真実も運も関係ありません。&lt;/p&gt;&#xA;&lt;p&gt;ランク10を目指す、ただそれだけです。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、理想が高すぎて既に失敗してしまっていることからもGBLはほどほどに、自分がやりたいようプレイしていければと思っています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vueでapexchartsを使いチャートを作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/04/12/vue/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/12/vue/</guid>
      <description>&lt;p&gt;chart.jsが有名みたいで、ちょっと触ってチャートを表示してみたのですが、非常に操作しづらかったので、apexchartsを使ってみました。個人的には、こちらのほうがオススメかも。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/apexcharts/vue-apexcharts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn add apexcharts vue-apexcharts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今回作ったのは、vue+apexcharts+axiosという構成で、毎日更新されてるぽいcovid-19のjsonがあるのですが、値をとってきてチャートで表示することにしてみました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/covid-vue-chart&#34;&gt;https://syui.ai/covid-vue-chart&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/syui/covid-vue-chart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd !$:t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/main.js&#34; data-lang=&#34;js:src/main.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VueAxios&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-axios&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VueApexCharts&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-apexcharts&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;component&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apexchart&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VueApexCharts&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;productionTip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;VueAxios&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;VueApexCharts&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;$mount&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;内容は非常にシンプルで以下のような書き方になりました。axiosでjsonを取ってきて配列に入れてあげる感じ。あと、type:lineがやりたくてoptionかなあと思ったのですが、vue-apexchartは、htmlで&lt;code&gt;type=&amp;quot;line&amp;quot;&lt;/code&gt;みたいです。&lt;/p&gt;&#xA;&lt;p&gt;チャートを作成するときは、jsonのkeyやら確認する必要がありますので、&lt;code&gt;this.items = res.data&lt;/code&gt;して表示してます。これはなくてもいい。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:src/App.vue&#34; data-lang=&#34;html:src/App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;covid19&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;covid19&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;apexchart&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;95%&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;line&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:options&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chartOptions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:series&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;series&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;apexchart&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;(item, idx) in items&amp;#34; v-bind&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:key&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;idx&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;idx === &amp;#39;Japan&amp;#39;&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;idx&lt;/span&gt; }} {{ &lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt; }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;created&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/pomber/covid19/master/docs/timeseries.json&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;confirmed&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;confirmedt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Japan&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;confirmed&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;confirmed&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Thailand&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;confirmedt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;confirmed&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Japan&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;series&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{ &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;confirmed&lt;/span&gt; },{ &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;confirmedt&lt;/span&gt; }]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;chartOptions&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;xaxis&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;categories&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}).&lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; () {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;chartOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;chart&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vuechart-example&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;xaxis&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;categories&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [] &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;series&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [ {&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;japan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [] }, {&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Thailand&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [] } ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意点としては、gh-pagesは、サブディレクトリになるので、vue.config.jsで&lt;code&gt;publicPath&lt;/code&gt;を設定してやることです。index.htmlのlink pathが&lt;code&gt;/&lt;/code&gt;なので。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoのGBLシーズン1マスターリーグがはじまった</title>
      <link>https://syui.github.io/blog/post/2020/04/12/pokemon/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/12/pokemon/</guid>
      <description>&lt;p&gt;かろうじてランク9に到達しました。初期レートは1900から。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/218/small/74d5374d75da4f1e.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;勝率はひどい状態です。メンバーは下記ですが、ただのジャンケンですので、攻略法はありません。&lt;/p&gt;&#xA;&lt;p&gt;スーパー : ピクシー, シュバルゴ, ナットレイ&lt;/p&gt;&#xA;&lt;p&gt;ハイパー : フリーザー, ミュウツー(アーマード), ピクシー&lt;/p&gt;&#xA;&lt;p&gt;マスター : メルメタル, ディアルガ, カイオーガ&lt;/p&gt;&#xA;&lt;p&gt;このゲームは最低ジャンケンです。厳しい条件を満たしてはじめて運ゲーに突入しますが、条件を満たさなければ絶対に勝てないという理不尽なゲームです。ちなみに、条件を満たしていないトレーナーに当たることは、残念ながらありません。つまり、ただのジャンケンですね。&lt;/p&gt;&#xA;&lt;p&gt;ストレスしかたまらないし、疲れます。未だに5回に1度くらいは問題のあるバトルが発生しているように思います。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、今回のマスターリーグ、原理的には勝つことが可能なので過去のトラウマが解消されたのはよかったです。過去のマスターリーグは遅延バグにより原理的に勝つことが不可能だったため、そこで20連敗くらいし、レートも計150くらい落としてしまった経験があり、マスターリーグはどうも苦手、勝てる気が全くしないみたいな状態だったのですが、今回は普通のジャンケンが可能でした。つまり、原理的に絶対勝てないみたいなものではなくなっているなと。その点はよかったです。&lt;/p&gt;&#xA;&lt;p&gt;色違いマリル、一匹だけ出ました。とはいえ、マスターリーグでこのイベントはひどすぎます。最低ジャンケンの仕組みから条件に満たないトレーナーは確実にレートを落とすか、または参加しないかしか選択肢がありません。運営、とくにGBL開発陣は一体何を考えてるのかわかりません。&lt;/p&gt;&#xA;&lt;p&gt;私自身は、イベントの恩恵を受けましたが、こういうのはやめたほうがいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;以上、個人感想でした。&lt;/p&gt;&#xA;&lt;p&gt;関係ありませんが、色違いリオルほしいです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vueのhooperでスライドを実装する</title>
      <link>https://syui.github.io/blog/post/2020/04/11/vue/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/11/vue/</guid>
      <description>&lt;p&gt;qiitaを書いていたら思った以上の分量になったので、ブログにも投稿しておきます。&lt;/p&gt;&#xA;&lt;p&gt;vueでスライドを実装するにはhooperというlibraryが便利でした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/baianat/hooper&#34;&gt;https://github.com/baianat/hooper&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;前提&#34;&gt;前提&lt;/h3&gt;&#xA;&lt;p&gt;今回使用するのは、vue-cli4とhooperです。&lt;/p&gt;&#xA;&lt;p&gt;まず、vue-cli4を使えるようにします。最新を入れればいいですが、この情報が古くなった場合、4です。次に、hooperをpackage.jsonに追加します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn global add @vue/cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vue create sample-vue-project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd sample-vue-project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn add hooper&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat package.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;package.jsonはこんな感じです。コピーして、&lt;code&gt;yarn install&lt;/code&gt;してもいいです。これで&lt;code&gt;yarn install&lt;/code&gt;とかすると、依存関係がインストールできます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sample-vue-project&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;serve&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vue-cli-service serve&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vue-cli-service build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;lint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vue-cli-service lint&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;core-js&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^3.6.4&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hooper&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.3.4&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.6.11&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@vue/cli-plugin-babel&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~4.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@vue/cli-plugin-eslint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~4.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;@vue/cli-service&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~4.3.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;babel-eslint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^10.1.0&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslint&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^6.7.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslint-plugin-vue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^6.2.2&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vue-template-compiler&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.6.11&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eslintConfig&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;extends&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;plugin:vue/essential&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eslint:recommended&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;parserOptions&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;parser&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;babel-eslint&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;rules&amp;#34;&lt;/span&gt;: {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;browserslist&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt; 1%&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;last 2 versions&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not dead&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vue&#34;&gt;vue&lt;/h3&gt;&#xA;&lt;p&gt;まず、vueの使い方を簡単に説明します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vueで作ったマンガビューアを更新してみた</title>
      <link>https://syui.github.io/blog/post/2020/04/10/vue/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/10/vue/</guid>
      <description>&lt;p&gt;vueの標準機能を使い自前で作っていたwebのマンガビューアでしたが、ページも増えてきた関係で、流石に機能が少なく使いにくいと思ったのでlibraryを使うことに。前は次のページボタンしかなかったのですが、戻るボタンと上下に全体位置を示すバーを付けました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/comic.page/raw/master/vue-sample-manga-page-slide-0.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/comic.page&#34;&gt;https://github.com/syui/comic.page&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;使ったのは&lt;code&gt;hooper&lt;/code&gt;と&lt;code&gt;vue-cli 4&lt;/code&gt;です。&lt;code&gt;vue-cli&lt;/code&gt;は古いバージョンに比べ格段に使いやすくなっていて、webpackを使わなくて済みました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn add hooper&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;vueはこんな感じで書きます。hooperは&lt;code&gt;slide {content}&lt;/code&gt;みたいな構成でhtmlを書きます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html:App.vue&#34; data-lang=&#34;html:App.vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;hooper&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:settings&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hooperSettings&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;slide&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;(n,index) of products&amp;#34; &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:key&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;n&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;/manga/&amp;#39;+ (index) +&amp;#39;.png&amp;#39;&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;page_n&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;slide&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;hooper-navigation&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hooper-addons&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;hooper-navigation&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;hooper-pagination&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hooper-addons&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;hooper-pagination&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;hooper-progress&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hooper-addons&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;hooper-progress&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;hooper&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Hooper&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Slide&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Progress&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HooperProgress&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Pagination&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HooperPagination&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Navigation&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HooperNavigation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hooper&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hooper/dist/hooper.css&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;App&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Hooper&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Slide&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;HooperProgress&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;HooperPagination&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;HooperNavigation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;products&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [...Array(Number(&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;VUE_APP_PAGE&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;keys&lt;/span&gt;()],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;hooperSettings&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;itemsToShow&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;centerMode&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;hooper&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;button&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;hooper&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;indicator&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;background&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;000&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;page_n&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;align&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;center&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;vueとhooperのexampleをもう少しだけ。例えば、指定のコンテンツを配置するとしたら下記のような感じです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた21</title>
      <link>https://syui.github.io/blog/post/2020/04/08/illust/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/08/illust/</guid>
      <description>&lt;p&gt;最近は、素材に使う必要なものばかり描いていた気がするので、今回はただただ遊びで描いてみました。&lt;/p&gt;&#xA;&lt;p&gt;いつもよりちょっと丁寧です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いている動画を作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/04/07/illust/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/07/illust/</guid>
      <description>&lt;p&gt;ノベルの進行状況からかイラストを描く機会が増えています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ibisPaint X&lt;/code&gt;で再生を押すと、描いている最中の動画が流れて、これ全部保存しているんですね、知らなかった。&lt;/p&gt;&#xA;&lt;p&gt;今回は、普段、どんな風に絵を描いているのかを紹介してみようと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/m_sabonezumi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;上は、サボネズミです。未来の意思を持ったサボテンなんですけど、他人の夢に入り込んで、そこではハリネズミとして行動します。ゼンの持ち物で関西弁をしゃべる。そういや登場させるの忘れてた、ということで、一応、描いてみた。&lt;/p&gt;&#xA;&lt;p&gt;動画が撮影されてるの知らなかったので、普段通りとなっています。&lt;/p&gt;&#xA;&lt;p&gt;大体は一発で線を引きます。最も時間がかかってるのは完成したあとですね。ここちょっと変と思った部分の修正です。全体的に変だとかなってしまうと、全部書き直しになることもあります。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、ほとんどは一発です。一発で仕上がったやつのほうがうまく描けたということが多いです。また、描きたい気分のとき描いたやつがそうなる傾向にあるような気がする。&lt;/p&gt;&#xA;&lt;p&gt;基本的に私は私のやり方で絵を書きます。とくに誰かに教えてもらったとか、だれかの真似であるとかではありません。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、誰かの影響を受けているというのはあります。私は幼い頃、おじさんからドラゴンボール全巻をもらったのでそれを読んでいました。また、ゲームはポケモンが大好きです。なので、ドラゴンボールやポケモンの影響はすごく受けていると思います。&lt;/p&gt;&#xA;&lt;p&gt;こういったことは自然に出てくると思うので、みなさんも絵を書きたいときはただ描くだけでいいと私は思います。&lt;/p&gt;&#xA;&lt;p&gt;上手いとか下手とかではなく、自分が納得できるかや、描きやすいか、楽しいか、そういったことが何より重要だと思います。&lt;/p&gt;&#xA;&lt;p&gt;それ以外のことは、割とどうでもいいことです。&lt;/p&gt;&#xA;&lt;p&gt;つらいことや難しいことは、やっぱり、続かないと思います。私は、自分の絵を自分が好きなように書いてきただけなので、続けられていますが、例えば、絵の勉強をしよう、資料を集めよう、誰それよりもうまく、あるいは同等に書こうみたい感じだったら、続かなかったと思う。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、向上心は大切だと思います。ただ、私の場合でいうと、私は自分の絵柄を確立させていく方向で考えているように思います。そちらの比重、優先度のほうが高い。何故かと言うと、私は、大変なこと、難しいこと嫌いなんです。どうせならラクに楽しく描いていきたい。自分の絵を描いていきたい、それだけなんです。&lt;/p&gt;&#xA;&lt;p&gt;絵を書く時、何を参考にするの？&lt;/p&gt;&#xA;&lt;p&gt;実は私が絵を書くとき、資料を見ることは殆どありません。というか、全く無いと言っていいでしょう。サボテンを描くとき、サボテンを見ません。ネズミも同じ。ただ自分のイメージで、線を引いてそこから描いていくという感じです。なぜか。資料を探し出すとやる気が削がれるんですよ。そして、めんどくさい。&lt;/p&gt;&#xA;&lt;p&gt;絵を書きたいだけの人は、資料、やめたほうがいいです。資料は、描かなければならないものが明確にあって、かつ探さないとよくわからない場合に限定すべきです。&lt;/p&gt;&#xA;&lt;p&gt;普段の日常生活の中、ふと目にした何かや感じたことなどで、気持ちを刺激され描き始めるみたいな流れが一番いいのではないかと思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、わからない部分もたまにあって、そういうときは検索しますが、ほとんどがイメージです。&lt;/p&gt;&#xA;&lt;p&gt;絵を書くとき必要なものは何もありません。イメージを大切に、私はそう思います。&lt;/p&gt;&#xA;&lt;p&gt;少し複雑なポーズや複雑なものを書くときがあります。こんなときも、やはりイメージが大切です。&lt;/p&gt;&#xA;&lt;p&gt;しかし、イメージと言っても分かりづらいですよね。&lt;/p&gt;&#xA;&lt;p&gt;例えば、線をぐにゃぐにゃっと思うがままに引いてみて、そこから脳内で描き出されるイメージ、構図みたいなものが見えるので、私は、そこに見えたものを描きます。&lt;/p&gt;&#xA;&lt;p&gt;真っ白なキャンバスにぐにゃぐにゃと適当に線を引くじゃないですか。そうすると、薄っすらその続きになる自然な線が見えてくるので、それをなぞるだけです。&lt;/p&gt;&#xA;&lt;p&gt;すごくわかりにくい話かもしれませんが、そんな感じでやると、誰でも描けますので、絵を描きたいと思った人は、そんな感じでやるのがオススメ。&lt;/p&gt;&#xA;&lt;p&gt;下記は最近書いたキャラクター。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_ripo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_kakiko.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>マンガを1話だけ完成させてみる</title>
      <link>https://syui.github.io/blog/post/2020/04/02/manga/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/04/02/manga/</guid>
      <description>&lt;p&gt;これが1話かどうか怪しいですが、ページ数的には、1話の分量ですね。物語的にも一区切り付きました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;マンガのページはvue.jsで構築しています。次のページボタンと画像URLのリンクを生成。&lt;/p&gt;&#xA;&lt;p&gt;できればこちらのリンクから読んだほうが読みやすいと思います。ブログページは画像を縮小して表示するため。&lt;/p&gt;&#xA;&lt;h3 id=&#34;独り言&#34;&gt;独り言&lt;/h3&gt;&#xA;&lt;p&gt;週間連載の漫画家は、バケモンじゃないかと思いました。絵を書くのって大変で、セリフとか背景とか時間がかかります。&lt;/p&gt;&#xA;&lt;p&gt;私は、そこまで緻密に考えたり設計したり描き込んだりするタイプではなく、それでも時間がかかってしまいました。&lt;/p&gt;&#xA;&lt;p&gt;物語の構成は、1:海, 2:虹, 3:月となっています。とはいえ、内容があるかと言うと、特にありません。&lt;/p&gt;&#xA;&lt;p&gt;オリジナル小説または、ノベルゲームとの関連性はあります。設定はすべてそこから来ているため、キャラやその他の設定を受け継いでいます。今の所、ノベルゲームのスピンオフという位置づけ。しかし、これからどうなるのかは、わかりません。&lt;/p&gt;&#xA;&lt;p&gt;唯を追い出した羊は、第423代の大統領。ドラゴンの名前は、ドライ。色はブルーぽい感じ。ゲームの方でも必要になればキャラクター(モンスター)一覧に追加しますが、おそらく、追加しないでしょう。ガララ星に大陸はないの？反対側に一つだけあります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ページ&#34;&gt;ページ&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/manga/0.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/1.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/2.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/3.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/4.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/5.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/6.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/7.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/8.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/9.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/10.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/11.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/12.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/13.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/14.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://syui.github.io/manga/15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ブログをはじめるならGitHub Pagesがおすすめ</title>
      <link>https://syui.github.io/blog/post/2020/03/28/blog/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/28/blog/</guid>
      <description>&lt;p&gt;ブログをやるなら&lt;code&gt;GitHub Pages&lt;/code&gt;か&lt;code&gt;GitLab Pages&lt;/code&gt;がおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;私は、少し前にGitLabでブログをやっていましたが、その後、GitHubに移行したというか、戻りました。経緯としては&lt;code&gt;GitHub -&amp;gt; GitLab -&amp;gt; GitHub&lt;/code&gt;という流れです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io&#34;&gt;syui.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;割と長くGitHub PagesやGitLab Pagesでブログをやってきたので、今回は、両者の違いをまとめてみます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLabはプライベートリポジトリが無制限で、HTMLソースを公開しなくていい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Web Serverは、GitHubのほうが安定していて速い&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLabのほうがドキュメントが充実しており、公式テンプレートがわかりやすい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;どちらもCIを回せるけど、GitLabはGitLab CIを回して、public/にビルドするという形態を採用するため、CIが成功しないとページが公開、更新されない。ユーザーが&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;を書く必要がある&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitHub PagesはデフォルトでJekyll Buildを実行しページが公開される仕組み。ただし、リポジトリルートに&lt;code&gt;.nojekyll&lt;/code&gt;を置くことでJekyll Buildを実行しないオプションも存在する。よって、HTMLを直に置いてページを作ることもできる。何らかの原因でJekyll Buildが失敗する場合、この手段を用いることができる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitHubは、&lt;code&gt;${USER}.github.io&lt;/code&gt;というリポジトリ名を作成することで、当該ドメインが与えられる。&lt;code&gt;branch:master&lt;/code&gt;にHTMLをpushすると更新される。複数のページを用意したい場合は、リポジトリを作ったうえで&lt;code&gt;branch:gh-pages&lt;/code&gt;に&lt;code&gt;jekyll build&lt;/code&gt;が通るソースコードを置くことでページを公開する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLabも同じく&lt;code&gt;${USER}.gitlab.io&lt;/code&gt;というリポジトリ名を作る。ただし、ブランチは基本的にはmasterを使用する。なお、&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;でソースを置くブランチは制御、変更できる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;現在、GitHub Pagesには、GitLab CIに相当するGitHub Actionsがあるのでページの自動ビルド、デプロイに関しての不便はない&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLab Pagesは複数のドメインを登録できる。GitHubは無理。なので必要なときはGitLab Pagesのドメイン設定を使ってGitHub Pagesにリダイレクトさせるなどのハックに利用させてもらってる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;&#xA;&lt;p&gt;以下、サービス別に特徴をまとめます。一応、GitHub Pagesをおすすめしておきます。GitLab Pagesはweb serverが不安定なことが多かった記憶があります。とはいえ、好みの問題ですね。&lt;/p&gt;&#xA;&lt;h4 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;web serverが速くて安定している&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;デフォルトではjekyll buildが回る、オプションで切ることもできる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;gitlab-pages&#34;&gt;GitLab Pages&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ドキュメントや公式テンプレートがわかりやすい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;必ずGitLab CIを通す必要がある&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;複数のドメインを指定できる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;プライベートリポジトリが無制限に使えるため、HTMLソース(リポジトリ)を非公開にできる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;gitlabからgithubに移行した経緯&#34;&gt;GitLabからGitHubに移行した経緯&lt;/h3&gt;&#xA;&lt;p&gt;私は、GitLab Pagesを2年くらい使っていましたし、特に不満もなかったのですが(たまに不安定で遅かったというのはある)、あるとき突然にページが非公開になってしまうことがありました。&lt;/p&gt;&#xA;&lt;p&gt;で、運営に連絡してみたのですが、返事がなかったので、GitHub Pagesに同じソースでデプロイしました。つまり、ここで移行という形になります。&lt;/p&gt;&#xA;&lt;p&gt;その後、GitLabの方で非公開が解除されたのですが、なんだったのかよくわからなかったので、その後、GitLabに戻ることはありませんでした。そのような経緯で、それ以降は、GitHub Pagesを使っています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、GitHubはCI連携がデフォルトではなかったため、通常は、ビルドしたものをリポジトリにpushしなければ更新できません。したがって、Travis CIを回してページのビルド、デプロイを自動化してましたが、GitHub Actionsが登場したので、今はそちらに移行しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gitlab-pagesを使った複数ドメインを利用するハック&#34;&gt;GitLab Pagesを使った複数ドメインを利用するハック&lt;/h3&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;blog.syui.ai&lt;/code&gt;と&lt;code&gt;log.syui.ai&lt;/code&gt;というドメインを&lt;code&gt;syui.github.io/blog&lt;/code&gt;に飛ばしたいとしましょう。この場合、GitHub Pagesは一つのページに一つしかドメインを指定することができないので難しい。&lt;/p&gt;&#xA;&lt;p&gt;そこで、GitLab Pagesで２つのドメインを登録した上で、CloudFlareなどのリダイレクトをGitHub Pagesへ走らせることで、&lt;code&gt;blog.syui.ai&lt;/code&gt;と&lt;code&gt;log.syui.ai&lt;/code&gt;を目的の場所に飛ばすことができます。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CNAME : gitlab pages&#xA;&#xA;↓&#xA;&#xA;リダイレクト : github pages&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;とはいえ、これはあくまでリダイレクトという形なので、アクセスは、トップドメインにとどまります。このような形を実現したい場合のみ利用できるハックです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vue 2.x &#43; webpack 4.xでenvを使う</title>
      <link>https://syui.github.io/blog/post/2020/03/25/vue2x/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/25/vue2x/</guid>
      <description>&lt;p&gt;vue 2.x + webpack 4.x 系でenvを使うのにハマったのでメモ。&lt;/p&gt;&#xA;&lt;p&gt;結論として&lt;code&gt;dotenv-webpack&lt;/code&gt;を使えばいけました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;page=4&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yarn add dotenv-webpack&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:webpack.config.js&#34; data-lang=&#34;js:webpack.config.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dotenv&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dotenv-webpack&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;plugins&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dotenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./.env&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js:src/main.js&#34; data-lang=&#34;js:src/main.js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;products&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [...Array(Number(&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;page&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;keys&lt;/span&gt;()]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json:package.json&#34; data-lang=&#34;json:package.json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cross-env NODE_ENV=production webpack --progress --hide-modules&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>再びマンガを描きはじめた話</title>
      <link>https://syui.github.io/blog/post/2020/03/24/manga/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/24/manga/</guid>
      <description>&lt;p&gt;昔、ちょっとだけよくわからないマンガを書いてたことあります。&lt;/p&gt;&#xA;&lt;p&gt;今回、ノベルゲームの物語が進み、ようやく繋がりそうだったので、再びそのあたりをマンガで描いてみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;書き直しになるのか、スピンオフになるのか、そんな感じです。&lt;/p&gt;&#xA;&lt;p&gt;ノベルゲームも物語を追加したので、気になる方は、続きを読んでみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/manga/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/manga&#34;&gt;/manga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;私は、昔から気ままに書いてきた絵があるんですけど、それにお話を付けらたらなあとずっと思ってて、もう一度、ノベルゲームの設定を使って実現できたらと思ったので、描きはじめたという経緯。&lt;/p&gt;&#xA;&lt;p&gt;特に内容があるわけではありませんけど、マンガでは、へんなドラゴンと一緒に暮らす女の子の日常を予定してます。&lt;/p&gt;&#xA;&lt;p&gt;ドラゴンのほう、こいつも地球出身で、古来から地底深くに生息していたドラゴンの生き残り。生命の龍と呼ばれています。色々あってユイと同じく地球を離れることになったやつ。&lt;/p&gt;&#xA;&lt;p&gt;私は、非公開の小説を書いていたり、ゲームを作っていたりして、ゲームで追加したキャラとかもたくさんいて、新しいキャラの影響もあって、非公開(稀に公開)のマンガや小説の設定も成長してきました。その意味でも今回は少しだけ頑張って描いていけたらと思います。&lt;/p&gt;&#xA;&lt;p&gt;というか、今、ipadで描いてるんですけど、ipadなら楽しく描けるような気がする。&lt;/p&gt;&#xA;&lt;p&gt;マンガは数ページだけnexus7で描いたことがあったのですが、今思うと、作業環境としては猛烈につらかったんだなって&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;ipad、買ってよかったじょ！&lt;/p&gt;</description>
    </item>
    <item>
      <title>ノベルゲームの続きを書いた</title>
      <link>https://syui.github.io/blog/post/2020/03/20/game/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/20/game/</guid>
      <description>&lt;p&gt;オリジナルのノベルゲームを更新しました。&lt;/p&gt;&#xA;&lt;p&gt;以下のページにアクセスして、&lt;code&gt;はじめから&lt;/code&gt;を選択してください。新しい章を選べるようになっています。&lt;/p&gt;&#xA;&lt;p&gt;PLAY : &lt;a href=&#34;https://syui.github.io/game&#34;&gt;/game&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;紹介 : &lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/logo3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ちょっとした制作秘話&#34;&gt;ちょっとした制作秘話&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_zen_ken.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回作ったお話は、yui3の前半、モンスター編という位置づけになっています。&lt;/p&gt;&#xA;&lt;p&gt;簡単に言うと、アイとはかせが作ったモンスターボックスがどんなものなのか、その設定を紹介する内容です。&lt;/p&gt;&#xA;&lt;p&gt;このような設定をただ説明するだけでは、物語としてつまらない。&lt;/p&gt;&#xA;&lt;p&gt;したがって、物語の中にモンスターボックスの設定を組み込んで説明しています。&lt;/p&gt;&#xA;&lt;p&gt;また、yui3の後半、アム編の冒頭を少しだけ公開しました。&lt;/p&gt;&#xA;&lt;p&gt;アムというのは、宇宙のナンバーワン通貨を発行している星です。今回、アイはそこに潜入するというミッションです(わけわからん)。&lt;/p&gt;&#xA;&lt;p&gt;なぜそうなったのかは、これから語られるかもしれませんし、語られないかもしれませんが、まあ、そんな感じです。&lt;/p&gt;&#xA;&lt;p&gt;で、こういったシーンで使えるかっこいい感じのBGMが欲しかったので、作りました。ええ、この冒頭のためだけに作りましたとも。&lt;/p&gt;&#xA;&lt;p&gt;今まではゆるふわな話が多かった気もするので、今回は、少し大人な感じで話を進めていこうと思っていて、そういった雰囲気を少しでも出せれば嬉しいです。&lt;/p&gt;&#xA;&lt;p&gt;ただ、どんなに悲しかったり、つらかったり、あるいは怖かったりする話でも、最後には、どこか笑える、ハッピーエンドな感じのギャグを入れることも忘れずにやっていきたいなあと考えています。&lt;/p&gt;&#xA;&lt;p&gt;あ、アイが手に持っている剣は、頭の上の輪っかですね。それを形状変化させたもの。&lt;/p&gt;&#xA;&lt;p&gt;アム星は警備が厳重で、武器は持ち込めませんし、力も使えません。よって、今回、重力で鍛えた肉体とソードのみで突破することになりそうな気がする。(わからんけど)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGO、バトルリーグの改善案ついて説明してみる</title>
      <link>https://syui.github.io/blog/post/2020/03/16/pokemon/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/16/pokemon/</guid>
      <description>&lt;p&gt;前回、バトルリーグの改善案を話しましたが、今回は、その案について丁寧に説明してみることにします。&lt;/p&gt;&#xA;&lt;h3 id=&#34;対戦数を表示してはいけない理由&#34;&gt;対戦数を表示してはいけない理由&lt;/h3&gt;&#xA;&lt;p&gt;まず対戦数は表示してはいけません。なぜか？それはユーザーを不快にする要素があるからです。熱心なユーザーは、相棒ポケモンをやるために毎日トレーニングします。バトル数でハートを稼ぐためです。しかし、トレーニングするにはこの忌まわしき対戦画面に移る必要があるんですよね。ここでPvPに興味がない人でも、自分の成績をまざまざと見せられてしまい精神的に辛いのです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、勝利数38,対戦数55のユーザーと勝利数12,対戦数55のユーザーがいたとしましょう。それを見ただけで人は区別してしまうんですよ。普通だなとか、弱いやつだなとか。&lt;/p&gt;&#xA;&lt;p&gt;これは、非常に良くない。他人に対しても個人に対しても良くないことです。悪影響しかないと言ってよい。&lt;/p&gt;&#xA;&lt;p&gt;ではどうすればいいのか。対戦数を表示しなければいいんですよ。&lt;/p&gt;&#xA;&lt;p&gt;この表示がポジティブな情報のみだったら、シンプルで非常に良いものに変化します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/130/small/403bc7176368e258.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;戦えば戦うほど数字があがる可能性が増えるわけですから、嬉しいのです。&lt;/p&gt;&#xA;&lt;p&gt;ユーザーをバトルリーグの強さで区別してはいけません。区別できてしまうようではいけないんですよ。&lt;/p&gt;&#xA;&lt;p&gt;また、バトルをしてほしいのなら、なおさら勝利数のみを表示したほうがいい。対戦数を表示してしまうと、戦えば戦うほど落ちていく勝率に歩みを止めてしまう人が出てくるでしょう。逆に、たまたま連勝し、それ以上進めない人も出てくる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ゆるいゲームへのミスマッチ&#34;&gt;ゆるいゲームへのミスマッチ&lt;/h3&gt;&#xA;&lt;p&gt;ポケモンGOは、どういうゲームか。言ってみれば非常にゆるいゲームです。誰でも簡単にプレイできるゲーム。バトルは技が最高で2つあり、基本は1つ。それをタップして繰り出すだけで、初回操作にも説明は不要でしょう。&lt;/p&gt;&#xA;&lt;p&gt;さて、そんなゆるいゲーム、ポケモンGOに形式だけ本格的なPvPが実装されました。これがバトルリーグです。&lt;/p&gt;&#xA;&lt;p&gt;でもですよ、本格的なPvPをやりたければ、みんな他のゲームをやるでしょう。通信サーバーが不安定でバグだらけの技をタップして繰り出すだけのシンプルなゲームに皆さんは一体何を求めていると思いますか。確実に言えることは、本格的なPvPなんて誰も求めていないのです。多くの人は求めていないし、求めている人がいても、他にやりようがいくらでもあるので、その方法を改善案として提示しました。&lt;/p&gt;&#xA;&lt;p&gt;まずは、本格的なPvPをこのゲームでやろうとすると、様々な弊害が出てきてしまうということを説明します。&lt;/p&gt;&#xA;&lt;p&gt;一つは、形式と内容(実力)のミスマッチです。&lt;/p&gt;&#xA;&lt;p&gt;形式だけは本格的ですが、内容がその形式と合わないんですよね。どうやっても合わない。実力を反映しないし、できない。そんなものは存在しない。だって、技をタップして繰り出すだけのシンプルなゲームですよ。そこに良さがあるようなゲームです。1日プレイすればある程度理解できてしまうし、その後は同じことの繰り返しです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、1日かそこらプレイしてテクニックを覚えたあとは、運ゲーです。これに本格的な形式を当てはめるのは無駄ですし、意味がない。そこには何も反映されませんし、言ってみれば運の良さくらいしか反映されません。&lt;/p&gt;&#xA;&lt;p&gt;例えば、ジャンケンの成績、対戦数と勝利数がずーっと目に見える場所に張り付いていたらどう思います？私は、鬱陶しいですね。それに意味もないと考えます。&lt;/p&gt;&#xA;&lt;p&gt;しかし、運営はそういった意味のない数字、レート、ランクにあたかもゲーム価値があるように見せかけます。ユーザーもそれに倣って、その基準で物事を判断し、評価するようになる。この状況、あまり楽しいとは言えません。&lt;/p&gt;&#xA;&lt;p&gt;ではどうすればいいのか。&lt;/p&gt;&#xA;&lt;p&gt;本格的なPvPを何が何でもポケモンGOでやりたいというなら、それは「おまけ」にすべきであり「基本」あるいは「核心」にすべきではありません。&lt;/p&gt;&#xA;&lt;p&gt;ですから、最高ランクは勝利数で上がれるようにし、最高ランクに到達した時点で3000のレートが与えられ、そこからユーザーに選択させればいいと私は考えています。つまり、結果(3000)から逆算するのです。また、おまけは、あくまでおまけであり、そこに報酬は出ません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、この仕組みによって、誰よりも強くなりたいというトレーナーにはレートを上げるチャンスが与えられ、逆に報酬目当てのトレーナーやPvPをやりたくないトレーナーには、そこでやめる機会が与えられる。レートはシーズン終了時に今までどおり記録されますので、頑張りは残ります。逆に、やめた人達は3000ですね。&lt;/p&gt;&#xA;&lt;p&gt;今の運営の態度は、明らかにこういった個人の選択を奪うか、あるいは尊重しない方向で動いています。PvPの報酬や評価、表示などがその証拠です。&lt;/p&gt;&#xA;&lt;p&gt;PvPはやりたい人がやればいいのであって、そういった仕組みを作るのが運営の仕事だと私は思います。PvPに参加する人を何が何でも増やそうとする試みは、もはや「ポケモンGOには人それぞれに遊び方がある」と言えるものではありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;対戦数(総数)は表示しない、表示するのは勝利数だけ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最大ランクまでレート戦なし(勝数でランクは上がる)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最大ランクに到達した時点で3000のレートが与えられる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;そこからはレート戦、ただしあくまで「おまけ」。レートによる報酬はなし(終了後レートは記録される)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;個人的なお願い&#34;&gt;個人的なお願い&lt;/h3&gt;&#xA;&lt;p&gt;プレシーズンでのランク10の基準、3000に戻してくれると嬉しいなー、なんつって。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGOバトルリーグのシーズン1が始まった</title>
      <link>https://syui.github.io/blog/post/2020/03/15/pokemon/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/15/pokemon/</guid>
      <description>&lt;p&gt;シーズン1が始まりました。一応、ランク7に到達しました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/128/small/ef460b556a8cbc6b.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ですが、見ての通り初期レートが死んでいます。ここからランク10(レート3000)は無理です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;相手の強さ&#34;&gt;相手の強さ&lt;/h3&gt;&#xA;&lt;p&gt;相手の強さは、ほとんど変化がないように思います。ランク1であろうと、ランク6であろうと、正直、相手が強すぎるような気がしています。何かがおかしい。楽に勝てた記憶がありません。YouTubeを見ていると、もう少し楽な試合があってもいいと個人的には思うのですが。&lt;/p&gt;&#xA;&lt;h3 id=&#34;戦略と勝率&#34;&gt;戦略と勝率&lt;/h3&gt;&#xA;&lt;p&gt;私は、プクリン(ピクシー)、シュバルゴ、ルンパッパのメンバーです。はがねタイプには、シュバルゴのアシッドボムで対抗します。チルタリスもアシッドボムからのメガホーンで落とせます。この構成でやると、運には依存するものの基本的には勝ち越せるはずなんですが、どういうわけか、あまり勝てていない状況です。&lt;/p&gt;&#xA;&lt;h3 id=&#34;フリーズ&#34;&gt;フリーズ&lt;/h3&gt;&#xA;&lt;p&gt;まず、55試合中に勝てたはずの6試合をフリーズによって落としています。こちらの通信には問題はないはずです。&lt;/p&gt;&#xA;&lt;p&gt;さらに3試合ほどフリーズによって落としかけました。ギリギリ動くようになったので、なんとか回避しました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、なぜこちらばかりフリーズするのでしょう。相手がフリーズしたの見たことない。たまには相手もフリーズしてほしい。&lt;/p&gt;&#xA;&lt;h3 id=&#34;チャージ&#34;&gt;チャージ&lt;/h3&gt;&#xA;&lt;p&gt;シーズン1で戦っていると、やはり、チャージ攻撃が速すぎる人に出会います。これはプレシーズン中もよくありました。&lt;/p&gt;&#xA;&lt;p&gt;私は、チルタリスと何度も戦っていますから、りゅうのいぶきがどれくらいのチャージ必要かわかるんですよ。簡単に言うと、りゅうのいぶきは、チャージが遅いです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、初登場からりゅうのいぶきを3,4発ですぐにゴッドバードを放てるはずがないのに、普通に打ってくることがあります。&lt;/p&gt;&#xA;&lt;p&gt;今はそういうのを食らってもなんとか勝てていますが、しかし、ハイパー、マスターになってくると、即チャージに対抗するのは、難しくなってくるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;このゲーム、精神衛生上よくないので、突然やめることになるかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレシーズン&#34;&gt;プレシーズン&lt;/h3&gt;&#xA;&lt;p&gt;今更ですが、プレシーズン中の話を少しします。悔しすぎる思いを少し吐き出したい。&lt;/p&gt;&#xA;&lt;p&gt;プレシーズン中、私のレートは2600から始まり、ハイパーで3300まで上げました。レートの推移はスーパーが3000で、ハイパーが3300です。ハイパーの期間中、遅延バグを知らずに-100を食らってしまっています。ギャラドス、キングドラに変えてみたものの「これは絶対におかしい」と気づくまで連敗してしまったためです。1日の出来事でした。そこからレートを3300に戻しました。が、本来なら3400でした。遅延を食らわなかったら。&lt;/p&gt;&#xA;&lt;p&gt;マスターもディアルガを使ってみたところ連敗し、どうも自分のディアルガ、カビゴンが与えるダメージが少なすぎることに気づくまで-100下げてしまった。そこから中断することになります。ですから、マスターはレートを下げてから戦ってなかった。&lt;/p&gt;&#xA;&lt;p&gt;あとからならなんとでも言えますが、あえていうと、ランク10に到達できる可能性をことごとく運営に潰されてきたので、納得していませんし、今もそうです。&lt;/p&gt;&#xA;&lt;p&gt;まずはプレシーズンにもかかわらずランク10の基準をレート2800から3500に変更した点です。これは初期に行われた変更で、そこだけなぜか対応が早かった。プレシーズンですよ、何でわざわざ基準だけ厳しくして、バグや不正をずっと放置するのでしょう。わけがわからない。変更がなかった場合、ランク10に到達していました。&lt;/p&gt;&#xA;&lt;p&gt;初期レートは3200くらいで多くの人に配られているのをtwitterでよく見ます。私はバトルリーグに関連すると思われるメダルはゴールドにしているはずなのに、初期レートが低かった。ゴールドの値が低かったからそうなったのかもしれませんけど、初期レートは納得していません。3200から始めていたら私のレートは今頃3900ですよ(あくまで論理上)。まあ、そこまではなかったとしても、ランク10には到達していたと思います。実際、ランク10に到達した人達は、例外なく初期レートがよかった人達です。&lt;/p&gt;&#xA;&lt;p&gt;最後のチャンスであるマスターリーグ。これは遅延バグによって中止せざるを得えない状況に追い込まれました。最強ポケモン、最強技を使っても相手だけ遅延しないのでまともに戦うことができません。しかも、時期的に初期は勝ちやすいため、そのチャンスを逃してしまった損失も大きかった。&lt;/p&gt;&#xA;&lt;p&gt;つまり、プレシーズンにもかかわらず基準だけ早々に引き上げたのも、クリアできないような初期レートも、致命的バグが多発して攻略不可能になったのも、すべてが最悪でした。&lt;/p&gt;&#xA;&lt;h3 id=&#34;改善の知識&#34;&gt;改善の知識&lt;/h3&gt;&#xA;&lt;p&gt;ここで、私が持てる改善の知識を少しだけ書きます。個人感想に過ぎませんけど、簡潔に。&lt;/p&gt;&#xA;&lt;p&gt;タコ部屋って知ってます？知らない人は調べてください。ようは、奴隷ユーザーに厳しくするだけでは逃げてしまうので、ユーザー同士戦わせランキングしたら逃げず働くようになって経営者はウハウハだという話です。ランキング上位だけがわずかばかり報奨をもらえます。GOリーグはタコ部屋です。もちろん、今の時代、タコ部屋を作ることでしか人を集められない稼げないゲームは多い。しかし、ポケモンGOでそれを作る必要はまったくない。なんでこの最高のゲームにそんなもん作ってんだよ。わけわからん。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGOのいいところは、みんなが勝てるゲームだからです。コミュニティデイ素晴らしい。みんな色違いをゲットできる、みんな勝ち。レイドもそうです。簡単に伝説ポケモンが手に入り、みんな楽しいし、みんな勝てる。いいゲームですね。でもGOリーグは良くない。&lt;/p&gt;&#xA;&lt;p&gt;私は運良く勝ち越しています。しかし、対戦画面を見るのが苦痛で、バグってる運ジャンケン(勝敗はバグと運によって決まる)にどれくらいの勝率で勝ったか表示されたところで面白くもない。しかも、連敗したときの嫌な記憶がよみがえる。&lt;/p&gt;&#xA;&lt;p&gt;改善策として、まずは、対戦数を表示しないこと。表示するのは勝利数だけ。連勝記録はあってもいいけど、なかったほうがシンプル。&lt;/p&gt;&#xA;&lt;p&gt;レートは、負けても下がらないようにすること。勝てば上がる、それだけでいい。頑張ったのに下がったら嫌でしょ。今の仕組み楽しくない。勝てない人はレート上がらないので、それでいいはず。わざと負ける人にどう対処するかは考えなくていいし、放置でいい。レート下がらないとわざと負ける人が出てくるかもという懸念、レート下がるとわざと負けは出ないはずという前提が間違い。また、同士討ちは負けでなく勝ちでいい。初期レート、バグ含めすべてが不公平、不公正な環境なのにそこだけ厳格なのわけわからん。&lt;/p&gt;&#xA;&lt;p&gt;今の運営、ユーザーへの嫌がらせにだけは熱心。多くの人を楽しませようという気持ちがないと思う。ダークライのときもそうだけど、引っ込めるの多少遅れても誰も文句言わないのに、あえて時間より早めに引っ込めたりとかしてる(しかも遅めに登場)。&lt;/p&gt;&#xA;&lt;p&gt;個人的には、レートを撤回して、最高ランクも一定数勝てば到達できるようにしたほうがいいと思う。それ以上戦いたい人は勝手にやるでしょ。&lt;/p&gt;&#xA;&lt;p&gt;私ならこうするというのを書いておきます。私なら最高ランクまでレート戦はなしにします。続けてれば最高ランクは取れるようにします。で最高ランク10に到達した時点の全員に3000のレートが与えられます。そこからは勝てば上がるし、負ければ下がるレート戦にすればいい。そんな感じにすると思う。ただ、レートによる報酬は与えません。PvPは戦いたい人が戦えばいいという考えだからです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;対戦数(総数)は表示しない、表示するのは勝利数だけ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最大ランクまでレートなし(勝数でランクは上がる)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最大ランクに到達した時点で3000のレートが全員に与えられる(運営システムが行うのはここまで)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;レートによる報酬はなし(戦いたい人は戦ってレートを上げればいい)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ポケモンGOのリーグが正式に始まるのでポイントをまとめてみる</title>
      <link>https://syui.github.io/blog/post/2020/03/12/pokemon/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/12/pokemon/</guid>
      <description>&lt;p&gt;GOリーグはあまり好きではありません。ただ、実際にプレイしてきたのでポイントをまとめます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ノーマル攻撃かシールド破壊か&#34;&gt;ノーマル攻撃かシールド破壊か&lt;/h3&gt;&#xA;&lt;p&gt;スーパーはノーマル攻撃で押せます。マスターはシールド破壊が有効です。ノーマル押しでは勝てません。そういった傾向にあります。&lt;/p&gt;&#xA;&lt;p&gt;この知識を前提に戦略を立てるとよいでしょう。ノーマル攻撃が強いポケモンはなにか、シールドを破壊できるポケモンは何かを考えていけばメンバーは決めやすいと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;耐性x2&#34;&gt;耐性x2&lt;/h3&gt;&#xA;&lt;p&gt;その上で、よく出てくるテンプレに相性で対抗することを考えます。二重耐性(耐性x2)が特に重要です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、フシギバナにはヒードランが耐性x2を持ちます。ギラティナにはカビゴンです。その上で&lt;code&gt;わざ&lt;/code&gt;をベストなものに変更します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;シャドウ&#34;&gt;シャドウ&lt;/h3&gt;&#xA;&lt;p&gt;シャドウポケモンは、与えるダメージが大きくなります。&lt;/p&gt;&#xA;&lt;h4 id=&#34;スーパー&#34;&gt;スーパー&lt;/h4&gt;&#xA;&lt;p&gt;以下、連勝経験のあるパーティーです。&lt;/p&gt;&#xA;&lt;p&gt;テンプレ:チルタリス、マリルリ、ランターン、ナマズン、エアームド、ラグラージ、デオキシス、レジスチル&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;グランブル&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;かみくだく&lt;/td&gt;&#xA;          &lt;td&gt;インファイト&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;マッスグマ&lt;/td&gt;&#xA;          &lt;td&gt;シャドークロー&lt;/td&gt;&#xA;          &lt;td&gt;かみなり&lt;/td&gt;&#xA;          &lt;td&gt;くさむすび&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ルンパッパ&lt;/td&gt;&#xA;          &lt;td&gt;はっぱカッター&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;          &lt;td&gt;ハイドロポンプ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;グランブルをシールドで守りつつ、先鋒(or交代)を倒し切る。これができなかった場合、負ける確率が高い。グランブルをプクリンやピクシーにしてもいい。ゴーストを頻繁に見かけますので、マッスグマを当てると良いでしょう。&lt;/p&gt;&#xA;&lt;p&gt;予備:マッスグマと適時入れ替えるのがオススメ&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フワライド&lt;/td&gt;&#xA;          &lt;td&gt;たたりめ&lt;/td&gt;&#xA;          &lt;td&gt;こごえるかぜ&lt;/td&gt;&#xA;          &lt;td&gt;シャドーボール&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;レアコイル&lt;/td&gt;&#xA;          &lt;td&gt;でんきショック&lt;/td&gt;&#xA;          &lt;td&gt;ほうでん&lt;/td&gt;&#xA;          &lt;td&gt;マグネットボム&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;シュバルゴ&lt;/td&gt;&#xA;          &lt;td&gt;カウンター&lt;/td&gt;&#xA;          &lt;td&gt;アシッドボム&lt;/td&gt;&#xA;          &lt;td&gt;メガホーン&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;マンタイン&lt;/td&gt;&#xA;          &lt;td&gt;あわ&lt;/td&gt;&#xA;          &lt;td&gt;つばめがえし&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ジラーチが使える場合、スーパーではジラーチが強いので使いましょう。&lt;/p&gt;&#xA;&lt;h4 id=&#34;ハイパー&#34;&gt;ハイパー&lt;/h4&gt;&#xA;&lt;p&gt;テンプレ:ラグラージ、ギラティナA、フシギバナ、レジスチル、ニョロボン、ラプラス&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フリーザー&lt;/td&gt;&#xA;          &lt;td&gt;こおりのつぶて&lt;/td&gt;&#xA;          &lt;td&gt;こごえるかぜ&lt;/td&gt;&#xA;          &lt;td&gt;げんしのちから&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ヒードラン&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;          &lt;td&gt;アイアンヘッド&lt;/td&gt;&#xA;          &lt;td&gt;かえんほうしゃ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ピクシー&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;コメットパンチ&lt;/td&gt;&#xA;          &lt;td&gt;サイコキネシス&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;こごえるかぜを連発、ほのおタイプならげんしのちから。フシギバナ来たらヒードランに入れ替えてアタックを貯める。先鋒でかくとうタイプが出てきてやられる場合はピクシーに変えたりすると楽かも。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自作ゲームを更新してみた</title>
      <link>https://syui.github.io/blog/post/2020/03/07/game/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/07/game/</guid>
      <description>&lt;p&gt;自作のノベルゲームを更新しました。以下のページにアクセスして、&lt;code&gt;はじめから-&amp;gt;最新話:45話&lt;/code&gt;となっています。&lt;/p&gt;&#xA;&lt;p&gt;PLAY : &lt;a href=&#34;https://syui.github.io/game&#34;&gt;/game&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;紹介 : &lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回もイラストを描いたり、背景を描いたり、脚本を書いたりしました。&lt;/p&gt;&#xA;&lt;p&gt;私は基本的に強制力がないと永遠に書かなそうだと思ったので、1ヶ月に1回、新しい物語を追加していくことにしました。よろしくおねがいします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>checksumで2つのファイルの同一性をチェックするツールをgolangで書いてみた</title>
      <link>https://syui.github.io/blog/post/2020/03/05/checksum/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/05/checksum/</guid>
      <description>&lt;p&gt;私はファイルのハッシュ値を調べるとか比較するとかをまとめてchecksumと呼んでいます。ただ、この辺の知識は調べたり、詳しかったりするわけではなく、普段なんとなく思ってる、ふわっとした理解に過ぎません。&lt;/p&gt;&#xA;&lt;p&gt;それを前提に話をすると、webやserverに置かれたファイルというのは、改ざんされている可能性があるため、特にインストール時や実行権限を得られるディレクトリにバイナリを置く際などはファイルの同一性をチェックし、偽装されていないかなどを確認することがよくあります。また、ファイル破損などのチェックにも有効なので、通常は、ファイルをダウンロードする時などに自動チェックされることが多いと思います。ブラウザやダウンローダーもハッシュ値チェックは行っているでしょう。&lt;/p&gt;&#xA;&lt;p&gt;通常、checksumには、&lt;code&gt;sha1sum&lt;/code&gt;,&lt;code&gt;md5sum&lt;/code&gt;などのコマンドを使います。&lt;/p&gt;&#xA;&lt;p&gt;で、ファイルを比較するとか、ハッシュ値とファイルを比較するとかになると、普通は、shellscriptを書くことになると思います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;da39a3ee5e6b4b0d3255bfef95601890afd80709&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`sha1sum ~/.bashrc |cut -d &amp;#39; &amp;#39; -f 1`&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo ok&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#こちらは通常、サーバーからの結果や所定形式のテキストをダウンロードしてのチェックになります、つまりパイプ前を変更する必要&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sha1sum ~/.zshrc ~/.bashrc |sha1sum -c --quiet&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;しかし、今回はワンバイナリで使えるchecksumツールをgolangで作ってみました。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ go get github.com/syui/shasumgo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ shasumgo ~/.bashrc ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ok&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ shasumgo s da39a3ee5e6b4b0d3255bfef95601890afd80709 ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ok&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こんな感じで使えます。&lt;/p&gt;&#xA;&lt;p&gt;また、shellscriptにも使いやすいようコマンド成功時の出力をなしにするオプションもつけました。成功すると出力なし。失敗するとハッシュ値が出力されます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ shasumgo c ~/.bashrc ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ shasumgo s c da39a3ee5e6b4b0d3255bfef95601890afd80709 ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最近、gh-actionsを使っていると、やっぱり、go-binaryは使いやすいなーと思ったので。&lt;/p&gt;&#xA;&lt;p&gt;もしworkflowを書くときchecksumが必要なら&lt;code&gt;go get github.com/syui/shasumgo&lt;/code&gt;して&lt;code&gt;shasumgo&lt;/code&gt;コマンドで処理を書くのも便利そうと思ったりしてます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:example.sh&#34; data-lang=&#34;sh:example.sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`shasumgo s c da39a3ee5e6b4b0d3255bfef95601890afd80709 ~/.bashrc`&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo ok&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今日は、ゲーム(小説)の続き書こうと思ってたんだけど、なぜかこれ作ってた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスをプレイしていて思ったこと</title>
      <link>https://syui.github.io/blog/post/2020/03/01/pokemon/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/01/pokemon/</guid>
      <description>&lt;p&gt;今日もポケマスを楽しくプレイしてます。&lt;/p&gt;&#xA;&lt;p&gt;ただ、不穏な噂もあって、業績不振のためゲームが終了するかもしれないみたいな話を耳にしました。&lt;/p&gt;&#xA;&lt;p&gt;そこで、あくまでプレイヤー視点ですが、私がプレイしていて思ったことなどを書いていきたいと思います。&lt;/p&gt;&#xA;&lt;p&gt;まず、このゲームはほんと良くできていて、言ってみれば何の問題もない優等生ですよ。運営もしっかりやっていて、過去に色々な騒動があったみたいですが、正直、大した問題はなく気にするほどのことではない些細なことばかり。何がいいたいのかと言うと、ゲームも運営も何の問題もない、よくできているということ。それは最初に言っておきたい。&lt;/p&gt;&#xA;&lt;p&gt;つまり、今回の話は、このゲームになにか問題があるというわけではなく、問題がないところが問題だみたいな話になるかもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイヤーの名前における重要性&#34;&gt;プレイヤーの名前における重要性&lt;/h3&gt;&#xA;&lt;p&gt;プレイヤーの名前、ユーザーネームはとても重要です。特に、ネットゲームでは。&lt;/p&gt;&#xA;&lt;p&gt;これは、重複不可の英数のみから成り立つものがいいですね。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、同一性を確保できるからです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、重複不可能にすることで、それが現実とリンクする部分になるんですよ。プレイヤーにとって大切なものになります。&lt;/p&gt;&#xA;&lt;p&gt;確かに、重複不可にすることで早いもの勝ちになってしまい、ほしい文字列を取り逃してしまう人も出るでしょう。しかし、それでも、重複不可になっている方が私は嬉しい。悔しいけどね。&lt;/p&gt;&#xA;&lt;p&gt;プロフィール画面を見せるだけで、ああ、このプレイヤーか、ということがわかるからです。&lt;/p&gt;&#xA;&lt;p&gt;また、中国語や韓国語、日本語が混ざっているのも好ましくありません。アルファベットのみに限定することも重要です。私は中国語や韓国語は読めませんからね。でも、アルファベットなら誰でもわかりますよね。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;プレイヤーの名前は重要&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;英数のみ、重複不可能にしよう&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;複雑なIDをプレイヤーに見せてはいけない、一見して覚えられないようなコードはプレイヤーに付与すべきではない。どうしてもというときは裏で処理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;あらゆる複雑さがもたらす混沌&#34;&gt;あらゆる複雑さがもたらす混沌&lt;/h3&gt;&#xA;&lt;p&gt;次に、ポケマスのシステムについてです。私は、このゲームを初めてプレイしたとき、これは長続きしないかもしれないと思いました。&lt;/p&gt;&#xA;&lt;p&gt;それは、システムの継続可能性が低かったからです。独立して回すことができない、コンテンツやストーリー、キャラクターを新しく用意しないと回せない、そのような仕組みだったからです。今のシステムって、中の人があまりに考えることが多すぎると思っていて、キャンペーンがあるたびにタスクでもらえるアイテムを考えたり調整しなくちゃいけなかったりで大変です。そういった運営に関する中の人の大変さとか、考えなきゃいけないことを減らしたほうがいいのではと思っていて、そのためには、アイテムを減らし、能力アップ要素を減らし、調整の複雑さを減らすのがいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;また、イベント中のあまりの複雑さ、アイテムの多さなどに混乱が生じています。今でこそ大体は把握しましたが、通常は説明がなくてもわかるようなシンプルさが求められると思います。&lt;/p&gt;&#xA;&lt;p&gt;よって、このゲームは新しい機能をつけるというより、削るほうがいいのではと思います。&lt;/p&gt;&#xA;&lt;p&gt;ではどこを削るのか。&lt;/p&gt;&#xA;&lt;p&gt;私はプレイしていて、ストーリーを読んでいません。飛ばしています。そして、私のように飛ばしている人は多いかもしれないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;理由としてはいくつかありますが、ストーリーを読んでいると、何故か恥ずかしくなってくるためです。&lt;/p&gt;&#xA;&lt;p&gt;ストーリーは子供向けに作られており、それにしても、あまりに子供向けすぎるのではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;私は、昔、心理テストで「永遠の子供」と揶揄されたことがありました。ですが、そのような特性を持ってしても、恥ずかしいと感じてしまうストーリーは一体どうなんだと。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、ストーリー自体は、決して悪くはないんです。どれも良くできていると思いますよ。キャラクターだって合ってるし。だからこそ指摘しづらい。間違っていない優等生に偉そうな説教をしている気分になるのです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、私はストーリーをバッサリ削ったほうがいいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;次に、能力アップ、強化の複雑さです。あまりに複雑すぎて、これでは、継続可能性が失われていきます。追加要素を付け加えるたび、調整による負荷が増大するでしょう。&lt;/p&gt;&#xA;&lt;p&gt;よって、能力アップは基本、レベルのみとするのが良いと思います。ただ、これだけでは課金ユーザーは納得しない。課金ユーザーが目に見える形で自慢できるような構成がベストです。&lt;/p&gt;&#xA;&lt;p&gt;私なら限界突破でLV+5まで可能にします。ただし、これには期間制限があって、上限レベルが開放されるたび限界突破は失われますよね。したがって、やりたい人は上限が開放されると再度、限界突破しなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;このようにすることで、ユーザーはLVを見せるだけでいかに強いかを示せるというシンプルさ、課金の継続性を維持することができると思います。&lt;/p&gt;&#xA;&lt;p&gt;今の状態はよくありません。ユーザーの強さを見せるにはLVやB技、装備の画面を見せなければいけないからです。これは複雑すぎます。&lt;/p&gt;&#xA;&lt;p&gt;つまり、一見してわかるようなシンプルさが重要だと思います。&lt;/p&gt;&#xA;&lt;p&gt;また、エピソードエリアは苦痛です。FFディシディアってゲームがあったんですけど、あれにもこういうコマになって進まされるゲームあったんですが、そこの部分がつまらなさすぎて苦痛でした。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ストーリーを削る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;能力強化はレベルのみ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;アイテムを減らす&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;エピソードエリアを削る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一見してわかるようなシンプルさを追求する、プレイヤー名でも、プレイヤーの強さでも、能力強化でも、アイテムでも同じ&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;バトルヴィラのシステムは素晴らしい&#34;&gt;バトルヴィラのシステムは素晴らしい&lt;/h3&gt;&#xA;&lt;p&gt;バトルヴィラのシステムは素晴らしいです。ポケマスは、基本的にバトルヴィラで遊ぶという形にすると継続可能かもしれないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ですが、気になる部分もあります。まず1つはストーリー性がないということです。ストーリーはシステムが欠け、バトルヴィラはストーリーが欠けているように感じます。&lt;/p&gt;&#xA;&lt;p&gt;そこで、私ならバトルヴィラにストーリーを組み込みます。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ストーリー性は極限まで落とします。&lt;/p&gt;&#xA;&lt;p&gt;矛盾しているように聞こえますが、ストーリーを語るのにセリフは必ずしも必要ではありません。&lt;/p&gt;&#xA;&lt;p&gt;なぜなら、有名IPにみんな知っているキャラクターだからです。ポケマスはそこが強い。&lt;/p&gt;&#xA;&lt;p&gt;だからそこを生かさなければいけません。わざわざイチからそのキャラの説明をしたり、肉付けする必要はないのです。&lt;/p&gt;&#xA;&lt;p&gt;バトルヴィラでは、最後の対戦相手にだけセリフが与えられ、それ以外は淡々と進みます。今までどおり。なお、この場合のセリフは読み飛ばせないようにしなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;バトルヴィラでは、基本、対戦相手のキャラクター構成だけでストーリーを語ります。セリフ無し。で、最後のバトル時のみ、セリフを入れる。しかもそのセリフはポケモンセンターで使われるうちの一つとします。これは追加の負荷を減らすためでもあり、バトルヴィラをクリアした人へのちょっとしたサプライズ的なあれですよね(単にめんどくさいだけだろ)。&lt;/p&gt;&#xA;&lt;p&gt;次に、キャラ構成だけでストーリーを語るというのはどういうことか説明します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、最初にグリーンと戦い、最後にワタル。次にグリーンが登場して戦うという構成にすると、キャラだけでストーリーを語ることができるというわけです。言葉は不要。最後のバトル相手もこのことには触れずのセリフ。このようにすれば、これまでのストーリーの恥ずかしさみたいなものをプレイヤーが感じることは少なくなるでしょう。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;バトルヴィラにストーリーを組み込む&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;基本的には、対戦相手のキャラクター構成だけでストーリーを語る(セリフ無し)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ラストバトルだけはバトル前にセリフが入る&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ストーリーを盛り上げる&#34;&gt;ストーリーを盛り上げる&lt;/h3&gt;&#xA;&lt;p&gt;ストーリーが盛り上がるときってどんなときでしょう。私は、RPGの盛り上がりは、ストーリー自体というより、こちらが団結して相手に猛攻を加えるときだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;なので、基本的には、バトルヴィラも1対1でバトルして、ラストだけは3対3のチーム戦がいいかもしれないと考えています。とはいえ、これは現実的ではないかもしれません。現在のバトルシステム、能力上もチームバトルが前提です。&lt;/p&gt;&#xA;&lt;p&gt;ですが、このようにすることで、ラストバトルはより盛り上がること間違いなしだと思います。やはり、淡々と進むだけでなく、緩急をつけることは大切なのかも。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、これはそこまで重要とは思いません。ちょっとそんなことを思ったという程度。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1対1と3対3&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ラストにチームバトルを持ってくる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;収益性を考える&#34;&gt;収益性を考える&lt;/h3&gt;&#xA;&lt;p&gt;プレイヤーが最も望んでいることってなんでしょう。&lt;/p&gt;&#xA;&lt;p&gt;それは、強くなることです。そして、その強さを確認すること。&lt;/p&gt;&#xA;&lt;p&gt;ですが、最も重要なのは、やはり、ただ強くなりたいってことですかね。確認はおまけみたいなもんで、強くする過程が楽しいし、早くやりたいのです。&lt;/p&gt;&#xA;&lt;p&gt;とすれば、課金は、この部分を意識しなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;つまり、強くするには課金が必要みたいな。もっというと、誰よりも早く強くするには課金が必要。&lt;/p&gt;&#xA;&lt;p&gt;これはバトルヴィラで実現するのがいいと思われますが、基本的にレベル上げ、強くするみたいな動作は、バトルヴィラのみで実現できるようにするのがいいかもしれないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;そこで、「キズぐすり」、「げんきのかたまり」を売るのです。まあ、私は、「キズぐすり」で全回復、それだけでいいと思いますが。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケマスにレッドが実装されたのでやってみた</title>
      <link>https://syui.github.io/blog/post/2020/02/29/pokemon/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/29/pokemon/</guid>
      <description>&lt;p&gt;twitterでポケマスのプロモが出ていて知りました。レッドが実装されるっぽい。現在、特定のタグでつぶやくと絵文字が表示されます。(いくらくらいなんでしょうね、タグ一つに付き2000万みたいな噂&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/search?q=%23pokemonmasters&#34;&gt;#pokemonmasters&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポケマスは昔、一度プレイしていて、グリーンが実装されるまでプレイしてました(本当に初期だけ)。&lt;/p&gt;&#xA;&lt;p&gt;そのとき、レッドが実装されたらほしいみたいなこと言ってたので、再開してレッドを引いてみた。&lt;/p&gt;&#xA;&lt;p&gt;仕組みとしてはガチャですね。私は昔からダイヤ(ガチャに必要なコイン)を貯めていて、ガチャを引いてなかったのです。よって、今回はそれを使って150連してみた。&lt;/p&gt;&#xA;&lt;p&gt;結果、レッドは出ませんでした。&lt;/p&gt;&#xA;&lt;p&gt;ですが、たくさんガチャを回すと、確定で一つ好きなやつ選べるみたいな天井がポケマスにはあって、それを使ってレッドを引きました。(無理やり&lt;/p&gt;&#xA;&lt;p&gt;現在、レッドのレベルを上げています。しばらくプレイしてなかったので、わけがわかりませんが、&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/124/small/fe5fd63ad12348d9.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ポケマスの要点&#34;&gt;ポケマスの要点&lt;/h3&gt;&#xA;&lt;p&gt;カードが重複すると、必殺技の威力が上がるらしい。ですが、無課金でやってるので、そんなガチャ引けませんから、これは無視することに。これをB技nと呼ぶらしいです。最大の5枚が重複すると、B技5です。一般的には期間中しか引けませんから、みんな5枚を目指してるみたい。&lt;/p&gt;&#xA;&lt;p&gt;私は現在、装備を集めるためEXエリカ周回とボード(バトル時に稀にドロップ)をやっています。ドロップはそのバトル時に必殺技、つまり、B技を使う必要があります。オートで最短でできるものを周回しましょう。オススメは、エピソードに必要なアイテムを得るためのバトルですかね。&lt;/p&gt;&#xA;&lt;p&gt;ですが、ボードはミュウを優先的に育てたほうがいいみたいな話があります。ミュウにはピンチ回復があるようで、それがバトルヴィラ(HP継続対戦)に有効なんだとか。ちなみに、ミュウはB技5に到達。でもまだ星x4だ。&lt;/p&gt;&#xA;&lt;p&gt;のびしろというアイテムがあり、基本的には、それを集めて星と能力を上げていくみたいです。期間に各3-5個くらい集められるらしい。最大20なので、20x3で60は必要になる計算。とはいえ、のびしろは金、銀、銅があり全部別ですが。なお、ガチャを引くと、重複のうち上限超えがのびしろになるぽいので、ガチャをやる人は、すぐに集まります。&lt;/p&gt;&#xA;&lt;p&gt;ポケマスはこちらのサイトがわかりやすかったです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemasya.com/&#34;&gt;https://pokemasya.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip; &amp;hellip; &amp;hellip; !&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる11</title>
      <link>https://syui.github.io/blog/post/2020/02/26/pokemon/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/26/pokemon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/122/original/3c3b28bec92918df.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;マスターリーグに突入しましたね。唐突ですが、私はやめることにしました。&lt;/p&gt;&#xA;&lt;p&gt;コツコツやってきて、レートは2600から3300になりました。初期レートからの上昇幅は+700くらい。&lt;/p&gt;&#xA;&lt;p&gt;レートというのは勝てば上がるし、負ければ下がるようです。所感では、3勝2敗で下がり、4勝1敗でもほぼ上がりません。5勝0敗、つまり、5連勝しないと上がらないという感じでした。少し理不尽な気もしますが、そういった仕組みで戦ってきたことを考えると、今までそこそこに勝ってきたということだと思います。&lt;/p&gt;&#xA;&lt;p&gt;ただ、マスターリーグの初戦から困難に直面してしまい、この打開策は存在しないだろうなと思ったので、悔しいですが、ここでやめることにしました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;未だに遅延が発生していた件&#34;&gt;未だに遅延が発生していた件&lt;/h3&gt;&#xA;&lt;p&gt;信じられませんが、遅延が未だに発生しているとは思っていませんでした。それ故、大打撃を食らったという話と、打開策が存在しないことを悟った話です。&lt;/p&gt;&#xA;&lt;p&gt;私は、まず様子見として、ディアルガ、ギラティナ、ラグラージのメンバーで戦ってみることにしました。これは間違いでもあり、正解でもありました。&lt;/p&gt;&#xA;&lt;p&gt;そこで5連敗しました。ディアルガの攻撃が遅延し、その影響は全体に及んでしまったのです。&lt;/p&gt;&#xA;&lt;p&gt;ここでわかったことは、最強ポケモンであるディアルガが遅延のため使いものにならないということ、そして、最強技である&lt;code&gt;りゅうのいぶき&lt;/code&gt;も遅延のため選択できないということでした。&lt;/p&gt;&#xA;&lt;p&gt;それに、テンプレを使ってその動きを把握した上で攻略法を考えようと思っていたのに、敗退しても全く得るものがなかったことも大きな損失でした。&lt;/p&gt;&#xA;&lt;p&gt;普通、負けというものには得るものがあります。このように負けたのだから、次はこうしよう、ああしよう、そういった対策が立てられるのです。しかし、今回の敗北の原因は遅延です。そのため、テンプレの動きも役割も把握できず負けてしまった。よって、得られたものは何もなく、意味のない敗北でした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、なぜか相手だけ遅延せずに攻撃してきます。圧倒的に理不尽ですが、このゲームはそういうものです。今まではそんな理不尽を受け入れて戦ってきましたが、マスターリーグではその影響が大きく、打開策がないと判断。&lt;/p&gt;&#xA;&lt;p&gt;マスターリーグというのは、ステータスも重要になってきます。CP制限があり色々なポケモンが活躍できる他のリーグとは違います。強いポケモンは圧倒的に強い。その圧倒的に強いポケモン、圧倒的に強い技が私には選択できないという状況です。&lt;/p&gt;&#xA;&lt;p&gt;私は、今まで他のリーグでも遅延やバグ、不正をたくさん食らってきました。ですが、それらを食らってもなお、メンバーを工夫することで、なんとか戦うことができている状況でした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、マスターリーグでは、そういった勝ち筋を見出すことが全くできないと実感しました。&lt;/p&gt;&#xA;&lt;p&gt;そのため、私のリーグはここで終了です。&lt;/p&gt;&#xA;&lt;p&gt;こんな状態でレートを上げることは絶対に不可能。戦えば下がるだけ。実際、かなり下がってしまった。&lt;/p&gt;&#xA;&lt;p&gt;私のMAX強化したディアルガで相手のディアルガを半分も削ることができません。さらに、遅延はその後も引きずるように発生し、このような状態では勝てるはずがありません。&lt;/p&gt;&#xA;&lt;p&gt;他のポケモンも試してみました。次に試したのが、ギラティナ対策として採用したカビゴンです。しかし、カビゴンも遅延が発生し、まともに戦闘になりませんでした。なにより相手のディアルガが強すぎる(相手は遅延しないので)。&lt;/p&gt;&#xA;&lt;p&gt;最強のポケモン、最強の技、そして、そのカウンターとしての対策ポケモンまで封じられてしまっては、打つ手がありません。ここからレートを上げていくのは正直、無理です。やる気もない。&lt;/p&gt;&#xA;&lt;p&gt;現在、ディアルガ、ギラティナが最も使われているポケモンです。ギラティナを対策にするにはディアルガが一番最適で、二番目にはカビゴンだと思います。カビゴンは&lt;code&gt;じしん&lt;/code&gt;も覚えるためディアルガにも有効です。更に最強技である&lt;code&gt;りゅうのいぶき&lt;/code&gt;も封じられたのは痛すぎる。選択肢があまりに狭くなりすぎた。&lt;/p&gt;&#xA;&lt;p&gt;このような状況で私にできることは何もありません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;プレイヤーが思っていること&#34;&gt;プレイヤーが思っていること&lt;/h3&gt;&#xA;&lt;p&gt;最後に、レートを上げ戦ってきた自分だからこそ言えることもあると思うので、私が思ってることを書きます。&lt;/p&gt;&#xA;&lt;p&gt;負けている人が書くと、負け惜しみだなんだ言わるかもしれませんが、私は、現に+700もレートを上げています。でも、本当は勝った負けたに関係なく、こう思っている人は多いはず。&lt;/p&gt;&#xA;&lt;p&gt;ですから、「勝てないからそんなこと言うんだろ」みたいなことは思わないでほしい。私もそんな風には考えません。&lt;/p&gt;&#xA;&lt;p&gt;このバトルリーグ、全然、面白くありません。&lt;/p&gt;&#xA;&lt;p&gt;おそらく私を含め多くの人がこのリーグに抱いている感情は怒りです。そして、つまらなさ。&lt;/p&gt;&#xA;&lt;p&gt;勝っているときもそう思っていましたし、負けているときならなおさらです。私は、勝っているときも、楽しいとはあまり思えませんでした。&lt;/p&gt;&#xA;&lt;p&gt;私がずっと思っていたのは「さっさとクリアしてやめたいなあ」です。さっさとクリアしてやめたかったのですが、マスターリーグを少し戦ってみて、クリア(ランク10)は到達不可能であることを悟りました。遅延やバグ、不正の影響がマスターリーグでは大きすぎたのです。&lt;/p&gt;&#xA;&lt;p&gt;なぜさっさとクリアしたかったのかにも理由があります。&lt;/p&gt;&#xA;&lt;p&gt;Nianticのバグだらけのゲームというのは、さっさと上がっておかないと後々大変なことになるためです。具体的には、たいへんな「苦行」を強いられることになります。&lt;/p&gt;&#xA;&lt;p&gt;これはポケモンGOをプレイしている全プレイヤーが認識していることだと思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、このゲームには良いところもたくさんあります。私は特に自己満足ゲームとしての誰と競うわけでもなく、ポケモンを集めたり、強くしたり、または相棒にしたりという部分が好きでした。ですが、リーグはよくない。特に今の状況は最悪です。そして、これから増加するであろう苦行を考えると、とてもつらい。&lt;/p&gt;&#xA;&lt;p&gt;しかも、今後このゲームはバトルリーグに飲み込まれていくと私は予想しています。強化するポケモン、ゲットするポケモン、相棒にするポケモン、そのすべての要素はリーグが中心になっていくでしょう。そして、それを実行するのは運営ではなく、おそらくプレイヤーの人達。とはいえ、リーグという檻が作られ、そこで戦うよう誘導されれば、誰だってそうなると思います。&lt;/p&gt;&#xA;&lt;p&gt;そうなったとき、人々がどのように考えるのかも私は知っています。バトルリーグなんでやらないの？楽しくないからって、勝てないからでしょ、負け惜しみ、そんな風に考えるのです。&lt;/p&gt;&#xA;&lt;p&gt;仮に私が初期レートから-700の状態でこういうことを書いた場合、多くの人はそれが事実とは思わない。単なる個人のヒガミ、そう考えるのです。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私は実際にプレイし、それが事実であることを知っています。全然楽しくない、ストレスしかたまらない。このバトルリーグ、重要なのは何より運で、おまけに遅延やバグ、不正が横行しており、ランクやレートには何の意味もないということを知っている。したがって、そういうことは思いません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、だからこそ、私は、プレシーズン中にさっさとあがっておきたかった。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、プレシーズンが終了したとき、ランク10の到達は事実上不可能な値に設定されてしまうでしょう。しかもそれを目指すためにやらなければならない苦行は今までとは比べ物にならない。これは決定事項であり、確定事項だと思われます。&lt;/p&gt;&#xA;&lt;p&gt;あるときトレーニングメダルというものが付与されましたが、いつの間にかトレーニングは不可能になり、メダルを取ることができなくなったことがありました。この状態は数年続いたあと、今でこそ数値を上げることができるようになっていますが、そのようなことが、このゲームには普通によくあります。&lt;/p&gt;&#xA;&lt;p&gt;人々はこのゲームを苦行と呼び、私を含む多くの人は、プレシーズンが終わったとき、何が待ち受けているのかを知っています。今までとは比較にならないくらい「苦行」が増加するであろうことを既に知っているのです。&lt;/p&gt;&#xA;&lt;p&gt;これがこのゲームの特徴です。今までもこれからもそこは変わりません。&lt;/p&gt;&#xA;&lt;p&gt;そして、私もこのゲームのそういう特徴を知っていたのです。だからこそ、プレシーズン中もかなりの苦行ではありましたが、それが終わったときにはじまる苦行を考えると、今のほうがだいぶマシだろうと考え、さっさとクリア(ランク10)しておきたかった。それだけのことです。&lt;/p&gt;&#xA;&lt;p&gt;勝ちたいとか、楽しいとか、そういった理由では全くない。まともな人なら、このバグだらけのバトルリーグを少し体験しただけでも「こんなのやってられるか」とさじを投げてしまうのが普通です。そして、私自身、それが正しいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今後、さらに進化し、増加していく苦行を思うと、私は今のうちにやっといたほうがいいだろうという判断でした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、遅延やバグの影響でマスターリーグは攻略不可能、レートを上げることが不可能であることを知り、今まで+700もレートを上げて頑張ってきたのは全くの無駄だったことが判明します。&lt;/p&gt;&#xA;&lt;p&gt;つまり、私の明らかな判断ミスです。どうやら、最初からやらないほうが正解だったぽいのです。やるとしても、初期レートが低かった時点でやめておくべきだったのかもしれません。&lt;/p&gt;&#xA;&lt;h3 id=&#34;運営にやってほしいこと&#34;&gt;運営にやってほしいこと&lt;/h3&gt;&#xA;&lt;p&gt;運営にやってほしいことは唯一つで、今までに遅延やバグ、不正によって得られなかった、あるいは失われたはずのレートを返してほしい。&lt;/p&gt;&#xA;&lt;p&gt;私は、勝っているときにもこのような問題でレートを失ってきました。本来なら5勝0敗だったはずが、4勝1敗にされてしまったりしたことも数多く、今回は遅延の影響で全敗です。これはハイパーリーグ時にも起こっています。そのときは-100レートでした。今回も-80くらいの影響を受けてしまっています。&lt;/p&gt;&#xA;&lt;p&gt;それに、初期レートがあまりに不公平です。1000から始まる人もいれば、2000から始まる人もいますが、twitterなどを見ると、3200あたりから始まる人が多い印象。運ゲー要素が強いこともあり、このゲームでのランクやレートというのは、初期レートで決まります。強さなんて全く関係ない。&lt;/p&gt;&#xA;&lt;p&gt;ですから、初期レートが低い数値から始まった人に、レートをプラスしてほしいのです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:初期レート.txt&#34; data-lang=&#34;sh:初期レート.txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1000 = +1000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2000 = +500&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3000 = +0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;私は、これくらいのプラスが妥当だと思います。&lt;/p&gt;&#xA;&lt;p&gt;遅延などの影響を受けたレートを返すか、または、初期レートの不公平を解消するか、どちらか、もしくは両方を実行してほしいと思っています。&lt;/p&gt;&#xA;&lt;p&gt;私は、初期レートから+700を上げています。レートが上がりにくい環境での+700というのはかなり大きいと思っていて、これでもまだクリアできない、上がれないというのは異常としか思えません。&lt;/p&gt;&#xA;&lt;p&gt;そして、できればこの問題だらけのリーグ、もうやりたくありません。ストレスしかない。&lt;/p&gt;&#xA;&lt;p&gt;多くの人は「やらなきゃいいじゃん」と思うでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ですが、その後に来る苦行を考えると、長年このゲームをプレイしてきたプレイヤーとしては受けざるを得なかった。&lt;/p&gt;&#xA;&lt;p&gt;このように思っている人は、私以外にもかなり多いと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>夫婦別姓について個人的な考え</title>
      <link>https://syui.github.io/blog/post/2020/02/23/private/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/23/private/</guid>
      <description>&lt;p&gt;今回は夫婦別姓について個人的な考えを書きます。なお、私は、国籍(戸籍)において男性に分類されます。(どっちでもいいですが&lt;/p&gt;&#xA;&lt;p&gt;私は夫婦別姓については賛成します。&lt;/p&gt;&#xA;&lt;p&gt;いや、賛成というか、むしろ結婚やそれにまつわる儀式の数々に疑問を持っていると言ったほうが正解かもしれません。&lt;/p&gt;&#xA;&lt;p&gt;私の思想は、一般的な価値観からすると、かなり異様なものだとは理解していますが、しかし、私自身はそれが普通だと思っています。&lt;/p&gt;&#xA;&lt;p&gt;さて、まずは何から話をしましょうか。まずは私の感情からお話することにします。&lt;/p&gt;&#xA;&lt;p&gt;私は昔から、女性が結婚すると半ば強制的に夫の姓を名乗らざるを得ないような状況が、とても嫌いでした。&lt;/p&gt;&#xA;&lt;p&gt;なぜ女性だけが夫の姓を強制されるのか。いや、強制されないにしても、元の姓を使うことに対して、世間的な厳しい仕打ちがあります。それは親戚含め、結婚相手である男性にさえも理解されず、理解されたければ多重な説得が必要みたいな状況があります。&lt;/p&gt;&#xA;&lt;p&gt;これらの状況は、私の思想すべてに反する。&lt;/p&gt;&#xA;&lt;p&gt;女性であれ、男性であれ、個人の意思を尊重すべき。それが私の価値観です。&lt;/p&gt;&#xA;&lt;p&gt;ですから、苗字も変えたくなければ変える必要なんてありません。私はそう思います。&lt;/p&gt;&#xA;&lt;p&gt;それに、女性を物のように扱う結婚の儀式の数々を私はとても嫌いです。あれは一体なんなのでしょう。私の価値観からすると、わけがわからないと思っています。&lt;/p&gt;&#xA;&lt;p&gt;ですが、一般の人々からすれば、当たり前の儀式、あたり前のことなのですよね。&lt;/p&gt;&#xA;&lt;p&gt;ただ、勘違いしてほしくないのは、私は女性の味方ではないということです。&lt;/p&gt;&#xA;&lt;p&gt;私は誰の味方でもありません。&lt;/p&gt;&#xA;&lt;p&gt;女性の味方でもなければ、男性の味方でもない。それは夫婦別姓についても同じことです。&lt;/p&gt;&#xA;&lt;p&gt;あえていうなら、私は人の味方です。人が一方的に相手の姓を強制されてるような状況に、私は反対です。そして、逆に言えば、夫婦別姓に賛成です。&lt;/p&gt;&#xA;&lt;p&gt;さて、次は、少し現実的な話をしましょう。なぜ世界的に夫婦を同姓に統一する制度が採用されているのかという話です。&lt;/p&gt;&#xA;&lt;p&gt;長くなってしまいそうなので、端的に述べることにします。制度というのはどのようなものであれ存在する理由があります。長い歴史があればそれだけの意味がある。&lt;/p&gt;&#xA;&lt;p&gt;結婚という制度において、妻は夫の姓を名乗るというルール、慣習、枠組みにも、多くの意味が隠されているのです。&lt;/p&gt;&#xA;&lt;p&gt;最も重要な意義は、争いを避けること。これはこうと最初から決まっていれば、争いを減らすこと、避けることができるのです。&lt;/p&gt;&#xA;&lt;p&gt;例えば、夫婦別姓を採用した社会について考えてみましょう。&lt;/p&gt;&#xA;&lt;p&gt;ここで、最も予想される争いは「子供の姓はどちらにするか」だと思います。&lt;/p&gt;&#xA;&lt;p&gt;もしかしたら、夫婦別姓に賛成している人の中には、子供の姓は夫の姓でいいよ、そんなことで私は争わない。私は絶対に大丈夫。そう考えている人もいるかもしれません。私は自分の姓を変えたくないだけなんだと。&lt;/p&gt;&#xA;&lt;p&gt;しかし、より大きい視点で物事を考えた場合、夫婦別姓は将来的な紛争を爆発的に増やしてしまう可能性があります。そして、それは夫婦間の問題にとどまらず、子供や親戚を含めた大規模な紛争に発展する可能性がある。&lt;/p&gt;&#xA;&lt;p&gt;例えば、500組の夫婦がいたとして、200組がこのことで後々争うことになったとしましょう。これを全国規模に当てはめると、国そのものが崩壊する危険性すらあるかもしれない。夫婦別姓に賛成する立場の人も、そのリスクがあることは理解しておかなければならないと思います。&lt;/p&gt;&#xA;&lt;p&gt;往々にして、制度には存在する理由があり、長い歴史の分だけ意味がある。&lt;/p&gt;&#xA;&lt;p&gt;ここまでで言いたいことは伝わったと思いますので、まとめに入ります。&lt;/p&gt;&#xA;&lt;p&gt;そうはいっても、私は、全体的な利益を考える立場でもなければ、ただの個人。そして、ここは個人ブログです。&lt;/p&gt;&#xA;&lt;p&gt;よって、個人的な意見を述べると、私は夫婦別姓に賛成です。&lt;/p&gt;&#xA;&lt;p&gt;一方的に女性が夫の姓を強制されるような状況に、心の底から嫌悪しています。なぜ相手に合わせる必要があるのですか、結婚したいならしたらいいし、苗字を変えたくなければ変えなくていい、それが私の考えです。私はそれが当たり前のことだと思っています。&lt;/p&gt;&#xA;&lt;p&gt;最後に、少しトーンを落とし、面白い話でもしましょうか。&lt;/p&gt;&#xA;&lt;p&gt;もしあんたが結婚したらどうするのって感じの話をしてみます。&lt;/p&gt;&#xA;&lt;p&gt;仮に私が結婚した場合なんかは、私は上記のような考え方をしますので、女性が旧姓を名乗ろうが全く気にしないでしょう。そんなのは個人の自由であって、私に気を使う必要は全くない。それが当たり前だし、私からすると世間の価値観のほうがどうかしていると思っています。&lt;/p&gt;&#xA;&lt;p&gt;で、相手の姓のほうがかっこいいなって思った場合、むしろ私が姓を変えます。&lt;/p&gt;&#xA;&lt;p&gt;そんなことして、親戚とかにどうやって説明するのとか聞かれるかもしれませんが、私はあまり気にしません。今までも気ままに生きてきたので「苗字を変えることにそんなこだわりはない、ただ、相手の姓のほうがかっこいい感じだったので、変えることにした」そんなことを言うと思う。控えめに言ってやばいやつって感じですけどね。&lt;/p&gt;&#xA;&lt;p&gt;でも、最初にいいましたよね。私の思想は、一般的な価値観からすると、かなり異様なものって。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる10</title>
      <link>https://syui.github.io/blog/post/2020/02/22/pokemon/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/22/pokemon/</guid>
      <description>&lt;p&gt;なんとかレートを3300に戻すことができました。&lt;/p&gt;&#xA;&lt;p&gt;ただし、問題が全く発生しなかったというわけではなく、依然として問題は多いと感じています。&lt;/p&gt;&#xA;&lt;p&gt;今回はマスターのメンバーについて。マスターによく出てくるポケモンは、ディアルガ、ギラティナ、ラグラージ、メルメタル、トゲキッスだと考えていて、それを軸に考えてみます。&lt;/p&gt;&#xA;&lt;p&gt;私はカイオーガもテンプレに入るかもと思ったりしましたが、ドラゴンチームに水で攻めるカイオーガは難しいかもしれない。カイオーガより&lt;code&gt;じしん&lt;/code&gt;を持つラグラージのほうが選ばれそう。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;サーナイト&lt;/td&gt;&#xA;          &lt;td&gt;はがね,どく,ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;ドラゴン,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;シンクロノイズ&lt;/td&gt;&#xA;          &lt;td&gt;シャドーボール&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ミュウツー&lt;/td&gt;&#xA;          &lt;td&gt;あく,むし,ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;サイコカッター&lt;/td&gt;&#xA;          &lt;td&gt;サイコブレイク&lt;/td&gt;&#xA;          &lt;td&gt;きあいだま&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ミュウ&lt;/td&gt;&#xA;          &lt;td&gt;あく,むし,ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;シャドークロー&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;          &lt;td&gt;くさむすび&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ミュウは非常に面白いポケモンで、広範囲に戦略を立てられます。例えば、ドラゴンクローを使って、シールド剥がしを試みても面白いかもしれません。ただ、最も有効に活用できるのは、技のタイプでしょう。リーグではほのお,こおり,くさタイプは弱点が多く耐性もないため採用しづらい。ですが、ミュウを使うと、こういったタイプの技が使えるのです。ただ、ノーマルアタックにくさタイプを覚えられないのは非常に残念ですね。ラグラージをやっつけた上で、カウンターまでできたのに。&lt;/p&gt;&#xA;&lt;p&gt;おそらく、マスターでもラグラージは活躍し、多くのパーティーに入れられることになるでしょう。今回のラグラージはドラゴンに&lt;code&gt;じしん&lt;/code&gt;を連発してくると思います。それ以外は&lt;code&gt;ハイドロカノン&lt;/code&gt;で対処するはずです。かなりの広範囲に使えるため、私もメンバーに入れることを考えていますが、今までテンプレは使ったことがないので、戸惑いそう。&lt;/p&gt;&#xA;&lt;p&gt;ヒードランは外しました。今回、フシギバナがテンプレに入ってくるかわかりませんが、多分、入ってこないでしょう。とすると、ヒードランが活躍する場面は限られてきます。ヒードランはラグラージに弱いですし、ラグラージに弱いポケモンはなるべく入れたくない。ただ、ヒードランはディアルガをギリギリで倒せるみたい。よって、ディアルガ、ギラティナ、メルメタル、トゲキッスとそこそこ戦えるポケモンです。なので、今回も広範囲に活躍できる可能性はあります。&lt;/p&gt;&#xA;&lt;p&gt;その他、ラプラス、フリーザー、ギャラドス、カビゴンあたりが使えそうかもしれないと思っています。特にフリーザーとカビゴンはHP,防御が高いので、今のメンバーより安定するかもしれない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる9</title>
      <link>https://syui.github.io/blog/post/2020/02/20/pokemon/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/20/pokemon/</guid>
      <description>&lt;p&gt;レートは2600から3300まで上がっていたのですが、2020/02/18くらいから突然に負け始め3200にまで下がってしまったので、それに対する考察です。&lt;/p&gt;&#xA;&lt;p&gt;原因はおそらく、以下の変更だと思います。ちょっとおかしいぞと思ったときにバトルを停止すべきだったのに、検証しようと考えたのが愚かでした。バトルから離脱する決断が遅すぎたので大損害を食らってしまった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/pokego03087/#021801&#34;&gt;対戦マッチングシステムが「レート重視」に調整された模様（2020年2月17日～）&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://niantic.helpshift.com/a/pokemon-go/?p=web&amp;amp;l=ja&amp;amp;s=release-notes-known-issues&amp;amp;f=go-battle-league-status-and-known-issues&#34;&gt;issue-2020-02-17&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;まずはじめに、私が経験したバグおよび不正と思われる動作について記録しておきます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ポケモンが対面して、これは勝ったぞと思った瞬間、動かなくなる現象に何度も遭遇する件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これが発生するタイミング的に、そこには人の意思が介在しているのではないかと私は考えています。&lt;/p&gt;&#xA;&lt;p&gt;例えば、バトル開始直後、最初のポケモンが登場したときにこの現象は起こります。こちらがフリーザー、相手がフシギバナだったとしましょう。これは有利だぞ、そう思った瞬間、こちらだけ動かなくなるのです。そして、相手からの攻撃やスペシャルを受けてフリーザーが死にかける直前、動けるようになります。ただ、反撃虚しく、やられてしまうのが通常です。&lt;/p&gt;&#xA;&lt;p&gt;またあるときは、お互いが2体を消費し、最後のポケモンを見せ合う場面でこの現象は起こります。こちらがピクシー、相手はギラティナです。これは勝ちだな、そう思った瞬間、やはり動かなくなります。で、ピクシーがやられる直前に動けるようになります。&lt;/p&gt;&#xA;&lt;p&gt;この現象は総計で20回以上は経験しています。&lt;/p&gt;&#xA;&lt;p&gt;ここからは私の推測ですが、たまに最後まで戦わず終了してしまう人を何人か見てきました。あれは単に勝敗が見えてしまったのでそこで終了した、そう読み取ることもできます。しかし、あまりにそのタイミングが前述した場面、つまり、動かなくなるとしたらここだろうなというタイミングに一致しているのです。もしかしたら、あれは不正アタックを実行する動作なのかもしれないと考えることができます。もしかしたら、未だに何回かは成功してしまうのではないかと。&lt;/p&gt;&#xA;&lt;p&gt;これは自分が勝っているときにもよく発生していました。あるときギラティナがドラゴンクローを連発してきたことがあったんですけど、動けるようになったときギリギリに反撃できたので、かろうじて勝利したことは何度もあります。ですが、最近では、動かなくなったらほぼ確実に負けてしまうケースがほとんどになってしまいました。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;相手のチャージが早すぎる件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ギラティナと戦ったとき、ピクシーが為す術なくやられてしまうことが何度かありました。これも相手がギラティナなので、これは勝ったぞと思っていました。しかし、相手のギラティナがあまりに強すぎたので、ピクシーがタイマンで負けてしまったのです。&lt;/p&gt;&#xA;&lt;p&gt;相手のギラティナは4回連続でげんしのちからを放ちました。正確には、3回連続で放ったあと、1秒ほど間をおいて最後の一発を放ち、計4回です。このとき、ギラティナのHPは半分も削ることができませんでした。こちらのシールドも虚しく、これほど強いギラティナには勝てないなあと私は思いました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、果たしてギラティナはあそこまで早くチャージが撃てるものなのだろうか。私は、ロケット団を相手にギラティナを使って試してみたところ、やはり、あれほど早くチャージ攻撃が打てるというのはありえない。しかも、どれだけ貯めても2回が限度ではないでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;この現象は、相手がグリッチ(不正)を使ったのか、それとも通信の問題だったのか、もしくは相手が強かっただけなのか、わかりません。これも、そこそこの確率で遭遇する現象の一つです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;こちらの攻撃が全く通らないような遅延が出てしまい、結果として負けてしまう&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;私は、これはちょっとおかしいぞと思ったとき、その原因が自分にあるのか、ゲームにあるのか、判断できませんでした。最初は、自分が原因だと考えていました。そこで、メンバーを変えてみることにしました。結果的には、これが間違いでした。&lt;/p&gt;&#xA;&lt;p&gt;ラグラージ対策として、ギャラドスやキングドラで何度か戦ってみたのですが、こいつらの攻撃があまりに遅く、ダメージが殆ど通らなかったのです。最初はそんなもんかと思っていましたが、何度も戦ううちに、やはりどう考えてもおかしいという結論に至りました。相性がどれだけ良くても勝てないし、与えるダメージ量が少なすぎるのです。それ以外のポケモンでも遅延が発生しているかはわかりません。ですが、ギャラドスやキングドラは使わないほうがいいでしょう。何かがおかしい(特に攻撃が)。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私は、この「なにかおかしい」と結論付けるまでに、大きな損害を食らってしまうことになります。&lt;/p&gt;&#xA;&lt;p&gt;最初は、「うーん、ちょっと変な気もするけど、気のせいだろう」くらいですが、何度もやっていると「どう考えても変だ」になり、結論を出すに至ります。&lt;/p&gt;&#xA;&lt;p&gt;回数を重ねてみないとわからないことですが、しかし、私は決断がおそすぎた。負けを取り戻そうみたいな気持ちだったのかねえ&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;なにか変だぞと思ったときは、すぐ逃げましょう！&lt;/p&gt;&#xA;&lt;p&gt;ということで、今の状態でバトルしても勝てる気が全くしないので、お休みします。(前回記事を書いたとき、戦い続けるぞみたいなこと言ったので、すごく気まずい&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;バトルすると常に通信不安、グルグルが回る。シールドすり抜けや連続再生の発生&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;どう考えても数日前の状態から見て異常を示しているとしか思えないほどに、ぐるぐる回ってます。回ってないときはありません。&lt;/p&gt;&#xA;&lt;p&gt;で、それだけならいいんですけど、実際のバトルもかなり異常です。&lt;/p&gt;&#xA;&lt;p&gt;シールドすり抜けや相手のチャージ攻撃が連続再生されるというようなことが頻繁に発生します。&lt;/p&gt;&#xA;&lt;p&gt;もしかしたら、遅延も発生しているのかもしれません。wifi接続の場合に不利になるのかわかりませんが、私はそう考えています。今バトルして、たとえ相性で勝っていたとしても、勝てる気がしません。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;バトルを開始したのにバトル画面に移行せず操作できない、結果として負けてしまう&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;これはこの前、1回だけありました。ただ、私が経験してきたことに比べれば、こんなことはかなりどうでもいい部類に入ります。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、1セットでさえゲームを落とすのは厳しいです。特にこのゲームはレートが異常なほどに上がりにくく、1つの負けでもかなり大きな損失になります。&lt;/p&gt;&#xA;&lt;p&gt;更に、1日25セットと言う制限付きで、短い期間制限もあります。&lt;/p&gt;&#xA;&lt;p&gt;ですが、このバトルリーグにおいて、強制的に1セット負けが確定するという程度のことは、そこまで大した問題ではなくなっています。他の問題が大きすぎるし、多すぎる。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;恣意的なマッチング&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;同じ相手に連続であたったり、また、他の要因で抽出された恣意的なマッチングが横行しているのではないかと感じることがあります。証拠はありませんが。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自分は200戦しているがそんなことは起こったことがないという人がいる件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;私にはちょっと考えられませんが、問題が全くなければ誰も書き込んだりしないはず。&lt;/p&gt;&#xA;&lt;p&gt;ですが、中には「自分は200戦しているが、そんなことは起こったことがない」、「そんなの都市伝説だ」という書き込みも見かけます。&lt;/p&gt;&#xA;&lt;p&gt;これはどういうことでしょう。&lt;/p&gt;&#xA;&lt;p&gt;他のゲームの話になりますが、不正を使うユーザーはそういう主張を匿名掲示板に流すことがあるというのは聞いています。&lt;/p&gt;&#xA;&lt;p&gt;「そんなの負け惜しみだろ」、「バグやグリッチなんて存在しない」、「自分は200戦しているが、そんなことは起こったことがない」、「そんなの都市伝説」という趣旨のことを書き込むことがあるらしいのです。よって、こういった主張についても、それは本当なのか、もしくは不正を使っている人の主張なのかは可能性の一つとして考慮する必要があるのかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;私は、いろいろな検証動画なども見てみましたが、やはり、遅延やバグは一部で存在しているのではないかと個人的には思っています。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;勝つのは難しい&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;当たり前ですが、すべてのバトルが不正やバグが原因だったわけではありません。普通に戦い、普通に負けたことも多く、相性による敗北もかなり多いです。&lt;/p&gt;&#xA;&lt;p&gt;このゲームでは、1勝するだけでも結構大変だったりします。運良く相性がマッチすればいいんですが、苦手ポケモンばっかりが来て、連敗してしまうこともあるでしょう。&lt;/p&gt;&#xA;&lt;p&gt;ですが、1勝1勝が大切だからこそ、他の要因で負けてしまったと思われるバトルが多いのも、やっぱり悔しい。&lt;/p&gt;&#xA;&lt;p&gt;私はその要因が50%を遥かに超えていると思ったので、今はバトルをやめて、しばらく様子見。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる8</title>
      <link>https://syui.github.io/blog/post/2020/02/18/pokemon/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/18/pokemon/</guid>
      <description>&lt;p&gt;ハイパーで戦っています。連勝することも稀にあります。運が良かっただけですが。&lt;/p&gt;&#xA;&lt;p&gt;5連勝したときだけ嬉しそうにスクショを残すやつ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/116/original/543d2a874f167a31.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/117/small/c7024242e4bcb972.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/118/small/bca86b1efcdd7475.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/119/small/0256c322297e989a.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/120/original/403e0a8379f2894c.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ですが、基本的には悪戦苦闘しています。この前は、バグとマッチングによる2勝3敗を食らってしまって、レートが下がり、かなり落ち込んでたりする。&lt;/p&gt;&#xA;&lt;p&gt;バグに関しては、バトル開始したのにバトル画面に移行せず、操作できない状態になってしまい敗けました。これは不正を食らったという感じではなく、単なるバグだと思いますね。(まだわかりませんが&lt;/p&gt;&#xA;&lt;p&gt;マッチングに関しては、相性が悪すぎる相手にあたってしまい、負けてしまったんですよね。自分のメンバーではどうやっても勝てなかった。しかし、次のバトルでも同じ相手と当たってしまって2連敗を食らうという悲劇。どう考えてもマッチングおかしいだろっ！と思いますが、こういうことが積み重なって、レートがだだ下がり中。&lt;/p&gt;&#xA;&lt;p&gt;ただでさえ勝つの難しいのに&amp;hellip;。もう戦いたくないでござる、絶対に戦いたくないでござる！という気持ちしかない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、ランク10を目指すと決めた以上、やるしかない。長年付き合ってきたゲームですし、クリアしたい。&lt;/p&gt;&#xA;&lt;p&gt;そこで、不正を食らっても、バグを食らっても、恣意的なマッチングを連発されても、それでもそこそこ戦えるメンバーを考える必要があるかもしれないと思ったので、また少しだけ考えてみました。今回はそれについて。&lt;/p&gt;&#xA;&lt;p&gt;まず、思いつく限り当たってみたのですが、やはり、最強ラグラージを筆頭にフシギバナ、ギラティナ、レジスチルをまとめて葬り去るようなポケモンは、ある一匹を除いて存在しません。ミュウツー(アーマード)やクレセリアでも無理です。&lt;/p&gt;&#xA;&lt;p&gt;その一匹とは、ミュウです。現時点で最強のポケモン、ミュウ。&lt;/p&gt;&#xA;&lt;p&gt;ですが、私はミュウを育ててしまっているので、ハイパーには使えません。ですが、マスターでは活躍するかもしれないと思っています。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ミュウ&lt;/td&gt;&#xA;          &lt;td&gt;あく,むし,ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;かくとう,エスパー&lt;/td&gt;&#xA;          &lt;td&gt;シャドークロー&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;          &lt;td&gt;オーバーヒート&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;下記はバトルシュミレーションです。ミュウは、上記のわざで、ラグラージ、フシギバナ、ギラティナ、レジスチル、おまけにミュウツーに勝ちます。これは、ハイパー、マスター同じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pokemongo-get.com/taimansym/&#34;&gt;https://pokemongo-get.com/taimansym/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;次に、ディアルガと戦ってみたのですが、流石にテンプレわざでは勝てませんでした。しかし、わざを&lt;code&gt;きあいだま&lt;/code&gt;に変えれば、ディアルガにも勝ちます。ミュウ、つよすぎ！&lt;/p&gt;&#xA;&lt;p&gt;ただし、リザードンと戦った場合、テンプレわざではギリギリ負けてしまうみたい。わざを&lt;code&gt;げんしのちから&lt;/code&gt;に変えれば勝ちますが。&lt;/p&gt;&#xA;&lt;p&gt;理論的には、二重弱点を持つポケモンはミュウに勝つことができません。&lt;/p&gt;&#xA;&lt;p&gt;ということで、前回忘れていましたが、ミュウは育てておくとよいかもしれません。CP制限を考慮し育てないにしても、技開放くらいはしておいても損はないポケモンだと思います。&lt;/p&gt;&#xA;&lt;p&gt;現在、ミュウのつよさに気づいている人はほとんどいません。&lt;/p&gt;&#xA;&lt;p&gt;しかし、新しいわざマシンが実装されてしまうと、ポケモンGoにおけるミュウのとてつもなさに気づいてしまう人が増えてしまう可能性があります。&lt;/p&gt;&#xA;&lt;p&gt;それだけはマジやめてくれと思っていて、ミュウが流行ってしまうと、ますますバトルが厳しくなってしまう。&lt;/p&gt;&#xA;&lt;p&gt;でも、わざマシンがあると自分もミュウをもっと使いやすくなるので、嬉しくもあり、悲しくもあるような複雑な気持ち。&lt;/p&gt;&#xA;&lt;p&gt;しかし、きっと、ミュウが人気になるのは喜ばしいことなのでしょう。お気に入りのポケモンですからね。&lt;/p&gt;&#xA;&lt;p&gt;そんなこともあり、この状況を心から喜べるよう私はプレシーズン中に、なんとしてでもランク10に到達しなければなりません。&lt;/p&gt;&#xA;&lt;p&gt;このリーグの檻から心を解き放つには、戦うしかなく、勝つしかない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>openssh 8.2とgoodreader</title>
      <link>https://syui.github.io/blog/post/2020/02/16/openssh/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/16/openssh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.openssh.com/txt/release-8.2&#34;&gt;openssh 8.2&lt;/a&gt;がreleasesされました。updateしたところ、ios-goodreaderからsftp-serverにアクセスできなくなりました。&lt;/p&gt;&#xA;&lt;p&gt;ので、downgradeしました。downgradeが古かったので、何故か実行してもアクセスできないという現象に遭遇したので、downgradeもupdateしておきましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yay -S downgrade&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ downgrade openssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssh    8.1p1  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  x86_64  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;remote&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo systemctl restart sshd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;goodreaderでキー(private-key)が読み込めない問題はこちらが参考になります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/blog/post/2020/01/26/goodreader/&#34;&gt;iosのgoodreaderでsftpのprivate-keyが読み込めない問題&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる7</title>
      <link>https://syui.github.io/blog/post/2020/02/15/pokemon/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/15/pokemon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/116/original/543d2a874f167a31.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ハイパーで戦っていて、勝敗が五分五分な感じだったので、そこそこ手応えがありそうなメンバーに変えてみた。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フリーザー&lt;/td&gt;&#xA;          &lt;td&gt;いわ,はがね,でんき,ほのお&lt;/td&gt;&#xA;          &lt;td&gt;じめん&lt;/td&gt;&#xA;          &lt;td&gt;こおりのつぶて&lt;/td&gt;&#xA;          &lt;td&gt;こごえるかぜ&lt;/td&gt;&#xA;          &lt;td&gt;げんしのちから&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ヒードラン&lt;/td&gt;&#xA;          &lt;td&gt;じめんx2,みず,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー,くさ,こおり,どく,はがね,むし&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;          &lt;td&gt;アイアンヘッド&lt;/td&gt;&#xA;          &lt;td&gt;かえんほうしゃ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ピクシー&lt;/td&gt;&#xA;          &lt;td&gt;はがね,どく&lt;/td&gt;&#xA;          &lt;td&gt;ドラゴン&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;コメットパンチ&lt;/td&gt;&#xA;          &lt;td&gt;サイコキネシス&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;よく見かけるポケモンが固定されてきた感じになっていて、ギラティナ、ラグラージ、フシギバナ、トゲキッスです。&lt;/p&gt;&#xA;&lt;p&gt;こいつらをまとめて葬り去るポケモンを探さなくてはいけません。私の場合は、3日前に見つけたフリーザーがいいのではないかと思いました。&lt;/p&gt;&#xA;&lt;p&gt;フリーザーは、シールドを貼りながら、こごえるかぜで相手の攻撃を下げ、二匹目にもこごえるかぜを当てるところまでが狙い。&lt;/p&gt;&#xA;&lt;p&gt;逆に、二匹目に当たらなかった場合、負けることを覚悟しなければいけません。このへんは調整が必要で、相手を倒せそうならスペシャルをためておくことも重要になります。&lt;/p&gt;&#xA;&lt;p&gt;なお、こちらからは交代しません。相性がどれだけ悪くてもフリーザーで頑張ってください。&lt;/p&gt;&#xA;&lt;p&gt;では、相手が交代してきたらどうでしょう。よほどのことがない限りフリーザーでいきます。ですが、耐性x2を持っている場合は、そのポケモンに交代します。&lt;/p&gt;&#xA;&lt;p&gt;例えば、フシギバナが来たらヒードランに交代です。フリーザーのままでも良さそうな気がしますが、シールドを失い、場合によってはやられてしまうでしょう。その点、ヒードランはシールドを失わず倒せると思います。トゲキッスも同様です。また、ギラティナはピクシーに交代です。まあ、フシギバナやトゲキッス、ギラティナに変えてくる可能性は低いです。こおりが弱点ですからね。それ以外は放置して、こごえるかぜを打っておくのがいいと思います。&lt;/p&gt;&#xA;&lt;p&gt;即座にレジスチルに交代された場合、一発はこごえるかぜを当ててヒードランに交代。シールドは残しておくこと。&lt;/p&gt;&#xA;&lt;p&gt;たまにリザードンに交代されることがあります。その場合は、げんしのちからを一発目に撃つと良いでしょう。おそらく、相手はシールドを貼らないので通ります。なぜなら、リザードンに交代した理由はこごえるかぜに耐えられると思ったからでしょう。逆に、リザードンが先鋒だった場合、フリーザーのこごえるかぜ,げんしのちからという順に技を繰り出すとよいかもしれません。ただし、相手のHPが残り少ない場合、つまり、相手がこごえるかぜにも耐えられないほどにHPを削れてしまっている場合は、そのままこごえるかぜしかありません。このへんは難しく、最初から相手がシールドを張らないことも考えられます。その場合、げんしのちからを一発目から撃つのがいいのですけど、シールドを張られた場合は詰みます。なので、一番良いのは、こごえるかぜで下げといて(シールドあり)、次にげんしのちから(シールドなし)だと思います。&lt;/p&gt;&#xA;&lt;p&gt;ラグラージの場合は簡単で、シールドを最初の2回貼ります。で、こごえるかぜを2回当てたあとは、耐えつつノーマル攻撃を連打します。&lt;/p&gt;&#xA;&lt;p&gt;私がトゲキッスではなくピクシーを使う理由は、最後のほうに当たるギラティナのげんしのちからに耐えるためです。トゲキッスではやられてしまう可能性が高い。また、グランブルのかみくだくという選択もありますが、グランブルは耐久力が低いので、安定しないと思います。タイプ的にはクチートがベストなんですけど、CPやステータスが低すぎて育てる気にならない。&lt;/p&gt;&#xA;&lt;p&gt;ヒードランは、トゲキッス、フシギバナによく効きます。また、ギラティナともそこそこに戦えますし、はがねタイプにも強いので入れています。ですが不安も多く、安定しないようなら、ギラティナやディアルガに変えてもいいかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;先鋒がラプラスの場合はげんしのちから、こごえるかぜ、げんしのちからの順です。おそらく厳しい戦いになるでしょう。エンペルトの場合も同じですが、こちらは諦めるしかありません。ほぼ敗け確定です。これについては、後ほどお話しますが、相性が悪い場合はどうしようもありません。完璧なポケモンはいませんし、完璧な構成も存在しない。基本的には、ジャンケンなのです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ラグラージフシギバナについて&#34;&gt;ラグラージ、フシギバナについて&lt;/h3&gt;&#xA;&lt;p&gt;強すぎ。限定技を連発されるのがつらすぎだし、また、開放技も強いので、ほぼ対応が不可能なことによるテンプレ化が促進しているような気がする。&lt;/p&gt;&#xA;&lt;p&gt;対処法は、こごえるかぜとナッシー(アローラ)を思いついたんだけど、ナッシーの場合、他のポケモンに対応できなさそうだと思っていて、更に、どくを食らう可能性もあったりなのできついかも。&lt;/p&gt;&#xA;&lt;h3 id=&#34;連勝について&#34;&gt;連勝について&lt;/h3&gt;&#xA;&lt;p&gt;このゲームにおいて、連勝記録というものは、運でしかないので、当てになりませんし、当てにしないほうがいいです。&lt;/p&gt;&#xA;&lt;p&gt;たまにtwitterとかで連勝記録が載せられていることがあり、メンバーも載せられていたりしますが、そのとおりの構成でいっても、また、たとえ連勝の人が同じようにプレイしても勝てるとは限らない。&lt;/p&gt;&#xA;&lt;p&gt;このゲームは、なにより運やマッチングのほうが重要で、マッチング、先鋒のポケモン、メンバーの相性によって、ほとんどの勝敗が決まります。どのようなメンバーで行こうと、どれだけ育てようと、どれだけテクニックを使おうと、負けるときは負けるのです。&lt;/p&gt;&#xA;&lt;p&gt;つまり、勝てるかどうかは、単にマッチングでの相性次第。ほとんどがこの要素に占められます。特に連勝という事柄について考えてみても、何人に一人は連勝してもおかしくない。確率的にそういう人が出てきてもおかしくありません。&lt;/p&gt;&#xA;&lt;p&gt;ですが、それは偶発的事例でしかなく、決して真似できるものではないと思います。&lt;/p&gt;&#xA;&lt;p&gt;私自身、5連勝は運がよくないと無理だし、5連勝しないとレートが上がらない設定に厳しさを感じる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;育てておくと良いポケモン&#34;&gt;育てておくと良いポケモン&lt;/h3&gt;&#xA;&lt;p&gt;マスター用ですが、フリーザー、ギラティナ、ヒードランを育てておくと良いかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;ただ、ステータスでどれだけ差がつくかわかりませんので、ミュウツーが活躍する可能性も。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フリーザー&lt;/td&gt;&#xA;          &lt;td&gt;いわ,はがね,でんき,ほのお&lt;/td&gt;&#xA;          &lt;td&gt;じめん&lt;/td&gt;&#xA;          &lt;td&gt;こおりのつぶて&lt;/td&gt;&#xA;          &lt;td&gt;こごえるかぜ&lt;/td&gt;&#xA;          &lt;td&gt;げんしのちから&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ヒードラン&lt;/td&gt;&#xA;          &lt;td&gt;じめんx2,みず,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー,くさ,こおり,どく,はがね,むし&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;          &lt;td&gt;アイアンヘッド&lt;/td&gt;&#xA;          &lt;td&gt;かえんほうしゃ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;サーナイト&lt;/td&gt;&#xA;          &lt;td&gt;はがね,どく,ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;かくとう,ドラゴン&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;シンクロノイズ&lt;/td&gt;&#xA;          &lt;td&gt;シャドーボール&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみる20</title>
      <link>https://syui.github.io/blog/post/2020/02/13/illust/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/13/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;この前、久しぶりに絵を書いたこともあって、楽しくかけたんだけど、でも後々見てみると、なんか下手くそだなあと思ったので、今回は少しそれっぽく描いてみることにした。&lt;/p&gt;&#xA;&lt;p&gt;ポイントは、線を太くしすぎないことかなあと思ったりしたけど、単にどう描くか忘れていた可能性もありそう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>五等分の花嫁、最後のクイズ</title>
      <link>https://syui.github.io/blog/post/2020/02/13/manga/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/13/manga/</guid>
      <description>&lt;p&gt;五等分の花嫁、最後のクイズが出されたので、一応、答えておくことにします。&lt;/p&gt;&#xA;&lt;p&gt;左から5,2,1,3,4なので、一番右が四葉だと思います。80%の確率で。&lt;/p&gt;&#xA;&lt;p&gt;まず手の仕草からわかるのは、5,2,3です。1,4は表情からなんとなくです。&lt;/p&gt;&#xA;&lt;p&gt;花嫁は四葉でした。これは個人的な推しということを抜きにしても、最も結婚に向いているのも性格的に四葉だろうなあと思っていて、よかったねーという感想しかない。&lt;/p&gt;&#xA;&lt;p&gt;私が好きなキャラ、そういうのに向いてないのが多いんですけどね。平沢唯(けいおん)とかはかせ(日常)とか。&lt;/p&gt;&#xA;&lt;p&gt;でも四葉は向いてるんじゃないかなって思います。&lt;/p&gt;&#xA;&lt;p&gt;本作は最後まで誰だろうってのが面白くて、ついつい考えたくなっちゃいますね。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラスト描いてみた19</title>
      <link>https://syui.github.io/blog/post/2020/02/12/illust/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/12/illust/</guid>
      <description>&lt;p&gt;描きたい気分だったので、描きたいように描いてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる6</title>
      <link>https://syui.github.io/blog/post/2020/02/11/pokemon/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/11/pokemon/</guid>
      <description>&lt;p&gt;レートが3000に上がったので、かろうじてランク9に到達！！&lt;/p&gt;&#xA;&lt;p&gt;初期レートが2600なので、3000までは大変でした。間に合わないかと思った。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/115/original/c63b32fda1d5829a.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;追記ハイパーが始まった&#34;&gt;追記:ハイパーが始まった&lt;/h3&gt;&#xA;&lt;p&gt;私は、スーパーが終わる直前に3000に到達したのですが、どうやらレートはハイパーに引き継がれるらしい。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;それはそれできついですね！&lt;/p&gt;&#xA;&lt;p&gt;twitterを見ていると3200前後で初期レートが配られているのをよく見ます。この場合、スタート地点で600ものレートに差がついている計算になります。それが引き継がれるというのは、やっぱり厳しい。この差をバトルで、しかも私、バトル好きじゃないし&amp;hellip;埋めなければいけないというのは正直、つらいです。&lt;/p&gt;&#xA;&lt;p&gt;レート2000台から始まった人は、引き継がれたとき+500するとか無理だったんでしょうか。(ちなみに1000なら+1000&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、レートが引き継がれるということは、ランク10は理論的に狙えるので、一応、目指していくということになるのかな(現実的に狙えるとは言ってない&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;グランブル&lt;/td&gt;&#xA;          &lt;td&gt;はがね,どく&lt;/td&gt;&#xA;          &lt;td&gt;ドラゴン&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;かみくだく&lt;/td&gt;&#xA;          &lt;td&gt;インファイト&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ヒードラン&lt;/td&gt;&#xA;          &lt;td&gt;じめんx2,みず,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー,くさ,こおり,どく,はがね,むし&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;          &lt;td&gt;アイアンヘッド&lt;/td&gt;&#xA;          &lt;td&gt;ストーンエッジ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;エンペルト&lt;/td&gt;&#xA;          &lt;td&gt;じめん,でんき,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;どく,こおり,はがね&lt;/td&gt;&#xA;          &lt;td&gt;メタルクロー&lt;/td&gt;&#xA;          &lt;td&gt;ハイドロカノン&lt;/td&gt;&#xA;          &lt;td&gt;ふぶき&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;ディアルガは、使えるかどうかまだわからないので、つぎ込むのはやめておきました。それに色違いじゃないとつぎ込むのは難しい。ヒードランは耐性x2が付いてるので、ほぼ確実に活躍すると思います。よって、色違いにつぎ込み。&lt;/p&gt;&#xA;&lt;p&gt;また、ギラティナにはグランブルよりもプクリンが効きます。ゴーストが耐性x2なので。ただ、CPが低いので育てるのは大変かも。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;プクリン&lt;/td&gt;&#xA;          &lt;td&gt;はがね,どく&lt;/td&gt;&#xA;          &lt;td&gt;ドラゴン,ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;          &lt;td&gt;じゃれつく&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる5</title>
      <link>https://syui.github.io/blog/post/2020/02/05/pokemon/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/05/pokemon/</guid>
      <description>&lt;p&gt;ランク8に上がってからギリギリの勝負になることが多くなったので、メンバー変えました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/114/small/de890fe3975c516b.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scale=5;121/190&amp;#34;&lt;/span&gt;|bc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.63684&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;現在は121勝69敗です。ランク8での勝率は7,8割ほどだと思います。初期の頃より勝てるようになっているという珍しいタイプ。&lt;/p&gt;&#xA;&lt;p&gt;ただ、この前、2勝3敗になってしまい、レートはじまってから初めて敗けました。はじめてレートが下がりましたが、これ、かなり下がりますね、きついです。&lt;/p&gt;&#xA;&lt;p&gt;以前のメンバーはかなり勝数を上げてくれて、ランク6,7で割と楽だったんですけど、もちろん、運が良かったというのもありますが、ランク8ではまたきつくなってきたと思っていて、いつもギリギリの勝利になっていて、これはダメだなと。そういった経緯でPvPは、これで2回目の構築になります。&lt;/p&gt;&#xA;&lt;h3 id=&#34;スーパーリーグ&#34;&gt;スーパーリーグ&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;グランブル&lt;/td&gt;&#xA;          &lt;td&gt;はがね, どく&lt;/td&gt;&#xA;          &lt;td&gt;ドラゴン&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;かみくだく&lt;/td&gt;&#xA;          &lt;td&gt;インファイト&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;シュバルゴ&lt;/td&gt;&#xA;          &lt;td&gt;ほのおx2&lt;/td&gt;&#xA;          &lt;td&gt;くさ, どく&lt;/td&gt;&#xA;          &lt;td&gt;カウンター&lt;/td&gt;&#xA;          &lt;td&gt;つばめがえし&lt;/td&gt;&#xA;          &lt;td&gt;メガホーン&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ナットレイ&lt;/td&gt;&#xA;          &lt;td&gt;ほのおx2,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;くさ&lt;/td&gt;&#xA;          &lt;td&gt;タネマシンガン&lt;/td&gt;&#xA;          &lt;td&gt;パワーウィップ&lt;/td&gt;&#xA;          &lt;td&gt;ミラーショット&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;わざ1がノーマルで、わざ2,3がスペシャル。以前のメンバー、わざ3はあまり考慮してなかったし、開放もしてなかったなあ。なので、今回はわざ3も考慮してみた。&lt;/p&gt;&#xA;&lt;p&gt;なお、エアームドを頻繁に見かける場合はナットレイの代わりにレアコイルを入れるとよいかも。マリルリ対策はいまだにルンパッパが有効です。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;弱点&lt;/th&gt;&#xA;          &lt;th&gt;耐性x2&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;          &lt;th&gt;わざ3&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;レアコイル&lt;/td&gt;&#xA;          &lt;td&gt;じめんx2,ほのお,かくとう&lt;/td&gt;&#xA;          &lt;td&gt;ひこう,どく,はがね&lt;/td&gt;&#xA;          &lt;td&gt;スパーク&lt;/td&gt;&#xA;          &lt;td&gt;ほうでん&lt;/td&gt;&#xA;          &lt;td&gt;マグネットボム&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ルンパッパ&lt;/td&gt;&#xA;          &lt;td&gt;ひこう,どく,むし&lt;/td&gt;&#xA;          &lt;td&gt;みず&lt;/td&gt;&#xA;          &lt;td&gt;はっぱカッター&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;          &lt;td&gt;ハイドロポンプ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;参考 : &lt;a href=&#34;https://pokemongo-get.com/pokemon/&#34;&gt;https://pokemongo-get.com/pokemon/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;メンバーの構築&#34;&gt;メンバーの構築&lt;/h3&gt;&#xA;&lt;p&gt;メンバーの構築は、大体が前回と一緒で&lt;code&gt;テンプレ撃破から考えよう&lt;/code&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;なぜならテンプレは最も数が多いからです。数が多いと、それだけマッチする確率が高くなります。&lt;/p&gt;&#xA;&lt;p&gt;具体的にどうやってテンプレ撃破を考えるのか。まずはじめはタイプから考えます。こちらが狙われるタイプ、そして、相手を返り打つタイプです。次に技です。テンプレが放ってくる技。&lt;/p&gt;&#xA;&lt;p&gt;ポケモンGoの強さは&lt;code&gt;タイプ &amp;gt; わざ &amp;gt; 種族値 &amp;gt; 個体値&lt;/code&gt;になっています。特にスーパーリーグではその傾向があり、マスターに近づくにつれ、その傾向は薄れます。これは、私の考えに過ぎませんが、簡略化するとそうなっていると思います。&lt;/p&gt;&#xA;&lt;p&gt;とすれば、タイプから考えていくのが合理的です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、テンプレではあまり見かけないタイプがあるとしましょう。それが&lt;code&gt;ほのお&lt;/code&gt;タイプだとして、じゃあ、この&lt;code&gt;ほのお&lt;/code&gt;タイプが弱点になるポケモンを入れてみようという感じです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる4</title>
      <link>https://syui.github.io/blog/post/2020/02/02/pokemon/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/02/pokemon/</guid>
      <description>&lt;p&gt;ランク8に上がりました。ただ、レーティングが低すぎるので、ランク10はほぼ不可能に近い。今回も思ったことなど書いていきます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/109/small/dcf66d5f87284609.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ランク7からの勝率は覚えているので、12勝3敗です。&lt;/p&gt;&#xA;&lt;p&gt;なぜ覚えているのかというと、私の勘違いでレーティングはレベル7からだから、それまでは敗けてもいいので、テンプレ撃破のメンバーを考えよう検証しようと思っていたからです。&lt;/p&gt;&#xA;&lt;p&gt;で、ようやく探り当てた感じです。検索してとか、誰かのを真似してとか、誰かに教えてもらったとかではありません。&lt;/p&gt;&#xA;&lt;p&gt;というのも、レベル7以上になると、「自分で考えて構成してきた人と、誰かに教えてもらって構成してきた人」とでは大きな差が出てくるのではと思っていたからです。&lt;/p&gt;&#xA;&lt;p&gt;そして、自分で考えて構成してきた人とぶつかると、その勝敗は運次第になりやすいと思うのです。とすれば、誰かに教えてもらったり、テンプレをコピーしたりの自分で考えられない人を狩るしかレベル7から始まるレーティングを上げる方法はないのでは？とそんな考えも頭の中にありました。&lt;/p&gt;&#xA;&lt;p&gt;その意味で、この辺のランクで勝利収めるのは、けっこう厳しいのではと思ってます。ランクが上がるほど厳しいのではと。&lt;/p&gt;&#xA;&lt;p&gt;ですから、以降はかなり厳しい戦いになりそうな予感がしていて気分が沈む。&lt;/p&gt;&#xA;&lt;p&gt;しかもそれを探り当てるまでのコストというか、私はあまり頭がよくありませんし、不真面目で適当ですからね。かなりコストかけてしまったという感じで、それが致命的にやばかったみたいです。&lt;/p&gt;&#xA;&lt;p&gt;それにいくつもの勘違いをしていたようで、私はレベル7で、レーティングが開始されると、その時点で全員に同数のレーティングポイントが振り分けられ、そこから始まると思っていたのです。だからレベル7まではコストをかけることをあまり厭わなかった。ただ、実際は違うようで、すでに始まっていて、それが見えなかっただけぽいので、かなりつらい状況に陥っていることに今頃気づきました。&lt;/p&gt;&#xA;&lt;p&gt;今日、ランク8でやってみて、運良く5戦5勝したんですけど、上がったレーティング+30ぽっちでした。なので、無理！という感想しかない。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、ランク10を目指してほどほどに頑張る。&lt;/p&gt;&#xA;&lt;p&gt;それと、プレリリースが終わったらランクやレーティングがリセットされるという話がありますが、リセットするかは選択できるようにしといてほしい。これが無に帰すと、大半のユーザーは死にます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる3</title>
      <link>https://syui.github.io/blog/post/2020/02/01/pokemon/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/02/01/pokemon/</guid>
      <description>&lt;p&gt;やはり、ピクシー、シャンデラ、フシギバナの構成では安定しないと思うので、構成を考え直してみた。&lt;/p&gt;&#xA;&lt;p&gt;今度は以下のような感じになりました。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;タイプ&lt;/th&gt;&#xA;          &lt;th&gt;わざ1&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ピクシー&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;          &lt;td&gt;コメットパンチ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ハリテヤマ&lt;/td&gt;&#xA;          &lt;td&gt;かくとう&lt;/td&gt;&#xA;          &lt;td&gt;カウンター&lt;/td&gt;&#xA;          &lt;td&gt;インファイト&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ルンパッパ&lt;/td&gt;&#xA;          &lt;td&gt;くさ・みず&lt;/td&gt;&#xA;          &lt;td&gt;はっぱカッター&lt;/td&gt;&#xA;          &lt;td&gt;れいとうビーム&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;以前の構成では、あと一歩のところで押し負ける事案が多発。それ以外は割と圧勝するので、ハマれば強いけど、勝てなければ意味がありません。それに、ギリギリの勝負は望んでいないので、変えてみることにしました。&lt;/p&gt;&#xA;&lt;p&gt;今までのバトルを思い出すと、タテトプス、ラグラージ+ナマズン、エアームド、レジスチル、チルタリスというテンプレに苦しめられている感じだったと思う。&lt;/p&gt;&#xA;&lt;p&gt;特にタテトプスが出てくるときつかった。ということで、&lt;code&gt;ほのお&lt;/code&gt;で&lt;code&gt;はがね&lt;/code&gt;を攻めるのではく、&lt;code&gt;かくとう&lt;/code&gt;で攻めてみることに。これでタテトプス、レジスチルが消えます。&lt;/p&gt;&#xA;&lt;p&gt;次に、フシギバナはチルタリスを当てられることが多く、苦戦するので、代わりにルンパッパをぶつけることにしてみます。フシギバナは&lt;code&gt;れいとうビーム&lt;/code&gt;とか&lt;code&gt;かえんほうしゃ&lt;/code&gt;を食らうことも多かったので、&lt;code&gt;みず&lt;/code&gt;が入ってるルンパッパはよさそう。&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、これがハイパーもマスターも続くとなると、はっきり言って気が滅入ります。&lt;/p&gt;&#xA;&lt;p&gt;正直、やってられないレベル。時間と想像力を奪い去られ、リーグという箱にとじこめられられている気分です。&lt;/p&gt;&#xA;&lt;p&gt;これ以上のめり込まないほうが良いように思うので、今後は最初に決めたメンバーを育てて、それで勝てたら嬉しいなくらいの調子でやっていこうと思っています。アイテムの消費が無駄に激しすぎるし、これじゃあ自己満足の冒険になりませんからね。私は、ポケモンGOではそっちのほうがやりたいことです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる2</title>
      <link>https://syui.github.io/blog/post/2020/01/31/pokemon/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/31/pokemon/</guid>
      <description>&lt;p&gt;対戦経験ゼロからの4勝1敗。&lt;/p&gt;&#xA;&lt;p&gt;今日は、なんとか勝てました。&lt;/p&gt;&#xA;&lt;p&gt;それに今までとちょっと違う感じがしたので、今回思ったことを記録していきたいと思います。このシリーズ、今回で終わりそうかも。というかできればこれで終わってくれ！&lt;/p&gt;&#xA;&lt;p&gt;私は昨日の対戦でとても大変な目にあいました。&lt;/p&gt;&#xA;&lt;p&gt;私とマッチングする相手が全員、例外なく、あまりに強すぎたのです。はっきり言ってあまりにガチすぎて、これは流石におかしいと。&lt;/p&gt;&#xA;&lt;p&gt;昨日のバトル、実は、そのほとんどが「あと一発で勝負がつくぞ、勝つか負けるか、常にギリギリの戦い」でした。そういうのが連続していました。&lt;/p&gt;&#xA;&lt;p&gt;読み合い、そして最後の一瞬で勝負が決まるという状況&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;はっきりいって疲れる！！なんか知らんうちに相手の強さが影響してか、こっちまでわけわからん交代して変なテクニック使っちまったよ！と、そんなことになっていました。&lt;/p&gt;&#xA;&lt;p&gt;でも、私は基本的にガチ勢以外の人と当たって、さっさとランクを上げて、お休みしたいだけなんです。おいらは、こんなガチ勢がいるとこに来た覚えはないんです。(本音漏れすぎ！&lt;/p&gt;&#xA;&lt;p&gt;つまり、そんな感じでした。&lt;/p&gt;&#xA;&lt;p&gt;ということで、今回は少し弱い構成でやってみことにしました。CPも1300台に落としてバトルしてみたんですよね。で、結果、4勝1敗だったと。&lt;/p&gt;&#xA;&lt;p&gt;しかも、相手がこれまでと違って、なんかこう動きがですね、私と同じくらいで、全く疲れなかったわけです。もちろん、ポケモンGoというゲームは、はっきり言って全員強いです。どのポケモンも基本的に強いし、弱い相手なんていません。どんな相手とやろうが強い。&lt;/p&gt;&#xA;&lt;p&gt;ですが、今回は初回にあたったようなとんでもない相手と連続5回も勝負するみたいなことはなかった感じでした。&lt;/p&gt;&#xA;&lt;p&gt;つまり、何がいいたいか？&lt;/p&gt;&#xA;&lt;p&gt;ガチ勢と当たりたくなければ、CP1300に抑えるのが効くかもしれない！という仮説が生まれたのです。&lt;/p&gt;&#xA;&lt;p&gt;私はしばらく、この仮説に基づいてバトルしてみようかなと思ってます。できればこれで終わってくれ！という願いを込めて。&lt;/p&gt;&#xA;&lt;p&gt;今回の構成はこんな感じでした。フワライドの&lt;code&gt;こごえるかぜ&lt;/code&gt;を連発してましたよ。やってたのはおそらく、それくらい。あとは臨機応変に。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;タイプ&lt;/th&gt;&#xA;          &lt;th&gt;わざ2&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フワライド&lt;/td&gt;&#xA;          &lt;td&gt;ゴースト・ひこう&lt;/td&gt;&#xA;          &lt;td&gt;こごえるかぜ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ハガネール&lt;/td&gt;&#xA;          &lt;td&gt;はがね・じめん&lt;/td&gt;&#xA;          &lt;td&gt;かみくだく&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;メガニウム&lt;/td&gt;&#xA;          &lt;td&gt;くさ&lt;/td&gt;&#xA;          &lt;td&gt;ハードプラント&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;あと、勝敗は運ですね。大半が運です。私が4勝したのも運。&lt;/p&gt;&#xA;&lt;p&gt;相手のポケモンと、そして先鋒しだいです。今回も1敗しましたが、やはり相性でした。これは私にはどうすることもできないので、パス。&lt;/p&gt;&#xA;&lt;h3 id=&#34;追記&#34;&gt;追記&lt;/h3&gt;&#xA;&lt;p&gt;その後、4勝1敗で、これはいける！って思ったんだけど、その後、2敗して、しかも強かったので、これはダメだなと思いCP1400台に戻したら2勝したので、関係ないかもしれません。&lt;/p&gt;&#xA;&lt;p&gt;CP-100というのは、それで勝負が決まることはあまりないけど、それでもリスキーな方法なので、あまりに勝てないときは試してみるのもいいかもしれませが、それ以外ではおすすめしません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoにリーグが実装されたのでやってみる</title>
      <link>https://syui.github.io/blog/post/2020/01/30/pokemon/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/30/pokemon/</guid>
      <description>&lt;p&gt;これまで対戦の経験はゼロ。タスクに必要な場合は借りたりとかで、やってきましたけど、今回はそういう訳にはいかないみたい。つまり、戦うしかない！&lt;/p&gt;&#xA;&lt;p&gt;対戦してるとそのうちルールとかわかってくるだろうと思い、とりあえずやってみることに。&lt;/p&gt;&#xA;&lt;p&gt;感想としては、みんな強すぎだろ！という感想しかない。&lt;/p&gt;&#xA;&lt;p&gt;ある5戦のうち2人がテンプレで、3人が私と同じくテンプレ狩りの構成でした。テンプレだけでも強いのに、早くも&amp;hellip;いや、早すぎだろというテンプレ狩りの構成が私を襲う。&lt;/p&gt;&#xA;&lt;p&gt;3勝2敗ですが、1回はミスで、もう一回は相性でした。ミスはどうにかできますが、相性はどうにもならんかった。&lt;/p&gt;&#xA;&lt;p&gt;よって、ミスを減らす練習は必要だなあと思ったりしてます。&lt;/p&gt;&#xA;&lt;p&gt;また、リーグは、強い人と当たった場合、相性による運勝負になる傾向が強いのではと思います。&lt;/p&gt;&#xA;&lt;p&gt;なので、そのへんは気楽に考えて「確かに勝負は運で決まるけど、運良く勝てるように、できることをやっていこう」という前向き？な気持ち。&lt;/p&gt;&#xA;&lt;h3 id=&#34;スーパーリーグ&#34;&gt;スーパーリーグ&lt;/h3&gt;&#xA;&lt;p&gt;現在の構成は&lt;code&gt;ピクシー&lt;/code&gt;, &lt;code&gt;シャンデラ&lt;/code&gt;, &lt;code&gt;フシギバナ&lt;/code&gt;。ようは&lt;code&gt;あまえる&lt;/code&gt;, &lt;code&gt;はっぱカッター&lt;/code&gt;のノーマル技でゴリ押しのテンプレ狩りと言ったところ。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;タイプ&lt;/th&gt;&#xA;          &lt;th&gt;わざ&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ピクシー&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;シャンデラ&lt;/td&gt;&#xA;          &lt;td&gt;ほのお・ゴースト&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フシギバナ&lt;/td&gt;&#xA;          &lt;td&gt;くさ・どく&lt;/td&gt;&#xA;          &lt;td&gt;はっぱカッター&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;シャンデラはレジスチルとかエアームドをやっつけます。ただ、耐久力は低いのです。&lt;/p&gt;&#xA;&lt;p&gt;戦略としては、一撃で沈められそうならシールド、それ以外は無視。必殺技は使わない方向で。必殺技を使うと、あと一歩のところでやられてしまうことがありました。最後に、先鋒交代はできる限りしない方向で、先鋒には頑張ってもらうしかない。先鋒を先に交代してしまうと負けてしまう確率が非常に高いと思います。&lt;/p&gt;&#xA;&lt;p&gt;その意味では、やはりポケモンバトルにおいて相手の先鋒次第という部分はあると思う。リーグにおいて、運というのが勝敗を分ける最大の要素だと思います。なので、私と同じく負けまくってる人もそこまで落ち込まないで！&lt;/p&gt;&#xA;&lt;p&gt;とはいえ「どうせ運勝負なんだから何もしない」というのも面白くないので、やれることはやっていくスタイル。&lt;/p&gt;&#xA;&lt;p&gt;こんな感じでスーパーリーグは頑張るとして、次はハイパーを考えてみます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ハイパーリーグ&#34;&gt;ハイパーリーグ&lt;/h3&gt;&#xA;&lt;p&gt;ハイパーも同じく、検索して、一般的に強いよって言われているポケモンのうち選ばれそうなポケモンを対策することから考えてみることに。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ギラティナ(アナザー)&lt;/code&gt;とか&lt;code&gt;クレセリア&lt;/code&gt;が人気でそうですよね。なのでこいつらを返り討ちにする構成ということで以下。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;タイプ&lt;/th&gt;&#xA;          &lt;th&gt;わざ&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;トゲキッス&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー・ひこう&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ヒードラン&lt;/td&gt;&#xA;          &lt;td&gt;ほのお・はがね&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;メガニウム&lt;/td&gt;&#xA;          &lt;td&gt;くさ&lt;/td&gt;&#xA;          &lt;td&gt;はっぱカッター&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;マスターリーグ&#34;&gt;マスターリーグ&lt;/h3&gt;&#xA;&lt;p&gt;マスターもついでに。こっちはディアルガが使われそうで、それはハイパーも同じかも。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;ポケモン&lt;/th&gt;&#xA;          &lt;th&gt;タイプ&lt;/th&gt;&#xA;          &lt;th&gt;わざ&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;サーナイト&lt;/td&gt;&#xA;          &lt;td&gt;フェアリー・エスパー&lt;/td&gt;&#xA;          &lt;td&gt;あまえる&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ヒードラン&lt;/td&gt;&#xA;          &lt;td&gt;ほのお・はがね&lt;/td&gt;&#xA;          &lt;td&gt;ほのおのうず&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フシギバナ&lt;/td&gt;&#xA;          &lt;td&gt;くさ&lt;/td&gt;&#xA;          &lt;td&gt;はっぱカッター&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;テンプレのポケモンはやっぱり強い&#34;&gt;テンプレのポケモンはやっぱり強い&lt;/h3&gt;&#xA;&lt;p&gt;テンプレのポケモンはやっぱり強いです。&lt;/p&gt;&#xA;&lt;p&gt;ステータス、タイプともに一番強いポケモンたちは、全部テンプレに取られてしまっている感じでした。&lt;/p&gt;&#xA;&lt;p&gt;よって、そこから考えるのも割と難しかったりします。&lt;/p&gt;&#xA;&lt;p&gt;特にタイプですね。タイプはすでに分析され尽くされている感じで、弱点が少なく、耐性が高いポケモンは一番にリストアップされます。&lt;/p&gt;&#xA;&lt;p&gt;そのため、テンプレの数少ない弱点をつけるポケモンで、なおかつ耐性が高いポケモンとなると、実はあんまりいないのではという感想。&lt;/p&gt;&#xA;&lt;p&gt;この辺はやはり、旬なポケモン、よく使われているポケモンをすばやく把握して、その対策をぶつけていくしかないと思います。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これは変動します。とはいえ、あまりに変動が早すぎる気がするんですけど&amp;hellip;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;本気で勝とうと思った場合の戦略&#34;&gt;本気で勝とうと思った場合の戦略&lt;/h3&gt;&#xA;&lt;p&gt;最後に、本気で勝とうと思った場合の戦略を考えてみます。&lt;/p&gt;&#xA;&lt;p&gt;先程から何度も述べている通りポケモンバトルは「強い人とやりあうと運勝負になる」という特性があると思われます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iosのgoodreaderでsftpのprivate-keyが読み込めない問題</title>
      <link>https://syui.github.io/blog/post/2020/01/26/goodreader/</link>
      <pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/26/goodreader/</guid>
      <description>&lt;p&gt;opensshのsftpが前提です。&lt;/p&gt;&#xA;&lt;p&gt;iosのgoodreaderでsftpのprivate-keyが読み込めませんでした。&lt;/p&gt;&#xA;&lt;p&gt;これはmacのssh-keygenで作成されるコマンドの出力が変更されているので、昔作ったキーでは読み込めますが、新しく作ったキーは読み込めなかったのです。よって、キーを作り直すか、キー自体を編集することで解決。&lt;/p&gt;&#xA;&lt;h3 id=&#34;問題の答え&#34;&gt;問題の答え&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 公開鍵、秘密鍵の作成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$  ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -m PEM -f ~/.ssh/goodreader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# serverにpublic-keyを登録&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh-copy-id -i ~/.ssh/goodreader.pub user@192.168.1.11 -p &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.ssh/goodreader&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# このprivate-keyをiosのgoodreaderに持っていく&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;問題の内容&#34;&gt;問題の内容&lt;/h3&gt;&#xA;&lt;p&gt;私はいつもこんな感じでssh-keyを登録したり、変更したりします。単純ですね。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh-keygen -f ~/.ssh/$KEYNAME&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssh-copy-id -i ~/.ssh/$KEYNAME.pub user@localhost&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;簡単に説明すると、サーバーの&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;にて設定される&lt;code&gt;.ssh/authorized_keys&lt;/code&gt;に公開鍵が登録される仕組み。&lt;/p&gt;&#xA;&lt;p&gt;この公開鍵に対応する秘密鍵を共有すれば、大抵はサーバーにアクセスできる。よって、iosのgoodreaderにもこんな感じで使える秘密鍵(.ssh/authorized_keysに書いた公開鍵に対応するやつ)を使えばアクセスできるはずなんですが、できなかった。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat ~/.ssh/private-key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----BEGIN OPENSSH PRIVATE KEY-----&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat ~/.ssh/private-key-old&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----BEGIN RSA PRIVATE KEY-----&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;デフォルトは、RFC 4716 - The Secure Shell (SSH) Public Key File Format のフォーマット。これは RFC で定められた秘密鍵のフォーマットだ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イラストを描いてみた17</title>
      <link>https://syui.github.io/blog/post/2020/01/25/illust/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/25/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回は、アイのわざ、&lt;code&gt;月見&lt;/code&gt;を描いてみました。&lt;/p&gt;&#xA;&lt;p&gt;原作ではまだ未登場ですが、おそらく技の絵を使うことはないでしょう。&lt;/p&gt;&#xA;&lt;p&gt;もし原作で登場することがあるなら「こういうイメージもあるよ」ということで。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/img&#34;&gt;/img&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ポケモンGoで最高の相棒にしてみる</title>
      <link>https://syui.github.io/blog/post/2020/01/25/pokemon/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/25/pokemon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/103/small/705a0ad8cf789116.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;私の場合、最初はミュウで、次はミュウツーでした。&lt;/p&gt;&#xA;&lt;p&gt;アルセウス、ミュウ、リザードン、ミミッキュがお気に入りなので、次はリザードンでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;最高の相棒、もしかしたらメガシンカの条件になるかもなので、メガ優先していこうかなと思ってます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>開発環境を作り直してみる3</title>
      <link>https://syui.github.io/blog/post/2020/01/25/dotfiles/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/25/dotfiles/</guid>
      <description>&lt;p&gt;開発環境をイチから作りなおしてみる企画やってます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git.syui.ai/syui/dotfiles&#34;&gt;https://git.syui.ai/syui/dotfiles&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;powerlinezsh&#34;&gt;powerline.zsh&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/101/small/f1101b42f1027c5b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/powerline.zsh&#34;&gt;https://github.com/syui/powerline.zsh&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/ricomoon&#34;&gt;https://github.com/syui/ricomoon&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;zshのprompt(powerline.zsh)を調整しています。昔から不満のあったオリジナルアイコンの位置などを修正しました。昔からちょっと上にズレてたんですよね、気になってたんですが、放置してたのです。&lt;/p&gt;&#xA;&lt;p&gt;icomoonで作ったやつは以下の調整でいけた。ただし、基本とするフォントにもよる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/fontforge -script&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./font/icomoon.ttf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SelectAll&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;foreach&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Scale&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;80, 80, 0, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;endloop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Generate&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./font/i.ttf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;またgitlabやheroku(に似ている)アイコンをプラスしました。昔はfont-awesome(bland)に入ってなかった。ただ、省略したアイコンも多く、最初は必要なものにとどめました。&lt;/p&gt;&#xA;&lt;p&gt;フォントに関しては、&lt;code&gt;SF Mono&lt;/code&gt;が&lt;a href=&#34;https://qiita.com/delphinus/items/f472eb04ff91daf44274&#34;&gt;いいらしい&lt;/a&gt;。そのうち時間があれば見てみようかなと思っています。ただ、フォントやアイコン周りを久しぶりに触ることになりましたが、たいへん。&lt;code&gt;fontforge&lt;/code&gt;なんもわからん。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;zstyle &#39;:vcs_info:git:*&#39; formats&lt;/code&gt;とかで表示する情報にコミット数を追加してみたりした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git --no-pager shortlog -sn |tr -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;|cut -f &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; | head -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;zsh-notify&#34;&gt;zsh-notify&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;zsh-notify&lt;/code&gt;入れたら端末がおかしくなったような気がしたので、アンインストールした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:~/.zshrc&#34; data-lang=&#34;sh:~/.zshrc&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#zsh-notify&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#commandを実行してもpromptが動かなくなることがある&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zinit light marzocchi/zsh-notify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zstyle &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:notify:*&amp;#39;&lt;/span&gt; error-title &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Command failed&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zstyle &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:notify:*&amp;#39;&lt;/span&gt; success-title &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Command finished&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SYS_NOTIFIER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;which terminal-notifier&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zstyle &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:notify:*&amp;#39;&lt;/span&gt; command-complete-timeout &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一応、上記の構成で機能はする。&lt;/p&gt;&#xA;&lt;h3 id=&#34;git-add--git-diff&#34;&gt;git add + git diff&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;git add&lt;/code&gt;するときにdiffを&lt;code&gt;fzf --preview&lt;/code&gt;で確認する&lt;code&gt;^g&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;unbuffer&lt;/code&gt;を使うので、ない場合は、&lt;code&gt;$ brew install expect&lt;/code&gt;で入ります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3Dモデルを作ってみる1</title>
      <link>https://syui.github.io/blog/post/2020/01/24/3d/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/24/3d/</guid>
      <description>&lt;p&gt;この前、ふと3Dモデルでも作ってみたいなーと思い立ち、作ってみることに。&lt;/p&gt;&#xA;&lt;p&gt;まずは簡単なものからと思ったので、アムのコインを3D化してみます。&lt;/p&gt;&#xA;&lt;p&gt;3Dモデルを作るのはこれが初めてですが、&lt;/p&gt;&#xA;&lt;p&gt;はっきりいいましょう、こんだけ作るのもすごい大変だったと！&lt;/p&gt;&#xA;&lt;p&gt;まずは3Dモデルってどうやって作るのか調べてみると、いい感じに自分でもできそうなやり方があったので、それでやってみて、1, 2時間くらいかかったと思う。&lt;/p&gt;&#xA;&lt;p&gt;作ったあとは、&lt;code&gt;obj,mtl,jpg&lt;/code&gt;を&lt;code&gt;zip&lt;/code&gt;に圧縮して&lt;a href=&#34;https://sketchfab.com/&#34;&gt;sketchfab&lt;/a&gt;にアップロードしてみました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、1ヶ月に1回のアップロード制限はきついかも。ただ、uploadすると3D-editorが使えるので非常に有用だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3dモデルの簡単な作り方&#34;&gt;3Dモデルの簡単な作り方&lt;/h3&gt;&#xA;&lt;p&gt;今回は、丸図形を用意して、テクスチャに当て、大きさの調整、x,y軸などを調整して完成という流れ。&lt;/p&gt;&#xA;&lt;p&gt;最初はエディタの使い方とか全然わかりませんが、なんとなくガチャガチャやってたらわかってくるのではと思ったので、ガチャガチャやってました。&lt;/p&gt;&#xA;&lt;p&gt;で、こんな感じのものを簡易に作成して、blenderとかsketchfabの3D-editorとかで修正していけばいいのかなあという感じで今のとこ思ってます。(違うかも&lt;/p&gt;&#xA;&lt;h3 id=&#34;アムのコイン&#34;&gt;アムのコイン&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;yui&lt;/a&gt;の最後のほう(43話くらい)に登場するアイテム。宇宙で最も流行している特殊な通貨のこと。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/item_06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>開発環境を作り直してみる2</title>
      <link>https://syui.github.io/blog/post/2020/01/22/dotfiles/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/22/dotfiles/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://git.syui.ai/syui/dotfiles&#34;&gt;https://git.syui.ai/syui/dotfiles&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;fzf&#34;&gt;fzf&lt;/h3&gt;&#xA;&lt;p&gt;fzfに関しては、&lt;code&gt;vim **&amp;lt;tab&amp;gt;&lt;/code&gt;などが使えます。&lt;code&gt;--preview&lt;/code&gt;で画面分割しながら&lt;code&gt;tree,cat&lt;/code&gt;したものを表示できます。&lt;/p&gt;&#xA;&lt;p&gt;grepの代わりになる&lt;code&gt;rg&lt;/code&gt;とcatの代わりになる&lt;code&gt;bat&lt;/code&gt;がおすすめで、コマンドオプションなどに追加。あと&lt;code&gt;.git&lt;/code&gt;以下は拾わないようにしたりとか、ファイルのみとか。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install rg bat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:~/.zshrc&#34; data-lang=&#34;sh:~/.zshrc&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bindkey &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^b&amp;#39;&lt;/span&gt; fzf-file-widget&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export FZF_DEFAULT_COMMAND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fd --type f --hidden --follow --exclude .git&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export FZF_COMPLETION_OPTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--preview &amp;#34;bat --color=always --style=header,grid --line-range :100 {}&amp;#34;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export FZF_CTRL_T_COMMAND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rg --files --hidden --follow --glob &amp;#34;!.git/*&amp;#34;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export FZF_CTRL_T_OPTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--preview &amp;#34;bat --color=always --style=header,grid --line-range :100 {}&amp;#34;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#export FZF_COMPLETION_TRIGGER=&amp;#39;~~&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fancy-ctrl-z &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $#BUFFER -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BUFFER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fg&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zle accept-line&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zle push-input&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zle clear-screen&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zle -N fancy-ctrl-z&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bindkey &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^z&amp;#39;&lt;/span&gt; fancy-ctrl-z&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;fzf-file-widget&lt;/code&gt;は&lt;code&gt;^t&lt;/code&gt;ですが、&lt;code&gt;tmux&lt;/code&gt;に使ってるので&lt;code&gt;^b&lt;/code&gt;に変更。この辺は&lt;code&gt;bindkey&lt;/code&gt;コマンドで調べられます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>開発環境を作り直してみる1</title>
      <link>https://syui.github.io/blog/post/2020/01/20/dotfiles/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/20/dotfiles/</guid>
      <description>&lt;p&gt;ゲームのシナリオを書こうと思ったけど、やる気でないので、こういうときは他のことしたほうがいいと思って、カオスになってた開発環境の整理をはじめました。&lt;/p&gt;&#xA;&lt;p&gt;以前から整理しようと思っていたgithubの&lt;code&gt;dotfiles&lt;/code&gt;のbranchを切らず、自前のgit-serverで整理していこうかなと思っています。別に移行するわけではありませんが、今は整理されてないリポジトリ群を見たくない&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git.syui.ai/syui/dotfiles&#34;&gt;https://git.syui.ai/syui/dotfiles&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://git.syui.ai/syui/dotfiles&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;zpluginとvim-plug&#34;&gt;zpluginとvim-plug&lt;/h3&gt;&#xA;&lt;p&gt;まずはplugin-managerを入れました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zdharma/zinit&#34;&gt;https://github.com/zdharma/zinit&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;https://github.com/junegunn/vim-plug&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ただ、本格的にやる気が出てきたのは、やはり自分の&lt;code&gt;powerline.zsh&lt;/code&gt;を作り直しているときです。&lt;/p&gt;&#xA;&lt;p&gt;自分で目に見える変化を付けていくほうがやる気が出るのでおすすめです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;powerlinezsh&#34;&gt;powerline.zsh&lt;/h3&gt;&#xA;&lt;p&gt;今回はこんな感じで配色をシンプルにしました。昔は色とりどりでしたが、時間が経つにつれ、あまりかっこよくないなあと。でもカスタマイズするのも面倒なので放置していました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syui/powerline.zsh&#34;&gt;https://github.com/syui/powerline.zsh&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/098/small/3dff96dbe383b9d3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;git-repoにcdするとき劇遅になるので、&lt;code&gt;zle reset-prompt&lt;/code&gt;して必要があれば&lt;code&gt;cd .&lt;/code&gt;で表示します。このあたり改善したいのですが、今のところ放置。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh:~/.zshrc&#34; data-lang=&#34;sh:~/.zshrc&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# z + peco&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 入力があれば移動履歴から補完、なければ移動&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; peco-z-search &lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;zdirselect&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;z | sort -g -r | peco | cut -d  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f 2- | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/ //g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$LBUFFER&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | wc -w | tr -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;cd $zdirselect&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;ls -slhAF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;zle reset-prompt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;LBUFFER&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$zdirselect&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zle -N peco-z-search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bindkey &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^f&amp;#39;&lt;/span&gt; peco-z-search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pmy&#34;&gt;pmy&lt;/h3&gt;&#xA;&lt;p&gt;今回は、pmyというツールを使ってfzfと連携してみました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ゲーム2を作ってみた</title>
      <link>https://syui.github.io/blog/post/2020/01/17/game/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/17/game/</guid>
      <description>&lt;p&gt;タイトルは&lt;code&gt;yui2&lt;/code&gt;となっています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/logo2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/imgame2&#34;&gt;https://syui.ai/imgame2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;まずロゴを作りました。数字の部分、最初はフォントを使おうと思ったんですが、めんどくさいですしね、でもしっくりこなかったので、自分で作る羽目になりました、2です。&lt;/p&gt;&#xA;&lt;p&gt;今回もアイテムから背景、キャラクター、シナリオなどを設計しました。&lt;/p&gt;&#xA;&lt;p&gt;例えば、モンスターボックスというアイテムが登場するのですが、以下のようなデザインから構成されています。なんとなく線を引いたり、消したり、塗りつぶしてみたり。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/syui/mstdn.page/raw/master/img/mastodon/media_attachments/files/000/000/096/small/356b0cee23c9174e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;シナリオに関しては、最初のシリーズで謎だった部分の伏線がいくつか回収されていると思います。&lt;/p&gt;&#xA;&lt;p&gt;イラストで描いている背景、アイテム、キャラクターは方向性がそれぞれに決まっているのでやりやすいです。&lt;/p&gt;&#xA;&lt;p&gt;やらないこととやることを決めていて、やらないことはやりません。それは面白くないことだったり、めんどくさいことだったり、やたら時間がかかることだったり。&lt;/p&gt;&#xA;&lt;p&gt;シナリオに関しては、やはり非公開で書いていた小説が原案になっています。シリーズ1では暗くなってしまうので、バッサリと切り捨てた部分を少し拾いました。&lt;/p&gt;&#xA;&lt;p&gt;キャラクターに関しては、キョウスケ、ポンタ、オクトカットはゲームからの参加で、それによって原案キャラも若干影響を受けていると思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_tensi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここから少しキャラクターに関する話をします。&lt;/p&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;yui&lt;/code&gt;に出てくるキャラで私はどれに当てはまるのかってよく聞かれるんですが&amp;hellip;うそですきかれたことありません！で、自分がどのキャラに当たるかと言うとそりゃもちろん、アイですよ！&amp;hellip;という冗談は置いといて、私はおそらく、誰でもあって、誰でもないのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;私は以前、こんなコメントを見たことがあって、作者が自分のキャラのセリフにはっとさせられたという話に「作者は自分の思いをキャラAに語らせていて感動的」とコメントがついていました。&lt;/p&gt;&#xA;&lt;p&gt;これですね、大半の人がコメントと同じような意見を持つと思うんですけど、私が思ったのはおそらくそうではないなと。&lt;/p&gt;&#xA;&lt;p&gt;作者が作ったキャラでも、あいつらは勝手に動いて勝手にしゃべるので、特に作者がこうしゃべらせているみたいなことって少ないです。作者は単にキャラが勝手に喋ったそれをですね、メモしたり、記録したりですね、するだけですから、おそらく、本当に自分が作ったキャラのセリフにはっとさせられたんだろうなーって思ったんです。&lt;/p&gt;&#xA;&lt;p&gt;一方で、そうは言っても作者が作ってんでしょと言われると、確かにそうで、それはやはり、どこかにあるからだと思うんです。&lt;/p&gt;&#xA;&lt;p&gt;なので、私は、どのキャラでもないし、どのキャラでもあるなあと今の所はそう思ってたり。&lt;/p&gt;&#xA;&lt;p&gt;話を変えて、次はモンスターの話です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/m_torimu.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;(本作ではまだ未登場)&lt;/p&gt;&#xA;&lt;p&gt;今回は、モンスターが登場しますが、モンスターを作るの結構大変でした。特に、アイテムの方向性でデザインするのか、キャラクターの方向性でデザインするのかで迷いました。なので、その中間をとって、基本は四角や三角の図形で構成するものの、やはり躍動的に表現する部分も可という方向で行くことにしました。各々の部品もシンプルにすることを心がけ、あまり複雑にしてしまうと、あとで描くの大変ですからね&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;あと、配色ですが、私は1キャラ、1フィールド、1アイテムにつき3,4色と決めているところがありますので、モンスターも同じ。それでも配色は、難しかったし、悩みます。ただ、鳥なら鳥、ネコならネコ、ドラゴンならドラゴンで、一番に思いつく色ってあるじゃないですか。私の場合、それを基本色にしました。&lt;/p&gt;&#xA;&lt;p&gt;最後にキャラクター紹介ページを作りました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.ai/gamechara/&#34;&gt;https://syui.ai/gamechara/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは、漫画とか読む人はわかると思うんですが、冒頭にありますよね。私は全く見ないんですけど、というかゲームも説明書すら読まなかったり&amp;hellip;でも作る側からすると、やっぱり「わかりにくいかな、こいつ誰ってなったりしない、途中から入って大丈夫？」みたいなことをちょっとだけ気にします&amp;hellip;うそ、すごく気にします。なので、作りました。&lt;/p&gt;&#xA;&lt;p&gt;ゲーム作るのとか、面倒でしたけど、でも、面白かったですよ、楽しかった。&lt;/p&gt;&#xA;&lt;p&gt;次はどんなお話にしましょうか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>今期のおすすめアニメ2020冬</title>
      <link>https://syui.github.io/blog/post/2020/01/13/anime/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/13/anime/</guid>
      <description>&lt;p&gt;2019冬で良かったのは、ハイスコアガール、ビースターズ、サイコパス3でした。&lt;/p&gt;&#xA;&lt;p&gt;今期は多分これを見るだろうなーというのを載せておきます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;映像研&#34;&gt;映像研&lt;/h2&gt;&#xA;&lt;p&gt;最初は、そこまで面白い話ではなかったと思います。まだ最初ですしね。&lt;/p&gt;&#xA;&lt;p&gt;ただ、秘密基地などのワクワク感はありました。&lt;/p&gt;&#xA;&lt;p&gt;狭い路地を進み、秘密の抜け道を通るところとか。&lt;/p&gt;&#xA;&lt;p&gt;主人公、男だと思ってたら、女の子だった件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ソマリ&#34;&gt;ソマリ&lt;/h2&gt;&#xA;&lt;p&gt;独特の世界観、でも1話はそこまでは面白くなかったと思います、まだ最初ですしね。&lt;/p&gt;&#xA;&lt;p&gt;でも面白くなりそうな気もします。&lt;/p&gt;&#xA;&lt;p&gt;拾った子供、男の子だと思ってたけど、海外の反応見てると女の子という情報があり、わからない。&lt;/p&gt;&#xA;&lt;h2 id=&#34;異種族レビュアーズ&#34;&gt;異種族レビュアーズ&lt;/h2&gt;&#xA;&lt;p&gt;よくわからないお話ですが、天使がかわいかったので見ました。&lt;/p&gt;&#xA;&lt;p&gt;この天使、女の子だと思ってたら男だったので(正確には両性らしい)、自分は、完全に性別の見分けがつかなくなってきてるのだと思います。&lt;/p&gt;&#xA;&lt;p&gt;私、金髪少女萌えなんですよね。今までの好き傾向からすると。&lt;/p&gt;&#xA;&lt;h2 id=&#34;まどマギレコード&#34;&gt;まどマギ・レコード&lt;/h2&gt;&#xA;&lt;p&gt;こちらは最初から話が面白かったです。&lt;/p&gt;&#xA;&lt;p&gt;どうなるのでしょうか。&lt;/p&gt;&#xA;&lt;p&gt;以上が今期アニメの初回の感想でした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を描く機会を増やしてみる6</title>
      <link>https://syui.github.io/blog/post/2020/01/10/illust/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/10/illust/</guid>
      <description>&lt;p&gt;今回はゲームに登場したアイの技の紹介です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/yui_19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは&lt;code&gt;波動&lt;/code&gt;という技です。私が勝手に頭の中でそう呼んでいて、後でかっこいい名前をつけようと思ってたわけなのですが、結局そのままになってしまった！これは後者も同じく。&lt;/p&gt;&#xA;&lt;p&gt;ようはエネルギー派のことですね。波動拳とかかめはめ波、シャドウボールとかみたいな。&lt;/p&gt;&#xA;&lt;p&gt;今のところ、アイがアイモードのときに使えるようです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_choukyuu.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは&lt;code&gt;超究&lt;/code&gt;。自分の髪を創造の力に使うというアイの切り札。一度使うと、次は髪が伸びるまで待たないといけない。&lt;/p&gt;&#xA;&lt;p&gt;創造の力と言っても、あるものを使ったほうがやりやすいし、かつ、魔力がこもった自分の髪の毛を使うので、威力は絶大だと言われています。&lt;/p&gt;&#xA;&lt;p&gt;アイもいざというとき使うために髪を伸ばしてるのかもなーと思ったり。&lt;/p&gt;&#xA;&lt;p&gt;あと、まだ登場していませんが、&lt;code&gt;月見&lt;/code&gt;という技があります。一応、イメージはいくつかあるのですが、技名、シナリオは仮なので、確定ではありません。未確認ということで。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ゲームに新しい話を追加してみる</title>
      <link>https://syui.github.io/blog/post/2020/01/08/game/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/08/game/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ゲームに新しい話を追加してみました。&lt;/p&gt;&#xA;&lt;p&gt;興味のある方はプレイしてみてください。&lt;/p&gt;&#xA;&lt;p&gt;フィードバックがあればよろこびます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;update&#34;&gt;UPDATE&lt;/h3&gt;&#xA;&lt;p&gt;2020/01/04 : v1.0をリリース&lt;/p&gt;&#xA;&lt;p&gt;2020/01/08 : v2.0をリリース&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を描く機会を増やしてみる5</title>
      <link>https://syui.github.io/blog/post/2020/01/06/illust/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/06/illust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_yui_mahou.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回描いたのはアイの魔法少女バージョンです。&lt;/p&gt;&#xA;&lt;p&gt;おそらく誰かにテレビでも教えてもらって、魔法少女にハマってるんでしょう。(絶対とは言わない&lt;/p&gt;&#xA;&lt;h2 id=&#34;哲学的な話&#34;&gt;哲学的な話&lt;/h2&gt;&#xA;&lt;p&gt;それは置いといて、ここからは少し哲学的な話をします。&lt;/p&gt;&#xA;&lt;p&gt;皆さん、バトルマンガって好きですか。私は大好きです。&lt;/p&gt;&#xA;&lt;p&gt;その中で、主人公が戦ってボロボロになっていく姿って、結構かっこよくないですか。服とか破けちゃったりね。私はあれも「かっこいい」演出効果の一つだと考えています。&lt;/p&gt;&#xA;&lt;p&gt;で、男の子の場合はそれでいいんですけど、女の子の場合はどうなんでしょう。&lt;/p&gt;&#xA;&lt;p&gt;これは難しい問題です。&lt;/p&gt;&#xA;&lt;p&gt;私が考えているのは、男の子の場合、戦ってボロボロになって、勝ったぞーってのがかっこいいのですが、女の子の場合は、逆パターンかもしれないなってのは思っていて、最初はボロボロだったのがピカピカ、キラキラになっていく、そういう構成が「かっこいい」のではないかと考えています。&lt;/p&gt;&#xA;&lt;p&gt;もちろん、これがすべての公式というわけではなく、公式なんてありませんけど、しかし、今の時点で私が演出を考えた場合、そちらを採用するかもしれないということです。&lt;/p&gt;&#xA;&lt;p&gt;個人の主観や好みにもよります。主人公が戦ってボロボロになっていく姿をかっこいいと思う人もいれば、回復してピカピカに戻ったのをかっこいいと思う人もいて、色々だと思います。まあ、面白い漫画は、どっちもかっこよかったりするんですけど&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;で、私の場合、ゲーム本編でそこまで描くには至らなかったのですが、これからアイは割とキラキラ、ピカピカしていく場面がもしかしたら増えるかもしれないなあと思っています。(あくまで予想です&lt;/p&gt;&#xA;&lt;p&gt;とはいえ、そこまで深く考えてるわけではなく、女の子とか男の子とかあまり気にして描いてないとも思っているので、描きたいように描くだけです。&lt;/p&gt;&#xA;&lt;p&gt;他にもなにか言ってみると、表情とか衣装とかを用意するのは、無駄に時間がかかってしまう事が多いです。&lt;/p&gt;&#xA;&lt;p&gt;だから、戦うことを予定しているキャラを最初から割とそんな感じにしておいたりとかね。(交換しなくて済む&lt;/p&gt;&#xA;&lt;h2 id=&#34;今回の絵について&#34;&gt;今回の絵について&lt;/h2&gt;&#xA;&lt;p&gt;スカートが難しかったのと、靴が難しかったのと、手が難しかったのと&amp;hellip;つまり、全部、難しすぎた。&lt;/p&gt;&#xA;&lt;p&gt;これが魔法少女？単なる制服では？&lt;/p&gt;&#xA;&lt;p&gt;ほ、ほら&amp;hellip;杖もありますし&amp;hellip;あとは、えっと&amp;hellip;ピンクですし&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を描く機会を増やしてみる4</title>
      <link>https://syui.github.io/blog/post/2020/01/05/illust/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/05/illust/</guid>
      <description>&lt;p&gt;今回はプランというキャラクターの描き直しです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_plan.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;こちらもゼンと同じく、昔に設計したデザイン、キャラクターだったりしますが、今作でもエンディング後のストーリーに登場する運びとなりました。&lt;/p&gt;&#xA;&lt;p&gt;それに伴う描き直しです。配色に関しては毎回悩みまくりです。&lt;/p&gt;&#xA;&lt;p&gt;デザイン自体にそこまでの変更はありませんが、出したときに「これはダサいな&amp;hellip;でも書き直すのも面倒だし」と思っていて、もうこれでもいいかと思って出してみたんですけど、ストーリーを読み返すたび「やっぱりダサいな！これ！！」と思って書き直す羽目になっちゃった。&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip;最初からやっておけばよかった。&lt;/p&gt;&#xA;&lt;p&gt;ただ、書き直してみても&amp;hellip;どうも&amp;hellip;あまりかっこよくは&amp;hellip;ないなっ！という感想です。&lt;/p&gt;&#xA;&lt;p&gt;ですが、デザインや配色に関しては、描きやすいように修正していて、それぞれのパーツがそこそこに描きやすいようになっているので、良かったかなと思っています。&lt;/p&gt;&#xA;&lt;p&gt;というか自分が確認する時のキャラクターの一覧、ほしくなってきた&amp;hellip;。ネタバレになってしまうので、ゲームページには載せられないという。&lt;/p&gt;&#xA;&lt;p&gt;とりあえずイラストページに無理やり押し込むかな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ゲームを完成させてみる</title>
      <link>https://syui.github.io/blog/post/2020/01/04/game/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/04/game/</guid>
      <description>&lt;p&gt;ゲーム自体は、一区切りついたので、最初の完成みたいな地点にはたどり着いたーという感じです。&lt;/p&gt;&#xA;&lt;p&gt;興味のある方は、ぜひ、一度、&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;プレイ&lt;/a&gt;してみてやってくださいな。&lt;/p&gt;&#xA;&lt;p&gt;多分、30分くらいの内容です。(もうちょっと短いかも&lt;/p&gt;&#xA;&lt;h2 id=&#34;はじめてのゲーム制作&#34;&gt;はじめてのゲーム制作&lt;/h2&gt;&#xA;&lt;p&gt;はじめてのゲーム制作、なんとなくはじまり、なんとなく終わりました。&lt;/p&gt;&#xA;&lt;p&gt;今までUnityとかTyranoScriptとかを使ってプレビューや例を試してみたことはありましたが、ゲームとして作ろうとしたのは、これが初めてです。&lt;/p&gt;&#xA;&lt;p&gt;自分が好きな構成で好きなように作ったのが今作でした。&lt;/p&gt;&#xA;&lt;p&gt;背景とかも適当な感じで、本当に適当なんですけど、でも、私はああいう感じの背景とか、意外と好きだったりします。&lt;/p&gt;&#xA;&lt;p&gt;キャラクターとかは割と行き当たりばったりで作りましたが、それなりに個性が出てれば嬉しく思います&amp;hellip;けど、ブレブレかもなとも思ったり。&lt;/p&gt;&#xA;&lt;p&gt;シナリオに関しては、オリジナル小説(非公開)をなんとなく書いてたりしてて、そういった話がモデルになったり、なってなかったりします。&lt;/p&gt;&#xA;&lt;p&gt;小説をゲームにするとなると、そのままで使うことは難しく、例えば、このシーン、ゲームで表現するには難しいなどの障害がたくさんあると思うので、シナリオはゲーム用に新たに書き上げることになりましたね。&lt;/p&gt;&#xA;&lt;p&gt;でもこれは回り道なんかじゃなく、結果的にこれでよかったなーと思っていたりします。&lt;/p&gt;&#xA;&lt;p&gt;イラストに関しては、ふつーにipadを使う機会が増え、アプリの使い方をちょっとだけわかってきたので感謝です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;その他&#34;&gt;その他&lt;/h2&gt;&#xA;&lt;p&gt;ゲームシナリオの方は、もうちょっとだけ続くかも&amp;hellip;私のやる気があればですが&lt;/p&gt;&#xA;&lt;p&gt;なんかこう宣伝ページみたいな、ゲームをプレビューしているところとかを載せたページ作ろうと思ってたんですが、まだUIデザイン周りを配慮できてなくて、即席で作り上げた感じなので、そういうのがしっかりしてきたら作るかも。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を描く機会を増やしてみる3</title>
      <link>https://syui.github.io/blog/post/2020/01/03/game/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/03/game/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_ponta_papa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ポンタの父です。名前は&amp;hellip;そういえば考えてないや。&lt;/p&gt;&#xA;&lt;p&gt;まあ、いずれ、そのうち&amp;hellip;。(やらないパターン&lt;/p&gt;&#xA;&lt;p&gt;ゲームは、このへんまでは書こうかなーと思ってたところくらいまでは、なんとか進めることができました。よかった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>絵を描く機会を増やしてみる2</title>
      <link>https://syui.github.io/blog/post/2020/01/02/game/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/02/game/</guid>
      <description>&lt;p&gt;ゲームを作ってるおかげで、絵を描く機会がめちゃくちゃ増えています。まさかここまで効果があるとは&amp;hellip;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://syui.github.io/img/game/c_zen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io/imgame&#34;&gt;/imgame&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;今回描いたのは杖を持ったおじいちゃんです。名前はゼン。&lt;/p&gt;&#xA;&lt;p&gt;これは以前に描いてた原案があるので、比較的、楽？だったはずなのですが、サラッと書き上げられた前回より時間がかかってるのはなぜ。杖のところとかどうしようか悩んだ。&lt;/p&gt;&#xA;&lt;p&gt;本来、前向きに描くはずだったんですが、描いてるうちに、成り行き上、後ろ向き(振り向きポーズ)になったというのは内緒です。&lt;/p&gt;&#xA;&lt;p&gt;でもちょっと違和感ある、ひげのところとか。&lt;/p&gt;&#xA;&lt;p&gt;まあ、大目に見てやってくだされ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui</title>
      <link>https://syui.github.io/blog/post/2020/01/01/first/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/01/01/first/</guid>
      <description>&lt;p&gt;私は&lt;code&gt;syui&lt;/code&gt;といいます。ネットで活動する際の名前です。&lt;/p&gt;&#xA;&lt;p&gt;今回は、handle name(ハンドルネーム)の由来を話します。&lt;/p&gt;&#xA;&lt;p&gt;これは本名から取っていて、名前と名字の2つで構成されます。&lt;code&gt;syu&lt;/code&gt;を名前から、&lt;code&gt;i&lt;/code&gt;を名字から取りました。どちらも本名の最初の部分です。&lt;/p&gt;&#xA;&lt;p&gt;アイコンはphoenix(不死鳥)がモデルなので赤色です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;yuiとai&#34;&gt;yuiとai&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;s[yui]&lt;/code&gt;が入っていることから&lt;code&gt;yui&lt;/code&gt;というキャラクターを作ります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://git.syui.ai/ai/ue/raw/branch/main/verse/img/mode_ai.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;漢字では&lt;code&gt;唯&lt;/code&gt;と書きます。&lt;code&gt;唯一&lt;/code&gt;の意味で、この世界には同じものが一つもないという考えに基づきます。このキャラクターには&lt;code&gt;1&lt;/code&gt;という数字が割り当てられました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;yui&lt;/code&gt;は自らを&lt;code&gt;ai&lt;/code&gt;と名乗り、&lt;code&gt;ai&lt;/code&gt;とは原子(クォーク)よりも遥かに小さいこの世界の最小単位のことです。小さいほど集まることができ、一箇所に集まると膨大なエネルギーが発生します。ブラックホールなどはこの粒子で構成されています。この世界は存在の世界。存在とは存在だけがある世界のことで、世界とは存在のこと。存在は存在の意識で構成されている。存在の意識はこの世界で最も小さいもの。あらゆる物質はこの意識が作り出しています。この意識を&lt;code&gt;ai&lt;/code&gt;と呼びます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;yui&lt;/code&gt;は日本名で&lt;code&gt;月見 唯(つきみ ゆい)&lt;/code&gt;としました。物語では政府のシステムに登録されている名前になります。なお、本人はあまり使ってないみたいです。誕生日は月の質量から&lt;code&gt;01/23&lt;/code&gt;、身長も同じです。&lt;/p&gt;&#xA;&lt;p&gt;それぞれの記号の意味は以下のとおりです。私が好きな文字と数字はa, i, o, 1, 0です。0はこの世界を意味し、1は存在を意味します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; o + &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;y&lt;/th&gt;&#xA;          &lt;th&gt;u&lt;/th&gt;&#xA;          &lt;th&gt;i&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;https://git.syui.ai/ai/moji/raw/branch/main/png/a.png&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;a&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;https://git.syui.ai/ai/moji/raw/branch/main/png/y.png&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;https://git.syui.ai/ai/moji/raw/branch/main/png/u.png&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;https://git.syui.ai/ai/moji/raw/branch/main/png/i.png&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;i&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;color&#34;&gt;color&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;syui&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ef454a&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;yui&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#313131&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ai&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#fff700&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;過去記事を整理&#34;&gt;過去記事を整理&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;2020-01-01&lt;/code&gt;までの過去記事を整理しました。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
