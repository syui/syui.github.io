<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on syui.github.io</title>
    <link>https://syui.github.io/tags/blog/</link>
    <description>Recent content in Blog on syui.github.io</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <copyright>&amp;copy; syui</copyright>
    <lastBuildDate>Mon, 03 Jan 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://syui.github.io/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>blogのlayoutを変更した</title>
      <link>https://syui.github.io/blog/post/2022/01/03/hugo/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2022/01/03/hugo/</guid>
      <description>&lt;p&gt;blogのlayoutをちょっとだけ変更しました。&lt;/p&gt;&#xA;&lt;p&gt;変更点を簡単に説明します。&lt;/p&gt;&#xA;&lt;p&gt;まず上のメニューですが、項目が多すぎたので減らしました。&lt;/p&gt;&#xA;&lt;p&gt;全部を&lt;a href=&#34;https://syui.github.io/ai&#34;&gt;/ai&lt;/a&gt;に放り投げました。&lt;/p&gt;&#xA;&lt;p&gt;できる限りシンプルな見た目にしようと思っていたため、かつてこのサイトはテーマカラーの朱色のみでした。&lt;/p&gt;&#xA;&lt;p&gt;しかし、snsアイコンの追加により少しだけカラフルになりました。また、緑が足りないので、githubの芝を追加しました。&lt;/p&gt;&#xA;&lt;p&gt;本当はmastodonのアイコンも追加したかったけど、twitterと青色がかぶるのでやめました。色もそうですが、アイコンも多すぎると分かりづらいと思ったので、数は限定していく方向で。&lt;/p&gt;&#xA;&lt;p&gt;自己紹介やサイトマップ、ヒントの文字数も減らしました。&lt;/p&gt;&#xA;&lt;p&gt;以上です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>syui.aiの歩き方</title>
      <link>https://syui.github.io/blog/post/2021/09/19/blog/</link>
      <pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2021/09/19/blog/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://syui.github.io/&#34;&gt;syui.ai&lt;/a&gt;は、このサイト(ブログ)のタイトルです。&lt;/p&gt;&#xA;&lt;p&gt;このサイトには、いくつかの隠し機能があり、今回はそれらを使って、このサイトを便利に閲覧しちゃおうという内容です。&lt;/p&gt;&#xA;&lt;p&gt;といっても、ほとんどが遊び機能。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;環境 : &lt;code&gt;safari&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;動作するには、browserの&lt;code&gt;cookie&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;をenableに、&lt;code&gt;adblock&lt;/code&gt;などpluginをdisableにする必要があるかもしれません&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;j-kで移動&#34;&gt;j, kで移動&lt;/h3&gt;&#xA;&lt;p&gt;ブログ記事へのリンク間を&lt;code&gt;shift + j&lt;/code&gt;, &lt;code&gt;shift + k&lt;/code&gt;で移動できるようになっています。&lt;/p&gt;&#xA;&lt;p&gt;shiftを選択している理由は、このような設定はkeybindを奪うことにもなり、不便が生じるかもしれないので、あまり使われなさそうなshiftにしています。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141757.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;terminalの呼び出し&#34;&gt;terminalの呼び出し&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;ctrl + enter&lt;/code&gt;でterminalを呼び出すことができます。主に&lt;code&gt;/&lt;/code&gt;と2階層目くらいまでは呼び出せるようなってることが多いかな。&lt;/p&gt;&#xA;&lt;p&gt;このterminalにより、サイト上の色々な機能にアクセスしやすくなってます。&lt;/p&gt;&#xA;&lt;p&gt;現在使える便利機能をいくつか紹介します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141637.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ただし、個別記事である&lt;code&gt;/blog/foo&lt;/code&gt;上ではterminalは呼び出せず、代わりに&lt;code&gt;/blog&lt;/code&gt;に移動するようになっています。&lt;code&gt;/blog&lt;/code&gt;からは従来通りterminalを呼び出すことができます。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;-コマンドで個別記事に飛ぶ&#34;&gt;/ コマンドで個別記事に飛ぶ&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/&lt;/code&gt;コマンドを使うと最新記事の中から個別記事に飛ぶことができます。飛びたい番号を入力します。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141530.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;search-コマンドでタグを検索する&#34;&gt;search コマンドでタグを検索する&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ search -t hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;search -t $tag&lt;/code&gt;でタグを検索することができます。オプションなしだと通常検索です。補完機能があるので&lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt;でタグ補完できます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;login-コマンドで自分の名前を表示する&#34;&gt;login コマンドで自分の名前を表示する&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ login&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;login : test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;password : test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;適当な遊びコマンドですが、自分の&lt;code&gt;username&lt;/code&gt;と&lt;code&gt;ip address&lt;/code&gt;をこのサイト上に表示することができます。ちなみに、個人情報がこのサイトの管理人に送信されることはありません。あと、&lt;code&gt;password&lt;/code&gt;は何でもいいです。&lt;/p&gt;&#xA;&lt;p&gt;また、遊びの一環として&lt;code&gt;root login&lt;/code&gt;に挑戦してみるのも面白いかもしれません。ちゃんと&lt;code&gt;password&lt;/code&gt;が設定されてますので、ぜひ、突破してみてください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syui/img/master/other/hugo_20210918_141510.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;&#xA;&lt;p&gt;その他にも面白おかしいコマンドがいくつかあります。是非、遊んでみてください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ブログをはじめるならGitHub Pagesがおすすめ</title>
      <link>https://syui.github.io/blog/post/2020/03/28/blog/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://syui.github.io/blog/post/2020/03/28/blog/</guid>
      <description>&lt;p&gt;ブログをやるなら&lt;code&gt;GitHub Pages&lt;/code&gt;か&lt;code&gt;GitLab Pages&lt;/code&gt;がおすすめです。&lt;/p&gt;&#xA;&lt;p&gt;私は、少し前にGitLabでブログをやっていましたが、その後、GitHubに移行したというか、戻りました。経緯としては&lt;code&gt;GitHub -&amp;gt; GitLab -&amp;gt; GitHub&lt;/code&gt;という流れです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://syui.github.io&#34;&gt;syui.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;割と長くGitHub PagesやGitLab Pagesでブログをやってきたので、今回は、両者の違いをまとめてみます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLabはプライベートリポジトリが無制限で、HTMLソースを公開しなくていい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Web Serverは、GitHubのほうが安定していて速い&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLabのほうがドキュメントが充実しており、公式テンプレートがわかりやすい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;どちらもCIを回せるけど、GitLabはGitLab CIを回して、public/にビルドするという形態を採用するため、CIが成功しないとページが公開、更新されない。ユーザーが&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;を書く必要がある&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitHub PagesはデフォルトでJekyll Buildを実行しページが公開される仕組み。ただし、リポジトリルートに&lt;code&gt;.nojekyll&lt;/code&gt;を置くことでJekyll Buildを実行しないオプションも存在する。よって、HTMLを直に置いてページを作ることもできる。何らかの原因でJekyll Buildが失敗する場合、この手段を用いることができる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitHubは、&lt;code&gt;${USER}.github.io&lt;/code&gt;というリポジトリ名を作成することで、当該ドメインが与えられる。&lt;code&gt;branch:master&lt;/code&gt;にHTMLをpushすると更新される。複数のページを用意したい場合は、リポジトリを作ったうえで&lt;code&gt;branch:gh-pages&lt;/code&gt;に&lt;code&gt;jekyll build&lt;/code&gt;が通るソースコードを置くことでページを公開する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLabも同じく&lt;code&gt;${USER}.gitlab.io&lt;/code&gt;というリポジトリ名を作る。ただし、ブランチは基本的にはmasterを使用する。なお、&lt;code&gt;.gitlab-ci.yml&lt;/code&gt;でソースを置くブランチは制御、変更できる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;現在、GitHub Pagesには、GitLab CIに相当するGitHub Actionsがあるのでページの自動ビルド、デプロイに関しての不便はない&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;GitLab Pagesは複数のドメインを登録できる。GitHubは無理。なので必要なときはGitLab Pagesのドメイン設定を使ってGitHub Pagesにリダイレクトさせるなどのハックに利用させてもらってる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;&#xA;&lt;p&gt;以下、サービス別に特徴をまとめます。一応、GitHub Pagesをおすすめしておきます。GitLab Pagesはweb serverが不安定なことが多かった記憶があります。とはいえ、好みの問題ですね。&lt;/p&gt;&#xA;&lt;h4 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;web serverが速くて安定している&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;デフォルトではjekyll buildが回る、オプションで切ることもできる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;gitlab-pages&#34;&gt;GitLab Pages&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ドキュメントや公式テンプレートがわかりやすい&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;必ずGitLab CIを通す必要がある&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;複数のドメインを指定できる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;プライベートリポジトリが無制限に使えるため、HTMLソース(リポジトリ)を非公開にできる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;gitlabからgithubに移行した経緯&#34;&gt;GitLabからGitHubに移行した経緯&lt;/h3&gt;&#xA;&lt;p&gt;私は、GitLab Pagesを2年くらい使っていましたし、特に不満もなかったのですが(たまに不安定で遅かったというのはある)、あるとき突然にページが非公開になってしまうことがありました。&lt;/p&gt;&#xA;&lt;p&gt;で、運営に連絡してみたのですが、返事がなかったので、GitHub Pagesに同じソースでデプロイしました。つまり、ここで移行という形になります。&lt;/p&gt;&#xA;&lt;p&gt;その後、GitLabの方で非公開が解除されたのですが、なんだったのかよくわからなかったので、その後、GitLabに戻ることはありませんでした。そのような経緯で、それ以降は、GitHub Pagesを使っています。&lt;/p&gt;&#xA;&lt;p&gt;ただ、GitHubはCI連携がデフォルトではなかったため、通常は、ビルドしたものをリポジトリにpushしなければ更新できません。したがって、Travis CIを回してページのビルド、デプロイを自動化してましたが、GitHub Actionsが登場したので、今はそちらに移行しています。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gitlab-pagesを使った複数ドメインを利用するハック&#34;&gt;GitLab Pagesを使った複数ドメインを利用するハック&lt;/h3&gt;&#xA;&lt;p&gt;例えば、&lt;code&gt;blog.syui.ai&lt;/code&gt;と&lt;code&gt;log.syui.ai&lt;/code&gt;というドメインを&lt;code&gt;syui.github.io/blog&lt;/code&gt;に飛ばしたいとしましょう。この場合、GitHub Pagesは一つのページに一つしかドメインを指定することができないので難しい。&lt;/p&gt;&#xA;&lt;p&gt;そこで、GitLab Pagesで２つのドメインを登録した上で、CloudFlareなどのリダイレクトをGitHub Pagesへ走らせることで、&lt;code&gt;blog.syui.ai&lt;/code&gt;と&lt;code&gt;log.syui.ai&lt;/code&gt;を目的の場所に飛ばすことができます。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CNAME : gitlab pages&#xA;&#xA;↓&#xA;&#xA;リダイレクト : github pages&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;とはいえ、これはあくまでリダイレクトという形なので、アクセスは、トップドメインにとどまります。このような形を実現したい場合のみ利用できるハックです。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
